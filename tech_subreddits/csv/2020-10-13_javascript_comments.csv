comment_id,post_id,comment,upvotes
g8pmqnr,jafcx7,ember is dead,4.0
g8pon42,jafcx7,Just because it has a smaller user base than react doesn‚Äôt mean it‚Äôs dead. Apple Music uses it along with the popular COVID dashboard by John Hopkins. Ember Octane really improved how easy it is to get started and made ember feel more JavaScript-y,2.0
g8pw8g6,jafcx7,"Sure but you only get one chance to have a first impression or a go at developer mindshare. the inept management of Ember by breaking semver, jumping off the complexity cliff, hard to learn, zero docs; killed it. It's a case of smart folks not knowing or having awareness of real life, day to day development, they were too bleeding edge and careless.",4.0
g8nbxmp,ja2w0i,"This looks pretty promising. I'd like to see some docs for building/deploying (specifically for components).

I'm currently using [Stencil](https://stenciljs.com/) in one of my projects and I'm pretty happy with it. How does Jolt compare?",4.0
g8ncgkz,ja2w0i,"Thank you! Stencil is a compiler, while jolt has a more traditional approach by being a runtime framework (although very small) I have not gotten to comparing performance between the two just yet though. With jolt you can customize the entire build process by creating your own ‚Äútoolchains‚Äù by default there is a javascript and typescript toolchain. Im not sure if stencil has any customization for its build process though.

I will be writing more articles on building toolchains and other aspects of jolt soon.

You can find more on jolt on the github page: https://github.com/OutwalkStudios/jolt",1.0
g8ods4p,ja2w0i,I already like Jolt more because it doesn't force you to use classes.,2.0
g8pc03u,ja2w0i,Thank you! Im planning on adding better support for functional programming soon so there is no need to use classes at all.,1.0
g8mq3b6,j9zyih,"Hi JavaScript friends,

A few months ago, I asked the community about [their JavaScript journey](https://www.reddit.com/r/learnjavascript/comments/gu38sc/help_how_long_have_you_been_selfstudying/) and what they were struggling with. One theme that was mentioned consistently was how it was difficult to get started building projects, despite them being a really good way to improve technical skills.

Since then, I've created [a website with several free projects](https://www.codeaway.io/) to help others practice their JavaScript skills and ultimately showcase their work on their Github/portfolio.

If you find this resource helpful, I'd appreciate you visiting the website and leaving any feedback or suggestions!",23.0
g8obsfe,j9zyih,"For whatever it's worth, perhaps a dashboard / CMS and a E-commerce website",5.0
g8owy43,j9zyih,Good ideas! Thank you for taking the time to post these suggestions :),2.0
g8oynih,j9zyih,A dashboard and or mapping would be great addition and not just because that is what I am struggling with right now ;),1.0
g8nccpx,j9zyih,"Love it, add more projects",3.0
g8mt1v3,j9zyih,Thank you! I will try the Chatbox when I get home. I also just registered to the forums. I hope this gets big as this is very helpful. I will leave feedback when I finally get the starter files.,4.0
g8mwh3p,j9zyih,Thank you desiatcodaniel for the kind words and I'm glad you find this website helpful!,1.0
g8mxkhb,j9zyih,are these vanilla javascript? or are frameworks involved?,3.0
g8nqgf1,j9zyih,That is up to you afaik. It sounds like the projects just start you out with a direction and a layout design and the rest is up to you.,6.0
g8ntl61,j9zyih,"Ah, thought these were tutorials",1.0
g8neyaz,j9zyih,Wait a second that's a job!,7.0
g8nuyg8,j9zyih,"If I worked as a consultant I would launch a site like this, and then add the projects that the customers wanted as ""free excercises"" on the site.",7.0
g8owwgn,j9zyih,"Haha, I chuckled when reading your comment :P

This really meant to help those learning web development tackle projects through realistic workflows (design and scoped features).",2.0
g8nejfl,j9zyih,Wow this is actually a really great idea! Definitely going to try it,2.0
g8nuw5v,j9zyih,"This is cool. I started doing something similar with non-programmers where I work.

In addition to a ""Download Starter Files"" option, have you considered integration with GitHub classroom?",2.0
g8ohp6c,j9zyih,I think the point of the downloads is to harvest emails.  There's no reason to collect someone's email otherwise.,3.0
g8owjuf,j9zyih,"Hey iamjohnhenry, thank you for this suggestion! I hadn't heard of Github classroom before - it looks really promising.",2.0
g8o1dtd,j9zyih,Do I just chuck the website url in my cv lol,2.0
g8ol62b,j9zyih,You could just add it to your GitHub and make the repo public,4.0
g8nowug,j9zyih,"Thank you for this!!! Really wanting to get better at JavaScript and this showed up at the perfect time. Can't wait to crack into this, but first, my coding food, Oreos! Can't get into the headspace without a coding food lol",2.0
g8nuthq,j9zyih,You are going to get really fat really fast if you need to use food to regulate stress. Therapy helps.,-2.0
g8nzxs5,j9zyih,"Hey! That's not necessary to say! üòÑ I know what I'm doing with my dietary choices and I watch my portion control strictly (recovering and repetitive relapsing anorexia nervosa). I chose a fatty food because my bmi is so low. I also eat about 2/3 of a single row in a 3 hour sit down session of lessions and coding, so I'm not eating a lot. Next time you see someone comment about food, don't immediately assume they chose that food because they are a glutton and need therapy. I don't often like to explain my food choices to people so thank you for making me feel the need to defend myself in front of a community I care about. ‚ù§Ô∏è",1.0
g8ommjz,j9zyih,"It's really sad that you have to defend yourself here.  They know *nothing* about your health, and yet are so willing to call you out for doing things that would be unhealthy for them.

My BMI is *not* low, but I'm perfectly okay with having a snack food while coding.  Sometimes you just *need* certain things to maintain your proper focus.

Also, I said ""have to defend yourself"", but I don't think that's true.  I think you could just ignore these comments and be you, and nothing bad would happen.   I don't think you can fix people that do these things because they think they're *right*, no matter what you say, and often no matter how wrong they are.

You just keep being you, and be happy.  Let the haters fall to the side.  Your original comment was nothing but happy, and they're awful for trying to bring you down.",4.0
g8oyaxt,j9zyih,‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è,3.0
g8o043q,j9zyih,Stay healthy!,2.0
g8ohy9d,j9zyih,&gt; I only eat 500+ calories of Oreos in a single session! I'm really healthy! ü§°,-2.0
g8pddks,j9zyih,"I never stated I'm healthy, just that I'm doing what I know is within a safe amount for my body while being able to enjoy a sweet treat. How many of you can restrict yourselves to not eating the entire row while not paying attention (watching a movie, playing games, watching a kid, cleaning, etc)? I have extreme ADHD so 3 hours is a long time for me. Most of the time I don't reach that time or amount of cookies in one day due to that 3 hours being spread through a good portion of the day, on top of all the responsibilities of having 2 jobs, 60+ hour work weeks, and being in charge of household finances and maintenance.",1.0
g8nml3b,j9zyih,It‚Äôs like a new lego set I‚Äôm anxious to put together.,1.0
g8nsz48,j9zyih,"Add more projects, this is an awesome resource and I hope it blows up too.",1.0
g8nvzyj,j9zyih,Question: Can these projects be completed with vanilla JS or do you need a framework like React or Angular to do it?,1.0
g8o3y92,j9zyih,"The only included files are mockups of the various UXs for the project, as a sort of requirement file. There is no prescription of how to build any of it, nor any tutorials.",2.0
g8of4qp,j9zyih,I know. I'm still learning so I was wondering if anybody that had done these knows if they can be done in just JavaScript.,1.0
g8om073,j9zyih,"Everything can be done in just JavaScript because frameworks are _just_ JavaScript. 

Frameworks just provide an abstraction over the DOM to make development easier.",3.0
g8pbl3l,j9zyih,Thank you. I am in this strange situation where I can do all of these projects in React but I have no idea how to do them in pure Javascript :D,1.0
g8pppz6,j9zyih,"I think it's important to try and do a small app in plain JavaScript with no libraries. 

React is a tool but it's not the only tool. There's plenty of times when plain HTML/CSS/JS is the right solution. 

I'd suggest attempting a sinple-ish project with no frameworks such as a to-do app or the like. You'll have a better understanding of the tools afterwards.",1.0
g8o5x5v,j9zyih,Cool,1.0
g8oa5rl,j9zyih,Wow! Do I need to know NodeJs?,1.0
g8ohir5,j9zyih,"No, it says ""frontend"".

Edit:  Actually, I looked again.  They give the design for the frontend, but to actually make it *do anything*, you'll need to code a backend, too.  

So it depends on what your goal is.  If you want to have a functioning project, you'll need to know some kind of backend.

But if you just want to make a frontend from someone else's design, you're golden.

Edit2:  And I'm wrong again.  (Or rather I was right the first time?!)  I finally read all the fine print, and each project is designed against a public API like Reddit or such, so they all end up working with just a frontend design.",1.0
g8okqlg,j9zyih,thanks,2.0
g8on044,j9zyih,"I edited my comment again because I was wrong.  They're all on public APIs, so you don't need to know anything for the backend. Sorry for the confusion.",2.0
g8pq1cr,j9zyih,"It's okay, thanks!",2.0
g8owmvk,j9zyih,"name\_was\_taken is right, these projects are using public APIs, so you don't need to create a Node server!",1.0
g8or99j,j9zyih,Amazing work. And thanks üôè for your hard-work and and kindness!,1.0
g8m8ydz,j9x09i,Have you used monorepos for you applications? What are the pros/cons with this approach?,3.0
g8nahhg,j9x09i,"Pros: velocity, save boiler plate, not publishing private modules to share internal code when its not needed, removal of boilerplate....

cons: can grow messy or cumbersome in larger teams, tooling Must be monorepo first or it‚Äôll bite you in the pp, new tools to learn, one more layer on top of your build pipelines.",3.0
g8na1sp,j9x09i,I am literally doing this right now at our startup.,2.0
g8m3vi6,j9w7u7,"[Here's the original website](https://big-yak.surge.sh)

[Minified version](https://madly-haircut.surge.sh)

[Github](https://github.com/tylergrinn/webpack-5-example)",1.0
g8liw7n,j9sq0a,"Miss roasting your friends? You can do that now virtually with NotSyke. Create or join a lobby. Type the funniest answer you can think of! Vote for who the answer that made you laugh. The funniest person wins! 

The source code can be found here: [https://github.com/Harry918/NotSyke](https://github.com/Harry918/NotSyke)

We would really appreciate any feedback you would have for the app, and any cool questions you would like to add to our game.

Thanks",2.0
g8lre13,j9sq0a,"Some indication as to what it does would be cool - maybe a help screen or a demo ""room""
As it is, all I can do is create a room and wait around staring at it",7.0
g8m41cw,j9sq0a,"Same thing that crossed my mind, something to make it ""sell"" itself so the link doesn't always need a caption",3.0
g8m6vld,j9sq0a,"&gt;ndication as to what it does wou

Ok cool, I completely agree with that and we will be adding it to the next update. 

Thanks for the suggestions!",2.0
g8lwbdz,j9sq0a,"Thanks for the suggestion! We are actually hoping to solve this problem in the next update. We actually do have a info button on the bottom right of the card on the home page to teach players how to play, however I think it is not as prominent as we had hoped.",2.0
g8nlrio,j9sq0a,Awesome !,2.0
g8np3cq,j9sq0a,Thank you!!!,1.0
g8m4590,j9sq0a,"Quick question, did you implement with sockets?",1.0
g8m6rqm,j9sq0a,"Ya, so we used [Socket.io](https://Socket.io) in Node.js to create those socket connections.",3.0
g8msyvs,j9sq0a,I've been looking for a free alternative in node,1.0
g8mtjd2,j9sq0a,"[Socket.io](https://Socket.io) is great, the only issue is that it is not scalable as Apache Kafka. Its great for a small project like this though.",1.0
g8n8dnz,j9sq0a,That is pretty cool.  I'd recommend adding a share button to share the room code to your friends,1.0
g8nc2yo,j9sq0a,That's actually an amazing idea. Thanks for that!,1.0
g8lscpi,j9r6p1,"Cool that you made something! But I'm curious who is your target audience? The amount of config you'd have to write between for your program is barely any different than if you were to write a datapack by hand. And it requires someone to learn a new schema of which there are far less examples online than real data packs. It requires them to install and use a CLI which is a barrier to entry to begin with.

If you want to solve this problem in a simple way, I'd recommend building a drag and drop UI so people with no coding skills whatsoever can go to a website, ""craft"" an item and download a file with that crafting recipe.",2.0
g8m1pls,j9r6p1,"I'd say this program works best with handling very large datapacks having hundreds of recipes. The recipe formats are purposefully very similar to the original JSON formats to make picking up the new format as simple as possible. The keys are pretty much the same, but the fact that you're writing the recipes in YAML coupled with the syntax sugar Simple Recipe adds and the ability to write multiple recipes per file makes the recipes more readable, and writing them less tedious.

As far as examples go, I actually included a [cookbook](https://github.com/Asha20/simple-recipe/blob/master/docs/cookbook.yml) which contains every single recipe currently in Minecraft. That's 859 recipes, which makes for a pretty comprehensive guide!

The biggest barrier to entry is definitely the CLI though, I agree with you there. If you're someone who's new to making datapacks and just wants to include a recipe or two, then a simple online creator [like this one](https://crafting.thedestruc7i0n.ca/) is definitely the better choice! However, if you know how to use CLIs and are working on a large datapack, I feel like Simple Recipe is the way to go.",1.0
g8l9fa9,j9r6p1,"I wrote Simple Recipe, a CLI that makes writing Minecraft datapack recipes simpler and more pleasant. If you'd like to read more about it or even give it a try, the linked Github project page is the place you're looking for. Since I'm posting this on a programming subreddit, I figured I'd write a bit about the project from a developer's perspective.

In essence, Simple Recipe is a transformer that takes specially-formatted YAML data and converts it into JSON, which Minecraft datapacks can understand. It also provides descriptive error messages for malformed recipes.

The source code is written in TypeScript. Since the program is all about parsing and transforming user data, I thought it would be an excellent opportunity to use `io-ts`. I really liked `io-ts`'s way of writing codecs, but I ended up running into a couple of problems:

- Error messages were really hard to decipher, especially so with union types. I wanted clear and succinct error reporting to be one of the biggest strengths of Simple Recipe, so this was a huge problem.
- There didn't seem to be a way to collect and display multiple errors for a single malformed input; instead, I'd only get the first error back.
- Later down the line I decided to implement a `migrate` command, which meant having a decoder to convert from `O` back to `A` in the `Type&lt;A, O, I&gt;` codec. `io-ts` wasn't intended to be used in this way, so I'd have to write hacky code to get the behavior I wanted.

These problems made me move away from `io-ts` and, inspired by [this article](https://dev.to/gcanti/getting-started-with-fp-ts-either-vs-validation-5eja) from the author of `io-ts` and `fp-ts`, write out the parsers by hand.

This is also the first time I've ever written end-to-end tests with Jest and I'm pretty happy with how they turned out!

If you have any feedback about the project, I'd love to hear it!",1.0
g8lq93n,j9qvx0,"Dude, your medium bio killed me lol",15.0
g8lqwa2,j9qvx0,"Haha, I wrote that when I was 18. Ermmm... 18 years ago. üòÖIt's a nice filter to find the right clients. üôèüèª",9.0
g8m8x6u,j9qvx0,Hahaha this is brilliant. Also cool that you worked with iDKHOW. You basically have my dream job.,3.0
g8m9n3m,j9qvx0,"Cheers. There's PLENTY of artists to go around. These days artists need all the help they can get to differentiate themselves online and rise above the noise for a moment. If you're ever interested, I would suggest just building a simple fun concept and trying to get the attention of the artist socially. If you can get their attention, they're going to think you can help get their fans attention. üî•",3.0
g8mum2b,j9qvx0,"Ooh, that's a great idea. I would love to hear more about how you got into this and what your day-to-day is like. Do you have any blog posts about that sort of stuff?",2.0
g8my46e,j9qvx0,"Here's an ooooooollllddddddd blog I wrote about how it all started:

[http://leemart.in/origin](http://leemart.in/origin)

My day two day really depends on what's on my plate. I split my time between the client work, my own software projects, and just general hacking and thinking (which is where this reddit post comes from.) Most of the time, I'm just locked into a client project or two or three or four so I'm mostly jumping back and forth between web apps. At the moment, I really just want to spend the rest of the year hacking.

All projects begin with a client conversation (problem, opportunity, goals) which then turns into a very simple proposal. Once approved, I tend to circle the problem like a shark, eating away at the concept slowly through CodePens, pencil &amp; paper, and Figma sessions. Once I feel like I have solid version of the building blocks, I pull it all together using Vue, Nuxt, and Netlify. I tend to only approve projects which can be tackled in 2 weeks tops. I do not get involved with huge projects or major time commitments no matter the money because I enjoy the freedom of jumping from one thing to the next. I also know how long my enthusiasm lasts. üòÖ

When I'm not working on client or software projects, I 100% have to be experimenting to stay fresh. This mostly takes the form of smaller components or design ideas which I then have the ability to pull from in those client conversations I referenced. I have a dumb idea or mechanic for almost anything. Including and especially: Bananas.

When a project is completed, I try to write a case study about how I approached it. This serves two main purposes: it allows me to add it to my portfolio in a way that has more longevity than the web app itself (which is usually temporary.) It also allows me to get feedback about what I'm doing. I didn't go to school for programming so it's always nice when someone is willing to give me an education for free. üôèüèª

I should write more about this stuff. Thanks for the suggestion.",2.0
g8nepiy,j9qvx0,"This is fantastic, thank you for taking the time to respond so in  depth!

I am a senior full stack engineer working on a SaaS platform but I‚Äôm also a musician and doing something involving music and/or musicians would be a dream come true.

I‚Äôll definitely dig into your blog. Thanks again!",2.0
g8pbfju,j9qvx0,"Right on! I actually do a little bit of both. In my free time, I like building Saas apps like [mock.video](https://mock.video) and [turn.audio](https://turn.audio). I think it's good to have a balance and I like seeing the practical engineering logic working its way into the unpractical client work.",2.0
g8m7c3o,j9qvx0,"This is great! I already created a project that shows timed comments on a horizontal bar. I wanted to add a waveform to make it clear which part of the song is tagged (like SoundCloud), but I could not really figure out how to do it with the API, I think I got stuck at processing the segment data.

I would love to try this out and add this to a web app. I guess you should process the data on the server side and cache the result somewhere?",3.0
g8m7tmw,j9qvx0,"Amazing! I've started to dream a similar concept on my Twitter here:

[https://twitter.com/leemartin/status/1315702065117659140](https://twitter.com/leemartin/status/1315702065117659140)

Yes, best if the result is cached since you don't want to continually talk to the Spotify platform. My solution is pretty hack and the Spotify data is limited but I think it works *good enough* for waveforms.

Let me know how you make out!",1.0
g8m7suy,j9qvx0,Very interesting article. Thanks!,2.0
g8m7zdf,j9qvx0,üí™üèª,0.0
g8o8msh,j9qvx0,Awesome how you circumvented Spotify's limitations ! Do you think you could do a follow up where you explain how to get the loudness array for tracks you own (from a WAV or MP3 file basically) ? I think many artists/programmers would like to know how to get such a stylish effect with their own tracks,2.0
g8p2lcp,j9qvx0,"I actually discuss a little bit of that in this case study:

[https://medium.com/@leemartin/how-many-fans-does-it-take-to-unlock-an-album-stream-39b3456ed639?source=friends\_link&amp;sk=44822f3723fe365c331a1c459c2a2ea0](https://medium.com/@leemartin/how-many-fans-does-it-take-to-unlock-an-album-stream-39b3456ed639?source=friends_link&amp;sk=44822f3723fe365c331a1c459c2a2ea0)

I used Meyda to generate the waveform data in that case:

[https://meyda.js.org/](https://meyda.js.org/)",2.0
g8p3ckr,j9qvx0,"Oh yeah right I skipped over that rms function when I took a look! Already returns values between 0 and 1 which is ideal in this case as I understand
Thank you for the follow up!",2.0
g8p4b83,j9qvx0,Exactly. üí™üèª,1.0
g8m6fly,j9okdi,"Google is the *last* company anyone should be looking to for inspiration on ""how to do user feedback"".  The vast majority of Google's expertise in that field is in how to *prevent users from giving feedback* ... much to the chagrin of their users.",2.0
g8lkvs0,j9oawr,"Great job, it works really nicely!

&gt; 2KB gzipped

You're doing yourself a disservice here, [Bundlephobia](https://bundlephobia.com/result?p=number-rollup@1.0.5) has it at 1.3KB gzipped!

It would be cool if you were also able to accept an `element` option in your config object where the user could pass the reference to the element, rather than just the ID. This would be useful in something like React where you're more likely to work with refs than ids.

Saying that, this would work really nicely as a hook (probably as a separate package) too!

Last thing, some types would be great and are invaluable for an open source project. If you can write the whole thing in TypeScript, awesome, if not then just providing a types file would be just as good.

EDIT: Oh, two other things!

1. As others have mentioned, tests would be great
 2. How are you updating the version of your project when you publish? Are you just incrementing the value in the `package.json` manually? If so then try doing `npm version patch|minor|major -m ""A message""`. You can find a bit more info on the npm version command [here](https://docs.npmjs.com/cli/version). Essentially it updates the version in your `package.json` for you automatically, and it also tags your commit so that when you push to Github it will show as a release in the Releases section",28.0
g8lzau5,j9oawr,"This is really good feedback - I appreciate it.

Other users have mentioned adding types too. This is definitely something I will do. And you are right that there's no need to restrict users to specifying an ID rather than the DOM element itself.

&gt; How are you updating the version of your project when you publish? 

Yeah, I am currently doing it manually. I originally followed [this guide](https://zellwk.com/blog/publish-to-npm/) which recommended using the `np` tool but I just didn't bother setting it up. I wasn't aware of `npm version`; I will probably end up using that instead.",6.0
g8mh94i,j9oawr,"Sounds good!

Have you looked into the .npmignore file too? It probably won‚Äôt have any affect on bundle sizes after tree shaking and whatnot, but you only really need to publish your build directory (and types) to npm, the rest can just be added to the .npmignore",2.0
g8onzsu,j9oawr,"I might add that while typescript is great, JSDoc is more necessary (obv both works, too). Too many packages don't have nice documentation embedded in the code which results in a bad IDE experience",1.0
g8lq2nu,j9oawr,I think it'd be nice if you had an animated gif of it on the git page. Obviously you have the demo but 0 clicks is nicer than 1 click since I didn't understand exactly what it was right away.,18.0
g8lr837,j9oawr,Add type definitions. It would be a nice user experience to see what I can feed into it as `userOptions` without having to reach for the documentation,10.0
g8lujwj,j9oawr,Great job dude! Can you pass it the dom node directly instead of the id? That'll make it really simple to use with other js libraries and frameworks.,7.0
g8m1383,j9oawr,Yeah another user suggested this too; it's something worth adding.,5.0
g8m9prd,j9oawr,Try `domElement`,0.0
g8ls4e7,j9oawr,I mean it seems more useful than the `is-odd` package so good job on your first package lol,5.0
g8lynl3,j9oawr,How is it 2KB gzipped. That's huge for what it is.,4.0
g8m9lw7,j9oawr,"Webpack adds about 0.5k of overhead.  In reality, it's closer to 1.3kB.",2.0
g8lzysl,j9oawr,This is going to sound like a joke but it isn't: You might try using rollup to build instead of webpack.,4.0
g8m868a,j9oawr,"Good first package, but whoa, that's more complex than it needs to be.

Here's my attempt at the same API (plus the ability to add an easing function), coming in at 3255 bytes unminified with commentary, and 948 bytes minified and gzipped.  Could be smaller, too, but I wanted to stick with your API and expose the generic `animate` function.

    const attrMap = {
    	start: ""startNumber"",
    	end: ""endNumber"",
    	duration: ""duration"",
    };

    /**
     * Animate elements of class 'number-rollup'
     * @param {object} options defaults for all found animations
     * @param {number} options.startNumber number to start at
     * @param {number} options.endNumber number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.formatNumber function that accepts the scaled number and formats it
     * @return {Promise} resolves on completion of all animations
     */
    export const numberRollupAll = (options = {}) =&gt; {
    	return Promise.all(
    		Array.from(document.querySelectorAll("".number-rollup"")).map((domElement) =&gt; {
    			const props = Object.assign({}, options, { domElement });
    			Object.keys(attrMap).forEach((k) =&gt; {
    				const fk = `data-number-rollup-${k}`;
    				if (domElement.hasAttribute(fk)) {
    					props[attrMap[k]] = parseFloat(domElement.getAttribute(fk));
    				}
    			});
    			return numberRollup(props);
    		})
    	);
    };

    /**
     * Animate a number in the DOM
     * @param {object} options option list
     * @param {string} options.id ID of an element to animate (ignored if `domElement` is set)
     * @param {HTMLElement} options.domElement an element to animate
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.formatNumber function that accepts the scaled number and formats it
     * @return {Promise} resolves on completion
     */
    const numberRollup = (options) =&gt; {
    	const {
    		id,
    		domElement,
    		startNumber: start,
    		endNumber: end,
    		duration,
    		formatNumber = (n) =&gt; Number(n).toFixed(0),
    		ease,
    	} = options || {};
    	if (!options || (!domElement &amp;&amp; !id)) {
    		return numberRollupAll(options);
    	}
    	const el = domElement || document.getElementById(id);
    	return animate({
    		start,
    		end,
    		duration,
    		ease,
    		commit:
    			el.tagName === ""INPUT""
    				? (n) =&gt; {
    						el.value = formatNumber(n);
    				  }
    				: (n) =&gt; {
    						el.textContent = formatNumber(n);
    				  },
    	});
    };

    export default numberRollup;

    /**
     * Animate a value with a commit function per-frame
     * @param {object} options options list
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.commit function that commits the final number to show the user
     * @return {Promise} resolves on completion
     */
    export const animate = ({ start, end, duration = 500, ease = (n) =&gt; n, commit }) =&gt; {
    	return new Promise((resolve) =&gt; {
    		const started = Date.now();
    		let frame = () =&gt; {
    			// Convert now...end to 0..1
    			const t = Math.min(1, (Date.now() - started) / duration);
    			// convert 0..1 to start...end
    			commit(ease(t * (end - start) + start));
    			if (t &lt; 1) {
    				requestAnimationFrame(frame);
    			} else {
    				resolve();
    			}
    		};
    		frame();
    	});
    };",3.0
g8m8m2h,j9oawr,"Variant of `animate` where you can cancel the animation (.cancel() cancels it without doing anything else and rejects; .cancel(true) cancels it and commits the final value, resolving):

    /**
     * Animate a value with a commit function per-frame
     * @param {object} options options list
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.commit function that commits the final number to show the user
     * @return {Promise} resolves on completion
     */
    export const animate = ({ start, end, duration = 500, ease = (n) =&gt; n, commit }) =&gt; {
      let running = 0;
      const started = Date.now();
      const promise = new Promise((resolve, reject) =&gt; {
        let frame = () =&gt; {
          // Convert now...end to 0..1
          const t = Math.min(1, (Date.now() - started) / duration);
          // convert 0..1 to start...end
          commit(ease(t * (end - start) + start));
          if (t &lt; 1 &amp;&amp; running === 0) {
            requestAnimationFrame(frame);
          } else if (running === 1) {
            reject();
          } else if (running === 2) {
            resolve();
          }
        };
        frame();
      });
      promise.cancel = (complete) =&gt; {
        running = complete ? 2 : 1;
        if (complete) commit(1);
      };
      return promise;
    };",1.0
g8meodt,j9oawr,Sounds like you should make a PR then to simplify it ü§î,1.0
g8mm2vz,j9oawr,Why?  I don't care if my name's on the commit.,1.0
g8ll8y4,j9oawr,"Congrats on your first package! I have two suggestions: 

1. The demo is really helpful for understanding what the package does, but is a bit cumbersome on mobile. The buttons are too close together, and the text sections that appear on ""view source"" click are indented so far to the right, I thought it was broken for a good 10 seconds until I realized I needed to scroll (far) to the right.
2. Somewhat of a nitpick so take or leave it as you wish: the description used in the ReadMe was a bit unclear to me. It's great that you have the description of how it works under the hood, but when I read ""animated rising/falling number,"" I didn't know what exactly the package was doing; when I read ""animated,"" I thought CSS animations even though you explicitly said you didn't use styles. Maybe adding terminology like ""timed number increment/decrement counter"" or similar would be helpful.

Otherwise, great job! Seems useful and pretty clear on usage.",2.0
g8m0ry6,j9oawr,"Ha, I was wondering if someone would point out the mobile demo. The syntax highlighter I was using (highlight.js) would not play ball on mobile for whatever reason and I was in a rush to get it finished. It's something I'm gonna' have to get back to.",3.0
g8lmytw,j9oawr,Good job,2.0
g8ln73x,j9oawr,"Currently the ""size"" badge links to the raw source file, and the other three badges all link to the package's npm page

Would recommend instead to link the ""size"" badge to bundlephobia, the license badge to the LICENCE.md, and the downloads badge to either https://npmcharts.com/compare/number-rollup or https://www.npmtrends.com/number-rollup (disclosure - I made npmchartsüòã)",2.0
g8m0vhp,j9oawr,Good spot. I actually copied those badges from another bigger repo so I just assumed that was the correct way to do it.,1.0
g8lvybr,j9oawr,Nicely done! Great job,2.0
g8mi9i6,j9oawr,"A changelog is a fantastic resource to provide to those consuming your package to know what has changed going forward.

It also is picked up by many automated tools like Renovate and Dependabot.

https://keepachangelog.com/en/1.0.0/",2.0
g8modrp,j9oawr,"Really cool package! 

It would be cool if there was an option to easeIn or easeOut",2.0
g8kunmy,j9oawr,"I wrote this over the weekend. `number-rollup` is a vanilla JS package which creates a rolling number animation. I know `countUp.js` is a widely used package which does this but for me this was an interesting learning experience.

[Package on NPM.](https://www.npmjs.com/package/number-rollup)

[Code on Github.](https://github.com/marknorrapscm/number-rollup)

Any feedback on the code is appreciated (or the README, demo, general setup or whatever). This is my first real open source contribution so I'm curious if there's anything I'm doing that's obviously wrong (and if someone wants to tip me over the 0 star mark that would be awesome).",3.0
g8kyd28,j9oawr,"Congratulations on your first package. One thing that many people want to see in open source packages is tests. It is seen as a guarantee, that code will keep its functionality even when you update it.

If you're unsure on how a library like that could be tested, maybe take a look at [more popular library with similar features](https://github.com/inorganik/CountUp.js).",5.0
g8l7e84,j9oawr,"Thankyou for the feedback. Tests are something that I will add, along with a few options for easing (as opposed to the entirely linear animations that are being done now). The countUp tests are interesting and aren't how I imagined a library like this would get tested ([link](https://github.com/inorganik/countUp.js/blob/master/src/countUp.spec.ts) for anyone interested). Using the `np` tool to automate the publishing process is also on the todo list.

Something that countUp.js does is publish the `dist` directory to Github. Is this standard practice for open source projects? I've always been under the impression that builds should be excluded from source control entirely.",3.0
g8lfht0,j9oawr,"One suggestion is to automate your dependency management using renovate bot and you can also automatically bump up the version and publish your package every time you merge a PR in.
Works wonders ...",2.0
g8mdxj9,j9oawr,I assume this is only safe to do after hes added in some tests to validate against.,2.0
g8mephs,j9oawr,Good point! You are absolutely correct.,1.0
g8kqxya,j9ngrp,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g8jyusv,j9fq3n,"To be clear, Moment is not deprecated, it's in maintenance mode.",12.0
g8kuqb1,j9fq3n,Thank you. You're right. Deprecated was the wrong word here.,1.0
g8jhta8,j9fq3n,"luxon, brought to you by creators of momentjs who ignored the feedback of the community for years to even get to the point where they just let the library fade into obscurity. If you're just switching now due to their deprecation notice, you're way behind the curve. There are plenty of other good date libraries with authors who actually care about community feedback. date fns, etc.",2.0
g8jkm5t,j9fq3n,"Thank you for your words. 

It's worth noting that I work at an enterprise, and the cost of removing a library like moment is large. We felt secure with the library due to the 15 million weekly downloads.

The depreciation did push us to move away as we felt it was now a long term risk, whereas prior to the depreciation it was safer not to replace it.",1.0
g8kkn1a,j9fq3n,"As u/BehindTheMath said above, it's not deprecated, it's *done*.

&gt; However, since we understand that Moment is well established in millions of existing projects:
&gt;
&gt; * We¬†will¬†address critical security concerns as they arise.
&gt; * We¬†will¬†release data updates for Moment-Timezone following¬†IANA time zone database¬†releases

What more do you need? For new projects choose something else. But replacing it across your org is madness.",4.0
g8kuobg,j9fq3n,"The challenge we have is maintenance of the appropriate timezone information. Timezones and offsets change all the time. As an international business it's important that we stay up to date.

Moment will no longer be updated with these changes, and that poses a long term business risk.",1.0
g8kvwbz,j9fq3n,"Wasn't the second point in their list ""We¬†will¬†release data updates for Moment-Timezone following¬†IANA time zone database¬†releases""? That sounds like it has you covered.",3.0
g8kwfj5,j9fq3n,Aaaaaaaaaaand my brain apparently read past this line every time I've read that update. ü§¶‚Äç‚ôÇÔ∏è,3.0
g8lihsl,j9fq3n,It happens to the best of us.,2.0
g8m2jtf,j9fq3n,"Yeah, I read their announcement as more of a ""our work here is done"" rather than admitting defeat at the hands of newer libraries. Moment filled an important gap for years, I used it on several projects.",2.0
g8jf2wq,j9fq3n,Open source test suite: [https://github.com/terodox/mirgrating-away-from-momentjs#readme](https://github.com/terodox/mirgrating-away-from-momentjs#readme),1.0
g8ir8nx,j9bdbt,"Should probably properly bundle your package.

`tsc` is a compiler, not a bundler.",2.0
g8iui97,j9bdbt,"I don't want to as the library supports tree shaking. It's up to the consumer to bundle.

If the library was bundled, tree shaking would not be possible.",1.0
g8ivjgb,j9bdbt,"That‚Äôs not at all correct. 

Choosing to not bundle only increases users‚Äô build times as now they have to bundle your module for you.

You‚Äôre making it impossible to use ES6 or ESM and bloating bundle sizes by doing this.",4.0
g8ivymr,j9bdbt,"That's completely reasonable in this scenario. \`openpgpjs\` is 500kb worth of code and might not be used at all if the consumers use WebCrypto (which I think should be the primary use of the library).

Increasing the bundle build time by 1ms against adding 500kb to all consumers seems like an optimal trade off.",-1.0
g8iwfag,j9bdbt,"Why would you think it would add 500kb to the bundle?

Make it a peer dependency and it won‚Äôt get included.",2.0
g8ixdar,j9bdbt,"You can. But you are still including all the libraries files when in reality you only need 2 (one storage and one strategy). There is no point in including them in the production bundle of an app just because we want to shave 1ms to build time for devs.

&amp;#x200B;

However, feel free to open an issue on the repo - I will gladly reconsider if several people argue against my solution with strong arguments.

&amp;#x200B;

Cheers",-2.0
g8ixlpo,j9bdbt,"No, as a peer dependency you won‚Äôt be including its files and it can still be tree shaken properly. 

I think you need to do some reading on the subject chief.",2.0
g8iysbf,j9bdbt,"`openpgpjs` will not be included, but all the `lucertula` files will be. And you need only two of them, one storage and one strategy.

Thanks for the interest! Feel free to open an issue to continue the conversation.

Cheers",-1.0
g8iizfn,j9bdbt,"Hi r/javascript!

I have been working on a library to simplify in-browser encryption/decryption for some time and I present you \`lucertula\`:

[https://github.com/dipasqualew/lucertula](https://github.com/dipasqualew/lucertula)

The library aims to wrap established encryption algorithms, namely symmetric and asymmetric encryptions from the folks at \`openpgpjs\` and the AES GCP implemented via the WebCrypto API, and pair them with various storage solutions (localStorage, sessionStorage, etc). I believe encryption should be easy and available to anyone, but more often than not excellent encryption libraries don't offer ""plugin"" encryption/decryption methods ready to be used by developers.

As this is a library ""around"" encryption (but doesn't implement encryption) I would be grateful if more eyes were pointed at it and any feedback is of course welcome'd

The library is written in TypeScript (tests are stil lin JS but I am in the process of migrating them as well). It also supports tree-shaking so if you don't need OpenPGP your bundle won't suffer the significant size of \`openpgpjs\`.

\--

I wrote this library to avoid the boilerplate code to encrypt to and decrypt from local storage in each of my projects, so that's my personal use case. Hopefully it can be helpful to others

Cheers!",1.0
g8iubb0,j98f4z,"This is my favorite thing I've seen on reddit today! I'm amazed, great idea, great work!",15.0
g8j81kb,j98f4z,"I'm glad I shared it here, your kind words made my day!",3.0
g8jx711,j98f4z,"Someone should start tweeting ""good morning"" at night and ""good night"" at morning just to make you think you have a bug.",12.0
g8k6168,j98f4z,That would be truly evil.....,3.0
g8i2i7u,j98f4z,"This is an interesting idea!

If I could offer a piece of advice - I would think about implementing cookies to capture when a user last visited then calculate the amount of tweets since then.",13.0
g8i7s8i,j98f4z,"That could be cool! The server doesn't really store old tweets right now.

I did run it overnight and captured a time lapse here if any one is interested: https://twitter.com/Omar4ur/status/1315325135990202369?s=19

Could be fun to always store the last 24 hours of tweets",10.0
g8ipkas,j98f4z,"Dang, I never knew there was a pie chart in the middle of Antartica.  


Good stuff!",4.0
g8i8y9f,j98f4z,Wow!,3.0
g8kw2pl,j98f4z,Incredible !! Loved it.,2.0
g8ike10,j98f4z,"If I click a dot, please show that tweet. There were instances when a really long tweet came in that was immediately followed by another. I wasn't able to read the long one, and I wasn't able to find a way to go back to it.",2.0
g8illx7,j98f4z,"Clicking a dot does show the tweet. Is this not working for you? What device are you using? 

You can also see the tweets in chronological order in the list on the left",3.0
g8io0z9,j98f4z,"I'm on an Android phone, Chrome browser. It may be the click box is too small for phone accuracy.",2.0
g8ioiyu,j98f4z,"Ok, yeah that's probably it. I was struggling with that too at some point. Thanks for the feedback, shouldn't be too hard to make the hitbox a bit bigger I think.",3.0
g8jbtir,j98f4z,This is incredible!,1.0
g8kh8wm,j98f4z,Try spring based animations with the map to make the animation changes smoother. Sweet project!,1.0
g8kork3,j98f4z,"i tweeted good morning and it never showed it, what gives?",1.0
g8kz241,j98f4z,The tweet has to be geotagged - which I think it is by default if you tweet from a phone app? Not sure about desktop,1.0
g8l1x6d,j98f4z,"Ah i see, yeah i did it on desktop, thanks",1.0
g8kp139,j98f4z,"Could you make it show the past X minutes of tweets when you open the page, so users don't have to wait around to see the effect?",1.0
g8l18t7,j98f4z,"Yeah this is something I've been considering. I manually saved the last 24 hours of tweets to create this timelapse: https://twitter.com/Omar4ur/status/1315325135990202369

The server doesn't currently store the tweets but I imagine it wouldn't be very hard to keep an array of the last 10-20, and send that to any new client that connects.",1.0
g8ks2i3,j98f4z,"this is hilarious and awesome, i have no idea how you did it and its really cool.",1.0
g8l14pv,j98f4z,"I posted a link to the source code plus a little bit of how it works here: https://community.cesium.com/t/waking-up-and-sleeping-live-twitter-map/11192 

If you're interested, we've just revamped our tutorials recently, this one on how to build a flight tracker is probably a great start: https://cesium.com/docs/tutorials/build-a-flight-tracker",1.0
g8j7ppu,j98f4z,"Great idea! Now can you do it for DMs with ""u up?"" lol",1.0
g8hybam,j986my,"The source code can be found here: [https://gitlab.com/tobiaskaufmann/junkies-series](https://gitlab.com/tobiaskaufmann/junkies-series)

The main technologies I used for this simple project are Angular and Firebase for the Backend. Besides some styling with CSS this was really not a lot of work but if you still have some questions feel free to ask them below :)",1.0
g8i8vze,j986my,Nice work! So you're going for something like a trakt.tv clone? Where do you get the metadata from? :),1.0
g8j3za8,j986my,themoviedb.org API,1.0
g8l57if,j986my,Cool! I've been using pogdesign.co.uk/cat/ for like 10 years. Would love to run my own thing though.,1.0
g8l5nhb,j986my,just clone it :),1.0
g8l6fya,j986my,^__--,1.0
g8hu4ut,j9603c,This reminds me of that Dont Use ReactJs blog post which the main motivation was because there are people using 2G network,7.0
g8hshsp,j9603c,"What a terrible article.  Nothing but fear-mongering and ""what ifs"", all while hand-waving away the 100% legitimate (and long-established) benefits of CDNs.

Look, I would have *loved* to be convinced by *evidence* that CDNs are bad ... but there is zero evidence of any sort in this article! The closest thing that passes for it is a story about a hack **that didn't even involve a compromised CDN!!!**

That's right, the *only* ""evidence"" that CDNs are bad, in the entire article, is a story about a hack that literally never mentions CDNs ... but  (if you actually read the article the author links to) it *does* explicitly say:

(emphasis added)

&gt;While the Magecart attack against British Airways **wasn‚Äôt a compromise of a third-party** supplier ...",10.0
g8hukj3,j9603c,"There are good points in the article though. Isn't it true that if you're already serving your app/site from some kind of CDN, serving 3rd party libs from another CDN will be slower than serving files from the same domain? I think the privacy point described in the article is also a bit more nuanced, though I agree the airway example was misleading.

I can see benefits of using cdn libs in quick prototypes, but for production apps where a bundler are always presented I don't see a good reasons to use them.

The exceptions are not libs, but actual services like Stripe, google analytics, polyfill.io etc.",2.0
g8hvfw8,j9603c,"&gt;There are good points in the article though

But there aren't.  A ""*good* point"" *in any article* has to be backed up by something.  I can't just declare ""foo is flawed"" and have that be a good point.  For it to be a ""good point"" I have to say ""foo is flawed *because* ... X"", where the ""X"" has to be logical/verificable.  But the author doesn't support any of his positions, and literally the only piece of evidence **says it wasn't CDN-related** (if you read the link).

And to your specific point:

&gt;serving 3rd party libs from another CDN will be slower than serving files from the same domain? 

Even if we ignore the fact that CDN servers are *highly* optimized for serving static files, in ways your server likely isn't (eg. their settings are tweaked, they likely have servers all over the world, etc.), there's a whole other issue.  Your browser limits the number of requests you can make simultaneously to any one domain, so spreading out your requests can actually make things faster than serving them all from one domain.

In fact, people on very big/serious sites (Amazon, Google, etc.) actually make their own ""mini-CDNs"", by using sub-domains, for this very reason: it allows users to make more simultaneous requests for files from that site.  Just ""View Source"" Amazon.com, for instance, and you'll see URLs like ""http://g-ec2.images-amazon.com"". They not only have a *whole separate domain* just for serving images ... they further divide it up in to ""a through g"" servers (and probably more letters too; I just saw ""g-"" in my view source).

&gt;I don't see a good reasons to use them.

To make your site faster for your users ... the same reason literally tens (hundreds?) of thousands of devs have been using them, for decades now.",2.0
g8koy8s,j9603c,"&gt; it allows users to make more simultaneous requests for files from that site

Note that this is only true for HTTP/1. With HTTP/2+ there's no limit on the number of connections per domain (and indeed there's a bunch of other things that make single-domain hosting more efficient, from server push to prioritization) so I'd expect people will stop doing this in the next couple of years as HTTP/2 becomes standard.",0.0
g8hv8zl,j9603c,"Because the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading. If you bundle all of the libraries that you use in your app, they have to download all of the libraries again, making your app larger and slower to download, even if they may already have the libraries from other sources.",3.0
g8hxpu8,j9603c,"&gt; Because the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading.

This is a bullshit argument though. Press f12, go to the network tab, then go to any web site. See how many of the externally hosted resources are served from your cache because they were used on a different web site. It's a theoretical solution to a problem that doesn't work in practice, and never will as long as versions aren't static by a period of several months.

There are benefits to using CDNs (e.g. multiple connections to different hosts, optimized traffic flow, etc.), but this one is a false narrative.",3.0
g8kk24j,j9603c,"It also ignores the new Chrome cache partitioning which will mean if different sites refer to the same CDN, it won't use the cached copy anyway.",1.0
g8kpust,j9603c,"&gt; the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading.

See https://developers.google.com/web/updates/2020/10/http-cache-partitioning - sadly this kind of CDN behaviour is no longer supported by any modern browsers, due to privacy concerns",1.0
g8kpq2v,j9603c,"I'm not actually the author, but I don't think this is fair - it's a short article that covers a lot of ground, and each point is a valid way in which CDNs might create new problems, or not do what you'd intended.

While the attack mentioned didn't involve a compromised CDN, it is an example of an attack that worked by modifying a hosted 3rd party JS lib, and the exact same attack against a CDN would be devastating. You're putting your trust in the CDN to protect against that, and not doing so clearly reduces your risk to such attacks (you trust your own security + the CDN, or you just trust your own security).

A key point here, under speed: your whole site should be behind a CDN, not just your JS libraries. If you're using a host like Netlify or Vercel, that's happening automatically already. If not, throwing cloudflare or similar in front of your site and using appropriate cache headers is very easy and standard for most large applications. This will usually provide a much larger performance benefit than using a CDN for JS libs (also because you now can do JS bundling or HTTP/2 server push).

Given that you're doing that, the only benefit to using a JS-hosting CDN is if your user already has a cached copy of the exact same version of the same library from some other site. As mentioned here, that's somewhat unlikely.

In addition though, Safari &amp; Firefox have explicitly blocked reuse in these cases for a while now (for privacy, so sites can't use what you already have cached to tell which sites you visit) and Chrome just shipped the exact same thing last week: https://developers.google.com/web/updates/2020/10/http-cache-partitioning. **Sharing JS libs across sites using a CDN is now intentionally blocked by all major browsers**.

CDNs for external JS are not useful nowadays, they do increase your security/privacy/reliability risks a little, and they no longer provide any benefits.",1.0
g8htdnh,j9603c,"Why not go even further? Stop using JS libraries because someone might inject malicious code?! Or even further, no more JS development...too much risk!!! üôÑ

Edit: Spellcheck",4.0
g8hv6ir,j9603c,"Please stop using the internet, it's too risky! /s",6.0
g8jun1e,j9603c,"Yes, this is why I still use cgi scripts and manage my data with a text file I read/write to.",2.0
g8kq47q,j9603c,"&gt; Stop using JS libraries because someone might inject malicious code?!

This is a valid concern, and using libraries you haven't vetted _is_ a security concern.",1.0
g8krlcm,j9603c,The amount of time CDNs can save you is pretty nice though.,1.0
g8irsqn,j939jm,"Just to be clear:

* You're using **Node** builtins, which are intrinsically exclusive to Node
* Then you complain that the Webpack team isn't willing to take responsibility for that
* And to make it better, you decide to make a passive aggressive blog post to shame them, knowing full well how hard being an open source maintainer already is?

Webpack is a **bundler**. Their core mission has nothing to do with abstracting APIs across environments - that they did it in the first place was a nicety, and that you decided to rely on it is entirely on you (especially since not all bundlers had these polyfills by default). That they decided in a major they didn't have the bandwidth to support this usage in the core anymore is perfectly fine - you had literally years to do something about it, it's not like Webpack 5's development was in submarine for anyone.

Perhaps you should consider that Webpack 1 to 4 made their software worse, for you, to give you time to adjust, and that you didn't. Don't take it on them once they tell you that hey, your packages aren't portable and it's costing them resources to support you, resources that would be better spent elsewhere.

[edit] Nice, Sindre blocked me on Twitter *and GitHub* for this comment.",20.0
g8iv1v7,j939jm,**I** am not using Webpack or relying on anything. **Developers** are using my Node.js packages with Webpack for the front-end because that's what Webpack has enabled and encouraged over the years.,-15.0
g8ivyar,j939jm,"Then tell them your packages aren't suitable for browser usage, or recommend using polyfills (which perhaps you already do?), but don't frame it as ""this other project sucks, go bug them instead of me"". You should know better.",14.0
g8h4ist,j939jm,"At the end it sounds like the author wishes Node to be more like Deno, yet he's blaming Webpack for going the same direction (being: relying on Web APIs rather than Node ones).

He also complains browsers should have a utility like `promisify`, which makes no sense to me at all. The only reason that's useful at all is because Node has those horribly callback-style APIs where error objects are passed as the first argument to callbacks. Other environments don't have such APIs thus wouldn't really benefit from having it.

Ultimately it's just a rant different environments are different. If you want to unify, there's going to be friction, which will be the case with the new Webpack. But wishing everyone supports all APIs forever is not a realistic alternative, no matter how unfortunate that is sometimes.",12.0
g8his1z,j939jm,"&gt; At the end it sounds like the author wishes Node to be more like Deno, yet he's blaming Webpack for going the same direction (being: relying on Web APIs rather than Node ones).

While I do wish Node.js was closer to Deno, your conclusion is not what I intended. I'm blaming Webpack for removing an existing feature that users depended on with very little guidance on how to deal with it and with the expectation that package maintainers should take on the burden instead.

&gt; He also complains browsers should have a utility like promisify, which makes no sense to me at all. The only reason that's useful at all is because Node has those horribly callback-style APIs where error objects are passed as the first argument to callbacks. Other environments don't have such APIs thus wouldn't really benefit from having it.

Browsers have more callback APIs than promise APIs. The difference is that many of these don't have an error argument. But that could be dealt with by providing an option indicating whether there's an error argument. I have done so in [my own promisify package](https://github.com/sindresorhus/pify#errorfirst) (created long before `util.promisify`).

&gt; Ultimately it's just a rant different environments are different.

No, it's a rant on how Webpack is meant to simplify front-end tooling, but in the end, makes it even harder for users.",5.0
g8j3s9v,j939jm,"&gt;While I do wish Node.js was closer to Deno, your conclusion is not what I intended. I'm blaming Webpack for removing an existing feature that users depended on with very little guidance on how to deal with it and with the expectation that package maintainers should take on the burden instead.

And to pull another quote from your article:

&gt; Honestly, Webpack not polyfilling does make sense in theory. I just think they did it too early and with too little consideration about its effects on the ecosystem. 

To be frank, that's a terrible reason to knock them for this. You as much as anyone should know the cost of compatibility features like this. *And* they've been communicating this change since [beta.1](https://github.com/webpack/changelog-v5/blob/3df640b8e32a810d243e67dfd835913d9f578a4d/README.md#automatic-nodejs-polyfills-removed) and loooong before and the reasoning has always been that users should not be depending on these polyfills. They're not expecting package maintainers to take the burden, they're trying to kill this long standing ecosystem hack. The only thing they ask mainainters to do is clearly communicate web browser compatible builds if any.

&gt; No, it's a rant on how Webpack is meant to simplify front-end tooling, but in the end, makes it even harder for users.

A whole big theme of this release is _simplifying_ things for end users and unifying webpack's behavior with where the ecosystem has moved to. Preserving things like this is just shifting complexity onto the webpack authors and bloating bundles for what was ultimately always an ecosystem hack.


I won't entirely defend the Webpack authors here. They could have communicated the release, the gotchas, and the upgrade path better. But I do think it is entirely unfair to critize them for this.",4.0
g8j5jcq,j939jm,"&gt; And they've been communicating this change since beta.1 and loooong before

For the majority, the Webpack 5 blog post is the first time they hear about it.

&gt; and the reasoning has always been that users should not be depending on these polyfills.

Maybe in a perfect world, but in reality, the result is just that users and package maintainers will have to deal with it instead. Users will now have to figure out how to manually add these polyfills.",0.0
g8j796q,j939jm,"&gt;  Users will now have to figure out how to manually add these polyfills.

Or drop the libs requiring them. Having watched this same story play out in other ecosystems, part of the point is get users to be aware of the problem and move away. Or just stick with Webpack 4 for as long as it's feasible.",3.0
g8j8clh,j939jm,"Yes, that's also a good solution, but switching to a different package takes some effort too.",0.0
g8j8jsz,j939jm,"Agreed. Honestly, I expect 95% of users will just sit out the upgrade for a few months until projects like Next, Nuxt, and the rest catch up. That's what we're going to do. The blog post sort of says to do that, but I wish they'd said it in stronger terms.",2.0
g8j68ih,j939jm,You‚Äôre blaming them for not tracking the communication from the team?  Wut.,-1.0
g8j70qs,j939jm,"No, Sindre is right in that regard. A major blog post communicating the breaking changes months or years ago would have been welcome. Webpack is ubiquitous, expecting all its users (direct or indirect) to track the issue tracker isn't sensible.",3.0
g8j7ghp,j939jm,Agreed as well. I‚Äôm just not sure what else they should be doing. Open source revolves around a lot of unpaid hours. I think because of this time is better served contributing rather than throwing shade.,0.0
g8iyi05,j939jm,"May be its time to move to some other alternative, may be rollup.",2.0
g8iq43a,j939jm,I don‚Äôt really see the problem. Can you name a few libraries commonly used in frontend development that will be affected? Cause I can‚Äôt think of one.,2.0
g8icw2u,j939jm,"Sinder, you do own tons of packages and I had always been curious about how you feel about people demanding package fixes that actually belong upstream to webpack. 

I haven't tried this release yet though, but, I think your stance is correct a tool chain such as webpack should not change their build like this, even over large releases, they might as well have changed source language...",-2.0
g8igd6j,j939jm,"I feel like I have been quite accommodating for Webpack users. I have added lots of workarounds (for example, for dynamic require warnings), refactored exports to work better, split up exports to be more tree-shakeable, answered Webpack support questions, and generally pointed folks in the right direction. However, I will not make packages worse for Node.js users in favor of Webpack user's needs.",4.0
g8jmla1,j939jm,"What the hell, that's like developing a Node native addon module and complaining that browser vendors are not willing to support it",0.0
g8kfmrz,j91w8e,"I don't see much need for it, but it's kinda cool.",2.0
g8l5nte,j91w8e,Thanks. It was made just for personal use initially as I have this habit of checking my github feed very often so now I can just take a look at my feed right from my working terminal. That was the whole idea behind it :),2.0
g8lyzbq,j91w8e,But why,1.0
g8hy7gz,j91nhc,Order w https://example.org/script.js,1.0
g8fizmx,j8x3a3,"[Module federation](https://webpack.js.org/blog/2020-10-10-webpack-5-release/#module-federation) seems very interesting, especially for the teams out there that are working in separate repos, but have to unify their applications into one cohesive product.",54.0
g8fwo0a,j8x3a3,Yes I've been waiting for this for years. Really looking forward to giving it a spin.,9.0
g8hel6v,j8x3a3,"A couple of my teammates have said that they want this, but it mostly only seems useful only if you have projects across different repos, otherwise, of you have a bunch of projects in one repo, it seems that something like yarn workspaces can manage these dependencies much easier. Am I missing something here?",3.0
g8ip2y4,j8x3a3,"&gt;  [i]f you have a bunch of projects in one repo, it seems that something like yarn workspaces can manage these dependencies much easier.


I totally agree. I think monorepos work better 99% of the time, but I've seen code fragment into separate repos (usually for political reasons such as team members reporting to different managers). The counter-argument to monorepos that I commonly hear is that the code becomes ""too complex"" or too large to manage, but I personally believe it is far easier to manage complexity from a single codebase rather than having multiple fragmented repos.",2.0
g8ijfs7,j8x3a3,"I used it for brand differentiation, so being able to get what seems like the same component, but have a different one load from a different source based on some criteria. Allows hosts to operate agnostically. Pretty sweet.",1.0
g8fmniz,j8x3a3,"&gt;**So when is the time to upgrade?**  
&gt;  
&gt;It depends. There is a good chance that upgrading fails and you would need to give it a second or 3rd try. If you are open to that, try to upgrade now and provide feedback to webpack, plugins and loaders. We are eager to fix those problems. Someone has to start and you would be one of the first ones benefiting from it.

Is it just me, or are they implying it's just not production-ready yet?",91.0
g8fp6yb,j8x3a3,"&gt; So today (2020-10-10) webpack 5.0.0 is released, but this doesn't mean it's done, bugfree or even feature-complete. As with webpack 4 we continue development by fixing problems and adding features. In the next days there will probably a lot bugfixes. Features will come later.

I think they are doing more than implying that",75.0
g8hofh2,j8x3a3,"Ah, the ol' ""test in production"" approach.",12.0
g8jk4ro,j8x3a3,That's what release candidates are for and npm supports them just fine so this is pretty strange tbh,2.0
g8fq5tq,j8x3a3,"On one hand the first RC was 3 weeks ago and there was a long line of beta versions before that, theoretically enough time to iron out most major bugs. On the other hand it's a big, incredibly configurable project with lots of functionality living in separate packages with separate maintainers, it needs a lot of people using it to get good bug detection coverage (which will only happen with a ""stable"" release).",19.0
g8g2w6l,j8x3a3,"There‚Äôs a million different ways you can configure webpack. I think they‚Äôre saying for most use cases it will work in a stable fashion, but some edge cases may fail over the next couple of months while they fix bugs.",21.0
g8gg4nb,j8x3a3,"No, that‚Äôs not what they‚Äôre saying. ‚ÄúThere is a good chance that upgrading fails‚Äù is not the same as ‚Äúit might fail because of your unique config and certain edge cases.‚Äù",11.0
g8ipk1k,j8x3a3,"Well, I can imagine plenty of ways for upgrades to fail because of plugins people are using that are not Webpack 5 ready. That's what I assumed would be the primary issue. Their tool might be release-worthy, but the ecosystem may simply not be there yet.",1.0
g8glfwf,j8x3a3,"There is an ecosystem of plugins and use cases that most certainly isn't production ready, even if the core webpack 5 is",5.0
g8gchn2,j8x3a3,"That's not what they're saying.

They're saying that they've introduced breaking changes, plugins and loaders may need updating, or not, so if you can, try it and see.

There may also be bugs, so we'll see.",5.0
g8ge1dw,j8x3a3,"I don't think it's ""not production ready"" but I do think it's such a core dependency that we pack is part of many tools now and unless everyone else also changes to 5, it's hard to do it ourselves.",2.0
g8gdu9w,j8x3a3,"referring to upgrading existing setups. I wouldn't change mid way through a project anyway, just on principle.

Next project I'll give it a spin from scratch.",1.0
g8myqcw,j8x3a3,Hey Sean from the webpack team! We reworded this to say that some third party plugins just won't work yet because they need to play catchup. We agree this was poorly worded! :-),1.0
g8hlynt,j8x3a3,Is anything in the JS world production ready?  even the  stuff used in production?,1.0
g8g4t1k,j8x3a3,I *just* got used to 4,24.0
g8g7hy3,j8x3a3,I literally just finished updating a stack from 1 to 4...,7.0
g8grgfl,j8x3a3,4 will be pretty stable and fine to use for some time to come I'm sure.,5.0
g8gcij4,j8x3a3,There‚Äôs so much great stuff in here. Very excited to upgrade!,8.0
g8g8r0u,j8x3a3,"Genuine question, my site is still on webpack 2. Am I at all screwed moving forward? Or am I just missing out on a lot of cool stuff?",4.0
g8gabzg,j8x3a3,"Over time you'll have to seek out the exact versions of any new plugins you want to use as some of the plugin and loader APIs are fairly different.

If your website never needs new plugins, and your unlikely to want to take advantage of the new features, you'll probably be fine 

In general though, the longer you go without upgrading things (not just webpack) the harder/bigger it is up upgrade when you need too",17.0
g8ipf4r,j8x3a3,"If your site is very large, you'd likely see (build) speed improvements from upgrading to 3, 4 or 5. The migration guides are there, and there isn't any ""rush"" to update (take your time).",2.0
g8gik6r,j8x3a3,"The coolest stuff should be the app we are building, not the scripts we are using to put our JS together.",7.0
g8hrwkx,j8x3a3,I‚Äôm excited to see how the size of my production modules change with better treeshaking algos. I wonder how speed and output size will compare to other bundles now. Web pack imo is better than browserify for a number of reasons but bundle size has been smaller w browserify for me.,2.0
g8j0j5q,j8x3a3, with my webpack 4 config i could get a single common.js for both my frontend and backend targets. is this still a thing with webpack 5?,1.0
g8gny4g,j8x3a3,But I still learn how use webpack 4 =)),1.0
g8hqqjm,j8x3a3,Time to switch to Rollup!,-6.0
g8dichj,j8sfd0,"And then when you want to use these types in another file, you're screwed. Yes, you can import them using a really ugly syntax, but why bother? If you're doing this you might as well just use typescript all the way.",8.0
g8dqixm,j8sfd0,"If you want to share types it's pretty straightforward to put interfaces/types in a declaration file (eg: `pets.d.ts`) and import that in the jsdoc comments (`/** @type {import(""./pets"").Fish} */`).  Some folks might find that syntax ugly (a fair point that I tend to agree with), and others might find dealing with build scripts and source maps more painful than writing jsdoc syntax ¬Ø\\\_(„ÉÑ)\_/¬Ø

&amp;#x200B;

I won't fault anyone for going all in and writing everything in .ts files... but I also won't fault anyone for adding type-checking to existing JS files (maybe they are in a brownfield project, or maybe they are writing a little JS inside an HTML file yet still want some type-checking).  I'm just glad we have both options.

&amp;#x200B;

Thanks for the comment!",5.0
g8dscwc,j8sfd0,"Yeah, I agree for the most part. I concede that not all projects can migrate to TS, even if it's possible to do gradual migrations, and in those cases it's nice to have the alternative.",2.0
g8i0e0y,j8sfd0,You can also use type aliasing and import using the normal es import signature. I don't see this approach documented at all though. Basically you export a value that is typed to what you want (aliased) and when you use it like a type checkJs is perfectly able to attribute the right validation. Much nicer approach imo.,1.0
g8excuk,j8sfd0,"I feel like there's an elephant in the room not being mentioned.

**You can do all of this in Javascript and get the tooling benefits of Typescript!!!** (without ... mostly ... having to write types).

Step #1: Use VS Code

Step #2: Add `checkJs: true` to your `jsconfig.json` file in your project root (https://code.visualstudio.com/docs/nodejs/working-with-javascript)

Step #3: Let VS Code infer all your types for you from your code, so that you get the benefits of recommended arguments (as you type function calls), automatic imports, etc. ... all without ever writing a single line of Typescript

Step #4: On the rare occasion that VS Code *can't* infer your types (eg. Styled Components use functions inside template strings; VS Code isn't a fan of those) use the technique described in the article to define the type you need via JSDoc.",5.0
g8ctl62,j8o3i9,"Good job on the project, here's some points of criticism, if you're interested: 

i have to say I don't like how it only uses half the screen for the comments. I would not use a site with a comment section set up like this, it's a bit strange. if you don't want to show the comments on the whole screen, I would at least center them, and maybe just have a semi-transparent black backdrop to gray out the other elements on the page.

second of all, tab clicking stuff doesn't work. this is always a pet peeve of mine with SPAs, often some browser functionality just gets left in the dust, and things don't do what you expect them to. 

if you scroll down on the comments, the X scrolls away with them, so you can't close the comments anymore.

no way to collapse comment trees

I would move the tags (e.g. show HN) to just be next to the title, rather than above it. it looks a bit awkward

clicking the article title on the comment screen does nothing. it's very hard to actually open the article the post is about

e: noticed I had previously downvoted the OP once in my RES, so I took a look at OPs account, looks like they're just spamming links to various blogs from the hashnode network, I think they're just trying to promote their own blogging platform by posting random content from it

e2: the actual author of the project did make a post on reddit about it as well, here:

https://old.reddit.com/r/webdev/comments/j8j9xt/i_gave_a_modern_look_for_hacker_news/",11.0
g8csln5,j8o3i9,this redesign shows me two articles in the same space I can see 16 articles on HN.,42.0
g8d74i1,j8o3i9,Ah the classic designer vs developer argument: visual efficiency vs aesthetics,13.0
g8ec077,j8o3i9,"Uhm, if you‚Äôre focusing on aesthetics over visual efficiency, you‚Äôre not a designer, but an artist.",2.0
g8e6llk,j8o3i9,Wow you can read 16 titles at once? This must be the 10x developer I've been hearing so much about,2.0
g8c96f9,j8o3i9,I truly hate HN design. I hope they just copy-paste this design. üòÄ Good work.,-1.0
g8lt6tt,j8o3i9,"It has its positives, like it conveys more information in less space than OPs and functions better than OPs as you can see in the topvoted comment.",1.0
g8ct24g,j8o3i9,"Nice but it‚Äôs sad that He couldn‚Äôt make something of the background color , plain white is a bit too hard.",1.0
g8d5rrj,j8o3i9,"Is it possible to make a chrome extension that ""beautifies"" hacker news?",1.0
g8ch38z,j8o3i9,[deleted],-1.0
g8crkhk,j8o3i9,"well for one, this new design doesn‚Äôt even load with javascript disabled. if it were any other site that would be no big deal, but i don‚Äôt think hacker news readers would take kindly to that",9.0
g8dolqz,j8o3i9,Narrator: _They wouldn‚Äôt._,3.0
g8dyqls,j8nrbo,"Jesus, these comments. Guy made something and was proud of it. And we wonder why developers are stereotyped as egotistical assholes. You didn't have to say shit if you were just gonna be a douche to this guy who put work into something he wanted to share.",101.0
g8ej08g,j8nrbo,No shortage of douches in this industry.,17.0
g8elkzp,j8nrbo,Absolutely agree that there are a bunch of egocentric fucks in this field.,8.0
g8e3vub,j8nrbo,"Sad to see some jealous people on this thread. Is this what Reddit is? A bunch of anonymous ungrateful bunch  of kids trying to devalue someone who created something for the community. Ridiculous. God, I absolutely hate people like this. Create, not complain.",47.0
g8erbuw,j8nrbo,"&gt; A bunch of anonymous ungrateful bunch  of kids trying to devalue someone who created something for the community 

Hit the nail on the head buddy",12.0
g8c7g8y,j8nrbo,"[server: Node.js + Typescript + MySQL](https://github.com/tylergrinn/cronpush)


[front end: Typescript + Vue 2 + Bootstrap](https://github.com/tylergrinn/cronpush-web)


[Medium article](https://medium.com/@tygr.development/web-push-notification-scheduler-99314afdd5ef)",33.0
g8e7iui,j8nrbo,Kudos to you for putting this together and sharing your accomplishment.,22.0
g8eepwv,j8nrbo,Thanks!,8.0
g8eh04g,j8nrbo,Very nice!!,8.0
g8f0lj5,j8nrbo,Good job dude :),4.0
g8c75tp,j8nrbo,[removed],1.0
g8c78nq,j8nrbo,[removed],1.0
g8fe997,j8nrbo,Hey! This is awesome! Love the subtle design details you've paid attention to :),1.0
g8fg6sc,j8nrbo,Thank you!,2.0
g8l164o,j8nrbo,Awesome!,1.0
g8cafzv,j8nrbo,[deleted],-62.0
g8cbbl3,j8nrbo,This one's mine,107.0
g8f557s,j8nrbo,Roasted.,3.0
g8cdzj4,j8nrbo,Why is it better than the other ones?,-40.0
g8ch45a,j8nrbo,"I don't know of any others, Lloyd does",44.0
g8ciavb,j8nrbo,"You're going to have a better answer than that if you want someone to try yours.

Marketing 101: make them want your product or service.",-61.0
g8cim9f,j8nrbo,"Honestly I'd rather not have this get too popular, as there's no way for me to pay for it if it exceeds my server size. More of a portfolio thing but I hope it helps you",54.0
g8cr4g7,j8nrbo,"Well, then you can add to your portfolio/resume how you integrate google ads into your project.",-47.0
g8cwaij,j8nrbo,That's a good idea I might try that out. Or maybe bing ads. Lots of real estate for sure,19.0
g8dfczs,j8nrbo,"You could always host it on a cloud provider like Google Cloud or AWS. Control your costs, scale out and in as you wish based on traffic and your own cost limits",7.0
g8dhom8,j8nrbo,"That's another good idea and I'm actually in the process of containerizing it right now because I'd like to learn kubernetes. Right now I have a personal server through digital ocean (aws) which this app is sharing with a couple others.


So it can already scale if it needs to but I'd like to let it exist separately and get some donations first. I'm accepting sponsorship on my github profile and I plan to add a one-time donate button to my home page once it's finished.",9.0
g8cj739,j8nrbo,Marketing 102: figure out a way to turn it into a subscription service to provide a profit.,-52.0
g8d7500,j8nrbo,Why can't you just make something for fun? And for the learning experience?,37.0
g8esz7r,j8nrbo,Didn't say you couldn't. That's harder to market.,-4.0
g8d5fs0,j8nrbo,"Marketing 103: forgot number 102, make your product as addictive as possible to keep users ""engaged"", track every single thing they do, then cash out by selling your user's personal data to the highest bidder",18.0
g8ghu3v,j8nrbo,There‚Äôs a lot of cron-as-service sites out there,-3.0
g8dvtyo,j8nrbo,You and thousands of other people just like you. Cloud scheduler is literally free in Google's cloud.,-63.0
g8c6yeg,j8nnw0,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",5.0
g8ksftf,j8nnw0,"It's in package.json, I just forgot the file.",1.0
g8g0gd7,j8nnw0,This is some incredibly underrated work. A lot of code would be better off if it used these.,3.0
g8ksgih,j8nnw0,Thanks! I'd love to refine this code and get it to a stable 1.0.0 release and then incorporate it into some other JS libraries.,1.0
g8hsbcm,j8nnw0,"Very well done, starred it and will track the progress!",2.0
g8dsycv,j8na1p,[Looks great! (Firefox on Android)](https://i.imgur.com/j9Jds06.jpg),2.0
g8dxf4d,j8na1p,not much better on Chrome android unfortunately. I'll have a look on pc tomorrow,1.0
g8e1gin,j8na1p,it's not any better,1.0
g8furqg,j8na1p,"u/Dourdough u/NoIsE_aLiVe u/mq3

You had to click on ""set days"" or anywhere else besides the counter. I wrote a function that clicks that for you on the first session, clear cache of the site and try it now",1.0
g8g32jr,j8na1p,"Oh no I'm aware, it's just a bad user experience",1.0
g8c30oe,j8j4f7,"I just re-released a library called IAM, available at [https://github.com/coreybutler/iam](https://github.com/coreybutler/iam). It's an identity and access management library. It runs on any JS runtime with ES Module support (i.e. browsers, Node, Deno, etc). This library is my answer to the somewhat underserved discipline of authorization (not authentication, which is very well supported).

The driving principle is developers should be able to build authorization logic into their apps by always asking the same question: ""Does the user have the right to use this system resource?"" For example:

    if (user.authorized('system resource', 'view')) {
      display()
    } else {
      throw new Error('Access Denied')
    }

To achieve this, the library provides simple methods for defining system resources, rights, roles, groups, and users (see the README for details). At that point, it acts a bit like a logical query engine, where you ask IAM whether the user has permission or not. The library handles the complexity of determining whether a user belongs to the right role, whether a group has access, whether a group inherits roles and rights that get applied, overrides (forcibly deny/allow)... i.e. all the messy stuff.

The library also has what I call a ""lineage tracer"". By specifying a system resource and a right, it will tell you what group/role memberships were applied to determine whether the user is authorized or not. Here's a copy/paste of what that would look like:

    {
      ""display"": ""superadmin (group) &lt;-- admin (subgroup) &lt;-- partialadmin (subgroup) &lt;-- administrator (role) &lt;-- * (right to view)"",
      ""description"": ""The \""view\"" right on the \""admin portal\"" resource is granted by the \""admin\"" role, which is assigned to the \""subadmin\"" group, which is a member of the \""admin\"" group, which the user is a member of.\"",
      ""governedBy"": {
        ""group"": Group {#oid: Symbol(superadmin group),‚Ä¶},
        ""right"": Right {#oid: Symbol(allow:* right),‚Ä¶},
        ""role"": Role {#oid: Symbol(admin role), ‚Ä¶}
      },
      ""granted"": true,
      ""resource"": Resource {#oid: Symbol(admin portal resource),‚Ä¶},
      ""right"": ""view"",
      ""stack"": (5) [Group, Group, Group, Role, Right],
      ""type"": ""role""
    }

The library also has the ability to dump its full configuration as a JSON object, or dump a cleaner/readable data set for storage in a DB. Configurations can be loaded, which means the system configuration is pretty simple to migrate/reuse.

I've built more user management and auth systems than I care to, and I finally got fed up with the mess that seems to always incur in every project. That's what inspired me to create this. I gave a meetup talk (with examples) about this when I released the first iteration of the project (linked to in README). This new release has been cleaned up, with distribution through npm and popular CDN's, features 195 automated unit tests, and has been battle tested on client projects and my current startup.",1.0
g8emfpv,j8j4f7,"Hey, I'm Aaron! I'm pretty comfortable with JS and am trying to get better at Python for data science purposes -- something I'm only really comfortable doing in Excel (thanks, business school!).

I miss how visual spreadsheets are, and how easy it made data cleaning and manipulation. That, combined with spending an ungodly amount of time on Stack Overflow to lookup Python syntax, made me long for the simplicity of spreadsheet-based data analysis with the power of Python.

So I built [Mito!](https://trymito.io/?source=r/javascript) (written mostly in the lovely JS!)

Mito is an editable spreadsheet in your Jupyter notebook. Pass in a Pandas data frame, make the edits you want, and Mito will automatically convert your edits into production-ready Python code.

You can clean, filter, find/replace, and use standard spreadsheet functions in Mito, giving you the visibility and ease of a spreadsheet with the power and repeatability of Python.

It's been a great way for me to learn Python while not banging my head against the hallowed halls of Stack Overflow.

I'd love to hear your thoughts about how this might be useful to you. You can check it out [here](https://trymito.io/?source=r/javascript)!",1.0
g8f4u23,j8j4f7,"I wrote a dead-simple React component that sandboxes your D3 code. Making D3 and React play nicely together has never been easier!  


[https://gitlab.com/Native-Coder/d3-react-component](https://gitlab.com/Native-Coder/d3-react-component)",1.0
g8gznv0,j8j4f7,"I was frustrated by the slow compiling of code in my company. I created the tools to speed up the compile process. 

It picks the changes from your local system and compiles them over the server and exposes a URL that you can access.  While building this tool, security and speed was my major focus.

It's still in development. Please let me know. If you find it interesting. I will send you the steps to try it.

[https://stormyapp.com](https://stormyapp.com)",1.0
g8kceda,j8j4f7,"https://github.com/Lamasusb000/PublicCode 
I created a simple public use code repository that work in modules and so people can easily import them!",1.0
g8aql7n,j8grww,I‚Äôve spent lockdown learning to code. I decided first large project should be to help bars and restaurants that are struggling. Please any help or advice for improvements would be appreciated.,7.0
g8ayrmp,j8grww,I've noticed that you don't have any unit/integration nor e2e tests. If this is to be used professionally then I believe it should provide a certain minimum level of quality. Maybe you can improve that aspect.,3.0
g8ayw0k,j8grww,Yes great point. To be honest I‚Äôm just doing a course on these for this very reason! Do you recommend any resources for learning about testing Node and React?,3.0
g8cc0zr,j8grww,"One decent source for getting basics of Node/Express and React testing would be [Full Stack Open](https://fullstackopen.com/en#course-contents) by University of Helsinki. It's free, it's online, and you can browse all the material without extra hassle.",2.0
g8j2c2v,j8grww,Thank you so much for this recommendation I‚Äôve looked at so many guides and none of them made sense to me but this one just clicked.,2.0
g8kwbdv,j8grww,"You're welcome! I tend to recommend this course even to folks who already write this kinda code for living. It also seems to get something new every year, so there is smaller chance of the course content getting old.",1.0
g8az4zu,j8grww,"I don't know of any courses first-hand. However I've heard good things about Kent C. Dodds. Although quite expensive.
If you don't mind reading manuals then you could just get hands-on experience by using something like testing-library.",1.0
g8azc9p,j8grww,Awesome. Thank you for your advice it‚Äôs really appreciated. I‚Äôll get on it.,1.0
g8ap5gm,j8f7p7,Looks like a neat tool. Did you build it?,8.0
g8aw6jn,j8f7p7,Yes,10.0
g8asey5,j8f7p7,This looks good,4.0
g8aw7gy,j8f7p7,Thank you,7.0
g8b8xks,j8f7p7,Damn this is cool.,4.0
g8bhc87,j8f7p7,Amazing,5.0
g8c5mfe,j8f7p7,"I love how the first thing in the instructions is
&gt; How do I quit this thing?


Looks like a cool project!",4.0
g8c8ths,j8f7p7,"Yeah, I personally know the pain of quitting these kind of terminal apps :)",3.0
g8boy2m,j8f7p7,Well done! Cool tooling,3.0
g8c7100,j8f7p7,The code looks clean af. Nice job!,3.0
g8hbcdq,j8f7p7,"I would've add some JSDocs in the code, though.

But, nice job. Looks awesome!",2.0
g8hci6m,j8f7p7,"Please feel free to raise a PR, I would appreciate it very much",1.0
g8c46kl,j8f7p7,Out of curiosity why are you using blessed and neo-blessed? Isn't the latter just a fork with some bug fixes?,1.0
g8c8mgd,j8f7p7,"Yes, you are right, I need to clean it up a little for that, will do it in the next release, it was a good catch though...",1.0
g8gisb3,j8f7p7,"Oh glad it helped, I legitimately thought you were using both versions lol",1.0
g8c91qk,j8f7p7,very neat tool ‚ú®,1.0
g8akssm,j88wek,"`tsc` compiles TS files but really isn‚Äôt suitable as a bundler. Only 1 output, non-minified, not mangled, etc,",1.0
g8al0eg,j88wek,Would recommend Luke Edwards‚Äô [typescript-module](https://github.com/lukeed/typescript-module) in its place.,1.0
g8be87m,j88wek,"That's an interesting thought. I wasn't thinking about bundling since I mostly work in Node instead of the browser. I prefer having the JavaScript output file structure match the Typescript input structure for when I need to look at the JavaScript directly.

I haven't seen many bundled/minified npm modules -- maybe the general expectation is that the downstream user will use a bundler if needed?",1.0
g8bvv1w,j88wek,"Uh, what? Most node modules are minified and bundled.

You still should offer multiple outputs so users can choose to use cjs or esm",1.0
g89otcw,j86kb3,"Looked at the demo, very cool. I like the design, and it could be very useful for busy sites where space is lacking.

Some suggestions :

-	snap to a position, for example in line with your other icons. I can drag the menu half off screen.
-	when you scroll on mobile, it behaves weird, snapping to the top most position. Maybe make it either static on the screen or follow the scroll.",2.0
g8968zb,j86k5x,Is this the right sub for this content? Doesn‚Äôt have much to do with JS.,3.0
g898zgl,j85s66,"If you're talking about for a SPA app, Sentry is a good way to go. If using a 3rd party is out of the question, then set something up that catches the errors that happen in your app and send that data to a server you've set up. 

Clients differ on so many things--browser, browser version, machine, locale, timezone, user, user permissions, the list goes on. Keeping track of them will help with debugging. It's a lot of work, though.",3.0
g89bxyf,j85s66,Another cloud solution is azure application insights which is part of the Azure Monitor service. It's relatively cheap and you can create your dashboards within azure portal itself.,2.0
g897vj6,j85s66,"I haven‚Äôt looked extensively, but after a few searches and only finding server side loggers I decided to just use local storage while I‚Äôm developing. I can then send it to a server as json whenever it‚Äôs needed.",1.0
g8aha0u,j85s66,My thoughts exactly if i don't find any library for this job.,1.0
g89de69,j85s66,"Just remember that you'll never log all errors on the client side, just some of them. If errors occur because the clients internet connection drops, or they have a problem connecting to the log solution, you'll never see those logs.",1.0
g8aapdn,j85s66,Sentry.io,1.0
g8ah61s,j85s66,"Thank you for the link but I am not fond of external solutions, I like to keep the app and user monitoring internal.",1.0
g893lo4,j85s66,"I looked a few weeks ago but ended up using a library called winston. There‚Äôs also ulog. The best solution is to stand up a very simple express server with a single POST endpoint or maybe even a WS connection, then use the server to write to a log file directly. You‚Äôd probably want to setup some basic auth on it or disable it out of development entirely.",1.0
g8ahi23,j85s66,Thanks,1.0
g898r1u,j84ssi,nice work!  will start following along,3.0
g89ova1,j84ssi,"This series is amazing, thank you.",1.0
g8alwzy,j84ssi,"The explenations are clear , nice post and article",1.0
g88ybbh,j84pze,"I see a real benefit from authoring a well-designed music data storage format suited towards your application. Your ZzFXM format is indeed tiny and looks quite optimized from what I can tell. Perhaps a little remiscient of MIDI? I haven't quite compared them side by side. In any case, this project looks like an interesting development for music on the web.",2.0
g89mxql,j84pze,"MIDI is a binary file, and this seems to be JSON.

I made something similar... not tiny or minimal though.

You can see and hear it here:

https://openmedia.gallery/view/1755

And here's the JSON:

https://openmedia.gallery/data/1755",1.0
g89nkhq,j84pze,"I wonder if OP's format is binary-serializable?

Regarding your project, it does seem similar! What format did you use for the song that plays when you hit the play button?

Edit: Also, is the code available for this anywhere?",1.0
g89nvcr,j84pze,"It's a JSON file, you can see it in the /data/ url.

It has a list of URLs to sound files, and then sequences them to play at the right time.

Here's the code

https://github.com/mikehelland/omg-music/blob/master/www/js/omusic_player.js",2.0
g89ov0r,j84pze,Thank you for sharing your code. I'll gladly take a look.,1.0
g89nytj,j84pze,"Here's the editor:

https://openmedia.gallery/apps/music/remixer/?id=1755",2.0
g89ovfb,j84pze,I'll look at this too.,1.0
g89pvu9,j84pze,"To answer your other question about DJ sets, I use this to do electronica sets. It's built to be an instrument as much as a DAW. Kinda like Abelton Live, from what I hear. (I've never personally used it.)",2.0
g89olsn,j84pze,"One overarching question I have is at what point will/did technology that lives right in your browser achieve the same feature parity as the super propietary stuff that's probably embedded into equipment on DJ sets? It'd be cool if there was a more accessible way to create sounds, and the browser sounds like a great option for that.",1.0
g89n529,j84pze,"    {                                     // Metadata
    title: ""My Song""                       // Name of the song
    author: ""Keith Clark""                  // Name of the author/composer
    }

Is there supposed to a comma in there? And no quotes around key names?

So you can't just JSON.parse() it, right?",1.0
g898cys,j82z5l,"This looks very nice.

One question from technical side: You have react version and svelte version too. Would it be possible / useful to just create 1 package and then user could import whatever version they want to use? Could this just be framework agnostic? Because, from *what I think* \- internals could be shared. What do you think?

&amp;#x200B;

I've been thinking lately that it is pretty dissapointing there is nowadays billion x-framework-component -packages available.",1.0
g87h4pv,j7x2ef,"Sorry, I'm hesitant to connect my LinkedIn account, is there a way to create an account on your website?

Edit: it's fixed now :) Just click on _rather not_.",33.0
g87k9va,j7x2ef,"Why does it even require authentication, much less with a third-party site that has nothing to do with the application? Sketchy.",35.0
g87kqzd,j7x2ef,"It might be to save the scores?

That can easily be implemented with local storage though so I'm only hoping it's for web traffic analysis or something",5.0
g87ksit,j7x2ef,"Hi Ruslan, there's no sketchy intentions (pinky promise) but we collect username and email address for the uniqueness of players. We're open for suggestions te make it better!",-10.0
g87sr1m,j7x2ef,just generate a uuid and store it in a cookie,19.0
g87xt50,j7x2ef,&gt;Nickname and email address without validation option is added just a minute ago.,10.0
g883vq6,j7x2ef,"If you're going to reject an email address, then show a message saying so. When there's no error message *and* no submit button, then there's no obvious way to proceed and just seems broken.

Also, for that matter, if I can enter with a fake email address, then that's a sign you never needed an email to begin with. Earlier, someone asked, ""Why does it even require authentication?"" And the answer is, it doesn't. You don't. When you insist on information you don't really need, it just feels like harvesting.

&gt; just generate a uuid and store it in a cookie",14.0
g88ao06,j7x2ef,"Why not just ask for a alias to go by with an optional email address?

If user enters email address, then they reserve the alias (username) and no one else can use it. If there's a score board, show a green check next to validated usernames to differentiate between random user names and reserved/validated users so you don't have to delete a randoms score if a validated user later takes the username.",2.0
g88lo11,j7x2ef,"Hi Guys, I would like to clarify on the tracking/privacy topic a bit. This project is meant as a fun project for a small company like us. We made the game for our employees to play on our monthly tech night. We wanted to make the game publicly available because we are proud of the result and want everybody to enjoy it.

As soon as concerns where raised about the only way to play was logging in with LinkedIn we added the username/email possibility on which you can enter fake details if you want. We have google analytics running in anonymised mode and no other trackers. Everybody can check what trackers we use or request are made from the app with Google Chrome or other debugging tools. 

I hope everybody will enjoy the game and have a some fun writing cool solutions. Happy coding! :)",3.0
g88nz9m,j7x2ef,"Why on Earth wouldn't you just remove the login/email field that you never needed in the first place?? Pac-Man only asks for your initials, and even then only at the end of the game. Just do that.

This decision is what sets the first impression of the entire game.",7.0
g88opwb,j7x2ef,"Hi MoTTS\_ , don't forget there's always the option to not play the game! Enjoy your weekend, with or without a bit of JavaScript fun :)",-3.0
g8a9vj4,j7x2ef,You really don‚Äôt get it lol. Why do you need to collect ANYTHING for something you‚Äôre spreading ‚Äújust for fun‚Äù? Makes no sense. You‚Äôre likely trying to capture emails for a future email list/whatever.,3.0
g87skqj,j7x2ef,/r/privacy,6.0
g87xosj,j7x2ef,Nickname and email address without validation option is added just a minute ago.,1.0
g87k77j,j7x2ef,"Good suggestion!

Would you be okay loggin in with a Github account or rather prefer to login with email address and nickname?",-2.0
g87kmbs,j7x2ef,Definitely email and nickname with no email verification please. I just want to try out the game :),11.0
g87li5b,j7x2ef,"Check, we're adding nickname and email without verification as we speak. Should be added no later than tomorrow!

We're also working on a hall of fame for the fastest players and/or best solutions.",11.0
g87lo6x,j7x2ef,Awesome!,1.0
g87xjln,j7x2ef,It's online! Have fun playing :),1.0
g8826bn,j7x2ef,That was extremely fast! Playing it now :),1.0
g87svk3,j7x2ef,Why do you need any auth?,1.0
g87xi2o,j7x2ef,"We don't really, but we currently use it to store a unique game. New version with nickname and email address (no validation) just came online. So  start up tor login to vpn, pick a funny username and play :)",1.0
g881qlh,j7x2ef,"just click 'rather not', enter a name and a fake email, works fine",0.0
g887atj,j7x2ef,"Read the other replies, that was added after the comment was made.",1.0
g88fo9m,j7x2ef,ah my bad,1.0
g893tia,j7x2ef,I thought it was going to be hard :(,7.0
g890900,j7x2ef,"This isn't an escape room. It's a recruiting tool trying to pass itself off as a game - why else would it authenticate with LinkedIn?

In reality, it's a handful of coding challenges copy-pasted from Codewars with some ""pretty"" pre-rendered graphics and powerpoint-presentation-grade animations slapped in-between them.

You're better off just going to Codewars. Who's upvoting this?",13.0
g87eoap,j7x2ef,"Hi Everyone,

Check out this game: \[code\]capi Code Out! It's an escape-room like coding game written in JavaScript.

You must complete the JavaScript challenges to make your way out. Beware: it's harder than you might think!

You can play the game at: [http://codeout.codecapi.com](http://codeout.codecapi.com/)

Let me know what you think in the comment and if you made it to the end :)",5.0
g8b7yuz,j7x2ef,"The graphics are nice but I'm disappointed, I was actually expecting an escape-room whereas it's just very classic puzzles (and easy).

But I really liked the graphics!",2.0
g88g1ru,j7x2ef,Can you remove forced authentication? :(,3.0
g88krc2,j7x2ef,"We did, you can fill out a chosen nickname and a fake email address if you want to and still play the game.",1.0
g88mfxs,j7x2ef,Thank you..,1.0
g893ygp,j7x2ef,"This is also way too easy - I mean those questions took me way less than 30 minutes.

During a real interviewe this is something else, but just to pass and not to manage performance it's too easy.

Also it would be great to know how many challenges there are.",4.0
g8kr5pa,j7x2ef,"Good suggestion, will add it soon.",1.0
g8aeoeo,j7x2ef,"Jeez, two of these took me much longer than they should've because of typos -.-",1.0
g885bqt,j7x2ef,"It not mobile responsive :(
But good job",1.0
g88af7c,j7x2ef,"I know, we are a small company and this is meant as a fun project for one of our tech nights. The decision is also based on the fact it might be too difficult to code on a touch screen.",6.0
g88c25b,j7x2ef,"No worries man, good job :)",1.0
g88keau,j7x2ef,Thanks!,1.0
g8aww5v,j7x2ef,Just a set of few challenges. Not so tricky btw,1.0
g895d9v,j7x2ef,"Completed in 10:22.  I was expecting to have to rush a lot harder than I suppose was planned?

What do I win, other than being called ""master""?",-2.0
g8kr7cy,j7x2ef,We are working on a hall of fame but there have been quite some copy-paste solutions so we need to find a way to filter them out.,1.0
g8l3t7i,j7x2ef,"I was more joking about how simple it was.  I wouldn't try for a hall of fame unless you're able to make procedurally generated challenges, because yeah, the copy-pasta.",2.0
g877vm3,j7v1nv,"Might be that there is a reason he asked you to review and not the reddit community ...

About the framework: It seems to be  ""glue code"" that brings the basic stuff together. Haven't deeply checked the documentation, but ""interactions"" on the page (like for example a date picker) and the resulting handling of state and in the end, the redraw (to reflect the current state) seems not to be supported. 

Of course, you can nicely use this framework to build upon and add bit by bit to fit your dev needs ... but most devs don't want to (and actually can't) reinvent the wheel, so they choose what's on the market ... mostly without second thoughts, because you know, companies want React Devs ... so to learn or not to learn react is not an option.",5.0
g87a25t,j7v1nv,"&gt; Might be that there is a reason he asked you to review and not the reddit community ...

thanks for input!  Much appreciated!

yeh I still don't really understand why he would go about writing this stuff himself, when there's so many frameworks that you can actually put on your CV, and people want to put on their CV.",1.0
g87b6y6,j7v1nv,"Writing your own framework is fun and it teaches you a lot of stuff that modern frameworks just ""abstract away"". I totally see why he did it and you can clearly see that a lot of things crossed his mind and he implemented a lot of basic dev work into ""one framework"". The framework might be a 100% fit for smaller projects, but I think the missing ""virtual Dom"" (base for most of SPA framework) is currently the dealbreaker for most devs. Its probably very easy to integrate VDOM library (like [http://mithril.js.org/](http://mithril.js.org/)) to ""patch"" the framework for your needs.

Also, modern frameworks make major mistakes even if they are written by a billion dollar company (I'm looking at you Angular 1).",3.0
g87c21q,j7v1nv,"I understand, thanks again.

I looked around for DOM mentions and I see that he has a ""a frontend DOM manipulation library"" there, but it doesn't do what you ask for? 

[https://github.com/eldoy/haka](https://github.com/eldoy/haka)",1.0
g87dmtc,j7v1nv,"Well, HAKA seems to be a basic DOM manipulation (setting el.innerHTML = $HTML). Doing it this way results in constant ""flash of white"". A VDOM  library tries to avoid these by first diffing old html with new html and then just updating the html parts where needed.

Those ""Flash of white"" (its the time the browser rerenders the html) are almost not noticeable for small html elements, but just take a table with 50 entries and you surely will notice the ""flash"" (like 100ms).

Also, as a VDOM library consequence of diffing the html, state like ""checkbox is checked (or not)"" is kept intact.",2.0
g872kak,j7um06,"	
alexliu518 6 days ago [‚Äì]

Some time ago, we released Luckysheet, now we release a new open source excel import and export plugin-Luckyexcel.
Excel import online demo: https://mengshukeji.github.io/LuckyexcelDemo/

The first version already supports the import of the xlsx format, the export feature is under development, and more formats will be supported in the future.

Luckysheet optimizes the original functions like built-in formulas, conditional formatting and chart.In addition, we have added enhancements such as insert picture, data validation and cell segmentation style.

Luckysheet online demo: https://mengshukeji.github.io/LuckysheetDemo/

For more detailed plans, please visit the Luckysheet project homepage.

Luckysheet: https://github.com/mengshukeji/Luckysheet/

Luckyexcel: https://github.com/mengshukeji/Luckyexcel/

Important: Our fundraising event has been opened,come support us: https://www.kickstarter.com/projects/luckysheet/luckysheet",3.0
g874ssm,j7um06,"very cool.
what is the max number of rows / columns supported?",1.0
g876b86,j7um06,Not sure if this is a joke at UK Track or Trace or serious questions,8.0
g89dmf0,j7um06,Some things can be 2 things,2.0
g8a05ox,j7um06,"Or only 65,000 if XLS format instead of a few million for XLSX.",1.0
g8akdzx,j7um06,Cool!,1.0
g87iuld,j7tmtt,So.. Basically a parcel boilerplate like the many other?,16.0
g87khal,j7tmtt,"That's right, a simple yet powerful boilerplate to get you started with all the tools you need. I'm working on the CLI version to provide more customization and framework integration (React and Vue). Please stay tuned and feel free to contribute if you find it interesting üôå",-8.0
g88gk6g,j7tmtt,Why no mention of the underlying tech stack? This feels like a bait 'n switch for inexperienced developers to learn your preferred tech stack. That stuff needs to be front and center for a project like this.,5.0
g88i8zt,j7tmtt,"Please read the README the entire tech stack is outlined in detail there, it's quite clear!

If you believe this could be improved, feel free to contribute üòä",-2.0
g897tqe,j7tmtt,"Except it should be in the very first paragraph, so people can walk away as soon as they see the stack isn't for them instead of reading an entire readme.",6.0
g8ak4ex,j7tmtt,I added a clear warning ‚ö†Ô∏è as comment now. I hope that's clearer for you üòÖ,1.0
g87gwhn,j7tmtt,"I was hoping it was going to be something that could sit in your path, letting you just specify a folder and framework and have it auto deploy the default starter app. Instead it appears to be a JAMstack ad for Surge.",3.0
g87iuws,j7tmtt,"Fast is simply a framework-less boilerplate to get you started. That's all! For many developers, this is all we need to get a project off the ground. No complex configurations, get great browser support, code minifying, javascript parsing, and surge as a free deployment pipeline.


I'm also currently working on a CLI version which will allow you to choose Vue or React as a preconfigured framework. If you have any other suggestions fee free to contribute üòä",-7.0
g88h0kq,j7tmtt,"You can literally just tell Vercel to fetch a repo of yours and every single time you push to a branch a preview deploy is made... Full SPA, SSR, lambdas, you name it.",1.0
g88is3b,j7tmtt,"Alert(""im gona check it out!"")",-3.0
g89853e,j7tmtt,"Alert(""cringe "")",2.0
g8au8g4,j7tmtt,"if(you==so mature) {

why be an a\*\*hole to somone hwo did nothing wrong

}",-1.0
g8b9fzx,j7tmtt,I'm sure that this won't work even in JavaScript.,2.0
g8bk1km,j7tmtt,"Yeah i know that, It's just my way of making a point.",0.0
g8daf2d,j7tmtt,"I take that you are an enthusiastic youngster. People experienced in code don't usually use pseudocode to make jokes, hence the cringe. Either way, good luck and...

```
while(true){
code()
}
```
(Cringe)",2.0
g8g7qk0,j7tmtt,"okay fine you want code that works? here you go:

document.bgColor=lime

document.title=""why are you being an a\*\*hole?""

if(you=so mature) {

answer=prompt(""Why are you being an a\*\*hole to somone hwo did

nothing wrong"")

&amp;#x200B;

if(answer==""i want to get internet points while also making somone

else feel bad"") {

document.write(""what is wrong with you?"")

}

if(answer=""i don't like their joke"") {

document.write(""then why not just downvote their joke?"")

}

else{

document.write(""idk"")

}

}

else{

alert(""just go oway"") 

}",1.0
g8g98ki,j7tmtt,"Also:

your defenition of cringe is doing something that experienced pepole   don't usually do? that is not what cringe means. cringe is:

an old/bad joke that is executed realy porly.

Also using the word ""youngster"" has long been considerd cringe 

\-much love, the "" enthusiastic youngster """,2.0
g8ajj3e,j7tmtt,"To those who don't like reading documentation.

‚ö†Ô∏è THIS IS A BOILERPLATE FOR BEGINNERS AND INTERMEDIATE DEVELOPERS WHO WOULD LIKE TO GET STARTED WITH A FRONTEND PROJECT FAST. THE THECH STACK IS PARCEL, SURGE, POSTCSS, SCSS, and BABEL.

See tech stack in detail https://github.com/reblim/fast#-core-technologies",0.0
g86d6jg,j7qa8s,"I certainly agree on not enjoying testing with Selenium!

I could be mistaken, but there seems to be a fair bit of overlap with your testing. In my experience, I would recommend to use both Jest and Cypress as they serve very different purposes in the grand scheme of things.

While snapshot testing can be useful, the bread and butter of jest is going to be for unit testing. The vast majority of your testing should consist of unit tests where you are purely testing what's returned from your functions in isolation. Snapshots can be a layer if you want to check certain component functionality in isolation. You can also layer integration tests to check how your application handles certain endpoints.  

When you are planning your e2e tests, it should be with the mindset of testing your application as a whole. You may be working with internal or external services that you want to see how the app responds to it from the users perspective. At the point of e2e tests, you shouldn't need to be quite so granular as much of that core logic has been tested with your unit tests. Personally, I like to structure my tests by page and plot out functionality that is expected from that page. Then use your tests to enact it and assert along the way (yay Cypress!).

I recommend deep diving into topics such as The Testing Pyramid. I think it will help clarify some things and help you structure how you plan to test. There were a few good articles that I've found that outlined it really well so I'll try and dog those up and get them your way.

I hope this was helpful as I too am too tired to be talking code lol. I'm happy to continue chatting and collaborate with ang questions",10.0
g86yg2d,j7qa8s,"I have been using cypress for e2e tests mostly, but recently I also did some API tests to have 1 common solution for testing the application and it worked pretty well (especially for other testers who wanted to collaborate), however there were some features missing that I would appreciate and had not problem if I used e.g. supertest.([https://www.npmjs.com/package/supertest](https://www.npmjs.com/package/supertest))

So it is up to you, it is possible to do lots of things in cypress, but it is not always the most efficient solution.",2.0
g87bk5v,j7qa8s,"This is pretty much exactly what I wanted to do with Cypress.

The mocked out ""Integration"" style tests can also be thought of sociable unit tests, or unit testing a component with real collaborators.

Have had success with this strategy in the past (angular/karma), I'm interested to hear how it turns out for you!",1.0
g855ifo,j7j9ky,"Honestly, I tried both Immutable.js and seamless-immutable, but I *could not get into immutability with either*.  It was like ""the cure is worse than the illness!""  I'll take my super-rare ""I accidentally mutated an object"" bugs over having to use either of those libraries constantly throughout my codebase.

Then I discovered [Immer](https://github.com/immerjs/immer), and it was like a lightbulb went on: I didn't have to make myself miserable to get the benefits of immutability!  It actually could be *easy*.

So while I'm  always sad when any OSS project people like dies ... I'm not exactly weeping over the loss of (what I consider to be) one of the crappier options in the field.

(And quite frankly I don't even use Immer all the time either. In my non-Redux projects, I very often just avoid mutating my objects, and somehow life goes on.)",41.0
g85dzw0,j7j9ky,"Same story for me. Just write side-effects-free code and it'll be ok. Immer is irreplaceable but only in very specific context.

What's interesting for me. Authors of such libs are educated and talented devs, and they **know** all of this stuff; however they created and successfully market(ed) their libs. Nothing personal, just building their own brand on buzzwords and hype. No matter it pollutes others codebases.",8.0
g86lmnv,j7j9ky,"I switched out Immutable for Immer in one of our major products at work, and although it was quite a bit of work to switch, everyone's so much happier now not dealing with Immutable, plus our reducer code is so much cleaner and readable now.",6.0
g86z5zs,j7j9ky,Same here.,1.0
g8630fm,j7j9ky,"Immer changes things. For the work I‚Äôm doing, it‚Äôs invaluable.

The patch based approach and being able to undo it is perfect.",2.0
g85mmpy,j7j9ky,You may find this [tc39 proposal](https://github.com/tc39/proposal-record-tuple) interesting. Their proposal would bring immutable data structures to JS.,11.0
g86scn3,j7j9ky,Here's a closely related one for [deep path properties](https://github.com/tc39/proposal-deep-path-properties-for-record).,3.0
g8841dw,j7j9ky,"It's actually possible to achieve that already with ramda

    const state1 = #{
        counters: #[
            #{ name: ""Counter 1"", value: 1 },
            #{ name: ""Counter 2"", value: 0 },
            #{ name: ""Counter 3"", value: 123 },
        ],
        metadata: #{
            lastUpdate: 1584382969000,
        },
    };
    
    const state2 = #{
        ...state1,
        counters[0].value: 2,
        counters[1].value: 1,
        metadata.lastUpdate: 1584383011300,
    };

Is equivalent to

    const R = require(""ramda"");
    
    const state1 = {
      counters: [
        { name: ""Counter 1"", value: 1 },
        { name: ""Counter 2"", value: 0 },
        { name: ""Counter 3"", value: 123 },
      ],
      metadata: {
        lastUpdate: 1584382969000,
      },
    };
    
    const state2 = R.pipe(
      R.assocPath([""counters"", 0, ""value""], 2),
      R.assocPath([""counters"", 1, ""value""], 1),
      R.assocPath([""metadata"", ""lastUpdate""], 1584383011300),
    )(state1);",1.0
g87n11t,j7j9ky,"I wonder if it wasn't simpler to add a `deep: true` parameter to the `Object.freeze` method, but I i like this proposal",1.0
g882e0y,j7j9ky,"Records and tuples also have deep equality whereas objects and arrays use reference equality

    const a = { foo: ""bar"" }
    a !== { foo: ""bar"" }
    
    const b = #{ foo: ""bar"" }
    b === #{ foo: ""bar"" }",1.0
g89d0xd,j7j9ky,"Hm, true, i skimmed over that part apparently. That does sound nice.",1.0
g85ddiq,j7j9ky,"We can react with partying and fireworks, because Immutable.js was an absolute dumpster fire of a library and it dying out of nowhere is the best possible outcome for the project and society as a whole.",17.0
g85dkey,j7j9ky,"For Redux, [we specifically recommend](https://redux.js.org/style-guide/style-guide):

- [**DO** use Immer](https://redux.js.org/style-guide/style-guide#use-immer-for-writing-immutable-updates) (and do so as part of [our official Redux Toolkit package](https://redux.js.org/style-guide/style-guide#use-redux-toolkit-for-writing-redux-logic))
- [**DON'T** use Immutable.js](https://redux.js.org/style-guide/style-guide#use-plain-javascript-objects-for-state)",13.0
g85eb2p,j7j9ky,What's [https://redux.js.org/recipes/using-immutablejs-with-redux](https://redux.js.org/recipes/using-immutablejs-with-redux) ? Is it something obsolete?,4.0
g85eohr,j7j9ky,"Good question!

That page was contributed by a user who was very passionate about using Immutable.js with Redux.  The information in there is still conceptually valid.  However, it's not something that we specifically recommend any more.

I will likely remove that page in the near future as part of our ongoing docs rewrite.  However, I also want to add a couple pages talking more about immutability overall.  I will likely link the last version of the Markdown file from that page when I do so.  So, it will no longer be a published docs page, but the file will still be in the repo's history if someone wants to read it there.",7.0
g85hoez,j7j9ky,"Oh, that makes sense! When I found it I was quite surprised ‚Äî it looked odd and extraneous. And funny ‚Äî this page is the reason I wrote ‚Äúbuiltins and **most of** *\[not all\]* libs work with native structures‚Äù üòÑ",2.0
g87nwai,j7j9ky,"When I first joined Netflix there was an engineer using Immutable.js and I remember it was draining them every day. The project took longer to complete and I'm still not sure there was any clear benefits from a UI application standpoint. Maybe there are clear benefits for a 3rd party shared library or a robust tool, but for what most engineers would try and use it for, I would cast doubt on if it provides any wins what-so-ever.",6.0
g88giab,j7j9ky,"I doubt there may be benefits for 3rd party lib. Good lib is one without deps, especially such opinionated üôÇ",2.0
g8e50m8,j7j9ky,"&gt; there was an engineer using Immutable.js and I remember it was draining them every day.

I never used it myself, but that was what I saw as well at a similar post.

&gt; The project took longer to complete and I'm still not sure there was any clear benefits from a UI application standpoint

Too true.

Personally, I actively avoided Immutable.js because anything that ""[boxes](https://en.wikipedia.org/wiki/Object_type_(object-oriented_programming)#Boxing)"" primitives smells of type confusion, indirection and general programming hell to me.",1.0
g8hsvzs,j7j9ky,"It‚Äôs much better in a statically typed language, but it‚Äôs still a pain to box/unbox types.",1.0
g85lrtf,j7hgvq,"This awsome montly updates make 2020 a little bit better, well at least for my web developer working hours!",13.0
g869jlm,j7hgvq,Being able to see whether or not you‚Äôve saved a pinned tab is fantastic,8.0
g873pkj,j7hgvq,"Potentially Stupid question: why does a javascript app need a build for Arm? 
Did Microsoft also start maintaining Electron or did they do away with that and build their own version using their new chromium based edge or something?",3.0
g8743ii,j7hgvq,"Electron is maintained by Github who Microsoft now own. So technically, yes.

There's plenty of reasons, one of which means it will now run natively on a Raspberry pi, Chromebook or one of the shitty Windows ARM laptops (Windows/Surface RT).",3.0
g87fu31,j7hgvq,"Not to mention the new Macs. Tons of front end devs will be using those, so it is probably a prioritized market",9.0
g878jjk,j7hgvq,Wait... Is VS Code an Electron app!?,3.0
g87ejys,j7hgvq,Always has been.,10.0
g879vyg,j7hgvq,Yep,5.0
g879x5d,j7hgvq,[Yes it is](https://github.com/microsoft/vscode/blob/d2ebe3b85db5f7bd2bfb8fc5c03d001c0a05ef42/package.json#L114),3.0
g884t4e,j7hgvq,"Yes it is, but there are also native modules that are independent of Electron and they also have to support ARM.",2.0
g87mmpm,j7hgvq,PinePhone? :D,0.0
g88lqrv,j7hgvq,it is very good,1.0
g847qbk,j7cjb2,"JavaScript functions are objects with a little backpack of context attached to them with access to memory external and additional to the parameters passed in. 

You can measure the Non-Functional Complexity of a function by counting the number of statements in a function that are coupled to some dependency, or variable, that is not a parameter. A purely functional function with a NFC of 0 has zero references to the ""backpack"" of context that goes with a JavaScript function. Benefits of a purely functional function is that it can be ported, moved, or refactored without changing its meaning, and is much more predictable to test without setting up external state.",2.0
g8hw2nf,j7cjb2,I like the back pack reference. Function closure would be a fanny pack,1.0
g840b6t,j7cgwu,"Bravo to the ESLint org for surfacing this kind of information!

Whenever money is involved, a lot of people's tendency is to keep everything quiet. I would imagine that this sort of ""retrospective"" is tremendously valuable though ... at least to other (big) projects with enough funding to do this.",69.0
g846cyg,j7cgwu,"10/10 for transparency.

I don't contribute to open source projects because of time constraints(family/work/hobbies etc), but the prospect of making a living out of contributing is a really powerful ideea.

Imagine if we could get paid doing what we find interesting, or what could actually help people instead of what the client/company needs.",55.0
g84nup0,j7cgwu,"Where I work, we get to do ‚Äùwhatever we want‚Äù (within reason) on friday afternoons. I quite often use that time to contribute to open source. Otherwise I wouldn‚Äôt have the time to do it either, due to the same reasons you stated.

Maybe that‚Äôs a suggestion you could bring up on your next retrospective?",22.0
g84pxw1,j7cgwu,"Thats a great ideea tbh.  It makes sense for companies, coz their engineers might end up less burnt out and with a more rounded skill set for the cost of like 10% worth of time in a week. I really hope it catches on.",6.0
g852zxe,j7cgwu,Friday You from Big Blue?,3.0
g853c5i,j7cgwu,"Sorry, that‚Äôs a reference that went over my head. (I‚Äôm not American)",1.0
g8549sa,j7cgwu,"It's an international company but if you didn't get it, then it doesn't apply! ;) No worries.",2.0
g85xoo0,j7cgwu,That was my first thought too.,1.0
g84h791,j7cgwu,WHOA,1.0
g83z8fj,j7cgwu,"Super interesting, I'm glad people are experimenting with the ways that open source contribution can be financially compensated.",27.0
g84rh5b,j7cgwu,20 hours per week for $5000 per month? Wow,20.0
g84urjb,j7cgwu,You have to remember that these are people who could probably get senior dev positions at FAANG.,26.0
g85b8fq,j7cgwu,"Probably, yeah. It's just that if you extrapolate that to 40 hours, it becomes CEO-level salary where I live, and they say it's not enough. It's crazy to me how much money you make over there, that's all.",10.0
g85ki3k,j7cgwu,Where do you live? That works out to about a lead developer salary here in LA.,5.0
g85l7nl,j7cgwu,"Central europe, but afaik it's an impressive salary for the entire continent",6.0
g85ntbo,j7cgwu,"As far as I have heard, the cost of living in the US makes up for the high salaries. Also, it's not healthy for a country to have such varying levels of pay. Here in Norway, a CEO might be paid around twice of a normal ""on-deck"" employee (I have no numbers to back this claim up, but they are not hilariously rich like in the US), and a normal employee is paid pretty decently compared to the cost of living.

Edit: I'm talking about small and medium businesses. When we start talking big chains, yes, they are ridiculously rich.",5.0
g85qjof,j7cgwu,"It also depends on the classification. If they‚Äôre part time then I‚Äôm assuming there‚Äôs a good chance they‚Äôre classified as 1090, which means every employee needs to pay:

-	the employer portion for social security and Medicare
-	health insurance
-	miscellaneous benefits (eg dental, 401k)
-	work expenses otherwise not itemized/able

which can cut their rate by about 30%-60%. In theory, in return you get flexibility but in reality it‚Äôs often used to underpay and underemploy people.",4.0
g85w5ci,j7cgwu,Ugh. Sounds troublesome. :(,1.0
g861z32,j7cgwu,"&gt; As far as I have heard, the cost of living in the US makes up for the high salaries.

This is the excuse people will give to explain lower pay. Its not true in most cases. I was doing a cost analysis of moving (between US cities and as a joke, between countries), devs in the US/Canada take home a lot more income than anywhere else.",0.0
g85z484,j7cgwu,This is intern salary at big tech. Senior developers easily make 400k in cash/bonus/stocks at places like Google or Facebook.,4.0
g867gb0,j7cgwu,Haha yeah pretty extraordinary when you think about it. I just wanted to pick something middle ground since there are a lot more developers making 130k than 400k.,1.0
g85o63w,j7cgwu,"By US software developer standards, that isn't a particularly high salary, particularly for a part-time position where (as the write-up mentions) it can be inefficient because it's hard to earn a good rate for the rest of your available work time.

In much of the rest of the world, that would be a good salary even for a senior developer, or at least its full-time equivalent would be.",9.0
g86oux6,j7cgwu,"Wait, I thought they said it was capped at $1,000/month? Only the top 5 TSC members (original ESLint contributors) are allowed to go above that $1k and they have to intentionally invoice it.

Granted, $1k/month is still pretty fantastic considering open-source is usually done for free.",3.0
g875d24,j7cgwu,"Yes, for general contributions. But 1 person was employed part time as an experiment, so they had to give him a decent salary for his work.",1.0
g86ayow,j7cgwu,"Upgrade that to $10,000/month at 40 hours/week and it‚Äôs $120,000/year. Not that crazy.",2.0
g86iwk8,j7cgwu,... in NYC.,1.0
g849fst,j7cgwu,"Very happy to see them publicly experimenting in this area. One thing I'd like to see, though, is if they'd redistribute some of those funds to the important projects they build on, to secure funding for less visible projects as well.",8.0
g84znrr,j7cgwu,"This is very nice to see and hear, now I am even happier for suggesting Eslint as tool of choice to my colleagues",2.0
g846882,j7b3kq,Microsoft going hard,2.0
g83j2kr,j7b3kq,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",-8.0
g83ja7w,j7b3kq,"This is a GitHub feature, not an open source project.",6.0
g83x8r5,j78383,You also need to read up on AWS App Sync and AWS SAM which are the newer ways of building apps on AWS. Unfortunately AWS has 10 different ways of achieving the same end goals. Very much the Swiss army knife of infrastructure as code.,2.0
g82q0cl,j75pjl,Was just wondering how to count the LOC in my project i wrote and thought I'd share,1.0
g82v86z,j75pjl,Maybe give this a try: [https://github.com/AlDanial/cloc](https://github.com/AlDanial/cloc),1.0
g82vetr,j75pjl,Came across this but I personally didn‚Äôt want to have to install anything,1.0
g832fvd,j75bui,"Interests:

- Alcohol 
- Cubes
- Siberian Huskies

...you're fucking hired.",61.0
g832xi5,j75bui,"baha that is funny 

Who even put Alcohol in their resume, teaching the computer bad habits...",12.0
g83vvu7,j75bui,Ballmer peak won't reach itself,4.0
g83bzrg,j75bui,I'd guess they might be a brewer? Making alcohol rather than drinking it.,3.0
g83nbhl,j75bui,"The internet has had a lot of practice corrupting AIs

https://www.theverge.com/2016/3/24/11297050/tay-microsoft-chatbot-racist",3.0
g835xkk,j75bui,"Interests

* Sports
* Trail Running
* Penetration Testing 

Cracked me up lol.",19.0
g836p8a,j75bui,At least they‚Äôre honest about it.,4.0
g82oasu,j75bui,I've also wrote a small tutorial that contains some example scripts and models for beginners to play with text based ML -&gt; [https://github.com/jsonresume/jsonresume-fake](https://github.com/jsonresume/jsonresume-fake) (I made it as simple as possible),12.0
g857ro3,j75bui,"It says ""And Engineer"" after your name. Is it supposed to say ""An Engineer""? 

[Screen shot link](https://i.imgur.com/C7Z97rA.png)

Edit: I just realized I took a screenshot of one of the fake resumes lol",3.0
g8580u2,j75bui,"lol yeah the models are dumb, keeps putting ""And"" in the persons title.",1.0
g83w1yc,j75bui,"That's nifty, I just wrote a fake hiring manager generator that wants to interview you!",6.0
g845otx,j75bui,I have some fake monopoly money to employ you both,5.0
g83300w,j75bui,May I ask what inspired you to make this?,4.0
g8339kb,j75bui,"I've been wanting to learn machine learning for years and could never think of anything to do. But I live in Melbourne, Australia and we have been in lockdown for 7 months so looking for anything to entertain myself at this point.

The inspiration was this -&gt; [https://www.thispersondoesnotexist.com/](https://www.thispersondoesnotexist.com/) (ML generated faces that don't exist)

Because I work on JSON Resume, I realized I could do something similar with resumes.

I was intimidated by the ML scene and found it quite hard to get started with. But once I got things working I realized how easy it was to do some simple things. So I've been trying to make some beginner learning materials too.

I also wrote a tutorial for people to learn basic computer vision -&gt; [https://github.com/australia/aboriginal-flag-cv-model](https://github.com/australia/aboriginal-flag-cv-model)",7.0
g83605j,j75bui,"If I wasn't also applying for jobs, I'd build something to find jobs and submit the resumes.",2.0
g839frd,j75bui,"aha yeah I am training the models a bit more so the resumes are more convincing then will see if I get a recruiter to take the bait on a fake resume,",1.0
g83e8lv,j75bui,The domain should be thisresumedoesnotexist.com :D,4.0
g83ef8k,j75bui,You should send random CVs to random job offers and see if you get hired anywhere,3.0
g83i8fo,j75bui,Submitting resume is just the beginning. There are multiple round of interviews. So hiring just from a resume is not likely possible. But this resume builder concept is great.,3.0
g83jdxr,j75bui,"Just have to attend the interview for a laugh, will be remote anyway. Good way to practice interview skills.",3.0
g83s6j8,j75bui,Fortune favours the bold!,4.0
g845z66,j75bui,"Especially when you don't know something from your fake resume and have to study it

Like: ""Ok, it says I have 3 years or expirience with Go.. Well, let's read some getting started guides!""",3.0
g836i27,j75bui,This is incredible,2.0
g82kc40,j739ae,breaking change for the web,44.0
g82plid,j739ae,Is this a web standard or a Google thing,13.0
g82uvp8,j739ae,https://wicg.github.io/file-system-access/,10.0
g847p6f,j739ae,I  read that as WCGW,3.0
g855112,j739ae,WCGW if Google had the monopoly on web browsers,4.0
g8avvuj,j739ae,They also have the majority on Mobile OS,1.0
g82q0po,j739ae,Google right now,13.0
g83hung,j739ae,Ask the Safari team,7.0
g83dzq3,j739ae,Same thing.,10.0
g89bt67,j739ae,It's just a Chrome API for now,1.0
g835dgs,j739ae,"With blink as the only implementation remaining going forward, google will be the standard. We should get used to it (or fight against it).",0.0
g85zqvg,j739ae,Chromium at least is open source...,1.0
g832ufi,j739ae,"Unpopular opinion : it looks great, and unlocks a lot of potential for web apps. If secured correctly, I believe it could be a huge improvement for the web.",26.0
g86ko5z,j739ae,"Yep! Already have a great use-case. For example one of our webapps allows you to download a list of files.

Right now we either need to make this a zip (which is ugly), spam the downloads folder (screw that, unless the user wants it), and that's it.

I'd love to be able to offer the user a button where they can select a folder for the files to go to.",2.0
g83k84k,j739ae,"My first though is Web development with IFrames. Direct editing of HTML files from within Chrome? Yes, please.",-1.0
g83h1wn,j739ae,"&gt; If secured correctly, I believe it could be a huge improvement for the web.

First off, your opening premise is effectively ridiculous. The Web is not and has never been, secured correctly and that's very unlikely to change.

Second, how exactly will this be an improvement? We can already access files, that the user wants us to access, we can already save files, that the user wants us to access, we can already cache assets and we have access to local storage.

What use case do you imagine is impossible now?",-21.0
g83hl9z,j739ae,"First of all, you shouldn't be agressive in you answers, it discredits your point of view. Just chill dude, we're on a Javascript subreddit, not on the edge of World War III. 

Secondly I don't see how a secure web is a ""ridiculous"" premise. That's where you're inputting your credit card number, medical files and a lot of other personal stuff. No, the entire web isn't secured, but used properly, it's safe.

&gt; We can already save files

In a lot of web applications, you need to access specific files, or a specific directory, to perform complex operations. Just saving a file isn't enough. For example, if you want to a `drawio` diagram to be saved locally, and updated in real time, it's impossible. You either have to save it on Google Drive, or save it manually every X minute. Which is far from what a real software can do.

In the end, it's all about empowering web apps. And yes, it can be secured.",24.0
g83ls2q,j739ae,"&gt; That's where you're inputting your credit card number, medical files and a lot of other personal stuff. No, the entire web isn't secured, but used properly, it's safe.

Those things are breached, over and over and over again, because the Web is fundamentally insecure. That's why we sandbox it so much, which this breaches.

The only way to secure this is to make the process so onerous it becomes useless. 

&gt; In a lot of web applications, you need to access specific files, or a specific directory, to perform complex operations.

No, you don't. You want to, but you don't need to.

&gt; For example, if you want to a `drawio` diagram to be saved locally, and updated in real time, it's impossible. You either have to save it on Google Drive, or save it manually every X minute.

Why would I want that? I need my drawing to persist, but I don't need it persisted as a file. If I'm worried about security of my data I want the whole thing on my machine, not some of it. 

Because you see, the Web and my machine are two different things and they should be. 

&gt; Which is far from what a real software can do.

Yes, because real software can't have arbitrary executable code inserted by literally anyone and then have it executed. 


Real software can't be modified on the fly by my ISP, or anyone else who feels like it. 

&gt; In the end, it's all about empowering web apps. And yes, it can be secured.

Web apps have more than enough power, I know I write them, that's why I'm in this sub. 

And no, it can't. It will either need to ask so often users stop paying attention or it'll have access it shouldn't have.",-8.0
g83my51,j739ae,"&gt; You want to, but you don't need to

Yeah, and I want to take my doctor's appointment online, but I don't *need* to. 

And I want to watch YouTube video to get entertained, but I don't *need* to. Why even allowing videos at all, since I don't *need* them?

This argument is what my boomer mom would told me.

&gt; Why would I want [an auto-saving diagram, accessible both online and on my machine]?

Because it's convenient?.. Not every `drawio` diagram is a sensitive piece of information, and having data both locally &amp; online doesn't make them ""insecure""?

Your arguments forget one essential thing: in the end, the web is just a tool for people to use. A tool improves over time, even though it needs to stay safe for its users. Here, it *is* safe (I still don't see where the security problem you're talking about lies), and has some very valid use cases. Stop being of bad-faith please.",5.0
g840pnv,j739ae,"&gt; eah, and I want to take my doctor's appointment online, but I don't *need* to. 
&gt; 
&gt; And I want to watch YouTube video to get entertained, but I don't *need* to. Why even allowing videos at all, since I don't *need* them?
&gt; 
&gt; This argument is what my boomer mom would told me.

No **you** as a developer want to, users don't give a fuck, they only care about the features you deliver.

Your desires as a developer are irrelevant, you're not important.

&gt; Because it's convenient?.. Not every `drawio` diagram is a sensitive piece of information, and having data both locally &amp; online doesn't make them ""insecure""?

How is it convenient?

It's convenient that when I go to the website my drawing is there, but beyond that why do I care?

I want to store a document on my desktop for specific reasons.

1. Because I want to access it off line, which isn't helpful unless there's an off-line client in which case I can just use the off-line client.

1. Because I want a separate copy of the data in case the app eats it, which doesn't work if it's the working copy the app is using.

1. Because my data is confidential and I don't want to share it with a random service.

That's about it.

I don't want the copy the website is working on on my hard drive because that's pointless. It's not a backup, it's not there whenever I need it and it's not secure. It's just all the worst things of a Web app with none of the best things.

&gt; having data both locally &amp; online doesn't make them ""insecure""?

If I have confidential data, that I don't want to put on some random server, I don't want to put it on some random server.

&gt; Your arguments forget one essential thing: in the end, the web is just a tool for people to use. A tool improves over time, even though it needs to stay safe for its users.

The Web is a platform, it's good at some things and bad at others.

One of its fundamental problems is that it's effectively impossible to verify that the code you're running is the code that you're supposed to be running. Various methods of signing have been tried, but they've never been practical.

While you're mixing code from multiple sources, you have multiple points of risk, it's just the nature of the Web.

That's why we have sandboxes around Web code, because it's fundamentally insecure.

A file Api like this breaks the sandbox.

You can put a bunch of user interaction around it, but then you're in a situation from a security point of view where users have to make informed decisions about securing their devices every time they use a site that does this.

Most people don't have enough depth of understanding, and certainly not the mental bandwidth to make those choices over and over again so they'll either say no to everything or more likely say yes to everything.

Much like the situation with mobile permissions today. You just can't ask people to handle their own security in a system they don't really understand. 

Then as a developer you're looking at a system with a million edge cases. How do I proceed if they refuse the permission, what happens if they pick the wrong location, what if they need to change it back. What if I need to restructure or reconfigure.

So you've got a bad security situation for users that ends with a bad developer experience.

A Web app isn't a thick client and it doesn't have to be.",0.0
g83hj4j,j739ae,"Sure, we can already access files - but we can‚Äôt access directories, this allows that.

And we can‚Äôt ‚Äúsave‚Äù files, we can download files - we can‚Äôt modify or update files.

Native apps have been able to do both forever.

I could see this being great for a browser based IDE or other editor. (assuming it‚Äôs secured correctly)",9.0
g83me7n,j739ae,"&gt; Native apps have been able to do both forever.

Native apps can do this because they are fixed blobs of code executed in a secure context when the user deliberately chooses to execute them.

They're not executing on load from a page  that's running JS from a hundred different sources any one of which could be compromised and modified.

The Web is only remotely secure because we don't let it touch things and even then we have huge problems.

This breaches the sandbox.",3.0
g83nhox,j739ae,"That‚Äôs being really optimistic about native apps.

I guess there could be a case of rouge JS on a website popping up a dialog asking for a user to allow access to a dangerous directory (one with private info etc), but that‚Äôs not that much more dangerous than showing a single file dialog and asking for a dangerous file.

The user would also be asked to confirm any writes to files within that folder so they‚Äôd been to be convinced of that as well.

There‚Äôs definitely a phishing risk (a website asks you to find the directory where your card details are stored etc), but it‚Äôs not incomparable to things which have existed for years

Maybe they should require Subresource Integrity on the JS loads which use this feature.",1.0
g841f5b,j739ae,"You're missing the point.

When I ask a user to upload a file, they have to understand what that file is and know where they put it. They have no choice but to make an informed decision, and if the functionality doesn't make sense they stop and you don't have to do anything, no one expects the app to work at that point.

When I request access to a folder, the user has to understand what that folder is and why I'm asking for it. Based on everything that we've seen so far, users will just say yes because otherwise they don't get to use the website.

Because writing something like this to work if the user says no is really hard, because if you've got a viable alternative, why not use it.

And the security issue isn't just reading personal information, it's writing dangerous information.

This breaks the sandbox and ""users will make the right choices, we'll just ask them over and over again"" is shitty security practice.",0.0
g843b8q,j739ae,"A) the user still has to find the folder they want to share, exactly the same as finding the file, you can‚Äôt request access to the C drive or whatever
B) the browser can block access to certain folders

I‚Äôm not saying it‚Äôs an impossible attack vector where the webpage lies to a user about needing access to folder X, the user shares folder X with the page, then the page reads the contents of folder X and sends it to a 3rd party.

The page could then convince the user to let them write to files within that folder, encrypts them and then demands a ransom.

It‚Äôs entirely possible. The first part is possible with the normal file upload as is, although you‚Äôd need to convince the user to upload a specific file containing personal information rather than a directory you could sort through.

The user is fully informed by the browser throughout, though a well designed malicious page could convince them what it‚Äôs doing is fine.

I don‚Äôt think the risk is big enough to deny the web a useful feature.",2.0
g85k0ov,j739ae,"&gt; A) the user still has to find the folder they want to share, exactly the same as finding the file, you can‚Äôt request access to the C drive or whatever

Which will be useless to a developer in most instances, so it'll be changed to a request, or at least a suggestion. 

&gt; The user is fully informed by the browser throughout, though a well designed malicious page could convince them what it‚Äôs doing is fine.

The user has a popup they probably don't understand.

&gt; I don‚Äôt think the risk is big enough to deny the web a useful feature.

Again, what exactly does this allow you to do that you couldn't do before?

What are you storing in these files that you couldn't store before, and why do you think that tying a Web application to a specific computer, completely negating the whole point of a Web application in the first place, is a good idea?

If you want to build an off-line app using Chrome, welcome to Electron.

If you're building a Web app it's supposed to be portable.",-1.0
g85l5s5,j739ae,"Oh, I didn‚Äôt realise you were arguing against a spec you‚Äôve made up rather than the published one, never mind. I‚Äôm sure the API you‚Äôve imagined is very flawed.


As for this API.
It‚Äôs been said before, this allows for things like an online IDE where you select a folder on your actual machine. It can read and modify files &amp; folders just like any other IDE.
You can, and probably will, disagree that anyone would want that but using current web APIs you‚Äôd need to bulk upload every file, or upload as a zip then manage a fake folder structure in app, then assuming you want a local copy (for git or something) you‚Äôd need to download all the files and manually move them from downloads to replace the initial ones. That‚Äôs what you couldn‚Äôt do before.",2.0
g85sse2,j739ae,"There are two options for this.

Too onerous to use, or too insecure to be safe. 

If I have a website and I want a normal user to use this, I'm going to have to at least suggest a location, or it just won't work. 

The current **implementation** requires direct consent, the **specification** does not. 

And again, you keep missing the point.

This isn't about having data online, it's about having online data off-line.

You keep talking about an online IDE, but an online ide doesn't work that way. IDEs require access far beyond what this API will allow, so the working copy is always going to be on the server.

Periodically syncing that data to your local HD isn't useful because you c as n readily lose data.

In terms of ""git or something"" your online IDE is running a shell anyway and it can push straight to git, which you can then clone locally whenever you want.

We know 100% that when you bombard people with permission dialogues they don't read them. 

This isn't hypothetical.",-1.0
g82rcu1,j739ae,"From a security point of view, is this a good or a bad thing?",14.0
g82vy4e,j739ae,"‚ÄúCalling showDirectoryPicker() will open a directory, allowing you to get a list of files, or create new files in that directory.‚Äù So it seems like nothing can be done without visual user interaction.",31.0
g83hlqz,j739ae,"So basically it's a replacement for a hidden `&lt;input type=""file""&gt;` hack, right?",11.0
g835dnt,j739ae,[deleted],1.0
g8374dw,j739ae,No,5.0
g837wie,j739ae,[deleted],1.0
g8380qd,j739ae,"Yes. A website can‚Äôt just randomly access it or create files without you knowing. 

At least that was your question right? Because it can run the code, there‚Äôs just user interaction required",7.0
g838csy,j739ae,[deleted],-2.0
g83hjfh,j739ae,Did you read the thread you are linking? It is explained very well by one of the guys working on Chrome,3.0
g83k6y5,j739ae,[deleted],0.0
g83mapx,j739ae,"_Brah_

https://twitter.com/swagitda_/status/979477998142476289?lang=en",1.0
g83holx,j739ae,"It's Chrome itself doing it though, not a website.",3.0
g82q4vg,j739ae,"And Mozilla is dying, fuk",22.0
g847gjw,j739ae,"Hell will freeze over before I let go of Firefox. 

Not because Firefox is perfect, but because it's not Chromium-based. I'd even take Classic Edge over anything Google, had MS not killed it off.",9.0
g84bom3,j739ae,"Also if you switch to Firefox Nightly (Firefox beta), they actually made a serious compelling case for anyone to switch to Firefox with the new JIT JS engine they released. Firefox Warp is so fucking fast man.",2.0
g84u5mn,j739ae,Faster than V8?,2.0
g828pd3,j739ae,"Can open and read or write files with just a bit of JS right from the browser.

```
async function getFileHandle() {
¬† const opts = {
¬† ¬† types: [
¬† ¬† ¬† {
¬† ¬† ¬† ¬† description: 'Text Files',
¬† ¬† ¬† ¬† accept: {
¬† ¬† ¬† ¬† ¬† 'text/plain': ['.txt', '.text'],
¬† ¬† ¬† ¬† ¬† 'text/html': ['.html', '.htm']
¬† ¬† ¬† ¬† }
¬† ¬† ¬† }
¬† ¬† ]
¬† };
¬† return await window.showOpenFilePicker(opts);
}

async function saveFile(fileHandle) {
¬† if (!fileHandle) {
¬† ¬† fileHandle = await window.showSaveFilePicker();
¬† }
¬† const writable = await fileHandle.createWritable();
¬† await writable.write(contents);
¬† await writable.close();
}
```",14.0
g82sodg,j739ae,Can you re-open a file that a person opened after page refresh e.g. have a persistent handle to the file?,8.0
g837cao,j739ae,"&gt; permissions currently are not persisted between sessions  

https://web.dev/file-system-access/",12.0
g83gsmv,j739ae,You can keep a reference to the handle in browser storage (indexedDB) but if you try to access it again. It will prompt a user confirmation pop-up,7.0
g83e36o,j739ae,"&gt; return await

That's gonna be yikes from, chief!! Oh wait, it's written by Pete LePage, *le DeVeLoPeR aDvOcAtE* xDDD",-9.0
g82w5bn,j739ae,Narrator: Things were about to take a dark turn.,19.0
g8337g7,j739ae,It begins.,5.0
g8339tt,j739ae,What could possibly go wrong?,16.0
g838rke,j739ae,"Yeah, what exactly? There's a lot of nice use-cases for this.",2.0
g83ibgd,j739ae,"It is a standard but Chrome 86 is the only browser supporting it for now
[https://wicg.github.io/file-system-access/](https://wicg.github.io/file-system-access/)

Can I Use:
[https://caniuse.com/native-filesystem-api](https://caniuse.com/native-filesystem-api)",3.0
g83ol8x,j739ae,"It's in Chromium, so literally everything besides Safari will support it within 4 months.",6.0
g847iqj,j739ae,"And firefox, for now, hopefully never.",1.0
g84g33u,j739ae,Never heard of it.,1.0
g89c0zw,j739ae,"It is just a community draft not approved by W3C, only Chrome supports it, and Mozilla says they're [ignoring it for now](https://mozilla.github.io/standards-positions/#native-file-system). Please stop calling Google APIs ""standards.""",1.0
g83phbq,j739ae,Can't wait till someone figures out how to bypass user access interaction and starts to brick pcs with browser.,7.0
g84m7bk,j739ae,"We've had filepickers since almost the dawn of the web.  There's nothing fundamentally new here from a security standpoint, except the way the existing mechanism is being exposed (through JS instead of HTML).",5.0
g83ubea,j739ae,"Honestly I agree.  This is nice on paper but I foresee a future where malicious actions like this are automated and hidden behind buttons for unsuspecting users.  As with anything tech, it's really only a matter of time until somebody cracks it.

I hope this doesn't catch on with other browsers.  I hate to hate on innovation, but this really wasn't a problem that needed to be solved anyways.",3.0
g83mlp2,j739ae,"Until now, the idea that web apps could replace desktop apps was a complete joke.

Now it's just a regular joke.",4.0
g83qklw,j739ae,"Call me crazy, but I want to replace NodeJS with headless Chrome.

This is bringing that dream one step closer. I'm pretty sure I'm only missing TCP listeners (HTTP server) at this point. Everything else in my deployments are pure JS and standard APIs.",3.0
g82t637,j739ae,"First the coronavirus, now this, what's next",5.0
g84f1bl,j739ae,Any way to read a file directory locally? I want to make a new interface for getting an overview of the piles of `.md` files I keep synced via Dropbox.,1.0
g848gor,j739ae,"All of a sudden, web browsing in a VM is looking a lot more appealing. 

I don't think I could ever completely trust something that remote code could programmatically access my private files, no matter how well intentioned the developers of the browser. 

Combine this with malware served via ad networks on top of the changes to the APIs that ad-blockers use and it's going to be hard to have anything that even resembles security.",0.0
g84ye67,j739ae,"Then don't give any webpage permissions to read files, it's as easy as that. And if you're worried that it's possible to somehow circumvent the restrictions, browsers already write files to the disk, are you sure that's not exploitable?",2.0
g83288q,j738sv,"I just took a quick look at Reddit's source and it seems promoted posts contains the link to https://alb.reddit.com/cr


Maybe that's more efficient to target that instead of looping through every span on the webpage?",8.0
g82vqr4,j738sv,[https://chrome.google.com/webstore/detail/social-sponsored-ads-bloc/cefgndhbngdogmalpnhnidnnlkmbicig?hl=en&amp;authuser=1](https://chrome.google.com/webstore/detail/social-sponsored-ads-bloc/cefgndhbngdogmalpnhnidnnlkmbicig?hl=en&amp;authuser=1),3.0
g8alz05,j738sv,"I use the following css:

`div[class*=""promotedlink""]{`

`display:none !important;`

`}`

`div[data-before-content=""advertisement""]{`

`display:none !important;`

`}`",1.0
g8ke9y7,j738sv,Why not just use old.reddit.com? There's an extension called Old Reddit Redirect that's useful.,1.0
g8348u3,j72w3p,[https://github.com/tuvtran/project-based-learning#react](https://github.com/tuvtran/project-based-learning#react) Might give you some ideas,2.0
g8k0ydi,j72w3p,"Thanks, I really appreciate it.",1.0
g83rd8h,j71au9,"Hey there,

I work at Ponicode so maybe I can answer a bit.

First the current version is a VS Code extension that supports Node JS so if that is the IDE and language you use you should definitely check it out.

Second it's free for unlimited access and you just need to login with your Github account to get started so don't be shy. Honestly it's quick and easy to onboard (at least we tried to make it so) ;)

Third we made a demo video the other day if you want to see it in action [https://youtu.be/SI10vGKaoXI](https://youtu.be/SI10vGKaoXI) Maybe it will give you a better idea.

Overall I don't think you need to be scared ;) :)

We are still in beta and looking for feedback so feel free to try it and shoot us a message in our community Slack or here.

Bye for now,

Alex",1.0
g8o92te,j71au9,Test Driven Development \[\*\]...,1.0
g81p2vb,j702p1,Can‚Äôt you just do Object.freeze?,1.0
g81p8qm,j702p1,"Idk. Kind of cumbersome to remember to freeze every object in your application, no?

Plus it still doesn't solve the problem of manipulating immutable objects in readable and programmer-friendly way. :)",2.0
g81pekt,j702p1,"Fair enough. I just use Rust, personally.",2.0
g81ppfm,j702p1,"Oh, I have heard a lot of good things about Rust. Will have to check it out soon. :)",2.0
g81pxri,j702p1,"I‚Äôd recommend it, once you get the hang of things, the compiler makes life so much easier. 

It can also be used to make web apps with frameworks like yew thanks to webassembly",2.0
g82nd27,j702p1,"That's not far off what Immer does under the hood, which is very lightweight compared to Immutable.JS.",2.0
g81ss7h,j6zv7o,"The frameworks of current webdev abstract away / hide a lot of complexity from the devs. Very rarely do you need to parse anything, write sorting functions, think about data structures, etc. That's probably a good thing as we make better software this way with less bugs, but you can argue that the pitfall of all this is that devs don't really need to understand the basic stuff anymore, as it simply isn't required on a day to day basis.

That said, the only way for you as a dev to improve on your basic understanding of comp sci, is to practice. Write stuff from scratch. Algorithms. Data structures. Knowing a pattern or a data structure can be 95% of the work in some of the stuff you say you're struggling with. Learn a purely functional language (e.g. Haskell, Elixir, Elm even, whatever). It can be painful and hard, but these languages will force you to think differently and make you a better programmer. That doesn't mean you have to continue writing in these languages, but they will absolutely have a positive effect on you.",5.0
g81votp,j6zv7o,"I have nothing to add other than I feel your pain. I've been a Frontend for almost 9 years. I can easily lead a team of developers, even with limited backend experience. But when it comes to code quizzes in an interview, I'm a puddle. I can't even work my way through the most basic Fibonacci function test.",3.0
g81y6p9,j6zv7o,"I guess, you need something about algorithms. You can try academic books like Introduction to Algorithms by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein or The Art of Programming (very hardcore) by Donald Knuth.

I tried to start them both, but something that I need for work right now always stands in the way (or I just keep telling myself that, TBH).

There is also courses about algorithms on Coursera and EdX",2.0
g836v4s,j6zv7o,"This is what happens to me. I tell myself I will learn algorithms this weekend, but then I end up learning something more ""practical"", for example graphql, because I can apply this at work the next day.",2.0
g82k37y,j6zv7o,"This is the right answer.

The knowledge needed to know what approach to take comes from degree-type knowledge. A book on algorithms can give you just that knowledge. Also try videos and tutorials that discuss those algorithms and data structures in more detail, if you‚Äôre having a hard time picturing them.",1.0
g8363b2,j6zv7o,"&gt; and have neglected basic programming skills

The following may or may not work for you. It is the best advice I can give you, but it does need some effort, especially at first. Anyway...

What you call ""basic programming skills"" is -probably- the actual fundamental part of programming: problem solving.

A lot of programmers just focus on ""writing code"". You get a problem, some requirements, a task, and the first thing they do is just start writing code. Many even think that _code_ is ""the product"", the goal of all this programming thing. Doing this frequently leads people to situations just like yours. You _know_ how to write code. You know how to assemble the pieces. And that's fine, sure. But you move within limited boundaries.

Try, instead, to look at programming in a different way. Code is just a liability, a generally necessary cost but not at all what you actually want. What you want is solving a problem. Maybe making someone's job easier to do, or even possible to do. Maybe you want for some process to be automated. Maybe you just want your mother to remember to take her medication. Or whatever.

There's a [quote by John Johnson](https://www.defprogramming.com/quotes-by/john-johnson/) which you should always keep in mind:

&gt; First, solve the problem. Then, write the code.

It's not just a nice quote. It's actually a very practical guide. It urges you to stop diving head first into writing code. It reminds you that the most important thing is not the code, but solving the problem. Once you have ""solved the problem"" the code -if needed- will flow much more easily. (No, I don't mean to say that that part is mechanical or trivial; but it *will* be much easier.)

The quote is good to keep in mind at all times, sure, but it only goes so far. What is ""solving the problem""? And just _how_ do you do that?

Right. What you need is a _method_, an structured process to approach and solve problems. The following one seems basic but is solid. You may adapt it to your liking in part, but try to practice it as is at first. See where it leads you and _then_ evaluate how good it works for you:

There's basically three parts:

1. Understanding the problem
2. Designing a solution
3. Implementating the solution


**Understanding the problem**

This is the most important part. Really, do *not* skip ahead just because you think you might just start building something and care about the details along the way.

Note that you _shouldn't_ be thinking about a solution at all _yet_. This is key. At this moment, you're just examining the problem. What you need to do is generally:


 - First of all, identify the **goals** and requirements. What needs to be achieved? What are we trying to obtain?
 - *Identify* the main **parts** and their **relationships**. Depending on the problem these may be physical parts, people, machines, interfaces, or even just concepts. Your example of calculating the factorial is pretty abstract, but you should still be able to identify the relevant concepts involved, such as there being an input (the number) and a calculation that involves ""some sort of sequence"". Notice the relationship: the sequence is directly determined by the input (i.e. the sequence goes _from the input_ down to 1). You don't need _all_ the details at first, as we'll see in a moment.
 - **Decompose** the problem into smaller ones. This works _very_ well with that thing I just mentioned about details. At first, decompose your problem into two, three, four parts. Do not worry too much about the details _inside_ those parts.
 - **Repeat** with each smaller problem. Once you have a clear ""large picture"" of a problem, each part can be treated separately, so dive into each, repeating the process to understand the details relevant _to that part_.

During this whole thing, do use whatever tools that best help you _think_. *I* usually use pen and paper -or an equivalent- and just take notes and draw or whatever. *You* might prefer a _mind-mappping tool_, or using an editor in your computer to take those notes. Whatever you do, try _not_ to use your IDE or editor. At least the first times. This will help you avoid trying to write code _yet_.

Also, you should _not_ try to think of a _solution_. That is, at this moment you just want to understand what to _understand_, to know _what_ you need to do. Not _how_ you will do it.

The result of all this may seem dubious at first. You may now look at yourself and think you haven't _done anything_, that you should be writing code. But you _have_ done a lot. You should now have a very good understanding of the problem, of all its parts, of what is most important and what matters _less_.


**Designing a solution**

So you understand the problem. You understand its goals, its various parts and subproblems and how it should all work.

Now is the time to write cod... No, not _yet_. Now is the time to _solve the problem_. That is, you may now start thinking about a **solution**.

Say, e.g., a part of your problem is getting some user input. That is the problem. Many solutions could achieve that. So now you search for the one that applies best. Maybe just get the input as command-line arguments? Maybe have a GUI? Or should you read it from a file?

When designing your solution -arguably ""the hard part""- you'll rely on your knowledge and experience. That is, you will have solved other similar problems. You should -generally- know if this case calls for a GUI or for reading from a file (e.g. It's a large amount of somewhat structured data, so reading it from a file makes more sense than having the user input it on the command line). But you should also _research_. You just _can't_ know everything, but you do need to be good at researching. Learn how to ask questions, which questions to ask, learn how to search the internet, do build a good personal library (be it physical books, or ebooks, or just articles and tutorials, videos if that's your thing, or useful sites and links, or just people you can ask).

Designing a solution should follow a process that is somewhat similar to what you did to understand the problem. Identify parts, break them down into parts, draw sketches with boxes and arrows if it helps. And importantly, do design your solution at different levels of detail. That is, design a general solution, an approach which gives you the fundamental structure of the solution. Say, ""I'm going to read from a text file, then process it into this and that, and then produce an image file based on that"". And then focus on each part and design a solution for that. ""Reading from a file, I'll just do it easily with this and that. Oh, and I need to know the name of the file..."" (that's a detail that concerns _this_ part of the problem).

To the point: decompose and iterate.

But remember: you're **designing** the solution. You're not building it _yet_. You shouldn't be writing code while doing this. The product of this phase is that you now should have:

 - A good idea of **what** needs to be built.
 - A general, but solid approach to **how** to build it.
 - Most of the details sorted. Or at least, you should have a good impression on where the main difficulties will be and which concerns you need to pay more attention to.

You don't need to have a _perfect_ solution, though. Do not become paralyzed on the design. You don't need to have *all* the details already sorted out. You **do** need to have something that you will be confident that it will work, something that is a solution, not just some vague or general idea. But, sure, there will still be some details which you may not know how in particular you will do. That is, you **don't** need the detail of ""Will this be a HashMap or a HasTable? Do I use a `for` loop here?"".


**Implementing the solution**

Again, I will not argue that ""writing the code is now trivial"". No, but with all you've already done, it should really be _much easier_.

There are various methodologies and techniques for this part. Top-down, bottom-up, UI-first, data-first... Personally I tend to think that certain approaches fit better with certain people, simply because it is closer to the way they think and keep things in their minds. So just try a couple of them and see what works for you. I've known people that start from modeling the data and others that prefer having an actual UI first thing. One approach works well for them and they are completely lost when using the other one.

Some people start by writing tests. I have nothing against tests, but do be aware that this approach is quite more difficult than it appears.

Some people use a _""wishful thinking""_ approach, where they start writing the code from the top and _imagine_ that they already have the smaller parts and write how they would use them. Others will prefer starting from the smaller parts and only then building the larger ones. Each approach has its pros and cons.

After all this, you may be wondering if I am or am not going to tell you how to do it. And, sadly, no, I won't. I will tell you this however: *You need the practice*. There's no way around it, sorry. You do need to try different approaches and see which one fits you better.

So... **practice**. But not just simply try different things. **Consciously experiment**. Make an effort to try different approaches and notice what difficulties you find, where you get stuck, how other people do it, if it confuses you or if it helps you, etc. Compare all that and choose the one that helps you the most, and learn how to improve on the not-so-smooth parts.

----

I know all this sound pretty abstract, but I do hope it helps you in some way. Sorry if it doesn't.",2.0
g837w2f,j6zv7o,"Thank you so much for the detailed response! I read it carefully and bookmarked it so I can come back and reread it over and over again haha! All are very helpful advice, thank you so much! It has changed how I think about solving problems.

I would urge you to please convert it to a blog post. I am sure you would be able to help more people just like me and these words are much needed :)",1.0
g83cnh5,j6zv7o,That's a good idea. At least I will avoid re-writing it again :),1.0
g83q0ep,j6zv7o,"Haha yes and more importantly, because it's really helpful to people like me! :)",1.0
g83wxsp,j6zv7o,"Yes, I was only half joking :)

The thing is... I already do have a site with this content -but more expanded-. The only ""problem"" is that right now it's only available in Spanish. I may get around to translating it all into English some day, but currently I don't have that much time.

Maybe next year.",1.0
g81qclx,j6zv7o,"Probably redundant what I‚Äôm about to say as I am only a college student still learning. But regardless I think I have some input as every problem had that effect on me for a while

It may sound cliche but just plan it out. Take a step back and try to understand, ok what is the process, what are it‚Äôs variables. What are potential edge cases or things to look or for. Should I implement a structure or make subroutines.

Not sure if this will help but that‚Äôs my experience so far. Hope it does help!",1.0
g81yqg6,j6zv7o,"focusing on input &amp; outputs in a visual way helped me to do better at abstract concepts

since i could write code but missed on structuring it, also it took some time practicing with same problem",1.0
g82ojy2,j6zv7o,Why don't you write a framework from scratch? That sounds like a great and challenging low level project that is a little bit interesting than a book,1.0
g84lkq0,j6zv7o,"Here are two relevant tales. 

Tale 1:

A consultant was called to a factory to fix ComplexExpensiveMachine(TM). He inspected the machine, then spent 10 seconds to tighten one bolt and the machine was miraculously fixed. He billed $3000. The factory owner balked: ""why does tightening one bolt cost so much""? He replied: ""you're not paying me to tighten a bolt, you're paying me for knowing which bolt to tighten""

Tale 2:

A pottery class teacher divided a class in two. To one half, he said he would grade them on the quality of a single pot. To the other half, he said he would grade on how many pots they made. Curiously, the group with the highest quality pot was the ""quantity"" group. While they spent the semester churning pot after pot, improving their skills, the ""quality"" group had spent the semester debating grandiose theories of esthetics with little to show at the end.

Moral:

There's more to ""basics"" than meets the eyes, and you need to put in effort to learn them properly.

---
A good ""trick"" for learning the skills needed for code/algo challenges is to write your own version of lodash. This should get your brain muscles flexing about how to implement a wide breadth of data transformation techniques.

I had an interview where the question eventually led to an open ended algorithmic discussion. I just said, oh we could just JSON.stringify the object as a key to a map. The interviewer raised an eyebrow and asked about the possibility of doing a deep object comparison instead. Having implemented such a thing, I then explained how complex that actually is and that JSON.stringify was a reasonable alternative given all the trade-offs I had just discussed. (I got the job)",1.0
g84psca,j6zv7o,That's a great idea! I will try that out,1.0
g81nnb8,j6y65m,"So, when I see a project named `@anything/foo`, and it's not actually part of a larger suite (eg. `@apollo/client`), I think it's someone who doesn't take thee project very seriously.  I imagine, just from the name, that it's simply a minor/hobby project.

In my view, any serious project should have a non-namespaced name, and if that means you have to call your project `lambsduh` instead `lamda` ... oh well.

But I totally realize this might be my own personal quirk, so genuine question: do others think this way also, or is it just me?",-3.0
g81r314,j6y65m,"I would think namespacing is good long term. It does feel a bit odd since it‚Äôs new but so does every new top level domain. 

Plus, it seems like everyone with a Medium account feels the need to write a new isEven library. Might as well keep them namespaced so we can pick the best implementation and really study how to use the modulus operator.",5.0
g824pcr,j6y65m,I have actually already other libraries under the namespace and the namespace was created with the intention to expand. I also spent a lot of time trying to use to the library to make sure that it can do all that I need it to do and see how it feels when developing projects. The website itself is using the library in the context of React and there is another documentor project that parses the library's source code to generate documentation. So the whole documentation side of the website is based on a generation out of the original source code.,3.0
g81oizn,j6y65m,"It could be just giving the name and a catchy tag that explains what it does.

It could be that they're giving themselves room to add another lib somewhere down the road.

It could be you're just a grouchy grouch-grouch.",2.0
g826g9s,j6y65m,"You got the point and that's how I used it when creating other libraries within the namespace. I can use 7urtle as a brand name and then use clear names that point towards the purpose like 7urtle/lambda, 7urtle/server, 7urtle/logger... Unfortunately only 7urtle/lambda has such robust documentation and is finished.",3.0
g827r7d,j6y65m,I am *definitely* a grouchy grouch-grouch!,3.0
g82d2n9,j6xneb,"A critique, from someone who has been down this path before when making [json-complete](https://github.com/cierelabs/json-complete/)...

SuperJSON was written to maintain references, but why stop there? Why isn't it maintaining value equality where it finds it, such as deduplicating the encoding of identical strings?

SuperJSON supports circular references, but how far? Can it handle arbitrarily deeply nested arrays by avoiding recursion?

SuperJSON supports NaN, +Infinity, and -Infinity. That's great! What about negative zero?

SuperJSON supports RegExp, with flags no less! But wait, what about the lastIndex value of a given RegExp object?

SuperJSON supports Arrays, but what about ArrayBuffer? SharedArrayBuffer? Any of the Typed Array types like Int8Array? Interesting, there's [another project named ""superjson""](https://github.com/nrdobie/superjson) that does support the latter.

SuperJSON supports BigInts, but what about BigInt64Array? BigUint64Array?

SuperJSON supports regular Boolean, String, and Number primitives, but what about their object-wrapped forms?

SuperJSON can store Dates, but can it correctly store Invalid Dates (Date objects in the state of being invalid)?

SuperJSON supports objects, but what about Argument objects? Error objects?

What about File objects? Can you at least store Blob data?

You're working on support for Symbols? Make sure to support both Registered Symbols and regular Symbols. Also, watch out for the nasty surprise that can happen when you attempt to use a built-in symbol as a normal symbol.

&amp;#x200B;

I worked on this problem myself a few years ago. I was trying to make a data serializer that supported all data types as best as possible while retaining referential equality. This was so I could use the immutable style and retain the entire history of my application's state for debugging purposes. Immutable style's structural sharing would allow me to do that compactly if I could smartly serialize it. I made [json-complete](https://github.com/cierelabs/json-complete/), which supported my entire use case and then some.

Let's compare:

Looking at the size of the encoded serialized string. When encoding this data...

    var big = BigInt(Number.MAX_SAFE_INTEGER);
    var input = {
        a: 1,
        b: big * big,
        circular: void 0,
        nan: NaN,
        set: new Set([1, 2, 3]),
    };
    input.circular = input;

In SuperJSON, this becomes:

    {""json"":{""a"":1,""b"":""81129638414606663681390495662081"",""circular"":null,""nan"":""NaN"",""set"":[1,2,3]},""meta"":{""values"":{""b"":[""bigint""],""nan"":[""number""],""set"":[""set""]},""referentialEqualities"":[[""circular""]]}}

Compare that to json-complete:

    [""O0,2"",[""O"",""S0S1S2S3S4 N0I0O0$6U0""],[""S"",[""a"",""b"",""circular"",""nan"",""set""]],[""N"",""7&lt;{:""],[""I"",""whame456(%o@wj%!#mo)wg""],[""U"",""N0N1N2""]]

Note that both of them are encoded to JSON-compatible strings, though json-complete's encoded represents all data as arrays and string values only.

I don't know how the speed compares to mine, but here's benchmarks for a couple dozen JSON alternatives I put together: [https://github.com/cierelabs/json-complete/blob/master/docs/benchmarks/README.md](https://github.com/cierelabs/json-complete/blob/master/docs/benchmarks/README.md)

If you want to develop this further, take a look at my exhaustive tests, where you will learn more than you ever wanted to know about JavaScript types in all their complexity: [https://github.com/cierelabs/json-complete/tree/master/src/tests/FeatureTests](https://github.com/cierelabs/json-complete/tree/master/src/tests/FeatureTests)

json-complete is about the same size as SuperJSON when minified if you don't count your lodash dependency.

My library isn't perfect, of course. I still need to add support for Node's Buffer, remove the dependency on the native JSON object, add support for object states like being frozen or sealed, add support for defining custom encoding/decoding, and improve performance significantly. But it already has everything your library has in terms of features and much more (except for readable output, but that was intentional for minimizing encoded string size).

json-complete will also probably never support the serialization of class objects directly because class objects are for the containment of behavior in addition to data, which represents a huge security vulnerability surface, as you point out. Serializing classes will probably be handled in the future by the previously mentioned custom encoding/decoding feature.

Good luck.",49.0
g82ozo7,j6xneb,OP thought they were onto something and father JSON here comes in and fucking ends him. Seriously though thanks for this. Cool read.,29.0
g82w3zi,j6xneb,"lol. I wasn't the first, nor will I be the last. JSON is cool, but simple, so lots of people want (or need) to upgrade it. Given that I personally found 30 JSON alternatives and didn't see his, and how apparently he didn't see mine (or didn't like it for whatever reason) just shows how common this problem is to be re-solved.",8.0
g83f6vh,j6xneb,OP != author ;),2.0
g82xqqz,j6xneb,lmao,0.0
g83pfwf,j6xneb,"This is awesome.  Thanks for this.  Hopefully op takes it ‚Äúthe right way‚Äù.

We are all always reinventing the wheel, but that‚Äôs ok.  That‚Äôs how you become a Jedi.",2.0
g82r326,j6xneb,"&gt;one of its value propositions have been let down by JSON: It doesn‚Äôt support data types like Date, RegExp, Map or Set

Dates are represented as ISO strings. RegExp can be stored as strings. JSON objects are literally just Maps. You can represent a Set using a JSON array.

A lot of things have tried to replace JSON but none of them understand why JSON is so successful. JSON is successful because it's so ridiculously simple.  JSON is so simple because it ruthlessly removes everything that is unnecessary. Adding complexity to JSON doesn't make it more appealing, in fact, it makes it less appealing.",14.0
g82ulhh,j6xneb,"&gt; it ruthlessly removes everything that is unnecessary.

So true.

Because when you get right down to it, data is king. everything else is superfluous.

""Well what kind of data is it?"" It doesn't care. And, if i'm being completely honest, if you want to store that extra stuff in a file, JSON isn't for you.",4.0
g8437la,j6xneb,"I like 80% agree with this, but there's one bit of complexity I think deserves inclusion in a legitimate JSON+ standard: comments.

Here's the hill I'm willing to die on: `package.json` would absolutely be better with comments.  Fight me ;-)

P.S. And yes, I've heard the Node org's tired argument of ""we can't do that, it would break everything"" ... as if there weren't plenty of legitimate ways to allow new config files/file types for Node projects.",2.0
g84e9ci,j6xneb,"Here's the reason why the creator decided to remove comments from JSON

&gt;I *removed comments from JSON because I saw people were  using them to hold parsing directives, a practice which would have  destroyed interoperability.*

However, if you really do want comments you can do:

    {
     ""//"": ""comment 1"",
     ""//"": ""comment 2""
    }

That would work perfectly fine in package.json",2.0
g84fg39,j6xneb,"1. Can we agree that those are fugly comments? ;-) Since the entire point of comments is to make things easier for humans to understand, I'd argue the last thing you want to do is make them fugly.

2. Many tools will flag that sort of thing, even if Node itself allows it.

And also ... you can put parsing directives in those comments too!

That's an idiotic argument (the person you quoted, not you), which amounts to ""I don't want to do something, so I'll make up a rationalization/excuse for why I can't.""  Or maybe, at best, ""I'm making these toys, so I get decide how they're played with"" ... which is the *opposite* of the spirit of OSS.

The whole thing is just one more (of many) manifestations of how poorly the Node org is serving the JS community.",3.0
g84rogq,j6xneb,"&gt;""I don't want to do something, so I'll make up a rationalization/excuse for why I can't.""  Or maybe, at best, ""I'm making these toys, so I get decide how they're played with""

You did a good job summarizing Douglas Crockford's personality (the creator of JSON)",2.0
g84s3tl,j6xneb,"Oh dear lord don't get me started on him!

I once went to a lecture he gave where he spent the entire first half of the lecture talking about code patterns, and why you *don't* want to just blindly follow them; you want to follow them because they logically lead to good outcomes.  And he went into depth with a pattern or two and explained how following it could avoid creating a bug.

He then proceeded to spend the entire second half of the lecture providing a set of ""best practice patterns"" ... **with absolutely zero justification/explanation whatsoever as to why anyone should follow them!**  I'm not exaggerating in the slightest: the lecture was truly:

* **First Half:** adopt patterns to get good outcomes, and understand the outcomes a pattern gives
* **Second Half:** here's my personal preferences, that I can't in any way justify objectively, so I won't even try (but I will call them best practices)",1.0
g81m7h1,j6xneb,"This can be pretty cool and it is extremely useful, but most of the time I think I wouldn't use it.",11.0
g81p1gl,j6xneb,"&gt; but most of the time I think I wouldn't use it

Its like many other JSON+ 'standards', not good enough on its own to be ubiquitous enough to replace JSON except in cases where you control all readers/writers.

I'd be interesting if a ""JSON 2.0"" standard could ever get mass adoption.  Something that incorporates the best JSON extensions *(a hem, comment support, a hem)*.  But I doubt it.  JSONs success is almost entirely due to its simplicity.",16.0
g8212dx,j6xneb,"I've used JSON for APIs and for basic data storage and such, but never felt like I was missing comments and haven't used JSON+ libs, what's the use case there?",1.0
g822hoi,j6xneb,"I just meant any other JSON library that extends the standard, like the one linked by OP.",1.0
g8362cn,j6xneb,"A lot of tools use JSON for configuration, and comments are really nice to have in config files.",1.0
g837vgy,j6xneb,"Sounds like a ""those tools"" problem.",1.0
g83f4jr,j6xneb,"Well, yes, JSON isn't a great language for config. But that's the use case.",1.0
g824j3f,j6xneb,Might be controversial but I think comments in json is at best unnecessary and at best a bad idea,1.0
g82ruk0,j6xneb,"The only controversy here is stating an opinion without anything to back it up. 

I can think of plenty of situations where comments in JSON make sense. Data transmission is NOT one of those situations. So why do you think it‚Äôs unnecessary, or a bad idea?",4.0
g82vhxq,j6xneb,"1. JSON files should be a machine maintained format, not to be adjusted or read manually by humans. Comments encourage humans to try to read and make changes to a JSON file which is risky.
2. If you need to inline comment your data structures to explain, to me that could be a smell that your data structures aren't good. Of you want to document your data structures, that doesn't need to be an inline comment, it should be a real document using something like markdown.
3. A comment on a piece of data that is construed as metadata should be data accessible, a comment is not data accessible.

Again, just my opinion. What kind of situations would you like to use comments in JSON?",1.0
g82wf9f,j6xneb,Config files,6.0
g82yf2k,j6xneb,I prefer something like yml for config files for this reason. Much easier to read and maintain for humans. Personal preference though.,1.0
g83706b,j6xneb,"Most of the time it doesn‚Äôt matter what you prefer. The app or library uses JSON, and that‚Äôs that. And in that situation, it would be useful to leave comments in the config file.",4.0
g82zmga,j6xneb,I find them awful to read tbh,2.0
g8303m1,j6xneb,Hence personal preference!,1.0
g842xcw,j6xneb,"Back in your first post if you'd just added:

&gt; Might be controversial but I think comments in json is at best unnecessary and at best a bad idea **because I personally prefer to use YAML**

I think this discussion would have been different.",1.0
g81sl6p,j6xneb,"Honestly I'd just rather see toml take over. Not sure of the feasibility of that but it's so nice.

Comment support would be my #1 too though.",1.0
g837uy5,j6xneb,"JSON was designed as and IMO should primarily remain a machine-read serialisation protocol which *happens* to also be human-readable.

TOML hits a sweet spot of decent type support, and excellent readability for both humans and machines. It falls down when there's much nesting, but the point is that it has a different purpose than JSON: it is a configuration language, not a serialisation protocol.",5.0
g83n0ze,j6xneb,"TOML is plainly retarded, for anyone with sense would not have based it on ini. That takes a very special kind of ignorance.",2.0
g83rdq6,j6xneb,"Not a particularly productive tone there.

Maybe TOML was designed to appeal to INI's current userbase, but it doesn't inherit its flaws (primarily lack of spec), besides not being designed for ergonomic deep nesting.",5.0
g83ujix,j6xneb,Agreed with all of what you said.  But a man can dream...,1.0
g829rnw,j6xneb,I just want comments in my json,17.0
g82gsxy,j6xneb,You could with [comment-parser](https://www.npmjs.com/package/comment-parser),3.0
g82t939,j6xneb,Me too!,1.0
g83952t,j6xneb,That's literally the only thing it's missing,1.0
g83reh1,j6xneb,Infinity for numbers would be nice too. Comments and Infinity are the reason why I switched to JSON5.,1.0
g82iuwg,j6xneb,Kind of like GraphQL scalars,1.0
g86pr2w,j6xneb,"I think some commenters here are missing the bigger point: this was made to be used in Blitz.js which gives you access to server-side functions from the client by doing the switch to am HTTP request at compile time. This is their solution to the inherent serialization problem of that model, but it doesn't need to support every little edge case. Just needs to be smart and fast.",1.0
g81ncwk,j6wnp5,Seems cool but do you trust the person operating is-a.dev to both to keep the service running and to not hijack your emails?,29.0
g81yh02,j6wnp5,How's he gonna hijack emails?,1.0
g81znc1,j6wnp5,"Assumption here seems to be, if you are not careful and create an email address such as mailme@danhab99.is-a.dev, then it is easy to hijack your email. Most of the time email providers only need a proof that domain belongs to you (gmail asks you to upload file that can be publicly accessible in your domain or return a code when a specific url is hit). The owner of ‚Äòis-a.dev‚Äô domain can easily take over the subdomain to do this. 

So if you are going to use this service be careful to not use it for anything other than throwaway purposes.",7.0
g8228ae,j6wnp5,"Ahhh, I 100% understand the concern. I guess the simple way to mitigate this problem is to not add MX records to my is-a.dev. Still thanks for spreading awareness!",2.0
g82sksx,j6wnp5,https://www.reddit.com/r/javascript/comments/j6wnp5/a_free_and_open_source_service_to_get_a/g82shth?utm_source=share&amp;utm_medium=web2x&amp;context=3,1.0
g81mocg,j6wnp5,"Uh, let's clarify one thing here-- you're not getting a domain, you're getting a subdomain spot on the domain is-a\.dev

Subtle yet incredibly important difference and as such nobody should actually use this service for anything important to them, possibly not at all.",45.0
g823vgn,j6wnp5,You don't own anything you put here and the host can do whatever they want with your traffic,2.0
g82arl8,j6wnp5,"Yeah exactly, the point that I was trying to make.",1.0
g82soah,j6wnp5,https://www.reddit.com/r/javascript/comments/j6wnp5/a_free_and_open_source_service_to_get_a/g82shth?utm_source=share&amp;utm_medium=web2x&amp;context=3,0.0
g82edxx,j6wnp5,"I wouldn't trust \`.is-a.dev\` to keep the service running forever to use this for anything important.

Imagine going all-in making it your homepage: business cards, your resume links to it, you maybe have an email inbox there. Then the owner of is-a.dev decides they don't care to maintain the service anymore, or the owner dies (if it's a one-man operation), or if it's a company that they go under, and nobody takes it over, and poof! Your whole website and all the things you linked there no longer work.

It's worse IMHO than buying in to Tumblr or Medium to host your blog, at least with that kinda company they'll gracefully shut down their services over months/years and give you time to get off it. Just get your own domains, folks! Take control of your own website and data.",8.0
g82smv6,j6wnp5,https://www.reddit.com/r/javascript/comments/j6wnp5/a_free_and_open_source_service_to_get_a/g82shth?utm_source=share&amp;utm_medium=web2x&amp;context=3,2.0
g82shth,j6wnp5,"Hey there. I'm the owner of this project. I'm gonna try to address all the concerns mentioned in the comments to this post

* **Is this service gonna run forever?**

The domain is paid for for the next 5 years. In that 5 years, I will give access to the account to a few trusted maintainers so if I die, the service doesn't. You can also support the service by donating. I use it for my own personal website too.


* **Will I mess with your subdomain/traffic?**

The records are 100% transparent. By that I mean, all the records you see in the repo are exactly what are published. Even the root domain is registered through the repo! You can see the code that is used to publish the records in the repo. If any change is made directly in the namecheap dashboard, it will get overwritten in the next publish.


* **Will I hijack your email?**

Same as above. Currently, MX records are not supported on the repo. But if enough people are interested, I may add it in the future which will again be 100% transparent and visible to all in the repo.


* **Am I stealing your identity?**

No. What? The repo only asks for your email and if you have privacy concerns, you can just keep the field empty and add another key with any other social that can be used to contact you in case you need to be informed of something.



Please let me know if you have any more questions or concerns regarding this project",7.0
g82usn6,j6wnp5,"Dude my issue isn't *you* hijacking something. With respect, I trust people who don't see far ahead enough to realize the issues with such a service/project.

The issue is, someone can hack *you*. Whether it be on Github, namecheap, or both. Then they can redirect any subdomain (ex, one that someone has decided to go by, say, 13steinj\.is-a\.dev) to spam.

Let's pretend I use such a domain as a resume host, or some other about me host. I don't want to hear from someone else that it suddenly redirects to an XXX site. Imagine it worse that a recruiter sees it on a submitted resume! There's 0 reason for me to hand the map to you, because I might as well just provide the map myself. If I lose access to the printer, that's on me.",3.0
g82yga1,j6wnp5,Fair point. That isn't something anyone can really control. All services that you will ever use are at risk of being hacked. All I can do is re-assure you that I take my own security very seriously. But I don't blame you for not taking my word for it.,1.0
g83z754,j6wnp5,"This is hilarious and completely expected.

Dude buys a cool domain and gives subdomains to fellow devs for free. Fellow devs give him shit cause this(like anything) can potentially be exploited instead of giving kudos and just using this for vanity pages or thinking about youngens or people just starting out/in dire circumstances who aren‚Äôt allowed/can‚Äôt to spend money online. 

Great job, thank you, will definitely donate. Keep spreading the love bud, wish there were more people like you.",3.0
g84e3ou,j6wnp5,Thanks man! That means a lot!,2.0
g81vxrz,j6wnp5,Is a devvvvanitly gonna steal your identity!,5.0
g82sna0,j6wnp5,https://www.reddit.com/r/javascript/comments/j6wnp5/a_free_and_open_source_service_to_get_a/g82shth?utm_source=share&amp;utm_medium=web2x&amp;context=3,0.0
g850ebh,j6wnp5,"Ah, sorry bro. Just a pun...",2.0
g8548nn,j6wnp5,Oh sorry. I got the pun but I thought you were concerned about privacy with this thing too.,1.0
g81yi2a,j6wnp5,why tho,4.0
g827tp1,j6wflo,Thought for more than a few seconds that this was a text-based control scheme for playing league of legends.,12.0
g82946v,j6wflo,You should be very careful about using the trademarked name. Companys rarely like it when people use it for unofficial products.,9.0
g82qa9v,j6wflo,"That‚Äôs true calling it the following : 

Heros of the legends. 


League of Newearth


Defense of the leagues 

Instead..

Failing at that 

Defense of the Aeon",1.0
g81ooz8,j6wflo,Stop. Did you really? This is amazing. Now when I‚Äôm coding I can distract myself faster than googling it.,9.0
g81qtto,j6wflo,"This is sweet, thanks for sharing.",1.0
g81wg8y,j6wflo,This is awesome. Good stuff,1.0
g81xn8s,j6wflo,Your a true fan and a bamf,1.0
g81j7nw,j6wflo,Looks really cool! Well done man,1.0
g8100qi,j6vnud,for each image they mapped the coordinates of the fingertip then place the image accordingly.,4.0
g811ozu,j6vnud,"Yes but i was unable to see where was the function for coordinate to number conversion     
&gt; The images are loaded from    
https://pointerpointer.com/images/[number].jpg    
and go from 0 - 710 

But they do not point sequientally point    
ie 0 for top left and 710 for bottom right     
When i move the mouse just a little bit the image loaded goes from like 0 to 412     
And i cannot find the function where it fetches the image based on co-ordinates.",3.0
g8124m4,j6vnud,also cannot see any get/post requests sent to server just the images are received using get so I think the code is client side.,1.0
g81f0za,j6vnud,"just keep the network tab open before refreshing the page, you should see they call [https://pointerpointer.com/new-positions.json](https://pointerpointer.com/new-positions.json) to fetch the list, and then they just find the closest point in that list that matches your mouse position. And then some css magic to scale/center it",8.0
g81c43d,j6vnud,"[https://pointerpointer.com/new-positions.json](https://pointerpointer.com/new-positions.json)  


[https://github.com/puckey/voronoi-grid](https://github.com/puckey/voronoi-grid)",6.0
g81j8ay,j6v9iu,"[RTK does use thunks as the default approach, for a number of reasons](https://blog.isquaredsoftware.com/2020/02/blogged-answers-why-redux-toolkit-uses-thunks-for-async-logic/).  Part of that is that RTK is aimed at the most common use cases for Redux.

Having said that, I would completely agree that _if_ you want to run a Redux store in a worker, you must use other Redux middleware like `redux-saga` and `redux-api-middleware`.  One of the great things about Redux is that its original design makes this entirely possible, both because the state is intended to be serializable in the first place, and also because middleware are pluggable to keep you from being locked into a single specific syntax for things like async work.

I would be happy to add a Redux docs page on this sort of technique if someone would like to write it and file a PR.",7.0
g81pqwq,j6v9iu,"Hey, just a quick question because you kinda sound like mark (one of the Redux maintainers), why/when would you actually do this (running a redux store in a worker)?",1.0
g8201pc,j6v9iu,"Yep, I'm me :)

As /u/Zephirdd said, the main reason to want to use web workers is to move some kind of expensive calculations off the main JS thread.

Typically, Redux reducers are not a major bottleneck - the cost of updating the UI is much more expensive.  However, there's always edge cases and exceptions, and it's entirely possible that having a very large state tree _and_ doing lots of updates to large quantities of data _could_ be a bottleneck.  In that case, it's _possible_ that moving those calculations to a worker could be a perf improvement.  On the other hand, there's also the cost of serializing that data between threads, as well as patching up the data when the background thread sends it to the main thread.

Some related articles on keeping a Redux store itself in a worker, or using workers in conjunction with a Redux store:

- [React +Redux + Comlink = Off-main-thread](https://surma.dev/things/react-redux-comlink/)
- [Redux in Worker - Off-main-thread Redux Reducers](https://blog.axlight.com/posts/redux-in-worker-off-main-thread-redux-reducers-and-middleware/)  (by the author of this thread's OP, in response to the above post)
- [Leveraging Web Workers For Client-Side Applications with React &amp; Redux ](https://www.memsql.com/blog/web-workers-client-side-react-redux/)
- [Why Radial Built A Redux Web Worker Middleware NPM Package](https://radialdevgroup.com/blog/why-radial-built-a-redux-web-worker-middleware-npm-package/)",4.0
g81qsav,j6v9iu,"when either your reducers or your middleware is too expensive for the main thread; that is, the same reason you'd use workers for anything else.

If your reducers are blocking your rendering, consider the worker approach.",2.0
g81thbe,j6v9iu,It is mark,2.0
g81k6vy,j6v9iu,Do you have any benchmarks?,3.0
g82l4sk,j6v9iu,Ohh no! I read everything to learn at the end that it does not work with redux thunk! I have a really big app with complex UI and a really huge store (~100 reducers) it would have been nice to see the performance improvements!,2.0
g82yrrt,j6v9iu,"Looks like this your chance to submit a pr to redux-in-worker.

Man was I happy when I saw redux-saga. I have a project that has huge state management needs as well. And another that I'm currently working on is similar.

Both use saga. I'll provide an update after integrating OP's middleware.",3.0
g828yd0,j6tkx9,[dd-promise-estimator](https://github.com/damianof/dd-promise-estimator),1.0
g83t5h9,j6tkx9,Some description and example would be nice,2.0
g8kbmug,j6tkx9,"https://github.com/Lamasusb000/PublicCode
My public use repository",1.0
g8ksei8,j6tkx9,Hi,1.0
g80kp6h,j6tdhf,Heroku or Vercel.,2.0
g81jzpz,j6tdhf,"Yeah, I was initially thinking Heroku only. Like I mentioned here somewhere, I'm a little confused about their dynos system. I'm guessing that's different than regular traffic? Will the free version be suitable for a basic website that showcases my portfolio?",1.0
g81l2ca,j6tdhf,"&gt;Will the free version be suitable for a basic website that showcases my portfolio?

Yes.

If you have a static site, you can use some simpler, like Netlify, Surge, Github Pages, etc.",1.0
g81lo6l,j6tdhf,I use a templating engine and I have an automated project updation system but everything else is plain html / css / js. Not sure what category it fits into.,1.0
g81s4gx,j6tdhf,"If you have a templating engine that runs in Node, that's not a static site.

Although you may want to look into converting it to use a static site generator instead of a templating engine.",1.0
g81corm,j6tdhf,"I personally put all my Node.js projects on Heroku. 

It has an intuitive UI and many plugins for anything you need.

And it's free",2.0
g80i703,j6tdhf,"How is it built with NodeJS exactly? The cheapest and most reliable would be a serverless service like AWS Lambda + AWS API Gateway but your application would need to be tweaked slightly to work in that environment.

If it's not serverless, you really only have one option left a VPS. Most cloud providers offer this, AWS EC2, Digital Ocean Droplets, AWS Lightsail, and tons of others.",1.0
g80iit6,j6tdhf,"Thanks for the help! 

It‚Äôs built using node, express, and ejs. I‚Äôm not exactly sure how serverless systems work so I‚Äôll have to look into that.",1.0
g80lc1m,j6tdhf,your computer,1.0
g81jp69,j6tdhf,my boy too slow,1.0
g81wuo8,j6tdhf,Well I haven't seen a cloud hosted option that came with much more guts than a raspberry pi.  You'll basically be covering the cost of a pi after about 2 months.  After a year you could have bought 6 of them and hooked them all up.,1.0
g82bnwp,j6tdhf,"Yes, but it‚Äôs the uploads speeds my isp provides that warrant a better server than my own computer.",1.0
g80mkwd,j6tdhf,"Depends what you need it for. Heroku is free for their basic tier and pretty easy to set up. The free tier isn't suitable for customer-facing sites, but good for a demo.",1.0
g81jvzw,j6tdhf,I'm having trouble understanding their dynos system.,1.0
g80v648,j6tdhf,Azure has a free tier that can run node,1.0
g81k0pz,j6tdhf,How is that compared to Heroku?,1.0
g814t6u,j6tdhf,"Serverless and VPS are not your only options, just thought I'd mention for the sake of completion, there are hosting providers that offer Node hosting as shards. Very similar to ""classic"" hosting as far as you're concerned (you upload files, they do the rest), but use cloud hosted shards to do it. [Here's an example.](https://www.gandi.net/en/simple-hosting)

Possible downsides compared to low level cloud services or VPS: you need to get a domain with them, or transfer one, since they tend to do their whole setup in the context of a domain name they can manage (they automate things around it).

Another limitation might be the resources used, the cost/performance for specific scenarios may favor the DIY cloud solution. It depends a lot on what you're gonna use it for.",1.0
g81ka9u,j6tdhf,I just want to host a personal portfolio online and perhaps have a place where potential customers can contact me. Will what you mentioned by a bit overkill considering my requirements?,1.0
g831tcn,j6tdhf,"It's perfect for something like that. The smallest shard will do just fine for that. They also include a comprehensive email package, SSL certificates, your choice of database, and any resulting static HTML is cached by them for free (doesn't count towards any of your shard resources). File updates are done over SFTP.

I thought you wanted to host a more complex project but for a presentation site it would be perfect. Have a couple of sites hosted like that with them myself.

Oh and btw if you have multiple sites you want to host you can reuse the same hosting package for all of them, no need to get multiple ones, you can serve multiple domains as well as unlimited subdomains. Just have to use their control panel to point them at the same shard. Only downside is that they'll all need to use the same language and database you've chosen for the shard.",1.0
g837hdx,j6tdhf,"This does sound quite good, however, how much better is this than a free aws or heroku site?",1.0
g846mmj,j6tdhf,"It's much simpler to set up and tie everything together (domain, Node, db, email, caching, secure access, SSL certs etc.) Time/experience vs money. If you have the skills and time to set up an AWS or Heroku site you will probably come out a little cheaper. It's up to you whether that's worth it.

How much cheaper exactly depends. With free AWS/Heroku you always have to keep an eye on your resources because they cut you off after certain thresholds. Gandi designs theirs so you always fit in your shard size, but you may not like the performance if you want to go bigger.

For a presentation site like a personal portfolio it's very unlikely you'd ever grow out of the Starter shard, so that's some peace of mind right there. As a new client you'd also get the special 50% off price (which btw you can apply to any length of time; you aren't limited to 1 year, the 50% off is just tied to your first time ordering a shard from them; you can use it to order 2 years for the price of 1 if you want).",1.0
g84ka21,j6tdhf,"Thanks, that makes a lot of sense. I think I will try out the Gandi trial and see if I like it!",1.0
g817a1f,j6qqy2,"I actually wanted to make a post (it's still sitting, half-written, in one of my tabs) to the effect of:

&gt;Is anyone using `checkjs: true`?  It's freaking awesome, but I never hear anyone talk about it in /r/javascript: what gives?

Glad to see someone took the time to blog about this *amazing* feature ... and that someone took the time to post it here.  Now hopefully I can get some sort of answer to my question :-)",4.0
g817uju,j6qqy2,"P.S. And for anyone on the fence, I can't recommend using `checkJs` enough!

It's like the perfect 80/20 feature: you get 80% of Typescript's benefits in VS Code (automatic imports, argument suggestion, etc.) for 20% of the effort ... and really it's even less than 20% ... just `checkJs: true`, and maybe add a few JSDoc types if you don't like erroneous warnings on stuff like Styled Components code).",2.0
g80p9ds,j6qqy2,I been screaming this forever!,1.0
g80qh41,j6qqy2,"Thanks, now you have something you can share",1.0
g810mm5,j6qqy2,I can explain it just fine; everyone just wants to code for their IDE rather than roll with new concepts,-1.0
g81o4g8,j6qqy2,What? New concepts? Jsdoc has been around for years.,3.0
g81qr0x,j6qqy2,"This method over typescript.

If you tell someone ""you should check the class instance and throw your own error at runtime"" they would rather use types and put extra tooling around it.

I get it.. I hobby in typed languages but I don't see the point in using JS if you are going to just enforce it to older languages. The whole reason nodejs gets a productivity increase is because you don't have to think about types while you code... well at least less.

Now if you want to hire people who can't handle untyped languages thats a different issue all together... but I still only see type script as coding for your IDE.

Once deno gets types to provide performance increases I will get behind it.. but really what type script is doing is enforcing a code style that their IDE can detect.  I have a really hard time accepting that tradeoff when you can not use type script and roll your own type checking and enforce your check typing where it is important.

This can also give you the added benefit of making your functions safe at runtime.  Even if you create a class factory; the instance of doesn't align unless the class definition is from the same source.  You can wrap a single parameter in a class that came from a factory.  Unless your attacker knows exactly where to get that class instance; you at least protect your app from mild interference from command line type attacks.  

Sadly typescript has taken the focus away from the runtime and gives a false sense of security.",-4.0
g81r74a,j6qqy2,What in the world are you on about?,5.0
g89rasx,j6qqy2,Everything you said ranges from absolute nonsense to complete fabrication.,0.0
g7znhhl,j6ojb9,Looking forward to any feature requests.,1.0
g7zv6mt,j6o9i3,"If it were up to me I'd just use Svelte/Sapper for everything, but if you're trying to get hired I feel like it's React &gt; Vue &gt; Angular. There are probably more jobs right now for Angular than Vue, but Vue is definitely getting more popular.",3.0
g80xr73,j6o9i3,"There are a lot of posts here and on /r/wedev about how the market for junior webdev jobs is saturated, and it's very difficult to get your foot in the door.  I seriously think a lot of where that all comes from is people deciding what to learn based on what's most popular on job boards, npm and github statistics, surveys, and just in the community.

That sounds counter-intuitive, but it makes sense if there is 10 times more people jumping into a pool that is only 3 times bigger.  I think the imbalance there is probably because the draw of popular technology is much stronger to a person wanting to learn than it is to a company planning a project.  

Just something to consider.  I would say weigh popularity along with what technology appeals to you.  At least that way you will tend to loath the soul sucking toil a little less.",1.0
g8214xd,j6o9i3,"REACT for front end (lib, not a framework)

EXPRESS for APIs

D3 for data visualization (lib, not a framework)",2.0
g83bz1r,j6o9i3,Was it easy to integrate d3 with react?,2.0
g83om27,j6o9i3,Trivial. I have a component that takes care of everything. If you want I can send it to you,2.0
g86e6gk,j6o9i3,"I have decided to make this component freely available. I'm not done with the repository yet, but you can take a look if you'd like to start hacking around with it.  


[https://gitlab.com/Native-Coder/d3-react-component](https://gitlab.com/Native-Coder/d3-react-component)",2.0
g88ihn5,j6o9i3,"Amazing!! So cool from your part, i'll check it out, thanks!",2.0
g8a7sj9,j6o9i3,"Alright, I'm gonna start the flame war. Bring here all ye downvotes.

React is a goddamn framework. Yes, the React package alone is a library. But if you're using react, you're likely using react-router, redux/mobx, component libraries written in react, etc. You end up embracing an entire ecosystem built around react. That entire ecosystem is the equivalent of any full ""framework"" out there.

Maybe it doesn't properly fit the literal definition of a ""framework"" but to suggest that at the end of the day you're not buying into the same kind of thing is just absurd.

Alright, I'm now going to cower behind the walls of the internet as I'm sure the flames are going to come my way.",2.0
g8a9oeh,j6o9i3,"But I don't use the entire ecosystem. I use React, and that's it. If you mean create-react-app, yes, I do use CRA. But I don't use react-router, redux, or any other libraries written in react. I have a tiny little single-page router that I wrote myself. Sometimes I use material-ui. Other times I use materialize-css and create ""custom"" components with it.


That being said, React does feel more like a framework. Why? Because of the inversion of control. With a library, you call the functions. With a framework, your functions *get called*. Since components are hooking into the react-dom lifecycle, I think it's much close to a framework than a library. Is it a full-stack framework? absolutely not. And that's why I love it. Because I can hook it up to whatever I want however I want.",1.0
g803qiw,j6o9i3,"Long time favourite (web development): [https://mithril.js.org](https://mithril.js.org)

Easiest, smallest and most extendable framework I have found and use.

About:

&gt;which elements and qualities do you favour when comparing the frameworks?

If a framework does not immediately click in your head, like ""I would have done it exactly  the same way"", in bigger projects your cognitive load will become overwhelming and hinder you from being fast and reliable.

Beside that, I found that ""simplicity"" is a good guideline to find something you will like.

Oh, I also prefer the ""composition over inheritance"" approach.",2.0
g810dpc,j6o9i3,"Personally, Vue.
Also React has always been fun to work with.",1.0
g81elvc,j6o9i3,"for sure, i'm in favor of the new universally-interoperable tagged-template-literal-based web-component microframeworks like `lit-html`, `lit-element`, and `haunted`",1.0
g862fr1,j6o9i3,"Front end: VueJs (with Typescript).
I like it being not controlled by a giant corporation, and it's flexibility.
Backend: NestJS.
I like it's module system that allows it to be easily expanded on (sorta like spring boot).",1.0
g865ith,j6o9i3,"&gt;NestJS

For most apps I found NestJS feels like such overkill. Maybe it's just me?!?! I love the idea of IoC and it is a great framework, but I just don't feel overly productive using it for most of the Express style API's I tend to bang out.",1.0
g8cb6j1,j6o9i3,"Like everything in programming, it depends on your use case.

I wrote an API with just express and it worked great, but once I got up to 30+ api resources, and needing routing guards, and swagger documentation, etc. I ended up re-writing it with NestJS.   
The ORM and Passport integration I found very nice.

For other smaller APIs express or fastify work perfectly.  
All about the right tool for the job.",2.0
g80ov9v,j6o9i3,"easier to just check real world usage stats: [https://www.npmtrends.com/react-vs-@angular/core-vs-vue-vs-svelte](https://www.npmtrends.com/react-vs-@angular/core-vs-vue-vs-svelte) the one at the top is about to crack one billion npm installs/week. needless to say that's the one js devs prefer as it drives most of the modern web (reddit, twitter, fb, wiki, etc). react is simple, the api surface is the smallest among all frameworks, it has a true cross platform story.",1.0
g810jz7,j6o9i3,"To play devil's advocate, cherrypicking number of downloads can support any number of narratives, and thus can't be reliable indicator of user preference. See for example:

- https://www.npmtrends.com/vue-vs-jquery (legacy vs new)
- https://www.npmtrends.com/react-vs-fsevents (how many things transitively depend on you)
- https://www.npmtrends.com/react-vs-is-ci (what's doing all these downloads)

Food for thought.",5.0
g805b1p,j6o9i3,Is none an option?,1.0
g80u0cp,j6o9i3,You should say VanillaJS to sound fancy and smart.,5.0
g81045j,j6o9i3,"Good point, guess it's obvious I'm not one of the cool kids...",1.0
g7zp75j,j6o9i3,"I stick with vanilla JS, no framework needed.

But it really depends on the project.

The quickest to get the job done is the best",0.0
g7zpt3a,j6o9i3,"When appropriate I like to use [Svelte](https://svelte.dev) /[Sapper](https://sapper.svelte.dev). The simplicity of having one `.svelte` file to house all the html, css and js for that component makes things really easy.

In addition, the learning curve for Svelte minimal for developers who are new to the framework.",0.0
g7zdhky,j6ment,"&gt; While using them for sensitive, critical applications like storing COVID-19 patient data is ill-advised 

bruf now you tell me?",154.0
g7zdmv0,j6ment,Was going to post this a few days ago but had to make some last minute tone changes haha,51.0
g7zjd5x,j6ment,Found the uk Government attempting to fix their track and trace.,84.0
g7zexi0,j6ment,"Hahaha, like companies haven't used spreadsheets to store HIPAA sensitive data! I know of at least one that used CSV files and nurses would directly access the csv files with excel to access patient data. IT just walled it off within its own vpn.

Not quite the same thing though, since it's not a cloud service.",41.0
g7zf7zg,j6ment,Anything's a cloud if you squint hard enough üòÇ sounds a lot more secure than just throwing it in Google Sheets though yeah,23.0
g7zyshz,j6ment,"More of a ""cloudy"" service.",2.0
g7zvf2j,j6ment,"FYI gsuite is HIPAA compliant if you sign a baa with Google, which you can with just an online form.",4.0
g7zfn0q,j6ment,"How to shave  a pig for wool.  
(successfully)",34.0
g80ltzb,j6ment,"Well, that made my day.  Thank you.  Now back to this horseshit project I'm on.",9.0
g811v5p,j6ment,"Oh wow, are we on the same team?",2.0
g80y54a,j6ment,[You just need the right pig. ](https://i.imgur.com/EphkbEP.jpg),8.0
g7zfjwx,j6ment,Airtable is also a good alternative,8.0
g806nyu,j6ment,"You know what else is a good alternative?  A fucking database.  They aren't hard, kids.",30.0
g8089b7,j6ment,He already talked about the best use case.  Client wants something done quick and they want to read the results without having to tap a developer. Its great for that.,5.0
g80ar2q,j6ment,Throwing together a simple read-only table view of data pulled from a DB isn't exactly difficult...,11.0
g80du9x,j6ment,"Literally the only way you could do something like this for a multi user app and have it stay sane is if you have a service that only writes to the table (web scrapper or something) and then the  table is read only for the user. Once you start trying to use data from you sheets in another application or let users edit that sheet things will start to break down.

This is only good for apps that don't matter, anything else would be better served with a db.",2.0
g8py16w,j6ment,so fun to see how frightened people are nowadays to be responsible for storing data; trying to find the most awkward ways to avoid it,1.0
g7zg39i,j6ment,"No doubt, it'd actually be really easy to swap them into the sample app. I've never tried making a base with more than a few thousand rows, would be interesting to see what happens",4.0
g7zz3ap,j6ment,This thing can be used to automatically generate stats and reports to the executives. They can easily understand spreadsheets,4.0
g7zzwpy,j6ment,"Please don't do this. I know it's possible to do, but Google Sheets is not the correct tool to choose for a database -- even a small one. There are so many data store options out there, in this case AirTable and Firebase would give you the same kind of functionality while acting like an _actual_ database.",11.0
g87st3t,j6ment,"Is there a way to use Firebase as a spreadsheet or in any user friendly way from a non-developer POV? (So like Airtable, basically.)",1.0
g87tx7h,j6ment,"You're probably looking for something like [FireTable](https://firetable.io/). Firebase started life as a tool very similar to AirTable, but their offering has matured significantly, and are now rolled into Google Cloud (cause [Google bought Firebase](https://techcrunch.com/2014/10/21/google-acquires-firebase-to-help-developers-build-better-realtime-apps/) a while back).",2.0
g7ztz2c,j6ment,You can also use [Apps Script](https://developers.google.com/apps-script) as a wrapper of Sheets. I actually used Apps Script+Sheets as a database in my not so important side project.,3.0
g806ijz,j6ment,There is no responsible way to use a spreadsheet as a database. Do not do this for apps that matter.,5.0
g81m9la,j6ment,If a public Google spreadsheet is good enough for all my company passwords... its good enough to store all this payroll information!,2.0
g7zqqy1,j6ment,"(Note I do not intend to actually ever use this, the following is a thought experiment)

Could you get around the limitations of this by using multiple workbooks? Like if you were to use this to store your user data on a massively popular app, could you have a cluster of workbooks handling that?",2.0
g80dqge,j6ment,Hopefully more devs see this and just copy / paste without reading (like I guess they did in the UK). Yay!,2.0
g81rde1,j6ment,happy cake day!,2.0
g80o56m,j6ment,My god please don‚Äôt.,5.0
g7zi3kg,j6ment,"I think you run into a problem once you exceed 1000 records. When that happens and I open the sheet, you need to click Yes to expand it. But I don't know how to do that with code.",2.0
g7zqcdu,j6ment,"Are you talking with excel? I‚Äôve had upwards of 16,000 rows in a table used for a google apps script and never seen that ‚Äúclick to expand‚Äù option",1.0
g7zv4z9,j6ment,In a Google Spreadsheet which I use for logging.,2.0
g7zvqpp,j6ment,"Oh I know what you‚Äôre talking about. Google sheets with automatically expand the rows based on how much data you‚Äôre pushing into it, in my experience. So if you have 5 rows in a sheet and 100 rows in the data Google Sheets with add 95 rows without asking. You may have to use Google Apps Script as the middle of your external script just to enable it to expand if it doesn‚Äôt.",1.0
g7zw451,j6ment,I also ran into the problem when I first delete the first row and then add one. I guess spreadsheets have their limits when you use them as a database.,1.0
g7zwqa4,j6ment,Spreadsheets definitely  have a limit when used as a database. I‚Äôve used them for smallish projects though and never hit the issues you‚Äôre having,1.0
g7zg4jl,j6ment,"I hate these kind of articles, it's an attention grab and provides no real benefit, no sane dev would use excel or google sheets as their DB...",-1.0
g7zglmc,j6ment,"I hate these kind of comments, it's an attention grab and provides no real benefit, no sane redditor would comment something so useless...",21.0
g81ec3g,j6ment,"Nah he's right. Using spreadsheets as a db is a terrible idea, and devs should be discouraged from doing this. Especially given how trivial rendering a table view of data is.",3.0
g7zg945,j6ment,"From the first paragraph:

""great for smaller cross-functional projects where a non-developer might need to examine or edit data.""

I stand by it, key word being ""responsibly"". Everyone on the planet knows how to interact with a spreadsheet, Airtable is a unicorn, and there are smaller companies like Glide as well: https://www.glideapps.com/",16.0
g7zpbbd,j6ment,"Don't worry OP! Don't get discouraged, I love your blog post, will definitely look into using Google sheets, for smaller projects :P.",3.0
g81f0lq,j6ment,How do you responsibly give unrestricted write access to the end users of your app?,1.0
g836ts7,j6ment,Web dev has devolved in to the blind leading the blind leading the dumb.,2.0
g7znhdn,j6ment,TBF I worked on a project once where it was easier to set up a google sheet for a simple 20-items-or-so news feed for my client (just a sentence and a link per news item) than it was to set up a database and CMS so they could edit it.,0.0
g81azom,j6ment,Friendly reminder that Microsoft Excel sucks fat D. Even the most basic of operations either crash or take forever. I do the same thing in Google Sheets and things work just fine.,-1.0
g82i79w,j6ment,"&gt;either crash or take forever.

TIL that Excel solved the halting problem.",1.0
g7zztdi,j6lazu,"Can you clarify what you mean by ""only works with the Win10 SDK?"" I would assume that's only for building the app, not for distributing and running it.

**edit**

The RN for Windows docs specifically mention being able to build standalone apps for installation:

https://microsoft.github.io/react-native-windows/docs/getting-started#building-a-standalone-react-native-windows-app",2.0
g80zbjw,j6lazu,"Microsoft itself uses react-native for their own desktop and mobile apps. From Office, to Skype. They have also taken react-native-windows under their wing. You can of course build stand-alone apps with it.",1.0
g7yoyra,j6imh7,"It turns your directories into API endpoints. For example, the file 

    /some/route/GET.js

creates the route 

    GET /some/route

Appreciate any feedback!",2.0
g7yyaci,j6imh7,"Wew, looks cool. Nice work. Hey, wut about dynamic routes/params?",2.0
g7zgdpv,j6imh7,"Thanks! To create the route `GET /users/:id`, you'd make the file `/users/[id]/GET.js`.",1.0
g7znsk6,j6imh7,Sorry i don't get it... I almost thought you meant creating a new file for each user,1.0
g7zqzrs,j6imh7,"Oh maybe I was being unclear, I meant if you want to take a route parameter ""/:id"", you have to create a folder literally named ""[id]"".",3.0
g7zrrty,j6imh7,Got it.,1.0
g7zw4py,j6imh7,"I mean, it wasn't in the readme so that's why I've asked. But looks cool man.",1.0
g7zyaq8,j6imh7,"Good point, I'll add a note in the readme üëçüèª",1.0
g7yfiyf,j6h9as,"It will automatically refine the mention tags that are prefixed with `@`, according to a predefined list (or can be easily switch to accept any mention word).

Hop that I fixed all bugs. It is just very hard to cover all use cases...

Any thoughts on how it could be improved? Or maybe leave as simple as it is?

Feedbacks and bug reports would be appreciated :)",1.0
g7zdy8q,j6h9as,[deleted],4.0
g7zxnmm,j6h9as,Agree. Thanks.,1.0
g81c8t4,j6h9as, What about https://github.com/zurb/tribute?,1.0
g8h7qq8,j6h9as,"True. And this one is the closest that I found for my needs. 

But, sadly, it does not support parsing an existing text for any mention phrases, which is a showstopper for me. Because, in order to achieve this with Tribute library, it would've require me to do a lot of tweaking and changes in the core of the library, which might take several days to achieve (the longest part, is to read, understand and debug an existing code). Plus, the Tribute library is an overkill for what I need.

Compared to my script, it took me a single day to write this simple functionality from scratch. I know that it is not perfect, but it works for me and maybe it will do the same for someone else.",1.0
g7yelsx,j6h5b8,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",6.0
g7yvl02,j6h5b8,"I want to try it out, but the form doesn't seem responsive. It is taking more space than my mobile's width.",1.0
g7z1255,j6h5b8,It should be working now!,1.0
g7z5bzy,j6h5b8,"Thanks, just another minor issue. The card numbers are not updating on the card, but all other fields are.",1.0
g7zdy60,j6h5b8,did  you just lift and shift the design :p,1.0
g7zehj5,j6h5b8,I think that was the point ü§∑‚Äç‚ôÇÔ∏è,2.0
g7zlf35,j6h5b8,I think there are some race conditions in the input handling code. I was able to get into [weird states like this](https://imgur.com/a/99Z3Unm).,1.0
g80h62j,j6h5b8,"Yeah, I think the problem is with my keydown event listener. Initially, Whenever a key was typed into the input field, the div in the card was not able to replicate the value because the event was triggered before the browser could process the key typed. So I put a setTimeout(*function*, 10) on the function for the browser to process the key typed. But this causes the issue. Do you know a way to fix this problem?",1.0
g7xqsj9,j6dbbm,"It's a cool project, but it seems like a bad idea to produce a second one of these. What3Words works because there's only one. If there were three different versions of it, you'd end up saying you were in the middle of the ocean because the other person was expecting you to use the other one",3.0
g7yvhc2,j6dbbm,Actually I made it for providing open source version with unlicensed. So people can understand how things are works. I am not developed to make money from this. What3words are not open source but this is complete open source.,2.0
g7y6elo,j6bner,"&gt;and style guide rules to help standardize the style of JavaScript

I'm going to focus on just this, since others are already talking about the technical trade-offs off ESLint vs Prettier (vs. Typescript vs. ...)

No matter what approach you use, one of the most important reasons to have consistent style actually isn't for the humans on your team; it's for  for Git. Without code standards, you will have much bigger diffs (ie. more lines of code will be affected by commits). 

This will result in both more conflicts, and messier ones.  When your team has already put in all the effort to make things work perfectly, the last thing you want to have to deal with, when getting ready to deploy, is some funky conflict that didn't need to happen .... but did because Bob wanted to change:

    + if (foo) {
    -  if(foo)
    -  {",7.0
g7xhjds,j6bner,"My first suggestion would be to leave all formatting aspects to Prettier.  Configure it, run it on save, done.  No more arguing about formatting nitpicks in PRs.

I don't agree with every formatting choice in Prettier, but I really like not having formatting arguments even more :)  I also love seeing my code snap into place when I hit save, and if it _doesn't_ snap into place, that means there's a syntax error somewhere I didn't catch.",13.0
g7xlnk1,j6bner,"I've grown so used to the snapping thing to check for syntax errors, that I get really surprised when I program in other languages now.",9.0
g840jyw,j6bner,"Other languages have the same type of thing. For instance, Black for python.",1.0
g7xp3zr,j6bner,If you haven't tried ESLint to replace Prettier I'd highly recommend. It can also format on save and everything else that Prettier can do but is far more customizable.,3.0
g7xt3ud,j6bner,"The whole point of Prettier is that it's not customizable, so you don't end up spending hours thinking about/discussing minor formatting preferences, and just get on and code instead.  


You get used to all of Prettier's settings very quickly as well. I didn't like some of the stylistic choices it enforces at first, but now I can't imagine ever going back. I never want to have a conversation about which code format is better ever again. Prettier ftw.",7.0
g7xu0vo,j6bner,"Oh I love configuring things. The most enjoyable time I had recently was the 3 weeks I spent manually configuring webpack, babel, typescript, eslint, etc from scratch. Our team's ESLint config is about 300 hand selected rules after investigating every single rule and configuration option and the code it enforced one by one. It makes it much easier to build exactly what we want rather than taking some kitchen sink configuration that I don't have control over every little detail if I wanted.",3.0
g7y1pfn,j6bner,I wish I had 3 hours to configure all that stuff on our projects never mind 3 weeks...,5.0
g7y2kj8,j6bner,"It may seem like a long time in the present, but in the long run it definitely pays off.",1.0
g7y4f4h,j6bner,"I don't want to come across as too confrontational but that sounds awful. There's really not a huge amount of rules that have the golden combination of being useful, auto-fixable and objectively always applicable. Missing out on one of these criteria and you'll get developer frustration at best and at worst a code-base riddled with eslint disable comments and more friction when onboarding new developers who might not be familiar with the sometimes really insane custom lint rules people cook up, I've seen some horrifying stuff so I might be biased.",4.0
g7y4wm8,j6bner,"&gt; I don't want to come across as too confrontational but that sounds awful.

No confrontation here. Just a friendly discussion. :)

I feel very strongly that strict ESLint usage is beneficial. With a combination of very strict ESLint and strict TypeScript I am able to write several hundreds of lines of code at a time without needing to actually run it because there's so much static checking to prevent all kinds of mistakes.

I am very much against disabling rules and someone must have a very good justification for doing so. Laziness or ""the rule was too hard to follow"" are not valid reasons. Only if the rule doesn't apply in this specific case should it be disabled. If a rule is disabled too frequently and every occurrence of it being disabled is justified, then the rule probably should be removed.",2.0
g7y6vub,j6bner,"Yeah I agree with you completely, TS and eslint are the way to go - I'm sure you agree that a hugr point of these tools is to take burden off of the developer as well as reviewer. If I as the developer run into issues of as you say ""rule being hard to follow"" then these benefits are lost slightly. Even worse would be having to think about whether rules apply, a burden both while writing/reviewing. Auto-fix support is quite important to me, there are very few useful rules that are an exception that don't support it, but the vast majority of my eslint usage is just automatic and it's great. Again I don't disagree with you about the huge benefits of these tools, just want to entertain the idea that taking them too far can bring in negative effects - but obviously thats for the individual to decide what is too far.",1.0
g7y8ht3,j6bner,"I think the key is to start strict and have an ongoing analysis of the rules as you write code. They should be very strict but not set in stone. As you build new things and bring in new people keep re-evaluating the rules and see if they still make sense and if they are providing value. It's easy to remove a rule (especially when all rules were configured by hand instead of as a ""recommended"" collection). It's much harder to realize that you have issues throughout your code and need to find appropriate rules to add to fix those issues.",2.0
g7z2epj,j6bner,"That's how I see it too, but some of my teammates still wanted to actually have to talk about formatting options. Which created a debate on whether or not we should use prettier. I was a bit frustrated because I like prettier exactly because I don't ever have to think or talk about formatting, yet it happened anyway.",1.0
g8mj6n0,j6bner,"&gt;  No more arguing about formatting nitpicks in PRs.

Something tells me OP works with people who think this is actually their job :-P",1.0
g8nfhyk,j6bner,"Surprisingly, no, I don't :)  Most of my teammates have been pretty good about that sort of thing.  Usually it's been more that _I_ have needed to poke people to make sure things are formatted correctly.  I hate having to do that :)  would much rather reserve PR comments for meaningful aspects.",1.0
g8nqfgd,j6bner,"For sure, I was more making a joke about how maybe OP's coworkers use an ad-libbed style guide as a pretext for turning PRs into a bad reddit thread. I ran into a situation with an agency a couple years ago that did that and it was just ridiculous. If you're just having trouble with formatting have you looked into pre commit hooks, that works well IME",1.0
g7xh9go,j6bner,"* Consistent code is easier to read and understand since every file and chunk of code is the same as the others. Otherwise you need to learn how each unique piece of code was written and try to understand it. This helps make large codebases much more manageable and easier to on-board new developers to.
* There's many different ways to do things in JavaScript that seem equivalent but some have strange edge cases that you may not realize. `parseInt` is my favorite example because most people don't pass a second argument to the method to specify what base to parse with and without it the browser can parse numbers with a leading zero as an octal number and thus produce an unintended result. Simply reading through every ESLint rule and seeing the code before/after will likely teach you so much about JavaScript that you wouldn't realize or catch normally. These things are a lot to remember so why not configure a computer to spot those issues for you.
* Code reviews become much easier since people can focus on the actual high level application rather than ""how"" you wrote your code. You don't need to police your teammates' use of semi-colons, indentation, variable naming, etc the linter can do that for you.

And I'd recommend defining a style guide in plain text first and then building an ESLint config to enforce that style guide as closely as possible. I recommend using ESLint as both a best practices enforcer along with a style enforcer as it's amazing at both and better to keep it all in one tool.",4.0
g7yo862,j6bner,"Thank you. Excellent points!

&gt; I recommend using ESLint as both a best practices enforcer along with a style enforcer as it's amazing at both and better to keep it all in one tool.

What's the difference between a best practices enforcer and a style enforcer?",1.0
g7yt5fc,j6bner,"[This](https://eslint.org/docs/rules/quotes) would be an example of enforcing style with a rule. (quotes)

And [this](https://eslint.org/docs/rules/no-var) would be an example of enforcing best practices. (no-var)

The first one is just personal preference and there's no objectively right way to write it, thus just style. But the second one there is a ""better"" way of writing the same code which the rule enforces.",3.0
g7xhg4m,j6bner,"In general, having standards provides a basis for mutual understanding, facilitate communication and measurement. 

Specifically on linting, it helps to reduce errors and improve the overall quality of your code.

You can even track some metrics as time spent to find errors and relate this with development and reliability costs savings. You can cross other measures as onboarding time for a new hire with and without the use of standards.",3.0
g7xtgi3,j6bner,"Style discussions are a  huge, *huge*, **huge** waste of time. Hours can be put into debating whether arrow functions need brackets or whether to use semi-colons etc. etc. etc. Hours that could be used making your code better.

Download prettier, set it to auto run on save, and never look back. I'm sure people will grumble for the first couple of weeks that it doesn't look exactly how they prefer it, but those conversations are a waste of time. They'll get used to it really quickly.",4.0
g7yjde8,j6bner,"Bike shedding, as it were. Spending more time arguing about unimportant minutiae than getting code done.

The time savings of ESLint + prettier... Worth every minute of configuring it to our tastes 1000-fold. Bonus, auto `eslint --fix` on every commit and style arguments become a thing of the past.",3.0
g7z2wbc,j6bner,"Unfortunately the ones that don't like it will complain about it and we end up talking about style again. At least if they finally understand that their opinions on formatting are purely subjective and that talking about it is a waste of time, we don't need to have that conversation all the time.",2.0
g7yyojq,j6bner,"Lots of good points in this thread, but surprised no one has pointed out that with the [right plugins](https://github.com/nodesecurity/eslint-plugin-security), ESlint can detect security vulnerabilities.",2.0
g7z32ym,j6bner,"I understand why some people don't want things like prettier, but is there a legitimate argument against linters? It literally catches mistakes that could lead to bugs, I don't understand why people would not want that. Is it an issue of configuration complexity?",1.0
g7xh3mm,j6bner,"So code doesn‚Äôt look like crap and best practices are followed (less bugs)

Also look into prettier and husky so it‚Äôs auto-enforced",1.0
g7wy2a6,j69gh3,"After studying *Working Effectively with Legacy Code* and getting an opportunity to conduct a workshop for JavaScript developers on that topic, I've put together this article. Dylan Beattie, an authority on legacy code, [thinks the article is not crap](https://twitter.com/dylanbeattie/status/1311240073774419970), so I decided to share it with you.

The article is my take on Working Effectively with Legacy Code but in JavaScript. You can also find repo with exercises to practice techniques of working with legacy code.",1.0
g86cej4,j69gh3,"Hey, this is nice!  


Props for the legacy code exercises. I think they're nice and short, straight to the point. It's not very common to find examples in JavaScript for Legacy Code, yet there are more and more legacy JS in the wild. So good job!",1.0
g8iy35i,j69gh3,Thank you!,1.0
g7zmjxs,j66f1d,"Though I do agree in general with most of the points I feel like this article can be improved by explaining when these points apply - since a lot of them are far from applicable in every situation. In fact a lot of points seem to be from the perspective of small web apps without much actual functionality to them. For instance the idea that web apps should work without JavaScript should come with a huge disclaimer regarding what types of apps this apply to. Any website that requires interactivity or real-time data for instance should really be making sure that the required scripts are loaded - a landing page on the other hand with a ""sign up to the newsletter"" for could be made without any JS whatsoever (though whether this fits under the term ""web app"" is a debatable). This may be obvious to you as an experienced developer but to someone inexperienced they might come across this article and in the worst case scenario end up with some weird ""JS BAD, HTML GOOD"" mantra - silly I know but I'm just trying to give an example of why I feel that more explanation behind how to decide these things is important rather than just serving them up as facts.",2.0
g80c6xx,j66f1d,"Thanks for reading! It's difficult to apply these ideas without some context of the project, the customer, the team, and the organization. YMMV as a common disclaimer :)

\&gt; Any website that requires interactivity or real-time data for instance  should really be making sure that the required scripts are loaded

Nearly all of these pages \*\*can\*\* be made without JavaScript. Interactivity can be accomplished by using HTML form posts as the base HTML, and having JavaScript pick up and convert this behavior to AJAX. For very large PWAs, this isn't always practical for every interaction, but is still worthwhile for ""critical path"" features. IMHO, applications that have been built this way have had more engaged customers and longer lifetimes.

\&gt; in the worst case scenario end up with some weird ""JS BAD, HTML GOOD"" mantra

Rather, ""JS GOOD, HTML BETTER"". Some things you must have JavaScript for. But if you can do it with HTML, it will be better, faster, and more reliable there. And for what you need JavaScript for, consider an HTML fallback when the JavaScript fails.",1.0
g7ynlrf,j66f1d,"&gt; **14. Ad-blockers break everything.**
&gt;
[Ad blockers are the worst.](https://trackjs.com/blog/avoid-ad-blocker-errors/) In their effort to fight abusive advertising, they have broken code around the web with overly aggressive rules and domain exclusions.

Worth?",1.0
g7ybsoh,j66f1d,"There is no good reason for anything with 777. And if there is you are most likely doing something wrong,",-1.0
g7x499f,j6688m,"Damn, look's good. And last point though üòÇ",1.0
g7xflnk,j6688m,Python will need something like this deadly which can activate virtualenv automatically.,1.0
g7y3g93,j6688m,Thought this said vodka. I am disappointed,0.0
g7wa2x7,j64l1s,Love your stuff!,10.0
g7watx4,j64l1s,Thanks /u/SharathGM!,1.0
g7wcbij,j64l1s,"You are my favorite JavaScript YouTuber!:)
How did you get into all of this low level stuff well enough to recreate in a high level language?",7.0
g7wdm8m,j64l1s,"I think what initially got me interested was learning about older game systems. I watched a lot of the ""Ultimate X talk"" from the CCC conferences, and slowly started picking things up. Then at some point it snowballs and you've gone down all kinds of different rabbit holes.",8.0
g7z2k4w,j64l1s,"&gt; ""Ultimate X talk"" from the CCC conferences

For anyone else who was left scratching heads on ""Ultimate ""X"" Talk""  here you go.   
[https://media.ccc.de/v/33c3-8029-the\_ultimate\_game\_boy\_talk](https://media.ccc.de/v/33c3-8029-the_ultimate_game_boy_talk)

[https://media.ccc.de/search/?q=the+ultimate](https://media.ccc.de/search/?q=the+ultimate)

  


Great vids /u/FrancisStokes Love your content.",4.0
g7whdoh,j64l1s,"Just started with episode one. As a higher level programmer, I've learned so much already!",3.0
g7wbux7,j64l1s,"Beautiful stuff, as always!",2.0
g7wm0hd,j64l1s,Anyone know how this compared to Nand2tetris for example?,2.0
g7wnqth,j64l1s,"It covers a lot of similar ground. I have a [video where I built a digital logic simulator](https://youtu.be/anZPHeA0WKU), which is probably more like the initial chapters.",2.0
g7xksu5,j64l1s,"&gt;Amazing work man !   
**Respect !**",2.0
g7ybbim,j64l1s,I watched the first video I especially like the pace of the video :thumbsup:,2.0
g7yhyea,j64l1s,"I'm amazed of your work, regards!",2.0
g7z7f9b,j64l1s,"Love your channel. I get about 70% of everything (in many cases probably only because it‚Äôs too much info to take in for it too be good binge material). Love and binge it none the less. It has opened up my eyes to a lot of new concepts and made the magic of ones and zeros just a little less magic, in a good way!

Thank you!",2.0
g7ybzj2,j631sc,Cool thanks this looks fun to play with üòé,2.0
g7vtu9j,j631sc,"For those who always wanted to create your own component library but did not know where to start. Here is a solution.  
Now you can start by using this small boilerplate that integrates React-Styleguidist and supports Typescript

Happy hacking :)",3.0
g7vkiu5,j60yz8,"Why ""no TypeScript""? To me, it seems that would be the obvious best-of-both-worlds",7.0
g7vnzdw,j60yz8,"Yeah, seems weird especially that OP claims proficiency with C#, TS and C# and super-similar.

But to each their own I guess.",3.0
g7vs58v,j60yz8,"I'm against typescript because most resources for react are in JavaScript. Same goes for node.js and node for AWS and react native. So I wouldn't want to mess around with both, I prefer to stay with the popular one and learn the JavaScript way to do thing.",-5.0
g7vt5ww,j60yz8,The major component of react (jsx) is also available in typescript called tsx.,7.0
g7vvzhl,j60yz8,"I think you're making a mistake, adding Typescript to react is super simple, and there are tons of resources out there for that exact thing",6.0
g7xy89n,j60yz8,"""most resources for react are in JavaScript"" - Not sure if you're talking about documentation/examples or libraries (or both), but either way, you can still use them in TypeScript.. If it's documentation/example code, you can easily convert it (use the \`any\` type if you need to). If it's a library \*without TS type definitions\* (many libraries written in JS still come with TS type definitions), you still have options: You might find the type definitions in the DefinitelyTyped repo, or you can write them yourself (and either contribute them to DefinitelyTyped or just keep them in your project) or you can just not use types for that library (imports from the library's module will have \`any\` type). Probably \*all\* of the popular libraries you'd want to use come with TS type definitions already though.",2.0
g7vlo3l,j60yz8,"Interesting that you're so against typescript, when it solves a huge downside of JavaScript - messy code and dynamic types.",4.0
g7vn052,j60yz8,"Blazor so far looks [terribly slow](https://rawgit.com/krausest/js-framework-benchmark/master/webdriver-ts-results/table.html), performance is not everything but something to consider, especially when it's slowdown is _twice_ that of the second worst.

(not sure how accurate this benchmark is for Blazor in particular as I don't know much about Blazor, but for other frameworks it's pretty good).",2.0
g7w0qaj,j60yz8,"I think Blazor has potential but it‚Äôs not ready for use by most people yet

I would either say use TS with Node and TSX/React or just use C# for your back end and JS for the front end like god intended.",1.0
g7z7ce3,j60yz8,"So the 1nd stack I see attracts more. And the contest is whether to use js or TS as I see.

I understand that a huge project would be better with TS but right now, I'll try to build a prototype project with serverless nodejs in AWS. For the front end, as small as I can to proof the concept but with good UX, no discounts here. 

Maybe I'll try both TS JS and see how it goes. Although I was writing react in js before.

So, anyone has any good reasons to pick JavaScript instead of TS?",1.0
g7z9iaa,j60yz8,There is no good reason to pick JS √∂ver TS.,2.0
g7vs870,j60yz8,"As someone experienced in both C# and JS, C# is not for web!!! You must be delusional to even think otherwise.",-2.0
g7w6b0d,j60ro0,Mobile?,2.0
g7w7729,j60ro0,It supports all mobile touch events,1.0
g7yahbt,j60ro0,It doesn't work on ios mobile reddit app in app browser. Looks good on desktop.,2.0
g7xhc86,j60ro0,Examples does not work.,1.0
g7xil2j,j60ro0,Which one?,1.0
g7xj4l8,j60ro0,None.,1.0
g7xjdvh,j60ro0,"I can see them all on mobile, can you give me more info? What browser and version are you using?",0.0
g7xlj2r,j60ro0,netscape navigator,2.0
g7xllb7,j60ro0,Awesome browser,2.0
g7xlowt,j60ro0,As is your library,2.0
g7xlvkp,j60ro0,Thanks,1.0
g7wwi4i,j60ro0,:-/,1.0
g7vfhxa,j600x5,"A - most companies it is based on experience. Senior is just a higher paid, sometime more responsibility, than Junior. However, it is a title that has different meanings base on the company that is hiring.

B - yes, read A

C - You assume that is true, but it may not be. I like C# and JavaScript. I imagine you will find many programmers who like and dislike many different languages.

D - telemetry, yeah if you block all outgoing traffic lol. Most companies I work for don't care what editor you use. 

E - no, but I have worked for international companies. Typically if they have a legal entity in your country, it is considered working in Canada, but if not, you are working across two countries. Google to get more details.",7.0
g7vko0n,j600x5,D) WebStorm is a great IDE. Even better than VSCode in some forms (Vue support is better imo),8.0
g7vn9an,j600x5,Once you use Webstorm there is no going back,0.0
g7vtjmd,j600x5,"Nope, I tried it for a week and went back to VS Code. It‚Äôs too fiddley and kind of ugly to be honest, but I know it‚Äôs got a lot of functionality.",7.0
g7wg1zc,j600x5,"Not true *at all*.  I not only used as my primary/only IDE, I loved it so much that I got my school to sign up for Jetbrain's ""free Webstorm for students"" program, so all my students could use it too!

*But* ... today I can report that I haven't used Webstorm in at least two years.  I tried VS Code, saw that it blew Webstorm out of the water in almost every respect (the main exceptions being that Webstorm *does* have a few refactorings VS Code doesn't, and as BreakingIntoMe suggested VS Code a little ""rougher"" overall).

I never went back ... to Webstorm.",3.0
g7vlzbg,j600x5,"Seconded. Been using webstorm for the first time ever. It hogs a lot of RAM, but it does everything better than vscode",0.0
g7vojwa,j600x5,VScode is superior for type lookups and peaks in Typescript,2.0
g7wh1mu,j600x5,"I'd argue it peaks in Javascript ... using Typescript features! :-)

If you put `checkJs: true` in your `jsconfig.json` VS Code will infer types for all of your *Javascript* code.  This means you'll get suggestions when typing arguments, you'll be able to automatically import modules, etc. ... all without writing a single type!

Now, it doesn't work perfectly 100% of the time (eg. if you use Styled Components, which has mini-functions inside template strings, you'll get false warnings about those functions, because it can't infer their types properly).

But it does work (great!) the vast majority of the time, so if you can stand the occasional errant warning (or if you're willing to add one-off types using JSDoc), it's what I consider a perfect 80/20 solution: for (far less than) 20% of the effort (enabling `checkJs` and maybe adding a few JSDoc types) you get something like 80% of the benefits of Typescript.",1.0
g87aa8e,j600x5,"Im curious what exactly u are referring to. Not saying u are wrong but i literally cannot imagine it being even better because WS is pretty much perfect from my experience. Well I use PHPStorm but it should be the very same engine under the hood.

I have VSC installed but I hate that it doesnt have a GUI for configuration. Im being silly I know LOL.",1.0
g87clp0,j600x5,"I do most config in their settings GUI screen.

Also VSCode is way less memory intensive. This by itself made it beat webstorm. Sounds like your computer makes WS snappy because the lag of it on my computer made me long for something else.

WS also has long load times as it indexes things.

Jumping between files is crisp in Vscode. In Webstorm I think it would chain open a ton of tabs",1.0
g7vmjip,j600x5,The one thing I miss is sass support in style tags and liveshare,1.0
g7w0u0g,j600x5,what's wrong about sass support? been using it for years in webstorm,1.0
g7wlgtw,j600x5,"C) I am a java/JavaScript dev. I love them both, but here's the thing: JS is a mess. I'm mostly referring to the lack of a static type system, which for any large scale enterprise project is a huge disadvantage. In the future if I can I'm going to be pushing for typescript across the board.

The truth is that JS was never intended to be the full scale enterprise grade language it is today. The language, frameworks, tools, etc have all been enhanced to the point where JS can accomplish this goal today, but certain things (no type system and the general ""make your code work even if it shouldn't"" functionality) are still there from the original core design.

Again, TypeScript fixes this and is really what should be used going forward for large scale projects.

That being said, there are plenty of Java/C# devs who flat out refuse to engage with JS because they don't want to branch out to something new. I am not one of them, I use JS/TS for all my frontend work, and I love working with it. However, I still disagree with the primary criticisms that JS absolutely deserves.",2.0
g7vp88p,j600x5,"D) I can very much recommend using [VSCodium](https://vscodium.com), an MIT-licensed version of VSCode with telemetry disabled (just like Chromium for Chrome)",2.0
g7vgu5c,j600x5,For E) We have a team of people who work for us from Canada. They actually work for a Canadian entity and we hire them through that. It is a pretty standard setup.,1.0
g7vjrns,j600x5,"c) My boss loathes C# and Java. All of our current projects are either in python, Javascript, or PHP(The PHP project is a little older. He still prefers it over C# and Javs).",1.0
g8g0ahg,j600x5,"&gt; loathes 

why is that ?",1.0
g8i88ut,j600x5,I'm guessing he doesn't like the verbosity of those languages. I'm not sure.,1.0
g7vtb8h,j600x5,"E) I'm a Canadian who contracts for a US company full time, remote from Canada. I don't know much about being a full time employee for an American company in this situation, other than yes, you will most likely need some sort of temporary work permit, along with a work visa and potentially even a dual-citizenship application.  Again, not 100% sure and it probably depends on the contract you're negotiating.  I *do* know it's a long process with lots of room for error, so, do your homework on that if that opportunity arrises.  By that I mean consult a professional, not reddit.

Otherwise, as a Contractor...

As a one man shop you don't need to incorporate and can just file taxes as self employed income under your own name. As soon as you hire employees (and there's a few other qualifying factors, such as having a business name, can't remember them all) you're technically a business at that point and it's a whole other can of worms. You'll want to read up on those rules to make sure you don't fall under that by some technicality.  The tax implications between being self-employed and running a business are big and unless you need to utilize an actual business entity you generally want to avoid it.  But in general if it's just you, working alone, for yourself and/or clients, then you classify as self-employed and life is a lot easier. 

You don't need a US work permit. Seeing as we have a tax treaty, you will have to fill out a W8 form, which is easy.  Part of that tax treaty stipulates that the work must be performed in Canada, so if you perform work while living or vacationing in the US you will owe American taxes as well.  Hint -- don't do this.

You don't need to charge HST to non Canadian clients, and thanks to our treaty at the end of the year you will only owe taxes to Canada. Those will be calculated on your gross income once it's all been converted to CAD, which you can convert however you'd like. It's very similar process to paying taxes as a Full Time employee.  You will pay more to cover some of what an employer typically matches, however you also get to claim write-offs.

Its a little confusing to wrap your head around the first year but it's pretty straightforward all in all. Keep records of *everything*, and if you're not 100% confident then hiring professional help is worth every penny.",1.0
g8g5whv,j600x5,"PLZ check your private msg 

stay in contact with me

your help could be invaluable to me in the coming months",1.0
g7vtbsj,j600x5,"I think one cannot actually decide if someone is a senior javascript developer absolutely. But yeah, based on someone's ability to understand and solve errors before due time and his/her ability to create new functionalities before time may indicate his/her superiority in JS relatively among his/her developers' circle, but still, these qualities cannot decide perfectly if he/she is a senior developer. Still, there will be a lot of people better from him/her in some other part of the world.",1.0
g7vu1o0,j600x5,"Senior developers are expected to fully understand the codebase and know what their changes are going to do *before* they impliment them.  They're expected to know how to create maintainable code, and they should be able to coach others into producing maintainable code, too.

In theory I guess you could *barely* understand the back end and be a senior front-end dev, but I think your understanding of the code will suffer too much.  You'll have to understand what the back end is doing, at least.  But to be honest, by the time you code well enough to be a senior developer, you'll be able to code practically anything with a few examples and a manual.  You'd practically have to willfully ignore backend stuff to end up in that position.

People are elitist.  When people blindly hate on something, just ignore them and move on.  Only ever listen to their *reasons*.  If they aren't giving reasons, they aren't worth listening to.

Webstorm.  (Or PHPStorm, if you also do PHP.)  This is a preference, but after introducing most of my junior devs to PHPStorm/Webstorm after they've used VS Code/etc, they switch permanently.  Our company will even pay for the license because it's worthwhile.  That said, VS Code is plenty good, too, if you don't want to spend the money.",1.0
g7vuaxe,j600x5,"For A), Senior is essentially just a title based on experience, along with a nice pay increase. The main difference is that seniors will usually have a more responsibility and accountability for the project outcomes. But I‚Äôve worked with many seniors who don‚Äôt take any accountability and just do the minimum to keep their job, so it really just depends on the company and the individual.",1.0
g7vx7sx,j600x5,"C - I'm a C# and JavaScript developer who thought the same thing.  Why do so many of my C# peers hate JS?  Surely they just don't understand it.  I was right about the lack of understanding to some degree, but I didn't fully grasp their concerns until I took a position where I became a full time javascript developer.  I inherited a node app where every function basically looks like this:

    async function updateFoo(values) {
        values.someData += values.otherData;
        const updatedValues = await fetchSomethingFromSql(values);
        lodash.extend(values, updatedValues);
        return values;
    }

99% of the functions in the system take in a single argument, **values**, and mutate it and then pass it out the door.  On top of that, Object.assign/lodash.extend is used constantly.  You never have any clue what data is on **values** without debugging it.  

This is arguably harder to de-tangle and rewrite than the worst C# apps I've seen, because at least I have type safety showing me what/where/how data is used.",1.0
g7w6i88,j600x5,"I've had very similar experience on quite a few projects (I primarily work in javascript, c#, and Python)

That or I've seen a lot of places that tried to fix this by requiring doc strings to explain the functions, and their arguments but many of the doc strings were out of date from people forgetting to update them.

Making sure dev's had read through and understood Clean Code, and using typescript usually fixed all those types of issues though for us.",1.0
g7w1d9v,j600x5,"A) Mostly years of XP, but in fact, it should be related to your knowledge in: design patterns, SOLID, FP, testing, architecture, DDD, enterprise patterns, microservices, communication, leader skills ... There are universal values which make you senior in nearly every language.

B) Sure, understanding JS (or any language) is not linked with backend or frontend.

C) Old mentalities probably, maybe the lacks of typing (I love TS a lot). C# has a better environment where you can create SPA/Webapps in C# only (Blazor).

D) JetBrain products are the best for me, I use IntelliJ for everything (PHP, TS, Python). For telemetry, you can use [Codium](https://vscodium.com/) instead.",1.0
g7wa9d6,j600x5,"A) I've read this [blog post](https://dev.to/ladybug/5-skills-you-need-to-become-a-senior-developer-3poe) published recently. There is a shitload of similar publications on dev.to, Medium, Linkedin, etc. but this one catches my attention and it is IMO the true definition of a senior developer.

B) Being a ""senior"" developer is not about technical knowledges (the blog post I mentioned is all about soft skills). However, if you are able to understand the whole picture, knowing a bit about databases, client-server communication, kubernetes, load-balancing, security, etc. I will constitue a huge benefit for you, compared to the xxxx other JavaScript developer.

C) Narrow-minded developers stuck in their vision of JavaScript for the 90ies for sure. Others are just kidding about it without true convictions, making fun of JS is just like making of red hairs... Don't let it affect your career path. About WebAssembly, I don't know, nobody knows, one thing I'm sure is that the industry don't need it right now. You know what the industry needs? TypeScript, fucking TypeScript! Should be far higher on your priority list than WebAssembly.

D) I think WebStorm and VSCode are the 2 mostly used options for frontend development right now. About Telemetry, is it a data privacy concern? Unpopular opinion: I tend to think that this kind of concerns doesn't have a place in our jobs. If you are concerned about your VSCode usage data sent to Microsoft, how can you do this job? I mean, where will you host your project? will you use Analytics? Ads? Amazon, Google are everywhere in our job.

E) I heard that most people work as a contractor either by being a consultant or a freelance, or by being employed by the Canadian branch of the company you work for: some US companies opens branches in Canada just to employ indirectly people for Canada, and they do that because it's very difficult otherwise.",1.0
g7wfcss,j600x5,"A) When you know you're a senior Javascript developer ?

Three answers:

**For Getting Promoted:** It's when you can convince your company you're worth the title/pay.  It truly is that simple: at one point in my career I went from:

* ""not even a junior"" (they had a special position that just did HTML with a tiny bit of Java logic mixed in, via XSLT wackiness), to
* ""junior"", to
* ""dev"", to
* ""team lead"" (*skipping* ""senior"")

... all in under five years.  I swear, I didn't bribe my boss or anything ;-) I just learned a ton and became as valuable as I could. When the time came to form a new team (because the company grew), the company was *happy* to give the role to someone who (less than half a decade ago) wasn't even a ""real programmer"" ... because they knew I could provide that level of value.

**For Getting Hired:**  Essentially the same answer, except ""whenever you can convince your new employer to hire you as such"".  In practice that generally means either already having the ""Senior"" title from your last job, or having a ""just below Senior"" title, and having a solid amount of experience (*at least* 4 years) on your resume.

**For Yourself:** This is the hardest, because it requires a real answer to ""what is a senior dev?""  You can't just hand-wave the problem away like I just did by saying ""it's in the eye of the beholder"" ;-)

I'd say the practical answer is when you are comfortable enough with your tools (language, framework, major libraries, patterns, etc.) that you feel equipped to solve *any* problem in your domain that comes up.

For instance ... imagine the kind of problem that most scares you (eg. if you're a React dev, but you don't understand how React works well, imagine a complex/weird React rendering issue).  Now, imagine you get hired as a ""Senior Dev"" at a company, and on day two your boss says ""we've got this problem, no one here knows how to solve it: you get to fix it"".

To truly call yourself a senior dev, you have to be able to fix that problem, no matter what it may be.  Now this doesn't mean (if for instance you're a React dev) that you have to be an expert on every aspect of React!  But you do have to be proficient enough with it that no matter what the problem, you can debug the issue, use online resources, and ultimately solve the problem.

If there's any problems you *can't* solve on your own, and *need* another dev's help with, you're not yet a senior dev (which is not to say senior devs shouldn't get help from co-workers ... just that they should be *capable* of solving them alone)",1.0
g7whfxm,j600x5,"A) depends on the company but the common things to look for are competency, velocity, and the ability to help others.

B) Yes! Specialization is better IMO, there‚Äôs nothing wrong with learning full-stack but you won‚Äôt get nearly as deep into the intricacies of each domain like that. 

C) A combination of ego, unwillingness to learn new things, or just stagnant mentality.

D) most people I know use VSCode, idk if you can avoid being spied on these days man

E) If you want to have the tax advantage, incorporate yourself as a company and arrange it as contract work",1.0
g7wizdc,j600x5,"A) When you know the difference between what matters and what doesn't without having to be externally informed.

B) It's possible to be a senior whatever.  There are fully frontend roles.

C) Nobody dislikes JavaScript as just a simple browser scripting language.  That's its place.  What those people hate is insisting on using it outside of a browser, instead of becoming a polyglot, because that's just plain lazy, and its quirks become a pointless foreign nuisance.  WebAssembly will never replace JavaScript in the browser for regular DOM things and application logic.  It might augment it in very specific uses that need heavy client-side computation, like games and such.

D) VSCode is good for frontend.  It is not a full IDE because it doesn't really have an integrated debugger.  Browsers have their own in the dev tools.",1.0
g7x0vsn,j600x5,"A) I've had ""Senior"" in my title multiple times and am currently a team-lead for the engineering dept. at my company. You're never going to know if you're a senior developer because the definition changes everywhere but also, the more you know, the more you'll realize that there's so much more to know...

B) So the definition of ""Senior"" changes everywhere but generally speaking, even if you really like to focus on front-end code, you should still flesh out the rest of your skillset. With JS it's actually pretty easily because you can use the same language for backend and frontend code.

C) Javascript is just super different compared to C# and Java and any developer with experience (and therefore opinions) is going to immediately hate new languages and paradigms because it's a slog to change the way you think about problem-solving. Ideally, if you stick with it, you'll eventually start to see why other languages are different and be able to make intelligent decisions about which language to use and when. Except Java, it's literally just worse C# and should be avoided at all costs.

D) I literally don't know or care what all of the other developers on my team use to write code with. I know that some use VIM, some use Webstorm, most of us use VSCode, it's literally a matter of preference. I would imagine there's some way to turn off telemetry in vs-code but I've never felt the need.

E) I've got no experience with this.",1.0
g7xiu4h,j600x5,You are not one.,1.0
g7xzbki,j600x5,"**C)** I don't mind JavaScript the language, and the recent ES6+ syntax has made the language much more of a joy to work with. What I dislike is the whole ecosystem around front-end development.

Front-end devs will typically use something like \`vue-cli\` or \`create-react-app\` to bootstrap a new project, and right from the get-go, you have sometimes dozens of files, hundreds of lines of code, hundreds of megabytes of dependencies just for your boilerplate, and you haven't even written one line of your own code yet! Then there's common tools like Webpack which are a whole entire thing on their own (tons of power and flexibility, also a steep learning curve). Vue-CLI or other fat webapp makers might start you out with a default Webpack config (or not, and imply default Webpack options and if you wanna customize anything you gotta write your own Webpack config and learn what your framework did for you, how to un-do it so you don't step on each other's toes).

The end result of which is: you can get a simple web app going without understanding ANY of the black magic happening under the hood, but if you run into an issue or need a specialized use case, these massive frameworks that hide all the magic end up becoming the biggest obstacle.

I used to be a ""full stack developer"" back when the front-end meant jQuery, and nowadays I'm glad that I moved primarily on the back-end side, where the technology evolves slowly and not a lot has changed in the past 20 years. I'm always waiting for front-end to settle down and produce simple tools that just work without just shoveling decades worth of hacks under the rug and presenting a superficially ""simple"" wrapper over it.

**D)** there is a VSCode alternative called VSCodium, which removes all the telemetry from VSCode and so is like Chromium to Google Chrome.",1.0
g7z0pp8,j600x5,"A - When the majority of your day is spent in meetings, technical workshops, mentoring junior developers, and fighting your superiors to not release something that is inherently buggy just yet. In some cases salary is not a good indicator of seniority - some people are just better at negotiating pay than others, so its entirely possible that a junior could earn more than a senior.

B - Yes. Full stack is not a requirement to be a senior. Consider the axiom ""jack of all trades, master of none"". You also do not need to be full-stack to consider the bigger picture. A systems architect may have more knowledge about the entirety of a system than a full-stack programmer would.

C - JavaScript has some ugly parts and a weird history with no integrated type system and no standard library. Java and C# have all that plus enterprise backing. It's also worth noting the difference in support for multi-threaded programming.

D - The industry will never standardize an IDE. Whatever IDE or text editor you code in is always your own personal preference. I use different editors for different things. If I'm developing remotely on a server, I use a combination of Vim and Tmux. If I'm doing heavy development locally I use VSCode. If I'm on a machine that lacks computational resources I use Sublime Text because it is fairly lightweight to run. I can't answer for the telemetry - I generally don't mind keeping those features on, as it helps the developers of the IDE improve their product.

E - Yes, sort of. I worked remotely from South Africa for a company in Brooklyn, NYC. It's surprisingly not as complex as you may think. There's a *lot* of paperwork initially (somewhere in the range of 80 documents you'll have to sign), the most important of which is a W-8 BEN E form, on that form you'll have to declare your tax situation. You also have to declare how you will be conducting business. In my case, there was a 1993 Tax Provisions Act cosigned between South Africa and the United States that meant I could legally declare myself exempt from paying taxes in both countries, opting instead to only pay income tax in my country of residence. Your situation may differ, however. You'll have to look into it - consult with an accountant. I also had to set up a legal corporate entity to invoice from, as I was hired as a remote independent contractor. These documents do not count as a Work Permit, but if you get a letter of sponsorship/invitation from your US-Based employer, the US Embassy may grant you up to a 10-year visa which will allow you to reside in the US for around a month to conduct business (meetings, etc) provided you don't actively trade by yourself while in the US. That was at least my situation during the Obama administration. Things may have changed, given there's a different president now and taking the pandemic into consideration. As for foreign exchange, it is dependent on your country of residence. In my case, earning in dollars and converting to ZAR (South African Rand) had a marginally sizeable foreign exchange fee. Around 11%, on top of the taxes. ZAR was very weak against the dollar at the time, so I didn't mind it as much.",1.0
g7vlz9b,j600x5,"For C, that depends on what you read and where. More mature engineers who know the history of the different languages will be able to appreciate JS for what it is and what problems it solves, and likewise for any other language.",1.0
g7vmrbb,j600x5,"I find that JS remains in low standing - but it reaches, to quote Rich Hickey.
So it's still a popular language regardless to its downsides.
It's rarely if ever the perfect tool - but yet it's always there",1.0
g7vobxb,j600x5,"Depends on who you talk to. Making fun of JS is basically a meme, and the most egregious one is the 0.1 + 0.2 == 0.3 one that basically means the fella spewing it doesn't know computers. Every language has its downsides. The longer the time you spend with a language, the more you find. I use Java extensively and can find just as many idiotic ""features"" of the language as anyone can fault modern JS, from type erasure to stupid string handling pre-G1GC, to null issues (Optional solves some issues practically, but man is it obtuse sometimes. At least JS is doing something about it, finally) to the lack of string templating, the lack of real async programming, the dumbass way exceptions are handled in lambdas that force programmers to hack around it, etc. If I'm being practical, JS is as perfect a tool for writing browser-based front-ends as we can get now (I'm not saying it's perfect or can't be improved, bloody Date api and anaemic standard library). Even if you could magically make Java or C++ or Rust or Go (lol) run in the browser natively without compiling to wasm, you'll quickly start to appreciate the trade offs that need to be made when handling the gazillion edge cases that JS has to deal with in browser and user land and eventually you'll end up with something JS-like. After all, the language that actually powers the browser is not JS.",2.0
g81cl2t,j5ymk3,How about https://github.com/wilsonpage/fastdom?,1.0
g7uc0kl,j5u5c7,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g7ubqei,j5u5c7,Check out the bot here! [https://twitter.com/botwotabot](https://twitter.com/botwotabot),1.0
g7ui5vi,j5u5c7,But why?,2.0
g7uksv9,j5u5c7,Because I wanted to create something terrible,2.0
g7u7o7j,j5tf30, [What can‚Äôt it do?](https://www.infoq.com/news/2020/06/javascript-spacex-dragon/),3.0
g7uya5g,j5tf30,The great thing about JavaScript is that you can use it for basically anything. Pick something and you can probably use JavaScript to build it.,1.0
g7wclsl,j5tf30,"[https://github.com/RobLoach/node-raylib](https://github.com/RobLoach/node-raylib)  
[https://github.com/lyonlai/blessed-vue](https://github.com/lyonlai/blessed-vue)  
[https://www.cocos.com/en/creator](https://www.cocos.com/en/creator)",1.0
g7w65rw,j5tf30,"Atwood's law: ‚ÄúAny application that can be written, will eventually be written in JavaScript.‚Äù  


You can make anything in JS dude",0.0
g7ttpou,j5ri4v,Interesting but why is this better than Disqus,1.0
g7tubwg,j5ri4v,"Well for one, it's free, whereas Disqus is quite expensive.

But much more importantly, this is an actual open-source project, unlike Disqus, and it's pure Javascript. So, you can extend it or customize it however you see fit -- the backend is just Zetabase (zetabase.io) so you can build whatever new functionality you may want on top.

The way I like to put it is, Disqus is a compromise -- it locks you in, and is limited in its features. Comments.js isn't a compromise -- you will never be restricted because you decided to use it. :)",5.0
g7vv5fa,j5ri4v,"Disqus [loads heaps of trackers](https://fatfrogmedia.com/delete-disqus-comments-wordpress/); Zetabase's business model appears to be ""pay for more storage"".

And Disqus's UX kind of sucks in my opinion... though the OP seems to have its own issues.",1.0
g7uo32v,j5raj2,"Here's my experience with WCs and React:

I first started with WCs and Polymer 2. The main idea back then was that you make an HTML file that holds the template of the component along with its styles (in `style` tags) and logic (in `script` tags). You would use `link` tags to specify dependencies between the components' HTML files and even include other scripts that way.

Honestly, it was horrible. Basically no IDE support (I used VSCode and the Polymer 2 plugin didn't improve the experience), incompatible with many JS libraries, and all the problems of WCs (more on that later).

But as soon as I finished the website, Polymer 3 came along and with it, Google stopped working on Polymer 2. With the framework backing my site now dead, I ported it to Polymer 3 and maintained it for about 2 years until LitElement came along and with it, Google stopped working on Polymer 3. Polymer 3 was better than 2 by far but still not good IMO. Having used WCs with Polymer 2 &amp; 3, I can see why people say that WCs failed, so let's talk about those.

__Web components__ are great for isolating parts of your website. Styles for a specific WC won't ""leak out"" and affect other parts of the website and you can structure web pages into logical parts. Best of all, you use them like any other HTML tag. Quite elegant.

However, there's a price: __Flexibility__.
Since styles of WCs can't affect each other, it's really hard to implement page-wide changes like the switch from desktop to mobile mode. (Maybe this was a specific limitation of Polymer or I just didn't know the one trick, but adding the mobile mode took me 2 days for a relatively small site.)

__The cost of abstraction__ is also quite high. Creating a new WC comes with some costs. There is the issue with styling but also passing data around. When using WCs in a declarative manner, you can only pass data via HTML tag attributes - meaning string values. You can't just pass in an array of elements. Using a setter method helps but then your component is inherently mutable which brings its own set of problems.

Back to my Polymer 3 website: After accepting Polymer 3's death, I completely reimplemented the website with __React + TypeScript + Gatsby__. This was my first time using React, so I had to learn it while porting the website.

It took me 4 days to learn React and reimplement the website that I spend one month building with Polymer 2. That alone should speak volumes about how easy to learn and use React is.

__React components__ are pretty neat. They are immutable (kinda) and force a one-way data flow which makes them easy to reason about. 

Their cost of abstraction is almost zero. The simplest React component is just a JS function - it can't get much simpler. The only cost here comes from the one-way data flow. Passing any kind of data down-wards is trivial but going up isn't. To pass data to parent components, you have to use callback functions. This isn't a huge issue but something you have to get used to.

Styling is highly flexible since you can use vanilla CSS without any isolation. This makes it flexible (the mobile mode was really easy to implement) but it also means that different parts of the page can affect each other. You can use CSS modules for isolation or CSS-in-JS but I didn't, so I can't talk about it.

React has other downsides too. One huge pitfall I found is that you can't initialize the state of a component from its properties. This can be worked around but it was really annoying to get out of that pit. Another downside is performance but this wasn't an issue for me.

Before reimplementing my website using React, I also took a quick look at LitElement. From what I see, it's just the next iteration of Polymer. The cost of abstraction is the same as with Polymer (just look at the page about [properties](https://lit-element.polymer-project.org/guide/properties); Passing data around shouldn't be that difficult) and styling doesn't seem to be any easier.

Also, looking at Polymer's history, I wouldn't count on LitElement being around for too long. React, on the other hand, seems to hold itself pretty well in that regard.",4.0
g7v9hbh,j5raj2,"&gt;One huge pitfall I found is that you can't initialize the state of a component from its properties.

FWIW, that doesn't sound right - this is very doable in both function and class components.",3.0
g7vvt0g,j5raj2,"Yes, that's true. I made it sound like this is true in general when I really meant one specific case: You can't initialize the state of a component from its props in the constructor.

Even that statement isn't true. You can do it in the constructor, it just breaks your component because of how React reuses objects. This is called derived state and [this blog post](https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#common-bugs-when-using-derived-state) explains the problem (and solutions) really well.

But the [doc on state](https://reactjs.org/docs/state-and-lifecycle.html) doesn't mention this problem, only the [API reference](https://reactjs.org/docs/react-component.html) does (once!). As a beginner, you have no reason to believe that such a problem exists, hence I called it a huge pitfall.",1.0
g7wpk9k,j5raj2,"It's not in the docs for good reason, as the article you linked discusses. If you are setting initial state based on props, you're using react wrong. Hell, I would reject any PR that I see at work containing such a thing.

When you set state based on props, then that state has to be updated whenever the props change. This is a pattern that tends to get ugly fast, and it's also completely unnecessary. This is because using the props directly is always a simple and elegant way to go. If the value of the prop needs to mutate, you should be passing down a callback function to mutate it at the source. If it needs to be modified in one particular component, you should apply the transformation to it prior to rendering.

But please, for the love of God, don't put props into component state. Thanks.",0.0
g7wrace,j5raj2,"&gt; It's not in the docs for good reason

What I want to see in the doc is a clear warning saying that you shouldn't derive state from props. Hide the workarounds away but tell me that I'm not supposed to derive state.

I mean, just look at the [code examples](https://reactjs.org/docs/state-and-lifecycle.html#:~:text=constructor(props)). The `props` parameter is right there in the constructor. The only thing holding me back from using it to initialize `this.state` is the knowledge that it will break my component and yet, this extremely important piece of information isn't communicated.",1.0
g7wrxva,j5raj2,"I can respect the fact that it should be discouraged more. I'm sure there are edge cases with benefits, but I've been using react in enterprise applications for the last few years and I have yet to see any case where this pattern provided a benefit and plenty of cases where someone trying to implement it made things worse.",1.0
g7vhfna,j5raj2,"&gt; Also, looking at Polymer's history, I wouldn't count on LitElement being around for too long. React, on the other hand, seems to hold itself pretty well in that regard.

Yeah, difference in stability is crazy - for contrast, last _breaking change_ in React was in times of Polymer 2. I found that WC ecosystem is not very stable in general, big breakages in available open-source happen regularly as new standards are introduced, i.e. shift from css mixins to css vars, then from css vars to shadow parts. Now that internals were standardized, I expect a lot of breakage in every lib that has to do with forms.",1.0
g7v1q96,j5raj2,"&gt; Since styles of WCs can't affect each other, it's really hard to implement page-wide changes like the switch from desktop to mobile mode.

I'm using WC's for a project and I think this problem is only as much of a problem as the developer lets it be, if that makes sense.

The ""standard"" or typical WC implementation has CSS scoped to the DOM element, usually with the shadow DOM, but on my project I totally disregarded that pattern.

I find that the shadow DOM goes against the ""cascading"" part of Cascading Style Sheets. So, my WC's don't use the shadow DOM, instead they just render regular child elements in the light DOM, and I have a separate SCSS file with proper cascading styles. I'll have generic `h1, h2, p, a, .user-content, .section-title, etc` styles that apply to all WC's that use those classes, and then I'll have a `.some-element {}` declaration with nested styles that are ""scoped"" to the element, like you'd find in the shadow DOM. Each WC gets it's own SCSS file, so it stays neat and organized.

The obvious downside is that the portability of these WC's is nullified. I won't be exporting any of these WC's for other people to use in their projects, but that's okay because my `settings-panel` and `track-list` WC's were never intended for use outside of this project anyway.

I really like my approach for this project, but I can see how it wouldn't work on other projects.

&gt; Using a setter method helps but then your component is inherently mutable which brings its own set of problems

Maybe I'm misunderstanding, but by mutable do you mean it can't change without performing a full render? Many of my WC's implement partial rendering, or wait for the user to interact with it before performing a heavy query on the database, and the mutability of the WC's allows me to do some pretty helpful optimizations.

Again, I've never used React, so maybe I only like WC's so much because I don't know what I'm missing out on, but I really do like WC's. They are so simple and easy to use, with so few downsides that I can could them on two fingers. I've also never used LitElement or Polymer, I try to keep it as vanilla as possible.",0.0
g7w0qlo,j5raj2,"&gt; I find that the shadow DOM goes against the ""cascading"" part of Cascading Style Sheets.

I think, I know and agree with what you mean but _cascading_ refers to [this](https://en.wikipedia.org/w/index.php?title=CSS&amp;oldid=981537831#:~:text=The%20name%20cascading%20comes%20from%20the%20specified%20priority%20scheme%20to%20determine%20which%20style%20rule%20applies%20if%20more%20than%20one%20rule%20matches%20a%20particular%20element.%20This%20cascading%20priority%20scheme%20is%20predictable.). The shadow DOM only limits the elements a selector can match. It doesn't affect the cascading behavior.

&gt; my WC's don't use the shadow DOM

The shadow DOM is a core part of the WC concept. Not using the shadow DOM is not an option when using Polymer (and LitElement, I assume). While it is technically optional, the frameworks force your hand in that regard.

You don't have this problem with vanilla WC, however... Polymer and LitElement aren't here for the giggles alone (hopefully). If they didn't solve real problems of vanilla WCs, I doubt they would have ever taken off. Unfortunately, I don't know anything about working with vanilla WCs, so I can only guess as to what these frameworks make better.",1.0
g7u7fhw,j5raj2,"Im a big fan of web components, I can understand both sides of the argument but if you are using a framework for web components a lot of the differences goes away. My business built our own open source framework similar to react‚Äôs api with angular‚Äôs cli but its built 100% with web components. Im currently in the process of building a new website and an app with this framework and i personally enjoy that the components im building are running closer to the platform itself and if needed could be used with another framework.

If you have more experience with just vanilla js you may enjoy web components with lit-element better than react which introduces jsx and other gotchas. However there is no denying that react is more popular. I would go with whatever option you would have less of a learning curve with.",1.0
g7uli78,j5raj2,Thanks for the feedback!!. I'll give web components a chance then.,1.0
g7t95wb,j5ohos,"This is a open source project and everyone is welcomed to contribute.
https://github.com/lelouchB/final-space-api

Thanks",1.0
g7t8ach,j5nyk0,"Hello all, author here. This post links to rubico's introductory home page. The rest of the website consists of API documentation and a blog about rubico, JavaScript, and functional programming. If you are looking for a clean, functional way to handle promises, I encourage you to give rubico a try.",1.0
g7tihoa,j5nyk0,"I‚Äôve never understood why people prefer importing a map function vs just using the built in array one.


Instead of map(logTodoByID)(todoIDs)
Why not todoIDs.map(logTodoByID) ?",0.0
g7tt9kg,j5nyk0,You can start by looking at the difference in their signatures.,3.0
g7tth6h,j5nyk0,And you mean what by that....?,0.0
g7tyh52,j5nyk0,`.map()` is a method on an object. If you‚Äôre wanting to program functionally then objects are a no-go.,4.0
g7u471r,j5nyk0,"Idk if you're going for broad strokes, but that last statement is way wrong. FP and objects are NOT mutually exclusive.

The practical difference between [].map() and map() is the prototype method lends to composition by dot chaining, whereas the standalone function generally lends itself to point-free composition (pipe/compose/operator).",2.0
g7u4hvq,j5nyk0,"Depends on your definition of ‚Äúobject‚Äù. If you just mean data structure, then sure, not exclusive. But OOP‚Äôs definition of ‚Äúobject‚Äù? Yeah, can‚Äôt have that. Objects have side effects by definition.",1.0
g7u5ca8,j5nyk0,I wouldn't be so absolute. And objects do not necessarily have side effects.,2.0
g7tzvds,j5nyk0,What? You can use map in functional programming.,0.0
g7u0laf,j5nyk0,"If it were a function, sure. But JS‚Äôs `map()` isn‚Äôt. 

You can‚Äôt call functions on objects, only methods. Methods are OOP.

PS: Stop immediately downvoting all responses like a child.",3.0
g7u0qdz,j5nyk0,"What are you talking about? Functional programming is mainly about using pure functions. Map is a pure function.

Sounds like you don‚Äôt understand what functional programming is.",1.0
g7u4458,j5nyk0,JS‚Äôs `map()` is not only not a pure function but it‚Äôs not even a function. It‚Äôs a method on an object. Methods have side effects because they‚Äôre an OOP concept.,1.0
g7u6bcq,j5nyk0,String.prototype.toUpperCase,1.0
g7u8crq,j5nyk0,"Are you trying to say something? That‚Äôs also a method.

P.S. Still love your instantaneous downvotes",2.0
_,j5nyk0,,
g7ulejo,j5nyk0,"If we're gonna be pedantic, methods are functions (according to typeof and friends, for example), but they are not always pure. Some statics like Math.pow are pure. String.prototype.toUpperCase is NOT pure because it internally reads `this` (which has dynamic scope): i.e. 'const upper = ""foo"".toUpperCase; upper()' does not yield `""FOO""` like a pure function would (in fact, it throw at runtime, which is a big no-no in true FP). Array's map is impure for the same reason. Array methods are often used in a way that pretends to be ""pure"" (in the sense that they do not mutate state through their usage), but being actually pure means you can't break the purity no matter what (e.g. through changing what `this` points to, or other shenanigans).",2.0
g7u15xm,j5nyk0,"From [rubico's docs on `map`](https://rubico.land/docs/map):

    map(mapper)(functor) -&gt; Promise | Functor‚Äã

where

    Functor&lt;T&gt; = Array&lt;T&gt; | Object&lt;T&gt; | Set&lt;T&gt; | Map&lt;T&gt; 
               | Iterator&lt;T&gt; | AsyncIterator&lt;T&gt; | { map: (T =&gt; any) =&gt; any }

as in, `map` takes a mapper function, a functor, and returns a functor; and functor is either Array, Set, Object, Map, etc. or any other object that has a `map` method on it. Greatly simplifying, ""functor"" is a name for data structures that support transforming values in a context or wrapper.^1

Compare it to `Array#map`, which takes an array (via `this`), a mapper function and returns an array, and you hopefully see how `Array#map` is a specialized `map`.

The answer to ""why do I want a generalized `map`?"" is the same as with any other argument for parametricity and polymorphism.

&amp;nbsp;

---

^1 I'm actually a bit surprised to not see `Promise` listed as a possible functor since you can sort of map over value in it's context (with `.then`, although with a caveat that it also behaves as `.flatMap`)",1.0
g7z7bgb,j5nyk0,"The real benefit is that an atomic `map` function can be used on more types than just an array. it can be used on objects, arrays, and anything that implements the `Functor` type specification. So you use the same `map` implementation for every different type of data structure that is mappable.",1.0
g7tna63,j5mtlp,"Love it!

USD is dollar sign first tho.",10.0
g7to009,j5mtlp,Oh oops I'm stupid thanks :D,3.0
g7sxqib,j5mtlp,"Edit: github link was broken, fixed now! https://github.com/DavoMyan/Reddit-Award-Price-Viewer

It really puts into perspective how much reddit earns through awards. Example: https://i.imgur.com/SabovLO.png

A chrome extension that shows the total price of the awards on a reddit post

You can either install this chrome extension via this chrome link Or download this repo (includes more explanation about how it works) and install it manually via this method https://dev.to/ben/how-to-install-chrome-extensions-manually-from-github-1612

This extension edits your DOM view of (almost) any reddit webpage you visit, this plugin converts the awards of a reddit post into the actual USD$ value. Assuming 1 coin equals 0.4 cents.

I got this idea by looking at Steemit, a social website like Reddit where users get awarded with money for quality posts, I thought of reddit having something of monetary value and instantly thought of translating reddit gold into its actual value. NOTE: So far, this plugin only works with old.reddit.com, there's a handy chrome extension that automatically redirects your browser's reddit page to its old.reddit equivalent: https://chrome.google.com/webstore/detail/old-reddit-redirect/dneaehbmnbhcippjikoajpoabadpodje

IMPORTANT:

This doesn't work with new.reddit.com yet, only with old.reddit, because new.reddit's classes are randomly generated with each visit I will have to find another way to insert the dollar values (I simply haven't spent time on that yet, prioritized old.reddit for now)

This doesn't work on 2nd, 3rd, 4th etc pages. Because the way this code works is it needs to fetch the url/.json of any reddit link, additional pages of a subreddit do not have this .json (as far as i know)(so this only works on frontpages)

Sadly this doesn't work YET with nested replies, I later realized I will have to rewrite my code into a recursion to support all replies, more explanation below:

Hope you guys like it :)",19.0
g7szoiv,j5mtlp,"Doesn't this ignore the fact that a significant amount of coins are given away? Like, receiving gold gives you coins. And a lot of coins are part of subscriptions rather than directly purchased...",25.0
g7t1lxt,j5mtlp,"That's right, no idea how to differentiate between them. I just wanted to make a neat small project so here I am üëÄ",37.0
g7tlm5n,j5mtlp,"&gt; Like, receiving gold gives you coins.

Yea, all the awards I've handed out were paid for with shitpost coins.

E.g. if you give someone a gold award for 500, they get 100 of those. So, the actual amount which went up in flames is only 400 coins.",12.0
g7u4boa,j5mtlp,"Since you're looking to support [new.reddit.com](https://new.reddit.com), you might want to take a look at these CSS queries I wrote. They will automatically find ""post bars"" (the place that Reddit puts awards). This example snipped will highlight any ""post bars"" in blue.
```javascript
var postBarSelectors = [
  // Select bars of text/link posts
  ""div[data-click-id=body] &gt; div:nth-child(1)"",
  // Select bars of image/video posts
  ""div[data-click-id=background] &gt; div:nth-child(1)"",
  // Select bars of opened posts
  ""div[data-test-id=post-content] &gt; div:nth-child(2)"",
  // Select bars of comments
  "".Comment &gt; div:nth-child(2) &gt; div:nth-child(2)"",
  // Select bars of comments made by moderators, the OP, and you
  "".Comment &gt; div:nth-child(3) &gt; div:nth-child(2)""
];

s = e =&gt; void (e.style.border = ""thick solid #0000FF"");
t = q =&gt; void document.querySelectorAll(q).forEach(s);
postBarSelectors.forEach(t);

```",4.0
g7tqu2p,j5mtlp,"Note, the price of gold (at least) has changed. Before there was silver, gold, and platinum, there was just gold for ~$3 cheaper. Old gold stayed as the gold award even though they have different effects (in terms of the gift received) / cost.",2.0
g7tda6f,j5mtlp,"Firefoxify?

&amp;#x200B;

[https://hacks.mozilla.org/2015/10/porting-chrome-extensions-to-firefox-with-webextensions/](https://hacks.mozilla.org/2015/10/porting-chrome-extensions-to-firefox-with-webextensions/)",2.0
g7vp9y5,j5mtlp,You could look for the image src assuming those aren‚Äôt randomised as well,1.0
g7u58y0,j5mtlp,"How is the money measured, like in the smallest coin purchase that could‚Äôve bought all the awards, or are all the awards measured individually?",2.0
g7u6h1x,j5mtlp,"I calculated how much 1 coin is worth, thats 0.4 cents, now I multiply the coin value of each award with 0.4 cents",2.0
g7uhx60,j5mtlp,Which purchase is it based off of because the different sizes have different values,2.0
g7uj3r0,j5mtlp,"1 coin equals 0.4cents, I based it off the first purchase",2.0
g7ukfao,j5mtlp,1 coin can be purchased for cheaper,3.0
g7ul4rw,j5mtlp,Yes I went for the worst case scenario,2.0
g7v4tk8,j5mtlp,Why not average their potential costs?,1.0
g7uw6ra,j5mtlp,thats a solid idea! nice one.,1.0
g7vkioi,j5mtlp,whoaaaa soooo coooool,1.0
g7thl87,j5mtlp,üòÇ what is gold or awards?,-1.0
g7tmeml,j5mtlp,It's the participation trophy of the internet.,3.0
g7tgmk6,j5mbrh,Holy shit this is one of the coolest things I have ever seen,1.0
g7tyrqc,j5mbrh,Wow. Great walkthrough of a really cool project. Also hilarious.,1.0
g7t26ul,j5kwmd,"I don't understand: how do you release an extension that sounds exactly like the built-in browser tools ... and not say *anywhere* on your site (it's not even in the FAQ, let alone on the front page where it belongs) ... what is the difference between your extension and the built-in tools?

If you don't, you're not answering the very first question on most people's minds: **Why would I install and use this extension when my browser already has tools built-in?**",3.0
g7tabc2,j5kwmd,"This is the same question I have when I first spot this extension with such a generic name. But after I installed and tested it. I just see how many functions it provides which doesn't have in build-in dev tool. For a web developer, seems that's very useful. I already use some of the functions such as the cookie tool, but I still need to explore other functions.",-1.0
g7taqzs,j5kwmd,"Right but ... surely you would agree that if you make an extension, it's an unrealistic expectation that your users will download, install, and play with said extension, despite not having any idea what it actually does ... right?

In other words, if you make a Foo extension, it should be clear what Foo does on Foo's page? And if the browser comes with a built-in feature called ""Foo"" (eg. your extension is called ""Bookmarker""), one of the absolute first things you should explain is how your extension differs from the browser functionality.",4.0
g7sl35m,j5kufo,"[The React team is working on a major rewrite](https://twitter.com/rachelnabors/status/1301506538591395841) of the React docs site at https://reactjs.org, and is looking for community feedback on how people currently use the docs and what improvements would be most helpful.",3.0
g7taqdc,j5kufo,imagine being one of the top-funded projects by a company that is known for being very lax with data processing laws and still have to resort to surveys.,0.0
g7sjln0,j5kda7,"Specifically it‚Äôs about what you particularly want to do. 

JS is useful in many companies because it‚Äôs the core of building internal tools and making web apps. (Think making dashboards and interactive visualizations of data)

You should definitely know python because there is an established domain of doing data science, analysis, and machine learning. (Think analyzing costs, market behavior)

One thing you can do is ask professors in your field and ask industry connections what languages they see are being used and start to learn those.

Most people that I know who use javascript on a day to day basis also know a good bit of other languages.",3.0
g7skm71,j5kda7,Thanks! Will consult my professors,1.0
g7skdvi,j5kda7,"**TLDR; Yes!** Javascript is useful for any company with a website.

**Longer answer.**  There are two types of software: software that runs on your computer, and software that runs on someone else's.

Software you *install* on your desktop computer *can* be written in Javascript, but rarely is; I would not expect a financial company like say Intuit (with their Quicken software) to use Javascript for it (but they could).

Software you install on your phone can be written in Objective C or Swift (for iPhones) or Java (for Android).  You can also use Javascript to write it *for both* ... but you won't have as precise control (eg. you won't be able to use the phone's latest camera features).  A financial company *may* use Javascript for their phone app; smaller companies (who can't afford to write separate iPhone/Android apps) would be more likely to.

Webpages are a mix of the two: part runs on your computer (the part of the webpage you can see), and another part runs on the company's server.  The *only* language you can use for the part that runs on your computer is Javascript.  The part that runs on their server can be run in any language, and Javascript is one of maybe five that are fairly popular (along with Python, Ruby, .Net, and Java).

P.S. All of the above is talking about financial *companies*.  If you were just asking ""as (say) an accountant or marketer"", will Javascript be useful ...  I'd say a lot less so. Understanding a bit of ""what the geeks in development are doing"" is good for anyone in tech, and knowing how to program a little is healthy for anyone today ... but in terms of practical use Javascript (and any programming language) is mainly only useful for programmers.",2.0
g7tp0e2,j5kda7,"&gt; Software you *install* on your desktop computer *can* be written in Javascript, but rarely is

I would say it's actually very common for modern desktop software to have at least the GUI written in JavaScript. 

League of Legends (client), Steam, Discord, Skype, WhatsApp, Streamlabs OBS.

Almost every major antivirus software GUI is written in a modified version of JavaScript called TIScript.",2.0
g8410uk,j5kda7,"And with electron, its becoming very common to use JS for brand new applications. Slack, discord, etc.",1.0
g7skorr,j5kda7,"Thanks, this will really help!",1.0
g7t33jy,j5j01w,what about automating it using a manual script tho?,1.0
g7tx5r2,j5g6z6,"My new project is all about creating an actual database that can be used from frontend javascript. It's called Zetabase ([zetabase.io](https://zetabase.io)) and if anyone wants to discuss applications I'd love to! I think it's a much better persistence solution for many applications, since you can actually share data between hosts instead of just using browser storage.",2.0
g7vk49u,j5g6z6,This seems like a great idea. Where can I find a repo to contribute?,1.0
g7wt4gr,j5g6z6,"Thanks, we're excited about it! Would love your thoughts if you get a chance to try it out. The repo is here - [https://github.com/zetabase/comments-js](https://github.com/zetabase/comments-js) \- and the website is here - [https://zetabase.io/comments-js](https://zetabase.io/comments-js) (we also made a [tutorial/setup guide](https://zetabase.io/blog-post/setting-up-comments-on-jekyll-github-pages)).

Look forward to hearing your ideas, we're certainly excited to welcome collaborators to the group!",2.0
g7z5oq5,j5g6z6,Great,1.0
g7rpeeb,j5g2ci,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g7rwb4f,j5fq5n,"Hey I really enjoyed your blog writing style and especially enjoyed your animations. You got a new sign up here. Keep up the high quality, perhaps one day you could crowd source a book.",3.0
g7s0pzc,j5fq5n,Thanks man! One day maybe.. haha For now I want to stay more consistent with my blog posts,4.0
g7t63px,j5fq5n,This was so helpful and very easy to follow. I look forward to seeing more of your posts!,2.0
g7t78c1,j5fq5n,Thanks! :),1.0
g7ubnri,j5fq5n,"[**What the heck is the event loop anyway? | Philip Roberts**](https://youtu.be/8aGhZQkoFbQ) **isn't the best video.**  
[https://www.youtube.com/watch?v=cCOL7MC4Pl0](https://www.youtube.com/watch?v=cCOL7MC4Pl0) This one is the best by far. Not even close.",2.0
g7vae98,j5fq5n,"Yeah, this talk is definitely the best at explaining the eventloop. The animation explains it so clearly.",1.0
g7rwjv7,j5fq5n,"Nice post but for the animation, you could add controls to pause/play and to go back and forth with the frame. Or, just make it a video with video controls enabled.",1.0
g7s0mx1,j5fq5n,"Hey, you're right, I'll do that :) thanks for the feedback!",6.0
g7sm4m6,j5fem5,Some people's are giving downvotes. Pls kindly tell me I will correct it in my future,1.0
g7rl1mr,j55l1y,"This is great, I've been looking for something like this for quite a long time. If you allow me a feedback, I think you make the README more appealing if you incude more screenshots!",2.0
g7s0u6g,j55l1y,Thanks! I may do that,1.0
g7pu2hy,j55l1y,"This is a web based TypeScript and React editor similar to the one on the official TypeScript website. I wanted to build my own with these goals in mind:

&amp;#x200B;

* Fully web based (no server side code)
* Full intellisense support for TypeScript
* Full intellisense support for React Library and JSX
* Code is compiled within the browser using the TypeScript JS Library
* Easy to use interface, no bells and whistles

&amp;#x200B;

[https://github.com/nbarkhina/TypeScriptPlayground](https://github.com/nbarkhina/TypeScriptPlayground)

&amp;#x200B;

Hope you guys like it

Thanks!",0.0
g7oki8z,j4zj3c,"Hello everyone! I recently released v0.1.0 and v0.1.1 of a project i have been working on for some time and i thought i would share to get some feedback. If you would like a more in-depth analysis of the goals of the linter you should look at the [r/rust post](https://www.reddit.com/r/rust/comments/j4z1ud/rslint_an_extremely_fast_and_user_friendly/) i made on it, i would love to hear any feedback!",38.0
g7oww4y,j4zj3c,I‚Äôll be following this project with great interest. I‚Äôm loving this trend of JS tooling written in compiled and performant languages like Go and Rust!,52.0
g7p80mq,j4zj3c,"&gt;I‚Äôll be following this project with great interest.

I read this in Palpatine's voice.",46.0
g7pc9nj,j4zj3c,"If I knew more about Rust I'd find a way to throw in an ""ironic..."" joke",6.0
g7p7tzi,j4zj3c,"Like webpack wrote in go, that would be great!",6.0
g7p84mi,j4zj3c,Check esbuild,12.0
g7pcqbj,j4zj3c,"Wow, no way! That's what I have dreamed of! But yeah, I still need the CSS stuff, it would be more useful for CSS-in-JS strategy.",4.0
g7p4ar8,j4zj3c,"Me too, I've been using SWC on the side for a while and it's great!",2.0
g7rwtbq,j4zj3c,"Question: if we are realising these bottlenecks and moving JS tooling out of JS, why is the world still moving to more JS? Aren't bottlenecks in executing code &gt;&gt; bottlenecks in building code?",1.0
g7s3fo4,j4zj3c,"Well there‚Äôs nuance to this. JavaScript was originally built to solve a specific set of problems (work with the DOM inside a browser), and it does it pretty well, warts and all. Other languages like Go and Rust have the advantages of being a compiled language, and offer strong primitives for concurrency and parallelism (as they‚Äôre traditionally more important for backend environments). Because of this, it actually makes a good amount of sense to build tooling for JS / TS in Rust / Go.",3.0
g7sbigy,j4zj3c,"You are kind of describing the problem that WASM is aiming to solve, adding another faster alternative to javascript which can be made from many languages like rust. But Js/Ts will still reign for a very long time, maybe forever.",2.0
g7vw4q1,j4zj3c,"&gt; Aren't bottlenecks in executing code &gt;&gt; bottlenecks in building code?

If that were true we'd be writing everything in assembly. Developer experience usually trumps efficiency, until the latter starts costing money. JS (or Python, Ruby, Lisp, Lua, etc etc etc) is the right tool for many jobs.",1.0
g7q2ld8,j4zj3c,Thank you so much for building and sharing it with the community.,3.0
g7uxa1x,j4zj3c,[deleted],1.0
g7uxdbt,j4zj3c,See [my reply](https://www.reddit.com/r/rust/comments/j4z1ud/rslint_an_extremely_fast_and_user_friendly/g7p49rs/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf&amp;context=3) on the topic on the r/rust post,1.0
g7r8nu0,j4zj3c,"I am loving how web development tools are being written in Rust/Go to run faster. Can't wait to see the Webpack, TypeScript and SCSS stack all running way faster.",15.0
g7rmlg7,j4zj3c,What do you think the relative performance gain is over the alternatives?,1.0
g7rnjyz,j4zj3c,"There was a project that implemented some of Webpack and Typescript's features but written in go and it was an order of magnitude faster.

That said, hard to know if that was because Go is faster or Webpack under node does more. I know JavaScript is very fast and in a lot of cases performance between it and Rust, Go would be imperceptible, but perhaps there are things outside the language interpreter that affects performance",1.0
g7pgskf,j4zj3c,"Since you are in all of this, do you know of any ts language server implementation in rust or go? The existing one is in js and it iterates over options all the time, so it gets linearly slower with the number of types you have",4.0
g7phenx,j4zj3c,"The TypeScript type checker is inherently slow, and the fact that it is [40+kloc](https://github.com/microsoft/TypeScript/blob/master/src/compiler/checker.ts) and 2.3mb in a single file has not encouranged many people to make their own. I know the swc developer is working on one, but he has decided to make it closed source which is unfortunate. Eventually i would like to implement one for rslint for type driven linting, but that is going to take a long long time.",9.0
g7sbxj1,j4zj3c,"&gt; but he has decided to make it closed source which is unfortunate

When did this happen ? I'm now just browsing its repo and blog and couldnt find any mention to it, it'ld be a damn shame indeed",3.0
g7sc6tg,j4zj3c,"I emailed the author 4 days ago asking why he deleted the ts branches, and as i quote:

&gt; I just decided to¬†develop¬†it as a closed source. 

...
&gt; I decided to do so because I concluded that it will be more helpful for the project.

&gt; I want to work on swc full-time in the future (after I graduate), and I thought about the ways to earn some money from it.  

&gt; Then, I found that donation is not enough to move the project forward.

...

&gt; Well, swc will not be closed source. Only the type checker will.",3.0
g7z42mn,j4zj3c,"I understand their reasoning, but I can't imagine that many people will be willing to pay for a typechecker. Sure it will be faster than tsc, but tsc isn't slow to the point where I'd pay to have it faster.",3.0
g818f1z,j4zj3c,"I agree, it came as a shock to me because i dont imagine a lot of open source projects are going to use a closed source tool when there is an open source one which does the same thing but is slower",1.0
g7scpfo,j4zj3c,"Really cannot blame him, best of luck to the owner and the project. Hopefully the owner will clarify later his future plans for the project soon",1.0
g7pi61a,j4zj3c,"Yeah, it‚Äôs a monumental effort. I looked just in the part that does the autocomplete options generation and that is mostly a forEach with String.prototype.includes being invoked a lot of times. I feel that there is room for improvement by using b-tree and maybe some compiled language features like fixed arrays, but I myself am too dump and lazy to get at it",1.0
g7pig9g,j4zj3c,"I would honestly love if the tsc team would split up the checker into files, it would make it monumentally easier for other people to understand it and make their own implementation, i can't even open it in github and it lags in vsc, that's how you know its gotten a bit too large",16.0
g7q6t45,j4zj3c,Any idea why it got to that state? I mean this just sounds ridiculous,0.0
g7q703h,j4zj3c,"What i presume happened is they just kept adding features to it and only select people worked on it, so they did not feel the need to split it up. I will try making an issue since i would love to learn more about it but i wont put myself through the pain of browsing through that",4.0
g7rmotr,j4zj3c,That's not true: https://www.reddit.com/r/javascript/comments/j4zj3c/rslint_an_extremely_fast_javascript_linter/g7rmohw/,1.0
g7rmohw,j4zj3c,https://twitter.com/SeaRyanC/status/1178848975656345601,1.0
g7rnl1j,j4zj3c,Oh I see thanks!,1.0
g7pc2fu,j4zj3c,plans for a babel plugin?,5.0
g7pczjj,j4zj3c,"I don't really think that will happen, but if there is enough of a want for it then i will consider it. I am leaning towards a yes when it comes to supporting TC39 proposals, and jsx and typescript will eventually be natively supported",8.0
g7pnmzf,j4zj3c,How would I try this out for a given node project? I see the installation instructions ... how do I point it to my project?,1.0
g7pnsph,j4zj3c,"After installing it through cargo install it should link the rslint_cli exe to PATH, after that its as simple as running the exe with a glob pattern, if there is no glob pattern it will default to the current directory",4.0
g7qzr42,j4zj3c,"Cool project.
Would you consider hosting it on npm in addition to cargo/is that possible?

Might seem trivial, but it would save me and other devs an install step on my local and deployment machines.",1.0
g7r46mp,j4zj3c,"Yes that will be done, all thats required is CI to build binaries, then a build script to download an appropriate one and link it using npm‚Äôs bin key",3.0
g7r7rf6,j4zj3c,cool so now to run my project with this i need to install rust,0.0
g7r7wsz,j4zj3c,"For now yes, in the future however installation through npm can easily be done, see my [previous reply](https://www.reddit.com/r/javascript/comments/j4zj3c/rslint_an_extremely_fast_javascript_linter/g7r46mp/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf&amp;context=3) on this topic",3.0
g7oz39n,j4ymjk,Can someone give me a high level overview of what decision making is and state machine and or what it‚Äôs used for?,6.0
g7p2jlo,j4ymjk,"Decision Making: A tree representation of a knowledge and certain decisions connected to them. Depending on the data of your knowledge, you have different outcomes (decisions). An example: If it's rainy, take an umbrella -&gt; isRainy is a boolean information in your knowledge, takeUmbrealla is the outcome.

State Machine: Combination of states and transitions between these states. They are the most essential concept of computer science and are used for programming language design (syntax parsing), game AI , robotics etc. The most classic example is: Your coffee machine uses them. I designed this library to use it for game AI. See the examples in the README of the repo and you'll have an idea.",9.0
g7p2pre,j4ymjk,Ok I read your read me a bit and that‚Äôs what I gathered. Making games is something that I definitely am trying to get into and this seemed like some concepts I need to learn but time. Thank you for the reply!,3.0
g7p3kv8,j4ymjk,Good luck!,1.0
g7p4btu,j4ymjk,"Finite State Machines and Entity Component Systems are some really great things to learn if you are trying to write yourself an engine. ECS being a little more advanced, I think. Or maybe I just learned it way later? :)",1.0
g7ojm13,j4ymjk,"what advantages does this have over XState?  


at a first glance, XState looks easier to understand, as you can see the \_Statechart\_ all at once",4.0
g7om831,j4ymjk,This library is not a visualiser but actual implementation of decision trees and state machines.,-2.0
g7on62i,j4ymjk,"XState is also not a visualizer -- it is also an actual implementation of decision trees and state machines \_and\_ statecharts. :-\\

The minimal / base lib is pretty light at 1.3kb (min+gzip) [https://bundlephobia.com/result?p=@xstate/fsm@1.5.1](https://bundlephobia.com/result?p=@xstate/fsm@1.5.1)

Looks like ego isn't on npm, but after downloading and gzipping manually, it looks like maybe 2.6kb?

So, I wonder what additional things ego is doing that maybe XState doesn't do?  


(however, all the bells and whistles of XState are \*up to\* 16.4kb: [https://bundlephobia.com/result?p=xstate@4.13.0](https://bundlephobia.com/result?p=xstate@4.13.0)  (depending on how you're compiling / disributing -- like, the bundled visualized isn't shipped to browsers, so actual size is less))",9.0
g7oog8l,j4ymjk,"I've not heard of XState before. Sounds cool. Was working on game AI so implemented this library to help with decision making layer. I'm not sure if it offers anything additional since I'm not familiar with XState, it's just a decision tree and state machine library :)",4.0
g7opd1d,j4ymjk,"One thing worth mentioning maybe is that I designed this library to plug into my WebGL game engine ROYGBIV: [https://github.com/oguzeroglu/ROYGBIV](https://github.com/oguzeroglu/ROYGBIV)

So the implementation is performance friendly: It means that it reuses as much as it can to prevent triggering GC activity within hot functions. This helps with rendering performance for 3D applications. As I'm not familiar with the XState I can't exactly say if it's something only Ego offers, however Ego is designed for that purpose. So that maybe answers your question.",4.0
g7onvig,j4ymjk,"I realize this could come off a bit attacking / offensive -- that's not really my goal here, and I very much enjoy when people explore the usefulness of state machines! (but, I do think that differences, pros, cons, etc need to be stated when there are other popular libraries that do similar things)",5.0
g7oiem8,j4xlmu,"It's worth noting that `var foo = Object.create(null)` is a thing and solves all these issues. Unlike `Map`, it also works back to IE9.",29.0
g7onzs7,j4xlmu,`Object.create(null)` along with `key in obj` to check for existance solves all issues. `Map` is also an alternative but probably slower.,10.0
g7rjt15,j4xlmu,"I did some benchmarks on it some time ago, and `Map` was a little faster than using plain objects, which makes sense since it knows there's never a prototype chain that needs to be checked.",3.0
g7okmez,j4xlmu,I haven't seen `Object.create` used in forever (like since not long after we got the `{}` object literal syntax) ... but I don't see many devs giving up their `{}` for that.,5.0
g7oqy9e,j4xlmu,"Object literals have been around long before `Object.create`, but it inherits from `Object` instead of null, so it carries since extra baggage.",10.0
g7on16a,j4xlmu,"Hm, how about a Babel plugin that does that automatically? You'd have to specify globs since not all npm libraries would most likely work ootb, but your userspace code could automagically be ""better""...",6.0
g86u2za,j4xlmu,Just beware that if some third party code depends on your objects‚Äô prototype it will crash.,1.0
g7oozap,j4xlmu,"This is a terrible article. An object can absolutely be used as a hash map and often is. The example given is more about criticizing the manner of property nomenclature and value setting. Even then, the example is pretty ugly. Why try to use the slug directly at all? Instead of adding on all these workarounds to try and make that work, could do something as simple as hashing the slug. 

And this one odd example was the entirety of the argument against an object being a hash. 

Articles like this make me sad.",42.0
g7pes8v,j4xlmu,"""Hey guys I found a weird thing that happens when you make this specific set of bad decisions, so here's how to monkey-patch JavaScript to make my stupid ideas work!""",16.0
g7ob65w,j4xlmu,Sure but it can still be used for that purpose just fine. For example just use a suffix for the key and all the described problems are avoided.,37.0
g7od3mh,j4xlmu,"Yea, or use a `Set` / `Map` if available. This post is just a needlessly creative solution that sacrifices readability.",44.0
g7or6u8,j4xlmu,"It's ugly when you inline it, but it certainly isn't ""needlessly creative"". It's an old problem, and [ESLint warns for it](https://eslint.org/docs/rules/guard-for-in), for example.

I'd prefer a simple `has()` wrapper or `Object.create(null)` over inventing a key naming scheme or needlessly using another data type. That's not to say `Map` isn't great, but I wouldn't necessarily use it just to skip a single line of existence checking.",10.0
g7oq3pa,j4xlmu,What is the performance of Object vs Map or  Set,2.0
g7ou8xp,j4xlmu,"Object is more performant mostly because it has been specifically optimized for performance while Set/Map are optimized for good design. 

However, what I've found to be the limiting factor is the V8 optimizations in Node make Set and Map bad for large data sets. Good string transforms hold pointers to the original string exploding memory usage. I haven't dug into why objects containing these strings lose the pointer, but it has worked every single time.",6.0
g7qmwkq,j4xlmu,"According to MDN .. 

Map ""performs better in scenarios involving frequent additions and removals of key-value pairs.""  

and

Object is ""Not optimized for frequent additions and removals of key-value pairs.""

[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)  


Looking at various tests people have done, there seems to be examples of it going both ways.",2.0
g7oe41z,j4xlmu,"Of course an object isn't a hash. A hash is a value returned by a hash function. However, objects do use hashes to look up the values of their properties. So I don't understand what the title is trying to say. Besides the confusing title, the article was good. 

It would have made more sense to title the article ""the problem with using an object as a map"" or something along those lines.",59.0
g7oflrt,j4xlmu,Possibly he could have been referring to a hash map? Agree with what you said though.,20.0
g7ojer5,j4xlmu,That would make the most sense but an object is still a hash map. It just has a convoluted inheritance mechanism.,13.0
g7ohbg8,j4xlmu,"Yeah, in Ruby, hash maps are referred to as ‚ÄúHash‚Äù. It‚Äôs an overloaded term.",15.0
g7okbib,j4xlmu,"He was trying to be clever, to make it a ""sequel"" to his previous ""A String is not an Error"" post.",6.0
g7oqx6m,j4xlmu,"There are different definitions of ""hash"". You're focusing on just one.",2.0
g7on7hu,j4xlmu,So what is the preferred method to create a hash map in JavaScript (that avoids the namespace pitfalls)?  Use the Map object instead of the {} object literal syntax?,5.0
g7onu2a,j4xlmu,"In the limited example given, Map would be the most appropriate thing to use, yes. I'm not sure why they settled on this funky has function instead.",11.0
g7preue,j4xlmu,yall realize this article is 8 years old right?,5.0
g7pvylz,j4xlmu,Seriously. Why are we talking about this?,4.0
g7s4nph,j4xlmu,"It's still relevant.  Saying it's not is making the assumption that every developer knows everything about javascript quirks. As if every developer has also been doing this for 8 years.   

... Or as if the language has changed the behavior of this very simple use case.",0.0
g7pidw7,j4xlmu,"That user who names their post 'constructor' deserves to have their post not work.

""a user has raised a bug, they can't call their post hasOwnProperty.""

""... Tell them to use a different name.""

Also, just make class if you really care, or use a Map instead of an object, or just put a bit more thought into your code.

Maybe the hash keys shouldn't be user input. Maybe you could just remove the objects prototype.

This article is trash.",2.0
g7s4awn,j4xlmu,"Aren't node processes long running?  If someone did do this use case there's the potential of their server crashing due to not knowing user input can break the expected ability to call functions on an object.

I'd argue the article is trash if we assume everyone already knows everything.

In most languages user input in a hash map isn't expected to be able to break your code.",1.0
g7t4xtv,j4xlmu,"The article presents a problem which only happens you don't properly think out your code or make some bad design choices, and then presents another ""solution"" which is really just another bad design choice.  


\&gt; Aren't node processes long running?  
Most node processes I've helped contribute to have short startups and teardowns. Mostly lambda-esque type applications.  
JS has a single-thread for processing which makes it a poor choice for a long running process.",1.0
g86tt0m,j4xlmu,`Object.creat(null)`,1.0
g7ozjbl,j4xlmu,"I assumed this was going to be about js objects actually being pretty slow and losing all the advantages of hashes or something. Turns out it‚Äôs just about name spacing bugs, which is dumb",1.0
g7p89i2,j4xlmu,Can't you just use \`.hasOwnProperty()\`?,0.0
g7pct9z,j4xlmu,The post addresses that.,3.0
g7pe5jw,j4xlmu,That would only apply if you were to overwrite the \`hasOwnProperty\` member higher up in the prototype chain. Seems like a very unlikely scenario imo unless you're doing something funky,1.0
g7qbjqk,j4xlmu,No one is going to mention Object.keys(obj).includes(key) ?,0.0
g7qngcj,j4xlmu,"or \`Object.create(null, {foo: ""bar"" })\`",0.0
g7py82k,j4xlmu,"&gt; The problem boils down to the usage of ""{}"" as a data-structure **where the keys are supplied by untrusted user input**, and the mechanisms that are normally used to assert whether a key exists. 

\-Article, emphasis mine.  


Oh boy. I think I found the problem. It's not JavaScript though.",-1.0
g7osm9f,j4xlmu,"Similarly a method is not a function

Edit: 
Don‚Äôt know why this is getting downvoted, Issa joke :/",-4.0
g7nwax0,j4wvha,"‚ÄúJavascript testing framework generally launches tests in the order they want. Not in the order you wrote it. That doesn‚Äôt help writing end-to-end tests.
I mean async unit test doesn‚Äôt bother me. Because I‚Äôm testing isolated elements. But when performing End-to-End test I want to run ‚Äúscenarios‚Äù where previous actions often matters.‚Äù

This is REALLY bad stuff.

Running serial e2e tests in a real world app is definitely not feasible after a while as it will take forever to run. 

Also you‚Äôre doing it wrong, your tests can never depend on anything but themselves, you most likely need to merge those tests/scenarios. Same rule applies to all types of tests.",3.0
g7obfq6,j4wvha,Second this. Each tests should be independent otherwise what are you testing?,2.0
g7p1iv9,j4wvha,"I couldn't agree more if we were talking about unit test.Here I'm talking about End-to-End test and perhaps what I should explain better in my post: Feature testing.

Let say I want to test ""*Favorites posts*"".*As an user I want to be able to add &amp; remove posts to my favorite to read them later*.

With codecept you can organize tests by feature:

`Feature('Favorite post');`

`Scenario('My favorite list is empty &amp; I see a suggestion to add some', (I) =&gt; ...);`

`Scenario('I add a post to my collection', (I) =&gt; ...);`

`Scenario('Goes to favorite and see a new post', (I) =&gt; ...);`

`Scenario('Goes to post and uncheck a favorite post', (I) =&gt; ...);`

`Scenario('Goes to favorite and the post is gone', (I) =&gt; ...);`

If each scenario where to be launched asynchronously It wouldn't work. I would have to make a giant test. Here things stay a bit divided &amp; organized.

This is more like a test recipe that you could read on paper and execute manually.

On the other hand between every ""Feature"" app state is cleared and therefore they are completely independent.

If I could be sure that the API will return `/favorites` with a post in it before launching `Scenario('Goes to favorite and see a new post', (I) =&gt; ...);`why not do it in parallel then...",1.0
g7pgbfg,j4wvha,"I guess it‚Äôs not that bad if you can make the features run in parallel, doesn‚Äôt look ideal to me because you‚Äôre not achieving idempotency at the finest level you can and you won‚Äôt get the most out of parallelization.

I do get the DX side of it, still I don‚Äôt think it‚Äôs a very good trade off",1.0
g7oktd3,j4v3ee,"Hi, I'm a Redux maintainer.

Skimming the code real fast, a couple observations:

- It looks like your reducer logic is actually mutating the existing state, [which is something you should never do in Redux](https://redux.js.org/style-guide/style-guide#do-not-mutate-state)
- The approaches used here are old and not how we would recommend writing modern Redux code today.

Instead, you should specifically be using [our official Redux Toolkit package](https://redux-toolkit.js.org) for writing your Redux logic.  It includes utilities to simplify several common Redux use cases, including store setup, defining reducers, immutable update logic, and even creating entire ""slices"" of state at once.

I just published a brand-new ""Redux Essentials"" core docs tutorial, which teaches beginners ""how to use Redux, the right way"", using our latest recommended tools and practices. I'd encourage you to check it out:

https://redux.js.org/tutorials/essentials/part-1-overview-concepts

You should also read through [our ""Style Guide"" docs page](https://redux.js.org/style-guide/style-guide), which lists our recommended best practices for using Redux.",3.0
g85x4jk,j4v3ee,"I followed your tip and used redux-toolkit. 

The logic is really neat and could help remove lots of boilerplate code that I had setup in my previous projects. 

Thanks for pointing me in a better direction!",2.0
g7orsnu,j4v3ee,"Thank you for the feedback! 
Indeed, I think the store helpers and the reducer are the same I used 3 years ago with a lot of simplification which could have led to this. 
About mutating the state, is it regarding the reducer using values from `state` instead of something like `const newState = {...state}` or did I miss something else? 
Usually I would not do this but I figures that only the new returned state would count. Looks like I was wrong?!

Anyway I will take a look at the links you posted and try to update the code accordingly.


By the way, nice job at being part of the maintainers of such a useful library!",1.0
g7otc9q,j4v3ee,"That's a shallow copy - it only copies the first level of data.

As a specific example, this mutates the existing `state.modes` section, and should be avoided _unless_ you're using Redux Toolkit:

            const { modes } = state
            modes[payload.name] = payload.value
            return { ...state, modes }

and you're welcome! :)",2.0
g7n3k85,j4ou0g,"Why a clash? Just two diffrent things, and on top JS has a runtime (V8 etc).",3.0
g7nlrwt,j4ou0g,"Good question. It is certainly true if you look at the two languages separately. However, this post is about the conjunction of the two using WASM, where compiled Rust code has to run inside a JS runtime.

The clash I try to convey in this article is mainly about multi-threading. Rust has been built under the assumptions that threads are executed in parallel. In JavaScript, there is no parallelism within one worker and *threads* spawned with `setTimeout()` or `onclick=...` are all executed in sequence. This is how the JS engines have to do it following the specification. And WASM also has to follow those rules.

The problem is that the Rust compiler does not know that threads will run in sequence at run-time. And this clashes hard with some facets built into the Rust compiler. The compiler usually understands very well when something is safe and when it is not, that is the unique strength of Rust over C++ in my opinion. On the web, it fails to do so. I try to show this in the article with some code examples.",5.0
g7nn1up,j4ou0g,"Well you can do parallel stuff in node with workers. Usually you have other bottlenecks, like the database. Real parallel execution is rarely a top requirement in any project node was selected for.",2.0
g7nvct0,j4ou0g,"Completely agreed and that's fine if you only use JS. It is a fine language which I don't want to criticize at all in this article. I am only concerned about the situation where, for some reason, one has decided to use Rust+WASM inside of a JS engine, where it has to follow the same rules that JS has to follow. It was a great effort by many smart people to crate WASM in the first place, so I would assume we can agree that there is an incentive for it. The question then becomes, is it currently easy to do?

In my opinion, the problem is that there is no way to tell the Rust compiler that we don't want parallelism. It really is a weakness of the Rust compiler to always assume everything is run in parallel, hence programmers always have to do explicit synchronization. You can avoid this by only doing computations in WASM that do not require data sharing but it is a really bad idea to replace your whole JS app with Rust just because WASM allows you to do so.

I posted this here in /r/javascript because people here might be interested in using WASM and they might have wrong expectations when reading about Rust in general, not specifically targeted for the web. But I also posted it on /r/rust because folks over there are trying to replace complete JS apps with Rust only.",3.0
g7od8vr,j4ou0g,"I think the fundamental problem is that what wasm was created for, and every people seem to think that wasm was created for are two very different things.

Wasm **was not** intended to replace JavaScript, JavaScript is actually incredibly well adapted to handling Web pages, it's got some sharp edges in a few places, but it works really well.

If you're writing a web page, you're going to have to manipulate the DOM , and the DOM is a **massive** ball of muddy shared state.

There is literally no way to manage the DOM safely in a parallel environment. It's just never going to work.

That's why JavaScript has an event loop in the first place, it's why JavaScript worker threads can't access the DOM. 

That's why WASM actually **does** allow concurrency, just **not** when manipulating the DOM.

When you can natively access the DOM, you **still** won't be able to do it concurrently. 

WASM is designed to do things on the Web that JavaScript can't do, like high powered parallel computation, complex graphics and animations, and other things that JS just isn't designed for.

But the issue that we have is that JavaScript is a language that looks *just* enough like other languages that people coming from other languages feel like they know exactly how it's going to behave, but is actually very different from other languages and so it does not behave that way.

It's like a knife that looks like every other knife but the bit that looks like the handle is sharp and the bit that looks like the blade is not. If you just pick it up without thinking you're going to cut yourself. 

This leads developers outside the JavaScript community to believe that JavaScript is fundamentally broken, so we have this huge load of people trying to replace it with something else, that will work the way they expect it too.

The problem is that, again, JavaScript works the way it does **for a reason**. It's not accidental.

If you want to interact with the DOM you're going to have to ensure only a single thread can touch it, while simultaneously ensuring that you can't lock the whole pages.

You're going to have to accept data with an uncertain type, because web inputs aren't particularly typed.

You're going to have to be able to polyfill apis that older browsers don't support or support weirdly, because even today, that's still an issue.

You're going to have to deal with DOM nodes that exist outside of a single thread scope, but which need to be disposed, requiring garbage collection, at least at the DOM level. 

JavaScript is built to handle these problems, Rust is built to handle other problems, problems that simply don't exist in the web scope.

If you try to build this JavaScript free works, you have to, as you've discovered, make Rust like JavaScript, because, again, JavaScript is like that for a reason, and so you'll end up with all the pain that Rust makes you go through and **none** of the benefits, and you'll encounter nearly all the things you hate about JavaScript, but in rust.",3.0
g7olpgc,j4ou0g,"Very well put! I think you hit the nail on the head with respect to the fundamental differences in design choices. Ones that have been made with very good reasons. And I also have the feeling that many people don't understand this, which was part of the reason I started the article by introducing the background of each languages.

The DOM manipulation is beautifully done in JS and I love the idea of an event loop and workers for concurrency. I also love the lifetime concurrency model of Rust. Both are technically attractive and they solve specific problem very well.

I still believe there is a desire for better library support on the Rust side to make interoperability more approachable. There are people who try to do everything in Rust, including all DOM manipulation. I wouldn't say I'm one of them. But not everything in the browser is a website and not everyone needs to do a lot of DOM manipulation.

I have other things in mind, like complex games or 3D modelling software running in the browser, things that heavily use WebGL and also has a large CPU footprint. I believe WASM is better suited than JS to gain the best performance in such a context and I would like to use Rust to program it. But developers are going to shy away if the compiler and the browser work against them.",1.0
g7oyx70,j4ou0g,"&gt; I have other things in mind, like complex games or 3D modelling software running in the browser, things that heavily use WebGL and also has a large CPU footprint. I believe WASM is better suited than JS to gain the best performance in such a context and I would like to use Rust to program it. But developers are going to shy away if the compiler and the browser work against them.

Absolutely, that's what WASM was designed for.

There's still limitations though on what the browser will allow you to do, and for really good reasons, and honestly, given the nature of the Web, those restrictions are going to get tougher not looser.

I'm not actually convinced that Rust is a great fit for the browser, it was designed to be a highly performant system programming language and it's safety comes with a whole bunch of assumptions, as you've seen, which don't hold true in the browser.

You're going to have to write whatever language you're using understanding the Web as a platform is not the same as a thick client app or even a server. Assumptions you can make close to the bare metal just won't hold true, and Rust, in particular, relies on a whole lot of assumptions to achieve its safety guarantees while maintaining performance. 

WebGL also breaks accessibility completely, so you've got to be quite careful where you use it.

I think there's a space for WASM, but I think it's probably to solve a whole new problem space we haven't encountered and it's going to have to do that under really tight constraints.

We're already seeing a lot of wasm malware and very little real content people actually want to use, so I expect to see a lot of locking down happening and a lot more hesitation to support enhancements.",2.0
g7p1diq,j4ou0g,"Interesting, I can definitely see your points there.",1.0
g7qnsfq,j4ou0g,"WASM is kind of a solution looking for a problem at the moment. It was born out of an era where JavaScript really was the badly designed toy that people seem to think it is today. Google wanted to make their apps faster than current tech would allow and they looked to a WASM precursor to get that extra oomph on slower JS runtimes.

Google at the time didn't have the market share to get it off the ground, and now when it's finally a standard available in all modern browsers I'm not sure what the use case is.

So far at least the only real uses I've seen for it are people trying to use their language of choice instead of JavaScript, with all the limitations we've previously discussed, and malware stealing processor cycles to mine bitcoin.

I'm just not seeing the WASM killer app yet.",1.0
g7ny1w8,j4ou0g,for a moment I thought I was in PCJ,1.0
g7m60yw,j4n96y,Cool I added a full stop to the README and sent a pr,82.0
g7o1zs7,j4n96y,"```
- Project
```

```
+ My amazing Project 
```",22.0
g7m7z2d,j4n96y,Dibs on adding the word ‚Äúamazing‚Äù to some random strings!,34.0
g7m7yo3,j4n96y,Ah shit you beat me to it,12.0
g7j8qyh,j4iv1r,"I think this is more of an React / Proton native alternative than Electron.

The whole reason of electron is to use Browser components and browser development to build your native app. So it should not replace the rendered. That way you can e.g. reuse code from your website and easily test and debug.",54.0
g7jyz4w,j4iv1r,Or just have a wrapper for your website / spa to enhance it with desktop specific features.,4.0
g7komhm,j4iv1r,"I'd say this is more of `react-nodegui` alternative, if anything (they publish both)",2.0
g7juvsz,j4iv1r,[deleted],11.0
g7jwawg,j4iv1r,"https://github.com/nodegui/vue-nodegui/blob/master/LICENSE

They're using MIT, not QT.",-1.0
g7jxqv9,j4iv1r,[deleted],5.0
g7k0qc2,j4iv1r,"unless you statically link to Qt, there's no need to be scared. 

also, IANAL, so you can disregard my comment",3.0
g7k40cb,j4iv1r,[deleted],5.0
g7kn1pt,j4iv1r,"If you use GPL components, you have to obey the GPL.  If you use LGPL componenta, you need to dynamically link, and obey the LGPL.

Qt charts, for example.  Its GPL or commercial, no LGPL option.

Its pretty simple.",2.0
g7k22ql,j4iv1r,"I don't understand: why are you even providing your opinion, on a completely unrelated license, that has nothing to do with the library this thread is about?

I mean, it'd be like if I posted about my personal issues with the GPL3 license (Stallman is nuts!), in a thread about React .... because React doesn't use the GPL3-license.",6.0
g7k4a3e,j4iv1r,[deleted],9.0
g7k7523,j4iv1r,"Ahhh!  Thank you, now it all makes sense.

I have no idea or opinion on whether this thing is actually burdened by QT's license or not ... I just didn't understand why we were even talking about QT :-)",2.0
g7k2qmr,j4iv1r,I reckon it was a joke made when realising his error üòÖ,3.0
g7k36r9,j4iv1r,I don't get the joke; is something maybe getting lost in translation?,2.0
g7ovodb,j4iv1r,"If your main selling point is performance, why not include benchmarks anywhere?",1.0
g7n0ovi,j4iv1r,"Just another V-Dom thing. Why do people not go for Svelte? Its quite popular. Why spend so much countless hours of another VirtualDOM crap?  


In these types of projects where performance is critical, it would have been wiser to go with Svelte. Svelte as of now is as good as any framework that is present in the world.  


Plus one can never hate the Developer Experience it provides. I know React and Vue are good. But they are nowhere near Svelte at all. I stopped usnig React long time back. It was good for its time.",-11.0
g7nvx94,j4iv1r,Did you even understand what is this thing about buddy,6.0
g7wrry9,j4iv1r,"Yes. I have worked on QT. And on Front-end web dev before.

What else was there to understand",0.0
g7k4hqt,j4iv1r,Can you do isomorphic/universal apps with Qt?,-5.0
g7l8kl3,j4iv1r,Why is this tied to vuejs? This is fucking stupid. Why cannot I use jquery? Lol,-20.0
g7mbskg,j4iv1r,If you're still expecting new tooling to support Jquery in 2020 I have some bad news,8.0
g8p01ct,j4iv1r,"Yep, that was a joke obviously. I don't want to use either Vue or jquery...",1.0
g7j795j,j4ie0w,"This is cool, learned something. Title is a bit misleading, it's not for all window resizes.

You need `matchMedia(..)` if you want your JS to support/respond to changes in window-size across responsive breakpoints, the way CSS media-queries automatically do.",4.0
g7j2e28,j4ie0w,window.matchMatch?,5.0
g7icng5,j4eg3o,"I created [WatchCarsLearn](https://manassarpatwar.github.io/WatchCarsLearn/) where cars learn to drive around any track

[Link to repository](https://github.com/manassarpatwar/WatchCarsLearn) if anyone is interested",8.0
g7iksy2,j4eg3o,So cool,2.0
g7imudh,j4eg3o,Thank you so much! :),1.0
g7ided5,j4eg3o,"So both of these were published this week:


[This](https://www.npmjs.com/package/use-easy-infinite-scroll) provides dynamic infinite scrolling in React with only debounce as a dependency and zero config.

And [this](https://github.com/netanel-haber/vanilla-jsx) is a boilerplate that I created that allows writing JSX with vanillajs! I also added a styled-components functionality using emotion. Just clone the repo, run 'npm install &amp;&amp; npm run hot-dev-server', add a file whose extension is '.jsx' and start writing jsx. Webpack and babel will take care of the rest.",5.0
g7imtqw,j4eg3o,That's awesome! I'll keep these in mind the next time I work with react :),2.0
g7phanf,j4eg3o,works smoothly - great job!,2.0
g7pxpde,j4eg3o,Thanks!,1.0
g7ipyd5,j4eg3o,"This is a game i made like a month ago, i didn't know that ""Showoff Saturday"" is a thing here, so i will share it anyway.

An online game where cursors are players, you can draw, chat and have fun.

[https://cursor.zone](https://cursor.zone)

Will probably close the server soon though.",2.0
g7iugr8,j4eg3o,"I am creating a same project. I would say it is very much same to you so now i have a project which i can refer to..  THANK YOU!

edit: realized yours is written in phaser and i am using vanilla javascript..",1.0
g7iv27f,j4eg3o,Funny I was doing the same for a portfolio project. LOL,1.0
g7isuwx,j4eg3o,"Our local model aircraft field is right next to an active airport and if a certain runway is active, then members of the field are not supposed to fly.

The person who is in charge of their website isn't very tech savvy and uses an old school html-editor like dreamweaver to manage the site. They needed/wanted an easy way to add a notification to their website letting people know if the field was flyable or not depending on the status of the runway. so i wrote a script they could just include where they wanted the notice to appear.  

_


[Here's a demo](http://travisballard.com/vfFieldStatus/)

[Here's the repository](https://github.com/TravisBallard/vfFieldStatus).. Open to suggestions anyone may have to make it better as well.",1.0
g7itzt2,j4eg3o,"I created this game in canvas

here is github repo [https://github.com/ps173/Donttouchbaoundaries](https://github.com/ps173/Donttouchbaoundaries)

It is not a good one also cause it is the first one i made..",1.0
g7rgkdq,j4eg3o,"Refound a [Tetris game-within-SVG](https://web.archive.org/web/20200821020042im_/https://itty.bitty.site/#SVG_Tetris/data:image/svg+xml;charset=utf-8;bxze64,XQAAAAIsQAAAAAAAAAAeD8uHEdjOZpEPgx7K/Xsz1H/pt9vjqXEzHlC71iFBWBxwZPK5x3IMwf8+a4jIokNXPHjYaqOt4JH4Z/iC+vDkpbyXPY/H90hMpgjoeEuId5ayQz1fujO9wZ0uwxJ9dt6nYckXxuNTGHOpcZHYqCyloDXZmoxY68UlI5l+hpQS8uLOlIFhZPhDhAHuowVMEz8Fw4ppswgI2aSaFfmme21eW6ZUEmdXsHLpzchRXnanINlJg/5Twhzfx5kqecqwUVyUu5iiCDJE+754pc0Ao25h4Xaq4NFllVwdTugQnQlRqWqNg8orVd02F4lPgLQhJjzMPOsPohx6w2BqFcah7vsWkeESHXTTQ/p4XzE86Bj+51S6jYc5BXRaRr9NjZ179E91Zode5Jbu1lLjyUyH2nxEdF2OvvzNF3L4iS4rinUiyFWepeD1+CSA2KlnmjF/hG8Ju/YnNocERUbevbcgHRylL+FscLJyMa3mBm7CrLaud422/NJrj1vfMInKxo1xVsXMczFX46qJ2xalQrpGU2G+LAWl2n2JyYpRYbLFeFdGXxKL/64YQ+KnhBAY4Ft7Iqk8JDBu4Bh/72xuDnMGpvc8HABVE0OqNBy3W7ZRQfBEYmigQiBtPfxmmJtFD4N6X11xBsjkjxXZd7VhnGhNiptxvuDaGS0DrvZyyRZvnksQ66q2Lx7BLvDZvnNjxt/V0xkGOiDyQuFPu8wCuu7x+8YGUhboZ6wN7LXoTyaCmqqGO/+4bCEFMpuluVmrfmXosUrnxpC9Y8BGZodOZQd9Agg66qzvwYvNA7FpQUw6jgjCI2YRsiIe1eGsRmlMjlbbjdZ+YDJg5TW81UzI7x8w5O4D5aT6ee5yJ/py5mPAqGArVlzk8doBtZZS/VCE8/MU+s1GmeOeSPvUvBBS4OTWEHktkHuqKfif5dy3pcYWFbm9pbMW2QIxAcAVeybga9YCSiG96d5lVUPpttm20XfunI0ryC9GdXD3cXi33l+mEdm0GU9eyO4rmfDFK0Ou4nmRCJ6Oz1PQ2iRq61zvG5dX9Da9IhQZaixbsGujBv0dfNegBHc0RM29KYOBaJSgzNQ1UEmRshydUSCu5qUxH6squElpkKRTM9reSmuAfHllCwpGo97K9x5ZYmsL8QHPSh1kOLvPN3rvT0QGB3XPNbF9/ca+fQMaIfAUTDq9Hpt/jUWrJCivGrbAkYAWWcBUr2WpaAdkINOxSZqlX09JO2jy5g6F4qwrEVJo5NFdHLulL+YgHzBkqYVcPhFRqL9X5VJbuNM2IAqONqIRhFeMog+O9p6St77qa5bvms/td7zESlWDJxxzvSL+M5rb7cYjO/WXtlEoEQ1wLKbFVkOIXIY/2JinME9lSwl6ZNC70kYn48Dg8gm5rZ8QzJUROwUB924qP5OOPmraMH4RrN7/GYVhlDalBoL1i8I0gDfVzoLNfSKDJLpRQjxHYVEGOFkxon9RPbKDWY35miqT3hrG933sF1QZ4Dco1/sJPGr3PvIFL4XR3PwFrzKbWBMQh9aL0xj0sOw3lRiU14cIEhcXAd/QULsF88ctWm9ZohPQt1/QvfYLDbS9ZIQm48RK9RratYsoGne3mWAVc1OlTEB00nXYKdygoyOjX35ALnpaFEf+6oxb/uDwgYDI+0usr72E6+llmMxJrUilOlGqy62BZBm35wxi/eO9Ip75OdvW0dSGcg+dD+378HU+UDv46fF+J5E3K7fRczIkq1e2sQfMDBeZSlgin2QO18CGpo0h8uFHd1s/SqO6t2pvHd5b/GYN9eFOaUu8MSMGAaV824f9RUIo0njdEao1ySxYWN8V53jkY17Zuq6YSRLH9NWRlkaE3fbRDXPz3Vac/GWiyr3iOn93YSDcVaNUWX9IcgdNwFogEL9Torao1VyR++y98fiSl8fNNgmLrTepVUv+7C7FkJMuQ+vxI6NUuYCYAxbE6rxG7O5Y1xfbhIuA8AhNIkXqRW1RW0WDkFqQzxl02ncUoqe5yR7wWPtGezcWyuWj5+CFCi74EEbPo7htN6aQNp2iAqqsOJQeXyyYloZxJ5o77vWFrjYPfe+TmgofEDMuhWOOFZs75R+jKOc3Zs/WDSsvi0GMrOn0rbLLLNHgrOmBhXkYOiJIXhEE+mx6sMqwrT7kCGq6pAZWzO4+mX8kSj/h7p36ZrJN3+B8Ba1OBd6+ZqWhVYKmk+9M0VPYA4CMlxAE957fcvtZPTJAOLSVmAYpEuUEROOJmm2KETH0FVLkIZz14j9HbXfoG0gT4XFiLyug1cEJIGYAp6TBBtSDnYIyOKb2wsBZUCDqWvVkdnHfhm8AP6Q/WgmOzBZCsL8qQ43d6BjDx7ytduP4SFonHe6jWc6gPwwtclSlbngW0CkEpkzP4LtTVl2uvAQ4FX4j43Xcz50vN8RA//87H47fRBtr4MEeFTwjBH6RwzOQDT3ArEbwP1269GGroGW+oz8WWsHgFPXPsdp8Q944goZ4O2EVVIVRIslntOt7J83XgYYsrkptCMbJYOr43L7w9y/t5aybBT8OQyu2J6lUHIhrVnsgqqxFZotjvj93DxzXJW1EADWJMxtCsgjnZdp3CFnUePFK6MF4Mj0BT8s6a/6BmY8VR59ELHp0pZ8JkE1VKiAhjOeXl8WbvSPS7M6SD1FHEzwM6dpS5ssYM46CpgOSajTRw5cZsdOyV1lhhygzWwMKsXwVx4Vz7PMfbj1Ejec9fsImGh4oxu18hh58ZezwX11G4fWK2StSUG+/8+fexAcE7F8qFngjfriLAq78lv3qvbDDrqQ4kUcUJBATaJfdjo65T1fAtCXMTylxB7Ce3yjz7M1Yp5khk5C7SyQSy7pSCDcAGfa4G0iWuQx4fzunYGvdCwa/NBCoSpEoK6lhH+tQ9LgZY/9nXcquc7M3eiwQ63rCVhT54rr/aJXLSNqaWvpu8gefDECJNTt0go5R0psWn6H5tTFoz/h/hVRXDdz1Zo4c2Toi0dQkAv8cfcQVDVV213LVpqsVUOs2q1uSE+eEAqTuaJXPk6JSlod0ZA8uzJC1Ve+UQ57Tf7yvRXG9IvCqzmmNUWrAO3JIfN6PyGPmi50gMcLHEctGlvsVwlMZwmjtgSMXlfqeJBDgFLVa1qph0samuA2MzmmN5vArsaGgVG2PCeTjfO6rHdSxgJsdpJJfeA16cAy9MDgJ2YlxSjwDFAcoLUBVoYBnMnUAi7homgtWYHJowAmMmgHgOhIZrieOldL9pqbd+dgG6aWk0/KLl0zG6ssqJ0osXX+By8XxuW3PKG/MOT2iBQ6gX6h2kXlIRKWRVgqTzhyJvXplAnUf6V9LbY5fgdsVF2fPqHLxOlwAvU+6tNX/bFxG0+IF64NU4dDEfIqoMFtTuZDsSvdQ8QcENPWaXW++f6NnmPLNAXbYbpv5Rwz/7RL6aLJ0EyVILtGhm7Y0uC/ljR9EuKvCxMTCq03VY+S/l+qqyoihssnx9GnG+dYqUMlH+9ZZa3aSzVAeDr6ctD1WNsZrIqoqqXRxriP02ojc3cdFMLhgVq+rs6A1SNA7Xh52VBw/gAEjbOdeQFBj7tBcBmsWXLZb2VEjBIBsIrbKYo6zEhVXwn72g2MXSwjyJ/+XEmxJQO/HuA0EwAXhQypOPUO11FuIpnOs3VME/m5zYu8HzafRtgvC9EfXarz1j3sfWjqXLZBfOoUvFzO6NCaUspx3GU/I+WXYBweXkIoXQv7nxTrWAdfT6k4UppyChOil8F/CLZq9i1an/a4NbL6KSE8aLgPks/0Wx6K6gBoQb8ST02D/Fy8gWCa3IAr7XZdgEL1zHJM00sHLriI1MnNAORsGbpDe2GSHMvFayPN1t2szSuK1jc9E3OKuBE84Y11NMyCXpX4Kbld5L3b1FOCl0WnXAVidHisXYyN5Ltm39CyJmS31Lo9j5jmVjnTymqfecxO/vLeBOclaK6lgmmihUwobeFHtOzUq2W9BlA6BQIQ2QXwzUUcee6B6SFDreWOr3Lj1o87hWrrsLx8TRJq/wjGndTkM8cMhIW0SxIlrtmLW3x7Gs/5bjc3TN5DHW3nztjKqFGPd2rzBRw2WNB9iO315LQalWuPIbq0TmIGKyKtn6Y6yzpwWWt8TpwEQD+scKNspx2veAFDI9gJMSZ5fBw5b+kCa+y/dZmvMIn7/LbordXRchiH3SkinsA+T9TdkFs4stFH4QdUX7ySMXi/HP85Nc4tNi/4Pjd/5rBMyMDjpNl1AKGSnNhYOpH2dt4lEz/tz1QSnc/atJuIPXHc3qBlOAkE3JYhr4rnqyLT9D2CiZFl9rn8eejfccfr7IC3fK58ZkgwR6LurKyJ4b+lk8gyoOQLdb870A3x53M+o/HLHi2HZYCwQm4pupfv1dLAdLVJb7HAYQuO4FEqP3PadB2UIelcH+Z6McC41n1thR5TPSu/2MTzlRbwh9tmJG9VM6d+C5C/dw9KKSqx7iFoa5KQcdwzDAgMICIQQFHJuQeK46eK4P60q2nJ9GZ6hFtiCtfaXLOUPJ0EN8tOc4zW/5TzQfA98zJIU0Lz3ewb7ZmK/RGgbteKHOUhHcShC0qzcHkhg8aJoGQg6ctjAZh60+vsI/onwPRjUarqK3I08o+5STuiPFKYo+YLlOFUysELhdBTVFEjnx7abYSC/N4Hr5eA44vdeKqMWActf+wmSiU+r+A7btDbVwxazdjBIYrNj7KXlu9vOOacae5ZWtvs5w2TP0/jhM5wreSCm3D9Gxhj7Exel1N8desXfNgYxfA9arPFAh/d229Qb329pZLznypiA+YfNP+YmLXlN4bMDa1JYIvtdgO9pmHIQu1j7qQHA9VnPNrctoMNojbMZAp5jFH6QyDZrEpU2iRkXXefiqOBNbmHUGnQniuS2bYDp4/umrM3Ir+BY0iVj/NYCkZ0A3ctvMhybkcFq0gzNCQMbREmAAyiDjqSjkiCu8z4gT7uP9YQnElq4eDCU1DABI8dpL+N5HMwH6LJ1S12YFMOOK1+Stfvga/vkSyoyWiQ+xpJky/NAvXwf80XABPKrA1s7yC++UfiXP6V7k4eiXPYF00rlRi3P9seYLB7jFLhVfIamyBpUJS3U09CGaHdqNYf5SYG6urp2KhUxllqxdyKVGw2gyOkwmFhymn0o3A5fiOoGDDX6eksjvI4hv3zOyuRQvyYCH3vq4XsTR2nYcg/6yqNQaQhiGis4w1pr//OaZCc=) from 2004 (needs the iframe to be clicked on for the keyboard to work).",1.0
g7w7oe0,j4eg3o,"I created [Nexpresso](https://github.com/donfour/nexpresso), basically allows you to create an Express server with a Next.js-like syntax (i.e. have routes defined with your folder structure). Would appreciate any feedback!",1.0
g7iwsf9,j4dhua,"For react devs it should be easily avoided as it usually enforces noopener / noreferrer. 

That said I wonder what would be the result without using the global scope in the first place. Maybe it would not do anything but using global variables is the best way to get memory leaks and other unexpected behaviors and it should be avoided as much as possible.",8.0
g7iqprj,j4dhua,[The broadcastChannel api](https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel),2.0
g7hjflw,j42urm,"Damm,[$530 on 1.1k awards](https://www.reddit.com/r/Minecraft/comments/iwxbmo/i_accidentally_broke_into_creepers_maze/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf)

Nice work!",20.0
g7hrl4j,j42urm,"If anyone was curious, people spent a little more than $2000 on the /r/news post regarding Trump testing positive for Covid-19.",9.0
g7i7810,j42urm,"Thanks, that's what I thought of first.

Link: https://docyx.github.io/reddit-award-calculator?url=https://www.reddit.com/r/news/comments/j3oj21/president_donald_trump_says_he_has_tested/",3.0
g7g1bpu,j42urm,"Project Page (?): https://github.com/docyx/reddit-award-calculator

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",3.0
g7i2u1g,j42urm,"TIL: [This](https://preview.redd.it/award_images/t5_22cerq/niiatoknifn51_Hugz.png?width=48&amp;height=48&amp;auto=webp&amp;s=547d5fb33f5a4a5d6fc154cbd658638cc2b1c3a0) is not poop, but a bear hugging himself. I always thought it was to award shitposts. :X

Edit: on [old.reddit.com](https://docyx.github.io/reddit-award-calculator/) the award-images are only 12x12 px.",3.0
g7nw3bt,j42urm,LOL,1.0
g7heaa7,j42urm,Does this take into account the free rewards that reddit gives away?,3.0
g7hhel0,j42urm,"It's impossible to differentiate between awards that were bought and awards that were given by Reddit/another user via coins.

The only thing I can do is take the minimum (0.002) and maximum (0.004) coin prices and meet in the middle (0.003), and multiply that by the amount of coins. (ex. 0.003 * 1000 coins = $3 USD). This makes it so I can get as close as possible to the real result (within a few $, maybe a few $10s depending on how many awards were given).

Of course I could do some more research and look in to the statistics on how many coins are bought vs. how many are given for free. But this 
means nothing when you're just looking at a singular post, where there are near infinite combinations of bought awards and free awards, especially with how many awards Reddit is coming out with now.

There's just too many factors to consider.",17.0
g7h410u,j42urm,Good job!,2.0
g7hbl62,j42urm,The idea is great!,2.0
g7hhaqx,j42urm,"- It doesn't work on Firefox with Enhanced Tracking Protection on. Maybe you could host it on Heroku and have the json fetching done server-side?

- I also think this would be great as a browser extension.

- A breakdown of the value and amount of awards receipt-style would also be nice.",5.0
g7hhqpx,j42urm,Can you take a screenshot of the console when the error occurs?,3.0
g7hi248,j42urm,"https://imgur.com/a/awwMPeh

When Enhanced Tracking Protection is disabled, it runs fine without any errors.",2.0
g7hiig4,j42urm,"Thanks, I'll look into it",5.0
g7ic220,j42urm,"Cool, my only comment is is the award rain necessary? It fucks with scrolling and is above all the other UI",1.0
g7id69v,j42urm,"Yeah to be honest it is a little much, I‚Äôll work on making it less intrusive",2.0
g7inudw,j42urm,i LOVE the award rain! Please don't delete it. :),1.0
g7fy5ti,j42c71,"I'm not sure off the top of my head but you can try the ""onvolumechange"" event or checking the ""keydown"" event and logging to see if anything is fired when using the volume rocker. There might be a ""VolumeUp/Down"" returned in the ""keydown"" event.",3.0
g7g1x1l,j42c71,I've checked keydown with no success but onvolumechange sounds like it may be it. Thanks for sharing!,1.0
g7i1fkr,j42c71,I've tried onvolumechange with an audio file and still no success. I don't care about this feature that much. Those volume buttons probably are exclusive for the OS and native apps,1.0
g7os0z4,j42c71,"Per https://developer.apple.com/app-store/review/guidelines/#software-requirements :

&gt; 2.5.9 Apps that alter or disable the functions of standard switches, such as the Volume Up/Down and Ring/Silent switches, or other native user interface elements or behaviors will be rejected. 

I know you‚Äôre talking about a web app not a native app, I‚Äôm just quoting the above so you see their thinking on the issue. Can‚Äôt say for Android, but I imagine Apple doesn‚Äôt like it in case it compromises the user experience.

Edit - also can I ask, after looking at your code, are you manually minifying it as you go? If so, I mean props to you for taking on such a tedious endeavor but I‚Äôd recommend having a developer version of your script unminified, then using a minifier on it with each prod release. It‚Äôll make your code readability a lot better.",1.0
g7oy86r,j42c71,"The code I have on github is the same I am working on
https://github.com/jedzoka/jedzoka.github.io/pull/1",1.0
g7fq63j,j41l3o,"The Web Component Library I created and use here allows for viewing of data from JSON web services and binding to other components on screen all through HTML only and no need for custom JavaScript.

However this specific app uses some JavaScript for number, date formatting, etc. The reason is to show how the components can be used with additional JS Logic.

Here is the GitHub Source:

[https://github.com/dataformsjs/dataformsjs/blob/master/examples/places-demo-web.htm](https://github.com/dataformsjs/dataformsjs/blob/master/examples/places-demo-web.htm)

Also other demos exist including this one for create Image Galleries using Web Components:

[https://www.dataformsjs.com/examples/image-gallery-web.htm](https://www.dataformsjs.com/examples/image-gallery-web.htm)

For comparison the main page has links to React, Vue and other versions of the same app as I developed similar React Components and standard JavaScript.

[https://www.dataformsjs.com/](https://www.dataformsjs.com/)",1.0
g7fm5wa,j4152g,"Hey guys I made a mysql query builder its quite nice, very small and useful for a small project where you don't want SQL mixed in with your js code, my preference at least. Also helps me because I am not 100% familiar with SQL syntax so writing queries through function arguments actually helps me write them quicker it turns out!

It supports select, update, insert and delete statements.

Check out the repo, maybe help me with how to make it better.",1.0
g7f7u6o,j3yy9j,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",20.0
g7gx43y,j3yy9j,Good bot.,11.0
g7fnzia,j3yy9j,"good point, added that.",6.0
g7irors,j3yy9j,Bookmarked! Thank you for sharing it with the community,1.0
g7gx64h,j3yy9j,Cool stuff. Gave it a star. Gonna dig into the repo more soon and maybe give it a go.,3.0
g7h1760,j3yy9j,What are the differences from Botkit?,3.0
g7iga46,j3yy9j,"BotKit might seem somewhat similar, the difference for sure is the fact you can actually go on Twilio's website =&gt; studio, build the flow visually, then export their JSON and import it into this library and It will work without using Twilios paid service.",1.0
g7u5ap3,j3yy9j,Demo?,1.0
g7vmqen,j3yy9j,It is in examples directory,1.0
g7gr63d,j3yj78,What about key/gsi overloading for single table design?,2.0
g7h10w8,j3yj78,First thing I went to the docs to see how this will be handled. I guess it is still very early but I think GSIs and overloading of GSIs can be added to this. I like the simplicity of the API to set and update items though.,1.0
g7hyt10,j3yj78,"Yeah absolutely! This is pretty high on my list of things to do, I just need to find the time to gather my ideas on it fully. If you have any ideas I'd be glad to hear them!

It does work with single table design currently, but there's no distinction between key attributes and regular attributes at the moment. When you pass a key, it just accepts any of the attributes at the moment. I think it's workable but can definitely be improved.

I've actually done a demo based on Alex DeBrie's single table design talk from reinvent 2019 - https://github.com/harrim91/jedlik-demo",1.0
g7ihf45,j3yj78,I'll check it out and see if I can apply it to my current project. Might be a little difficult as its in Python but I'll give it a go. Looks awesome,1.0
g7f61da,j3wwh7,"Is anyone actually using Yarn 2 yet? Haven't seen it yet and I actually like using NPM directly more and more these days (""easier"" to install, no real drawback to Yarn anymore, etc.).",9.0
g7ffj5p,j3wwh7,"Multiple companies have been using it (including at least one large I know I can mention publicly, Datadog).

Something important to mention: /u/larixen made an impressive work to not only make our node_modules implementation as good as v1, but even *better* than v1. Regardless whether you use PnP or not, Yarn 2 is a strict improvement than Yarn 1 in terms of stability and feature set, there's absolutely **no** question about that. I know it, because I fixed bugs on both.

But on top of that, I think it's worth quoting what one of our users said today about PnP in our Discord channel: *""Not being able to use PnP in a project is a deficit you only realize once you get accustomed to it""*. This is incredibly true. PnP is a shift that's hard to conceive for us Node developers, because we've always been accustomed to our package installs being bad. It's easy to dismiss it as ""why should I care about my dependencies being well defined?"", but once you dig into it the advantages, once you experience them firsthand, your perception shifts and it rather becomes a matter of ""why should I have a shitty setup for the sake of a badly defined dependency?"".

Yarn 2 is perhaps less approachable than Yarn 1, in that it ensures everything in your project well behaves, and in doing so it sometimes implies fixing undefined behaviors we were never aware of. But thanks to the countless escape hatches we provide, and the stability of the application as a whole, it's clear that any enterprise user will find it a solution not only viable, but even vastly better than whatever the competition offers.",9.0
g7fho3o,j3wwh7,"Strange that it's not included in the popular Windows package manager, Chocolatey. Their [yarn](https://chocolatey.org/packages/yarn) package is still at version 1, and they don't have version 2.",2.0
g7fjpvb,j3wwh7,"[We stopped distributing Yarn as a global binary](https://yarnpkg.com/getting-started/install#about-global-installs) so that projects can upgrade on a case by case basis. It doesn't help the adoption, but it was the right thing to do.

This workflow also makes it much easier to ensure that all your developers share the exact same Yarn version without having to install any specific version of Yarn.",8.0
g7fhpcv,j3wwh7,"Features, maybe, but performance comes out worse than NPM &amp; Yarn 1. Don‚Äôt see an advantage there...",-13.0
g7fjc75,j3wwh7,"I have no idea what made you think that. PnP performances are vastly better than all other package managers in [all cases that matter](https://p.datadoghq.eu/sb/d2wdprp9uki7gfks-c562c42f4dfd0ade4885690fa719c818?from_ts=1601060799736&amp;to_ts=1601665599736&amp;live=true) - pnpm being one good competitor, though.

The only downside is if you never cache your dependencies, or work without lockfile, which are kind of on you. Relying on the network for production deploys is really not a great idea, regardless what you use.",6.0
g7fpqeg,j3wwh7,[Yarn 2 is significantly worse than the competing options](https://shift.infinite.red/yarn-1-vs-yarn-2-vs-npm-a69ccf0229cd),-8.0
g7j0yu6,j3wwh7,"The article you refer to compares outdated `Yarn 2` release with `Yarn 1` and `NPM`. This is the first problem. The second problem is that even that outdated release is not slow in all the workflows that matter, when real installation happens and `Yarn 1` does not take cheating path the `Yarn 2` is 2x times faster than `Yarn 1 and 4 times faster than `NPM`. 

Now it is not all the problems with benchmarks in the article. The `Yarn 2` is configured with default settings. But to compare apples to apples you should configure `Yarn 2` to operate in the same conditions as `NPM` and `Yarn 1`, e.g. to use `node_modules` install strategy and uncompressed global cache via settings:  
```
nodeLinker: node-modules  
enableGlobalCache: true  
compressionLevel: 0  
```
In this mode `Yarn 2`, especially the last version will be significantly faster than `NPM 6` and slightly faster than `Yarn 1`

And with each new release of `Yarn 2` we are slightly increasing the installation performance and we still have a room for improvement. You can check out up to date `Yarn 2` benchmarks [here](https://p.datadoghq.eu/sb/d2wdprp9uki7gfks-c562c42f4dfd0ade4885690fa719c818?from_ts=1601138765859&amp;live=true&amp;to_ts=1601743565859)",2.0
g7j5hp7,j3wwh7,"It's a few months old. It's not that outdated. 

Yarn 2 is slower dude. 

If you have to start fiddling with settings then it's not faster.",-1.0
g7jey5o,j3wwh7,"If you want to compare apples to oranges, let it be. `Yarn Berry`,even the first release, is infinitely faster than `Yarn 1` and `NPM` during installs, because you don't need to run an install, you checkout the source code from version control system and you can immediately launch your app.",1.0
g7jfusc,j3wwh7,[removed],0.0
g7k01zn,j3wwh7,"Hi u/intrepidsovereign, please refrain from personal attacks. Thanks.",2.0
g7hab7r,j3wwh7,"In my experience on a project with about a dozen separate Lerna packages with a wide variety of dependencies, Yarn 2 leaves NPM in the dust. We did some benchmarking before switching, and even without PnP we found that a fresh install was half the time, and a warm install was seconds with Yarn 2 compared to over a minute with NPM. Our lockfile conflicts have almost completely disappeared with Yarn, and I am extremely comfortable with how consistent it is with ensuring each package gets the version it depends on. Any time I flip to one of our projects that is still using NPM, I am immediately reminded why we are switching away from it.",2.0
g7hcl74,j3wwh7,"I‚Äôm not advocating for NPM, but Yarn 1, as it‚Äôs proven to be faster.",-5.0
g7fajhq,j3wwh7,"I'm lacking tool support before I _can_ adopt it.  Last I knew, it still broke the use of stylelint in vscode (and vuejs? can't remember).  I haven't seen support of it through JetBrains editors either.

I would really like to have it because it's a cool idea to have all your locked dependencies ship with your repo and get repeatable builds, but last time I tried it, it wasn't great.",3.0
g7fkk6f,j3wwh7,I know for monorepos yarn workspaces is a dream. Not sure if NPM has an equivalent,2.0
g7fljqp,j3wwh7,"They are working on it for npm 7, although we are still far ahead in terms of capabilities.",4.0
g7fakr9,j3wwh7,"After the initial drama around Yarn 2 I just want to know if it‚Äôs safe for me to upgrade now. It sounded like most projects wouldn‚Äôt work out the box, and I don‚Äôt want to invest in an upgrade cycle and work around compatibility issues for the sake of my package manager.",1.0
g7fr8io,j3wwh7,"Two questions, and I admit I haven't googled these for myself yet because I'm just now thinking of them as I read the thread:

- Is there a good v1 -&gt; v2 migration guide document?
- What are the major known issues still around PnP and development tooling (ie, editors not working right because they expect `node_modules` to exist)?  Is there any documented list of ecosystem compat issues?",2.0
g7fto7d,j3wwh7,"I recently updated the [migration guide](https://yarnpkg.com/advanced/migration#step-by-step); if you try it and have any feedback I'd be curious to get opinions on it!

&gt; What are the major known issues still around PnP and development tooling (ie, editors not working right because they expect node_modules to exist)? Is there any documented list of ecosystem compat issues?

React Native hardcodes a bunch of paths, and Flow is a native binary with no extension point, so both of those require to enable the node-modules linker (slightly less so for RN).

Editor-wise, we maintain `@yarnpkg/pnpify` for this. Basically, you just run `yarn dlx @yarnpkg/pnpify --sdk vscode` in your project, add the files to Git, and you're set to go. It's not perfect, but improves steadily. If you use WebStorm, I think they support PnP natively.

For the tooling as a whole, PnP is very rarely the problem. Most often, the errors come from undeclared dependencies, which you can fix by declaring the missing ones in your configuration. When that's the case, it really just take a few seconds to fix it and never be bothered again.",3.0
g7hdy6k,j3wwh7,"Well, I just tried to follow the migration guide for one of our internal corporate repos, and immediately ran into _two_ separate showstopping issues before things could even get installed at all:

- Doesn't recognize a particular lockfile format: https://github.com/yarnpkg/berry/issues/902#issuecomment-703041768
- No support for the `cafile` or `strict-ssl` options, and setting `NODE_TLS_REJECT_UNAUTHORIZED=0` isn't letting things work in this situation: https://github.com/yarnpkg/berry/issues/798#issuecomment-703039107

I _want_ to use PnP, but I can't even try it out until these things get fixed.  

(And no, I don't have any time to try contributing fixes myself - all my time is taken up with Redux work, and the day job has a ton of existing priorities that I have to focus on.)",5.0
g7h2tk7,j3wwh7,Any workarounds to use Flow with Yarn 2 features?,1.0
g7i3xrs,j3wwh7,"Enable the [node-modules linker](https://yarnpkg.com/configuration/yarnrc#nodeLinker). You won't get the PnP benefits, but you'll get everything else (including the new commands, settings, etc).",2.0
g7hd001,j3wwh7,Eh... npm is fine now. I really don‚Äôt see a need for yarn anymore.,-3.0
g7e3v4t,j3snyk,"I used to have troubles with UI tests until I discovered Cypress. You can still run into an issue once in a while, but it's way better than anything else and it's getting even better with each release. Really recommend learning it",32.0
g7edfc7,j3snyk,"Cypress has a few limitations you need to be aware of. For instance it has trouble testing iframe and it can't continue testing when you leave the initial domain e.g. for external login pages/popups (think 0auth, keycloak etc.).

For the mundane simple stuff it's really good.
At the company I'm working for I've written an open source browser plugin which can record your actions and it directly outputs cypress code for your tests.

Chrome: 
https://chrome.google.com/webstore/detail/fd-cypress-recorder/amleackadkomdccpbfginhnecfhhognj

Edge (chromium): https://microsoftedge.microsoft.com/addons/detail/fd-cypress-recorder/lpfepmjegidkfonehkgfgipioceoccmc

GitHub: https://github.com/FDMediagroep/fd-cypress-recorder",25.0
g7erhqx,j3snyk,"I am using cypress with keycloak authed app. And it works wonders. It is just a configuration in the kc to make it work, or maybe you mean something different.",6.0
g7exqpr,j3snyk,"Yeah I mean if kc is configured for multi-domain logins and SAML and therefor lives on its own domain.
As long as you stay on your initial domain then cypress will work fine.",3.0
g7f0h8w,j3snyk,Ah Yeah i See what you mean. I keep it in the same realm. Yeah that might be tricky. If you use the Domain or realm as a URL param you could Do it. But I guess that is not a good test to do in one feature,1.0
g7fvgvc,j3snyk,Also worth noting it has its own promise implementation that isn't compatible with async/await. This took me some time to get used to...,5.0
g7ffwt4,j3snyk,Holy shit if this works for me I'll worship you for all eternity.,1.0
g7ebi1g,j3snyk,"Cypress is good and we use it extensively, but it is inherently more complex than using jest. I recommend making sure the cypress test you‚Äôre writing *needs* to be a cypress test.

Asserting that a modal pops up when you click a button with no user data and no api call? Do it in jest",9.0
g7el8bf,j3snyk,"&gt; Cypress is good and we use it extensively, but it is inherently more complex than using jest

They are completely different tools for completely different types of testing. Jest is best used for unit/feature tests and Cypress is for E2E. A proper QA environment should have both ideally, but if you have a dedicated QA resource it's often better for them to just use Cypress. This way they cover the full user experience and mildly test the backend/frontend simultaneously.",21.0
g7elic2,j3snyk,"I definitely agree. We had the issue of developers (myself included) writing what were essentially unit tests in cypress because it was already stood up and it was easy. Then you pay for that every time CI runs, and every time you deal with a cypress issue on a test that never needed to be in cypress. I‚Äôm sure this is happening elsewhere so I‚Äôm passing the learnings on :)

We do have a dedicated QA Engineer now who writes most of our cypress tests while we focus on writing jest tests while developing.",3.0
g7fvwch,j3snyk,What's wrong with testing that modal pops up?,2.0
g7ey4jz,j3snyk,In my experience 99.9% of bugs won't get caught with unit tests in Jest,4.0
g7gx77u,j3snyk,Good indicator of bad tests...,3.0
g7ezohj,j3snyk,"I guess it depends on what kind of bugs you‚Äôre talking about. I find jest is great at finding the most severe bugs- components not getting rendered, invalid state, events not being handled, etc. We also get a lot value out of automated accessibility tests with axe. It catches a lot of low hanging accessibility issues.

Visual bugs? Sure, it will be hard or cumbersome to write jest tests that find most of those. But if you‚Äôre writing unit tests against properly separated components and applying styling well, it should be possible to catch a lot.

I‚Äôm not trying to downplay the efficacy of e2e tests, but jest tests are valuable for us.",1.0
g7eeeff,j3snyk,I thought I was going to read about Cypress. Instead I got an ad for Perfecto. Oh well!,6.0
g7gtvwr,j3snyk,"Just like all those tools out there that use selenium but they make it ""easier"" 

*Click here to see an awesome way to use Selenium*
^our ^addin ^just ^uses ^selenium",1.0
g7e44qa,j3snyk,"Thanks for sharing, I always wanted to see more focus on Real live problems ala ‚Äúhow to login to your app, How to do API testing, and How to do database testing right, and it covers it.",2.0
g7et8u2,j3snyk,"We use jest-puppeteer at my work. We did have to build a driver layer on top of the puppeteer api to add waits, logging, and retries in some cases. But now that we've done that, it's pretty reliable and easy to use. We also already have Jest and Puppeteer in other parts of the stack so using the same tooling helped with cognitive overhead.

One huge advantage to jest-puppeteer that I don't see mentioned is the node runtime. In the CI environment, we often need to manipulate the database to either speed up the test setup or reset state. Since not everything has UI support or an endpoint, we found that having direct access to the underlying services helped solve some of our problems. I realize the whole point of E2E is to perform black box testing, but sometimes it was the only practical solution. It's basically an escape hatch when you need it. ~~My understanding is Cypress runs in the browser itself so doing the aforementioned things would be impossible.~~  


Edit: Possible with limitations.",2.0
g7fql92,j3snyk,"It's very possible, actually.

Cypress starts up a Node process, and [the `cy.task` command lets you run arbitrary Node code](https://docs.cypress.io/api/commands/task.html#Examples).

This is particularly useful for doing database seeding, and I did exactly that yesterday.  I've got my app server configured to start up an instance of `mongodb-memory-server` when it's in an E2E test environment, and the Cypress tests reload a dumped test dataset in the `before()` clause of every test file using `cy.task()`.  That's done by establishing a Mongoose connection to the in-memory MongoDB server and restoring the test dataset.

All that is entirely separate from the process of executing the tests themselves in the browser.",3.0
g7g5uca,j3snyk,"Ok, that's good to know. It looks like there are some limitations since it has to serialize the arguments and run it in a separate node process. It's also completely decoupled, so  static analysis tools wouldn't work out of the box.",1.0
g7gbvb0,j3snyk,What sort of static analysis are you trying to do as part of this process?,1.0
g7ggm2h,j3snyk,Typescript and IDE autocompletion.,1.0
g7f84dr,j3snyk,If anyone in this thread has successfully integrated sonarcloud code coverage with cypress and you explain how I will venmo you $50,1.0
g7fho8u,j3snyk,what does perfecto cypress have over regular cypress ?,1.0
g7e49w0,j3snyk,This is totally not confusing for embedded people who use Cypress semiconductor microcontrollers.,-6.0
g7gj9ea,j3snyk,"You're in the JavaScript subreddit, why would they be talking about semiconductor controllers?",2.0
g7em2ux,j3snyk,"Visit Cypress Hill, hang out with the butterflies...",-2.0
g7fkjyf,j3snyk,i use cypress at work (faang). it‚Äôs garbage compared to selenium.,-5.0
g7io9wi,j3snyk,for SPA's cypress beat any selenium based framework by far.  Flaky tests and changing selectors every js framework update make it almost unbearable to use selenium nowadays. It's also way slower and needs more ressources than cypress.,1.0
g7ekl77,j3r08h,"Weird flex.

You shouldn't need a special function to do:

    for (const country of countries) {
        await runCountryTask(country)
    }",6.0
g7hw3pa,j3r08h,Gotta admit I still have to look up 'in' vs 'of' every time.,1.0
g7mmhqb,j3r08h,In the object.... of the array... This is how i remember!,1.0
g7eou7o,j3r08h,"Actually my production code was a ""map"", for which I care about the task result, so I made an abstraction as it's less boilerplaity than doing something like results.push(await runTask(country))",1.0
g7f2g93,j3r08h,"I feel there is always a few syntaxes that every developer struggles to remember.

but as long as we developer knows the concept I feel it is absolutely fine.",2.0
g7du4r8,j3r08h,"After 6+ years of using JS daily, I'm not able to remember the syntax of a for loop.   
Despite this fact I'm still productive in my daily work (mostly thanks to being a FP developer).",0.0
g7dz4t3,j3r08h,I understand the struggle. I am personally a driver of red cars. Sometimes life is difficult,3.0
g7e0320,j3r08h,Not sure what you mean by driver of red cars,5.0
g7g4h62,j3r08h,"Supposedly, cops like to pull over red cards.",1.0
g7e53ax,j3r08h,"Thank you mate.

I once spent two years away from Java. Sat in front of a computer screen and wondered if I remembered the syntax. No issues at all, with anything.

I've been a ES developer for five and a half years now. Last night it took me way too long to Google how to write a for Loop in ECMAScript. I forget now.

I'm glad I'm not the only one. I write FP code too. Last night I had almost the same thing as you describe (needed to sequentially await an async function call on each item in an array).",1.0
g7e7fcc,j3r08h,glad to know I'm not alone :),1.0
g7bgsbd,j3ey69,Interesting. Gonna check this out,2.0
g7bgt23,j3ey69,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g7bbm6u,j3drxy,"Nice, will have to look into eleventy. 10 minutes to 3 seconds is quite a huge difference in build times...",3.0
g7cl2zo,j3drxy,"Can someone who has tried both Next.js and Eleventy in the past, tell me its differences?",1.0
g7nh5uj,j3drxy,"Nextjs builds your content using Reactjs so you end up with a React app.

Eleventy use template languages to build static html, that means you are not tied to JSX.",1.0
g7a1lvo,j37i7a,Hi everybody. I just wrote this article about implementing blend modes in Javascript. I also built this site https://srmullen.github.io/blend_modes/ to demonstrate the code. I'd love to know what you think!,1.0
g7a5bjy,j36rpo,"An American woman, I, Marc, speak horse",71.0
g7ce42b,j36rpo,"I speak horse, woman an‚Äô American, Marc",6.0
g7dfo04,j36rpo,"I, Marc, an' American horse speak woman",7.0
g7e9f3x,j36rpo,"I, Marc, an American woman, speak horse.",1.0
g7e9m1x,j36rpo,"she actually talks to guys in their own language (like:  a guy walks into a bar:  ""Hey buddy, why the long face?"")",1.0
g7a5q3m,j36rpo,"I Marc, an American horse woman. I approve of this design.",18.0
g7a60bg,j36rpo,"Lmao yeah... I just copied what they had in their example video. About half way through I was like, wtf is this supposed to say haha.",9.0
g7ak4vu,j36rpo,"Lol! Basically you need to translate the ""une femme americaine"" (which is in French) to English. So the correct answer is ""An American woman"" and then you just hit submit. The extra words are just to test the learner. :)

Here's the original video for those wondering: https://v.redd.it/thxgkska6gq51",2.0
g7a3svk,j36rpo,There is subreddit for css?,19.0
g7a3w1f,j36rpo,"Nope. It‚Äôs all an elaborate lie. 

Just kidding. r/CSS",21.0
g7ajffr,j36rpo,Always has been.,5.0
g7cybyn,j36rpo,"I just saw the original post, I think yours looks smoother and better than duo lingo",2.0
g7acnef,j36rpo,Name something else you think there wouldn't be a subreddit for.,3.0
g7cdbps,j36rpo,Cake badgers boxing George Forman grills in inflatable dolphin sex toy boxes.,1.0
g7cew77,j36rpo,I'm tempted to post that to /r/findareddit and see how close they can get!,2.0
g7ai0d7,j36rpo,Yeah of course r/css_irl,3.0
g7blhly,j36rpo,There's a subreddit for everything,3.0
g7a8wvx,j36rpo,"Came to post this. OP, thanks for letting us know.",1.0
g7a9qdp,j36rpo,"Beautiful, make sure to add `user-select: none;` to those items. So they're not highlighted by mistake.",8.0
g7ajs30,j36rpo,"Good idea, I'll have to remember this one.",4.0
g79z4sa,j36rpo,"That's amazing, great job",7.0
g79z7jp,j36rpo,Thank you!,2.0
g7a13go,j36rpo,Excellent,6.0
g7a1i8u,j36rpo,Thanks!,1.0
g7a6kkv,j36rpo,Well done. The only issue is clicking between elements in low interval doesn't work,5.0
g7a6oy1,j36rpo,"Sorry. Running on low sleep today. Could you elaborate? Not sure I‚Äôm following. 

Also thank you",2.0
g7a7yda,j36rpo,I guess the best way to reproduce this is to spam click on the elements. The on click color effect happens but the actual js behavior don't,2.0
g7a92j5,j36rpo,Oh. That may be a css issue more than js. I intentionally prevent new animations from starting until the last one finishes.,2.0
g7a1rty,j36rpo,Good,2.0
g7a3e4i,j36rpo,That looks really good! Can i ask how long it took to make?,2.0
g7a3kph,j36rpo,"Thank you!

It was 3:45am when I started and I was just waking up, so I was running a little slower than I might otherwise have been. But the whole thing took me about 45 minutes (not counting the time I spent adding comments to the JS).",6.0
g7aazfk,j36rpo,Uhm you wake up at 3:45?,5.0
g7abw4n,j36rpo,"Not always, but I was behind on some work stuff today. Probably because I get restricted with Reddit things like this haha",2.0
g7acy9q,j36rpo,You get up early to catch up on work and write this gratis for an internet stranger? When you're next time in the neighbourhood there's a cold beer waiting for you.,12.0
g7ajz91,j36rpo,Haha yeah that‚Äôs basically what happened. Thanks friend,6.0
g7am0fd,j36rpo,"Lucky stranger here, can confirm OP is awesome! :D

u/t0mbombadil (or anyone else too ftm!), you ever need any help in Python/Selenium/Threading or something, do hit me up! I'm just a beginner but would be honoured to give your work a look. :)",3.0
g7b3ud1,j36rpo,I need help! You know how to get past anti-bot? Specifically Google anti-bot? I tried logging into my youtube account with chrome driver and got blocked :(,2.0
g7d4c2x,j36rpo,Never heard of Google Anti bot. What end goal are you trying to achieve with your script? Edit - do you mean reCaptcha when you say Anti bot? Lol there's no way bypassing that.,1.0
g7ihqu9,j36rpo,"No not reCaptcha, and to bypass that, I know I can just use a solving service like 2captcha. I'm trying to create community youtube playlists, that's it really. I would do it with the API but the 10,000 credits/day limit is pretty much useless, especially when a single call can be 50 credits :(.",2.0
g7ijs8e,j36rpo,"Got it. 

So I assume you tried to login using Selenium via `send_keys()`? If that failed then there are 2 more ways to try:

1 - try to login via previously saved cookies, or

2 - try to login via previously saved browser session. 

I suggest trying option 1 first as it is easier. I'll send you a script I've made to easily capture cookies, will send it later on from the PC.",1.0
g7im46g,j36rpo,"Actually it isn't even a script, just two function definitions.

    import pickle, time, requests
    from selenium import webdriver

    def save_cookies(driver, location=""cookies.txt""):
        pickle.dump(driver.get_cookies(), open(location, ""wb"")) # driver.get_)  () returns a list of dicts.

    def load_cookies(driver, location=""cookies.txt"", url=None):
        cookies = pickle.load(open(location, ""rb""))
        driver.delete_all_cookies()
        url = ""https://duckduckgo.com/"" if url is None else url # have to be on some page before loading in cookies, ANY webpage will do.
        driver.get(url)
        for cookie in cookies:
            driver.add_cookie(cookie)

    driver = webdriver.Chrome()

    save_cookies(driver, ""cookies.txt"") # use this to save the cookies.
    load_cookies(driver, ""cookies.txt"") # use this to load the cookes.


Let me know how it goes.",1.0
g7ct0yf,j36rpo,I have ADHD and this is like you've read an entry out of my diary,2.0
g7albhx,j36rpo,":OOOO 

Super impressive!!",2.0
g7aea3g,j36rpo,Super cool!,2.0
g7ak05t,j36rpo,Thanks!,1.0
g7ajniz,j36rpo,"Thank you OP! Your creation is extremely beautiful! :D

Your supreme skills seriously make me question my knowledge, heck even HTML knowledge lol. The way you've made that HTML document is the first time I've seen HTML being written like that. I'm planning to relearn HTML first lol :P, so that I can understand how your html works.",2.0
g7akh93,j36rpo,"Wow, thanks! I really appreciate it. 

Don‚Äôt feel bad about the HTML though, it‚Äôs nothing special I did, it‚Äôs just written in PUG, rather than HTML. Pug is a preprocessor for HTML that reduces keystrokes, similar to the relationship between SCSS/SASS/LESS and CSS. It becomes the HTML you are familiar with in the end",3.0
g7amdgy,j36rpo,"The more I speak with you the more I realize how much little I know about HTML/CSS/JS. üòÇ Will have to slowly slowly learn all these things you're talking about.

You are an inspiration, sir, keep up the amazing work!",5.0
g7al0fp,j36rpo,Nice! Thanks for sharing,2.0
g7b01hd,j36rpo,"Learn something nice today, thank you ‚ù§",2.0
g7b6mvy,j36rpo,Wow this is great. So smooth.,2.0
g7c4wqb,j36rpo,I speak American,2.0
g7c8am0,j36rpo,What is a FLIP animation? I don't see anything flipping.,2.0
g7c8w9r,j36rpo,"It‚Äôs an acronym. First Last Invert Play. 

-	You find somethings initial location (**First**)
-	Do something to make it be somewhere else
-	Find it‚Äôs new location (**Last**)
-	Calculate the difference between the two
-	Fake it back to the old position by applying a transform: translate() to the element (**Invert**). Transforms move the element without changing the flow of the document. 
-	All the above happens before anything is repainted on the screen.
-	Animate from the faked old position to the actual current position (**Play**)",3.0
g7fs1qs,j36rpo,"This is awesome! I forked your code to try to understand it better! Out if curiosity, what‚Äôs your background(years of experience) and do you recommend any basics for this type of work? I wouldn‚Äôt think of the implementation u talk about in  bullet point 5",2.0
g7fx484,j36rpo,"Cool! Let me know if you have any questions about the code. 

I‚Äôve been working professionally as a web developer for 5 years, and I‚Äôve been a team lead for the last two of those years. I learned how to make websites when I was like 12 by making designs for Neopets haha. I got my BA in history though so I‚Äôm all self taught. 

For learning how to do this I recommend [this article](https://css-tricks.com/animating-layouts-with-the-flip-technique/), and then just really playing around and trying to work out the logic of how to do this sort of animation. You can use it to animate basically essentially any state of CSS; it‚Äôs a very powerful technique.",1.0
g7g3noh,j36rpo,"Thanks!! I've been in the industry ~5.5 years, but started off doing java back end development with ~3 years of exp on front end. But most of my work is corporate applications where it is logic heavy / rest calls / performance, etc, etc.. and there's not a lot of need for animations, but animations can really sell the UX of the application so I'm trying to learn more that. Thanks for sharing!! Going to try to ""reactify"" your code :) hah",1.0
g7ciqv6,j36rpo,Commenting out line 108 makes it perform more like Duolingo (you can add/remove words in quick succession on the original).,2.0
g7cve0x,j36rpo,"I, Marc - An American woman - speak horse.",2.0
g7dsftb,j36rpo,That looks awesome buddy.,2.0
g7c233q,j36rpo,"doesn‚Äôt seem to work properly on safari / ios.  
The first word I click goes in but then other words don‚Äôt move when I click on them",1.0
g7c285z,j36rpo,Just wait for the animation to finish. It won‚Äôt allow simultaneous animations to avoid conflicts in the positioning,1.0
g7c2iez,j36rpo,"I don‚Äôt see any animation except the hover/active one when clicking a word.  
Edit: also you seem to nest styles like .word { ... $:active { ... } }  
Isn‚Äôt this only available in less?",1.0
g7c2qhz,j36rpo,"Weird. It works on my iPhone, and no one else has mentioned it not working. But it was just something I built in an hour as an example for someone. I‚Äôm sure there are bugs",1.0
g7e2tvd,j36rpo,It‚Äôs SCSS,1.0
g7e4cxz,j36rpo,"Oh ok, codepen is misleading...",1.0
g7czs4h,j36rpo,Hi! Why your html has no tags? I'm fairly new to all this. Awesome job by the way!,1.0
g7e2bkd,j36rpo,"It‚Äôs written in PUG, it‚Äôs like html short hand that is compiled into regular html",2.0
g79qjkv,j35bh7,Open-sourced here: [https://github.com/DFRLab/interference2020](https://github.com/DFRLab/interference2020),2.0
g7iwij4,j34lej,I might add something that just points out other options like using ws over socket.io. I recently was making a game and had to switch from socket to ws because socket added as much as *200* milliseconds of latency for no discernible reason,2.0
g7jpkje,j34lej,"Yeah I completely agree with you. Socketio was introduced way before websockets were made standard on all browsers. So even right now, socketio using initial polling connection, and then switches to websockets protocol if the connection is stable.

That maybe the reason you are getting high initial latency.

Also, socketio has lote of heavy abstractions, having backward compatibility with older browsers (*cough IE cough*), which is another reason why it is slow. Even their GitHub has gone stale right now, I have opened several PRs for increased stability, but haven't seen any reply since 2-3 years (I maybe wrong here, but definitely a very long time)

Only reason, socketio is even barely popular now is because it's easy to start as a beginner due to higher inbuilt abstractions as compared to ws. I would still recommend anyone starting off with sockets prgramming to atleast use socketio once, and then jump to ws if you actually wanna build and scale something.",1.0
g79mua2,j34ixg,"Project Page (?): https://github.com/szhsin/react-menu

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g79mwva,j34ixg,"Hello everyone,

If you are looking for customisable React menu components with accessibility, welcome to try out this project.

It has some great functionalities that are not offered in many popular React libraries, such as submenu, radio and checkbox menu items.

Feel free to submit GitHub issues if you find bugs or have feature requests. Thank you!",1.0
g79ds6f,j2wnxh,It'd be super cool if you could use it as an explorer instead of having to be all-access,3.0
g79hl9c,j2wnxh,Hey there! I'm the developer behind this and I'm glad you like it. You should be able to use it with a free Explorer ticket as well. I just tried myself again by signing up for a free ticket. Are you seeing any errors?,3.0
g79nafa,j2wnxh,"Since you‚Äôre the dev, let me say this: this was a really nice article, I‚Äôve seen similar stuff done with Angular, it was cool to see your version, and I‚Äôll definitely think about building my next CLI with the libraries you mentioned ‚úåüèº",2.0
g7ah8ep,j2wnxh,"I woeded that badly, and I apologize. 

It is functional and I can do things. However, I was hoping to get to do the Choose Your Own Adventure portion of the conference as an explorer. 

That aside, the CLI is great!",1.0
g7akjzn,j2wnxh,Ah yeah that's our Superclass workshop. While that isn't for free the majority of the choose your own adventure part is our video game TwilioQuest that is free and you can download it at twilio.com/quest,3.0
g79py4i,j2wnxh,Does anyone know if this is also possible with Vue?,1.0
g7atfzy,j2wnxh,I'm not 100% sure but you could probably since you can run Vue in Node.js for server-side rendering. You'd have to build your own renderer that renders Vue code into valid ANSI codes to update the content on the terminal.  I don't know of any existing projects though.,1.0
g7au3pn,j2wnxh,"Yeah, it's possible *somehow*, I'm just wondering if there already are cli renderers :)

Thanks for the response though!",1.0
g798n0o,j2rpbu,"Web components have promise. But not in the state it is today. I can see them being valuable once some of the issues they currently have are resolved. 

I've worked in companies that use different frameworks for different projects. Being able to build web components and create wrappers over some standard controls would be extremely useful rather than having to rebuild it from scratch multiple times. 

I think it will all come down to how easy it is to build these wrappers. Web components do have promise, but I don't think they've met all the promises they've made yet. 

I understand that this is a rebuttal to another blog. But instead of just responding to the individual points in the blog, it would have been more valuable to go in depth and try to explain the promise web components actually have.",2.0
g79kcyg,j2rpbu,"I have countered Lea‚Äôs arguments specifically because I don‚Äôt think they are justified. Blaming Web Components for the fact that you feel they‚Äôre not easily discoverable based on actually one single repo doesn‚Äôt make sense to me. 
I can understand she found it hard to find and integrate Web Components but this is by no means a specific problem of Web Components. 
I have already wrote several articles on Web Components.",1.0
g77vfni,j2rpbu,"Web components takes everything we learned from 20 or so years of building web applications, and then repeats all the same mistakes.

Then again, CSS was made by amateurs too.",3.0
g79r6yy,j2rpbu,"At this point, Web Components ecosystem has two choices going forward.

Either listen to friendly criticism from people like Lea (and less friendly, but often equally justified from some other people) and thrive in the niches they are actually good at,

or, do what OP just did, keep pretending everything is fine, and [die out in 3 years, like predicted by the stars](https://tsh.io/state-of-frontend/#future-of-frontend).",1.0
g7a39bq,j2rpbu,"About 22% of the respondents in this survey ""predict"" that Web Components will be gone within 3 years.
Not sure how much value I should attach to this.",1.0
g7a4ffe,j2rpbu,"Well, if this was _the only_ data point showing quite a negative sentiment in community - probably not much.

But it isn't, e.g. [here](https://insights.stackoverflow.com/trends?tags=meteor%2Cbackbone.js%2Cember.js%2Cknockout.js%2Cweb-component) we can see how interest in web components is on par with ""legacy"" web technologies like knockout or backbone, and roughly constant since 2014.",1.0
g7a59cd,j2rpbu,"The winner of that survey is React. Predicted to die out in 3 years even though it is the biggest and most successful JS framework out there and hardly a ""flash in the pan"" at 7 years of age.

Not a great survey.",-1.0
g7ak6op,j2rpbu,"The ""winner"" is Redux, not React.

Which, while still surprising, I'd say definitely matches the community's sentiment lately.

Ton of critique was spilled on Redux last couple of months, and while alternatives like Zustand and Recoil are obviously far behind in downloads, they are rising quickly.",1.0
g7ij6ga,j2rpbu,The real winner is the Observer pattern,1.0
g779b3z,j2rpbu,"First off OP, you completely failed by using Medium as a blog host.  **PLEASE STOP!**  You are turning away big percentages of people who want to read your blog, and supporting [a company that *bullied Free Code Camp* (a non-profit organization) off their platform](https://www.reddit.com/r/FreeCodeCamp/comments/bvaf9i/freecodecamp_is_leaving_medium/)!

And second ... isn't it just a given that web components have failed at this point?  I mean, I literally don't know anyone who uses them (I know more people still using XML tech, like XSD/XSLT, than web components!) As far as I can see they're a *classic* ""solution in search of a problem"".

The OP seems to just be ignoring that, as well as more specific arguments Lea Verou made (in the article the OP is responding to).  But his entire defense just feels like an ostrich burying his head in the sand.  Verou's excellent defense of her article, in the comments, just drives this further home.

Web components have 100% failed to deliver on what they've promised ... or on anything they *didn't* promise for that matter.  They have just flat out failed to deliver, period.

Maybe someday environmental factors will change, and all Angular/React/Vue devs will stop using their frameworks, and embrace common components ... but I rather doubt it.

**EDIT:** To the downvoters: I get it.  This post is naturally going to draw fans of web components, and I'm the heretic saying this tech you love is pointless: *of course* I'll get downvoted, and I accept that.

But I still would truly appreciate anyone who is as brave as @name_was_taken, and who will actually try to explain what value web components offer in 2020, with a comment instead of (just) a downvote.",-5.0
g77abfr,j2rpbu,"I don't agree that they're ""a solution in search of a problem"".  We know the problems.  And so far as I know, web components would address them...  If they worked.  Polyfills simply can't do the job well enough to gain enough adoption for them to be a thing.

Also, I hate articles that are written solely to criticize another person.  If you (the article writer) disagree with someone, write your *own* article about your side of things.  Don't just constantly repeat ""and they were wrong about X, too!""  It seems childish.",10.0
g77ampm,j2rpbu,"&gt;We know the problems

Do we?

I truly don't mean that as a dick response! I genuinely mean: can you please articulate the problem Web Components are supposed to solve?

Whenever I read up about them, what they're trying to accomplish always seems very opaque.  Anything specific I can find feels like it was written before Angular/React/Vue existed.",0.0
g77azsd,j2rpbu,"For me, it's having re-usable components, regardless of framework or browser.  Being able to say ""This is a 3D Video widget"" and make it work across everything in the way that video and audio tags do right now.  And how Flash *used* to work, before we realized how incredibly unsecure it was and that it couldn't be fixed.  (Not to mention the fact that it didn't work on IOS.)",7.0
g77dszq,j2rpbu,"&gt;For me, it's having re-usable components

But isn't that an impossible thing to expect, when there's no technical way to write a component that can be re-used by Angular/React/Vue?  I mean essentially you're saying a ""common"" component ... that *won't* be used by anyone using the three most popular frameworks.  That's not ""common"" at all; in fact, as a *niche* solution it's the exact opposite ... so what good is it?

It was a great idea in the JQuery era, when everyone used one ""framework"" ... but today I don't get it.",-4.0
g77enwr,j2rpbu,"React can use the Video tag just fine.  It'd work like that, but with things other people create.",3.0
g77fd4k,j2rpbu,"I mean, they *can*, but essentially what you're saying is:

&gt;React devs can do this totally pointless thing (use a web component instead of a ""plain"" React component), even though there is no value in them doing that.

That's like a text book example of ""a solution in search of a problem"" ... which brings me back to my original point.

There is **zero** benefit to a React(/Angular/Vue) dev using a web component (that I've seen so far ... but please do pay attention to my username).  **If** you're still doing jQuery, where `JS + HTML = component`, then I get that in that world a common way to package `HTML + JS` has value (I've been coding since pre-JQuery, so I remember those days all too well).

But the vast majority of serious web apps written today use a framework that *needs* to integrate with the component, to provide full value.  For instance, if I'm coding in React, I *need* to be able to provide `props` to my component.  If I have a web component, it's useless to me unless I wrap in a React component ... in which case I'm better off starting with a React component in the first place.

Because of that, web components offer me nothing vs. using components built for my framework ... but my framework components offer *lots* vs. just `HTML + JS`.",4.0
g7a5xq0,j2rpbu,"&gt; But isn't that an impossible thing to expect, when there's no technical way to write a component that can be re-used by Angular/React/Vue?

There is. It is call a web component. Being able to make components that live in the DOM and work using the same patterns as normal DOM elements is the WHOLE F@CKING POINT of web components because every framework speaks DOM.",0.0
g77yuxd,j2rpbu,"They did dump a naked dom node into a shadow dom, but that does not solve our problems.

A ""widget"" is not a component. A component makes a common ground, allows interaction, communication and shared principles. A component is not bound to any single platform. A component does not need to to be registered. A component doesn't break scope. A component works on the server. A component can be native. I could go on. The claim that a polyfill is is now the reason that this disaster of a spec didn't meet peoples requirements is kind of too much at this point. The spec is inherently flawed and nothing they add to it will make it work, that train has left long ago.",-1.0
g77q8te,j2rpbu,"I regularly write about Web Components as well, do workshops and speak at Meetups about Web Components.",-1.0
g77vfkh,j2rpbu,"So, genuine question: the company you work for ... why aren't they using a modern framework?

I only ask because I truly think the context here matters. For Angular/React/Vue devs (ie. the clear majority of web app devs) there is no benefit to adopting web components ... that anyone has yet explained ... and so I want to know how your context compares to mine.",3.0
g77zq5d,j2rpbu,"I'm a freelancer so I usually work for several companies. The previous company I worked for helped pioneer Web Components through Polymer and now only uses lit-element.

The current company I work for uses various frameworks and the team I'm part of uses Stencil to build a reusable component library that can be used with any framework.

The core purpose of Web Component is reusability and using standards.",2.0
g7831vg,j2rpbu,"... so you don't use any of the big three frameworks most devs use?  This totally fits what I'm saying.

Again, I'm not denying that if you're still in ""jQuery land"" (ie. you deal with `HTML + JS`, with no framework) web components have value.  But that's how most us old timers developed in 2010; in 2020 we (or at least most of us) use one of the three big frameworks.

If you were using Angular/React/Vue, I guarantee you'd laugh at this part:

&gt;a reusable component library that can be used with any framework.

... because it's a technical impossibility to write a component that works in Angular/React/Vue: *it quite literally can not be done!*

What you're talking about is making a *part* of a component (the `HTML + JS` part), and then expecting the Angular/React/Vue developer to implement the rest of the component in their framework of choice.

But from the perspective of the Angular/React/Vue dev, there's no reason to do that, because there's zero benefit. They could more easily just start with an Angular/React/Vue component in the first place. *To them* web components are a problem in search of a solution.",2.0
g784yp3,j2rpbu,We‚Äôre using Vue with Web Components. I don‚Äôt know what ‚Äútechnical impossibility‚Äù you‚Äôre talking about.,2.0
g78bkw1,j2rpbu,"You misunderstood their argument. They didn't say web components couldn't work with any framework, they said that one web component couldn't work with all frameworks - unless you implement framework-specific wrappers around the web component.",3.0
g7a6hl0,j2rpbu,"&gt; they said that one web component couldn't work with all frameworks 

Yes, one web component can work with all frameworks because all frameworks can work with DOM elements. Web components look and act like DOM elements. That is what makes them so useful for interop.",0.0
g7alp95,j2rpbu,"As I said before:

&gt;What you're talking about is making a **part** of a component (the HTML + JS part), and then expecting the Angular/React/Vue developer to implement the rest of the component in their framework of choice.

&gt;But from the perspective of the Angular/React/Vue dev, there's no reason to do that, because there's zero benefit. They could more easily just start with an Angular/React/Vue component in the first place. To them web components are a problem in search of a solution.",1.0
g78ehq2,j2rpbu,"I'm learning. What exactly is a 'web component' in the context of these articles.  Is it simply a high level reference to the way frameworks such as react and vue separate pages out into individual components, or something more specific?",2.0
g78k00h,j2rpbu,"Web components are a spec to allow you to write some html + js in such a way that it becomes a native tag.  Ie you could implement &lt;better_video&gt; and then embed that tag in your page and it would act like a native html element.  The reason it's not very useful to people using higher level frameworks is that you then still need to write more js to wrap the element and connect it with the framework you are using, so might as well just write that html + js to target your framework and skip a step.",1.0
g78k274,j2rpbu,Web Component is a standard. Check them out on MDN,1.0
g77q2m7,j2rpbu,"The link I posted is a so-called friend link, which means anyone can read the article for free.",1.0
g77t94c,j2rpbu,"Oh; I honestly didn't know those even existed.

But still why do you want:

A) a blog that turns *any* percentage of people away when they don't have a magic link (when any other blog provider will let 100% of your visitors read your articles)?

B) to support the company that bullied Free Code Camp (and countless others) off their platform?

I mean the Medium editor is great and all, but that hardly makes up for the above.",0.0
g77wmnm,j2rpbu,"So you didn‚Äôt know about free articles on Medium but still you clicked the link to read the article. 
That means you have a subscription. 
Why would *you* support a company that bullies publications off their platform?",1.0
g77xc7a,j2rpbu,"So if I don't like CNN, I should never read any articles on CNN, and stick to Fox News to tell me everything?  Maybe that argument makes sense for news sites, which make their money off ads ... but Medium makes their money by bullying the people they promised free blogs to.

All I'm doing by visiting their site is costing them $0.01 in bandwidth and giving them nothing in return.  But to be honest, I *do* feel a little dirty for even doing that ... which is why I took the time to come here and try and explain Medium's problems to the OP.  If we all do our part to explain Medium's problems to our community, maybe our community will stop using such a problematic blog host.",1.0
g79atye,j2rpbu,I don't get what people miss. Web components and a virtual dom provide a solution to the clunky process of working directly with the browser api for dynamically manipulating the dom and managing the state you apply to it.,0.0
g76oqkg,j2oysx,"I'm building yet another framework, or rather a programming environment for TypeScript applications. It combines a web framework with an editor into an integrated, battery-included solution. It is inspired by the Self programming language - JavaScript's dad ;).

The tool is based on esbuild and somehow similar to Vite i.e. client-side assets are compiled on the fly whenever there‚Äôs a HTTP request. In the marketing speak, this technique is usually referred as O(1) bundling (but that‚Äôs not entirely correct). This approach project compilation in development is extremely fast and not dependent on the project size.

Everything is built on top of VS Code (WebStorm support coming soon). The project is in early stages (alpha), but there are already few apps built with it in production.

I‚Äôm looking for feedback and suggestions how to improve it further.

[Repo](https://github.com/kreteshq/kretes).

[Website](https://kretes.dev)

Thanks for your time checking it. Be harsh if needed.",1.0
g7886r3,j2oysx,"I like your code.  

[https://github.com/kreteshq/kretes/blob/master/source/auth.ts#L15](https://github.com/kreteshq/kretes/blob/master/source/auth.ts#L15)

\^ could be destructured.

Same file:- you're using \`function name ()\` and arrow functions.   Consistency is nice.  Depends on context to be fair. 

Same file:- Your session class \_could\_ have a collision but it's seriously fucking unlikely and I would be fine with that. 

You are claiming copyright yet using the Apache 2.0 License.   I think you give up any claims to copyright on the software with this license.  

&amp;#x200B;

&gt;It allows users to use the software for any purpose, to distribute it, to modify it, and to distribute modified versions of the software under the terms of the license, without concern for royalties

&amp;#x200B;

I'm being nice here:  [https://github.com/kreteshq/kretes/blob/master/source/response.ts](https://github.com/kreteshq/kretes/blob/master/source/response.ts) 

I don't know if I should love or hate it.    I am leaning towards love but we don't need to reinvent the wheel.  Good luck returning the InternalServerError when your server is being a bastard!  :-)",2.0
g788fzh,j2oysx,"Ah..   I re-read your initial post and although I didn't run your code,  I kinda see where these status messages may come in and it's not to do with the health of your own code.      You can ignore from ""I'm being nice here"".  I do love it :)",1.0
g76r1me,j2oysx,"I'm developing I.R.I.S. Utilities, an open-source discord bot that plays music, and performs various utility related tasks.

[Website](https://iris-utilities.com/)

[GitHub](https://github.com/MidSpike/iris-utilities/)",1.0
g7o8kil,j2oysx,I made Worley noise generator. It's my first serious sub-project. Tell me what you guys think.[Here is the repo.](https://github.com/sokorototo/worley-noise) Please point out mistakes,1.0
g77wl7z,j2kjq0,"&gt;In this tutorial, we will build a React.js application that interacts with a GraphQL endpoint. This method of project setup is modern and lightweight: it uses Hooks, ES Modules and has a small amount of dependencies. We will use Vite to create the project structure, pnpm to manage the dependencies, urql for GraphQL, and finally OneGraph as the GraphQL gateway to various APIs. Our goal is to create an application for listing GitHub repositories of a specific user.

I feel like something got left out here: **why**?  To be clear, I'm *not* saying I hate the tech they use in the tutorial, or that I &lt;3 `create-react-app`!

I'm just saying ... *for any tech stack*, if there's a popular/common stack people use, and you instead pick different/uncommon tech for each piece of that stack ... it seems to me it'd be worth spending at least a couple of sentences on why you didn't just do what everyone else does.",25.0
g786051,j2kjq0,"The primary benefit to using Vite is that in development, you can use ES Modules instead of a fully bundled application. This allows the app to load only the code that matters for what you're looking at, rather than everything.

I'm more familiar with Vite using Vue, but I believe it should provide a faster development experience, and still provides a finished app without relying on Webpack.",15.0
g76iwmv,j2kjq0,Well written and introduced me to a few new tools üëç,6.0
g76d96x,j2kjq0,well i didnt know any of this,5.0
g75xvwi,j2kjq0,Concise!  Amazingly fresh and straight-forward guide into a whole host of modern web dev tools.  Nicely done.,11.0
g75zkv3,j2kjq0,Thanks! :),3.0
g76thpj,j2kjq0,"How have I never come across pnpm, this is a lifesaver",4.0
g7763zl,j2kjq0,Happy you like it. pnpm is kind of under-appreciated imho.,2.0
g7f7108,j2kjq0,"This was really interesting to learn. Thanks for this. Just a quick comment though. It seems the section on adding the query to the app is a little incomplete. I had to go through the urql docs to find the proper structure to add the query to the RepositoryList component. The code you have for main.jsx and App.jsx is perfect, but the code for RepositoryList.jsx is incomplete. You may want to update with imports and how the query should look as a const. Just a suggestion!",1.0
g7f7ajp,j2kjq0,"And, probably just a leftover from when you were tooling around with the demo, but your button says 'Login with Youtube'!",1.0
g774fku,j2kjq0,"&gt; This enormous speed gain is possible thanks to esbuild, a new TypeScript/JavaScript bundler written using the Go programming language.

I though Go's big thing was concurrency and low latency. What does it bring to the table for compilation??? Are we just bragging because Go = cool?

Edit: dumb questions. Concurrency lets you build multiple modules at once.",1.0
g77kt82,j2kjq0,"According to the esbuild github page:

 

## Why is it fast?

Several reasons:

* It's written in Go, a language that compiles to native code
* Parsing, printing, and source map generation are all fully parallelized
* Everything is done in very few passes without expensive data transformations
* Code is written with speed in mind, and tries to avoid unnecessary allocations",11.0
g7761uw,j2kjq0,"No worries. There are no dumb questions. Generally speaking, Go (and Rust) could make JS/TS tooling more efficient, thus making DX better as the result. We will see how it goes",6.0
g79f2s1,j2kjq0,"&gt;Edit: dumb questions. Concurrency lets you build multiple modules at once.

Also, Go is compiled, so CPU-bound tasks (particularly ones that can't be optimised as well by the JIT) are far quicker. I would suspect that that has the largest impact here, rather than the effective concurrency.",1.0
g76dgpv,j2hk5q,"**TLDR;** Day.js is smaller than Date-FNS, and the author likes its API beter ... but if you're hard-core into functional programming then Date-FNS goes well with that.

Also, if all you need is the most basic functionality, you can settle for no date library and just:

    const date = new Date(Date.UTC(2012, 11, 20, 3, 0, 0))
    // Ouput will depend on user locale and timezone 
    console.log(new Intl.DateTimeFormat().format(date));",1.0
g7avrsw,j2hk5q,"&gt; Ouput will depend on user locale and timezone 

Ouch! Great if that's what you want, but might lead to some unexpected behavior if not.",2.0
g75ibi7,j2hk5q,I never heard of data-fns,0.0
g75jc4m,j2hk5q,It's a modern alternative of Moment.js,3.0
g75gcys,j2h9yx,I would probably laugh out loud if I saw someone defend the code sample in a PR under Open Closed Principle,1.0
g74sdb5,j2ddd3,Like HotJar.com?,1.0
g74t5wf,j2ddd3,"Good option, but I‚Äôm not a fan of their pricing model. Anything more of a flat rate or annual fee?",1.0
g74tsly,j2ddd3,Have a look at Yandex Metrica. Could fit your need,1.0
g750mld,j2ddd3,"Haven't used it, but Heatmap.js (https://github.com/pa7/heatmap.js) looks impressive ... plus it's free (MIT-licensed).

Also you can check out their site, which demos the heatmap right there on the page: https://www.patrick-wied.at/static/heatmapjs/",1.0
g756sqc,j2dcfw,"Aka `requestNextAnimationFrame(..)`: https://gist.github.com/getify/3004342

I proposed that for the web platform 8 years ago, and they dismissed it as a hack: https://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-May/039566.html",2.0
g7b3prd,j2dcfw,"I love this ""hack."" Bummer it wasn't well-received. I was planning on putting together a small package that would offer similar functionality -- ""request-animation-helpers"" or something of the like. Mind if I use this as heavy implementation inspiration?",1.0
g7cchd3,j2dcfw,sure be my guest... btw I actually had it in a project forever ago: https://github.com/getify/h5ive-DEPRECATED/blob/master/animationFrame.h5ive.js,1.0
g75h85c,j2dcfw,"The argumentation here is amazing. They're designing the web with the assumption that the average developer is a complete idiot, which leaves us with horrible apis like requestAnimationFrame.",1.0
g74owcl,j2bi3w,Will events still bubble up from the root to document? It'd suck to have to update a bunch of code that uses \`document.addEventListener\`,34.0
g74us76,j2bi3w,"Yes, I believe so, as long as `event.stopPropagation` is not called from other event handlers.",16.0
g7cb48u,j2bi3w,That would be a strange thing to break IMO.,1.0
g75hgog,j2bi3w,"The most important implication of this is in my oppinion, that react now works inside of shadow doms.",20.0
g772n0e,j2bi3w,My application is built up using micro frontends and this is great!,1.0
g75bm3u,j2bi3w,In which scenario will we need to use document.add event handler? I don‚Äôt see it used very often which doesn‚Äôt really make much of a difference,2.0
g75kzqm,j2bi3w,"It‚Äôs usually a good way to optimize. Say you have a big ass table and do not want to add an event listener for each of 5000 cells. Instead, you add a listener to the table and check the event argument to find which td was clicked. They use the same thing; but with the whole document",11.0
g75p0v0,j2bi3w,Understand now. Thank you,1.0
g75jdbz,j2bi3w,"Event delegation https://learn.jquery.com/events/event-delegation/. Usually used outside of frameworks.

It is used for avoiding timing issues with creating event handlers. With event delegation technique you can create handler for an element which is not on the page yet.

Or to handle generic events like ‚Äúclick on element with class X‚Äù or ‚Äúclick on the link‚Äù without knowing what elements have the class or who and how create those links.",9.0
g7aj85q,j2bi3w,"Will this help with web components? Wrapping a react component in a web component and using the shadow dom as the root would break react due to the way events were handled. Will this now work?

This kind of pattern can be useful to allow react code to be shared in a more generic, framework-agnostic kind of way.",0.0
g74ar3t,j21spu,"Any word on Selenium?  Nothing against other options, but Selenium *is* still a big name in the space, and people have built *lots* of tooling around it.

Also, the last time I used Selenium's recorder (a few years ago) ... it really sucked ;)",1.0
g74cw93,j21spu,"How would you compare to selenium to puppeteer? Off topic, I know.

I'm ok at Python but very comfortable with JS. I'm also pretty savvy with scraping, do a ton of of it, and puppeteer has never let me down. But I do wonder if there's something I'm missing out on because every web scraping article I see uses selenium.

I've used it once or twice but always end up back with puppeteer as I'm way faster with JS.",3.0
g759j9u,j21spu,"There's tradeoffs.  The main one is that headless runners are more reliable, but typically are tied to a single browser.  Selenium is flakier than a croissant, but it can test any major browser.",1.0
g76yk59,j21spu,"Hi, OP here and creator of Headless Recorder and its sponsoring company [https://checklyhq.com](https://checklyhq.com). This is quite a big topic....

My honest believe is that Selenium will eventually go away. The upsides of frameworks like Puppeteer and Playwright are not subtle. The speed, reliability and integration depth they have are quite significant. They are also MUCH more lightweight in CPU / MEM resources, although you still need to run a browser of course.

So for Headless Recorder and my company we decided to just not support Selenium at all. This allows us to focus on the better Dev experience. The fact that folks using Selenium can not use Headless Recorder or our paid product is something we accept.",2.0
g78p36i,j21spu,"Great answer!

Ultimately I think there's a need for cross-browser testing tools, even today ... but it's perfectly reasonable to say ""we're not focused on serving that need.""",1.0
g74tlsh,j21r6a,"The headline should have included ""from the guy that brought you CSS-based tracking"" :-)

Fun read.  Not *at all* practical, at least that I can imagine ... especially since (as a JS dev) I rarely even care to cater to non-JS users ... but still a lot of fun, if only from the ""you can do that?"" angle.",2.0
g79my6r,j21r6a,Gif also works as an alternative. its also streamed afaik,1.0
g72hcct,j216mr,Does this icon library support vue3,1.0
g73c8od,j216mr,Yes: https://github.com/bytedance/IconPark/tree/master/packages/vue-next,1.0
g733imk,j216mr,[deleted],1.0
g7570ja,j216mr,do you work in bytedance? if yes then what is the purpose of having gulp as there are plenty of modern options. I am not saying good or bad just curious about it.,1.0
g72d1w3,j20jge,"Great idea and I wish I could, but virtual learning is aging me like the wrong cup from The Last Crusade and I might be dead by then",4.0
g72ddnq,j20jge,Haha yeah I'm in graduate classes and they burning me out,0.0
g72gv0a,j20jge,"Oh, I was talking about my kid‚Äôs kindergarten, but, yeah, I imagine grad school is pretty demanding, too. Best of luck and thanks for spreading the word",2.0
g76l14m,j20jge,Great idea! How do you join the discord?,1.0
g73x5uw,j20jge,"Will it be like a fullstack project where all sites should accomplish the same task? If thats the idea im in, pls share discord link",1.0
g72nd9b,j20jge,"Good idea, but 24 hour maybe is not enough",0.0
g72sgno,j20jge,"This actually sounds like a good idea. I would love to join the discord. I have very rusty JS skills, but I could also use this to work on HTML and CSS. Sounds like fun.",0.0
g73f5yz,j20jge,Im interested is there a discord link,0.0
g749w8j,j20jge,I‚Äôd be interested!,0.0
g74b6pr,j20jge,I love this idea. Im in! Is there a discord link?,0.0
g74bvhn,j20jge,"I'm definitely interested in this, could I get a link?",0.0
g74w1u6,j20jge,"maybe you should give each group a working stack i.e. dev space and website hosting, I agree 24hrs is just too fast for dev, I would suggest a week but just my opinion.",0.0
g74wdtj,j20jge,"I agree with you, I think we're going to flesh it out a lot more as we continue, but we're just getting things together at this point. Definitely going to be increasing the times! :)",0.0
g71xhua,j1xicm,"If you find small bugs it‚Äôs already a good start imo. You can start by contributing small things, and eventually you‚Äôll see yourself getting better at it etc.",1.0
g71ylw0,j1xicm,"thanks for the response! 

yes, I think that's it, do u know any good repo to start?",1.0
g724ajp,j1xicm,All contributions are welcome to Forgjs and noframeworkjs,1.0
g7254rf,j1xicm,"forgjs looks amazing! im definetly going to try to contribute there, thanks a lot!
but I wasn't able to find noframeworkjs...",1.0
g7258gv,j1xicm,https://github.com/oussamahamdaoui/noframework.js,1.0
g7267sv,j1xicm,"thanks! looks also awesome, I'm going to take a look at them and see what I can come up with.

btw, those are both yours right? great job :)",1.0
g726htp,j1xicm,"Yup, those are the projects I know will accept pull requests",1.0
g726pep,j1xicm,"great! i think I could contribute in forg with some refactoring to warm up and separate each function in a different file, maybe this will make it easier for other people to contribute to it and create new features.

what do u think about it?",1.0
g727vi9,j1xicm,"sorry, I meant noframework.js",1.0
g7281fe,j1xicm,"If you can refactor the code that would be great, while doing that check the issues see if there is some of them that you can fix that would be awesome üòä and if you have any questions feel free to send me a dm I‚Äôd be happy to help

PS: I saw that you would like to contribute to a tract project there is a react issue. If you can make the exports to both work with node and react it would be awesome",1.0
g728ahk,j1xicm,"great! I'll work on it soon, happy to help :)",1.0
g73skgk,j1va53,Medium suck,2.0
g71xexu,j1ucn0,"Sadly, every ""multiplayer"" article leaves out the absolute most important part of networked games: simulation and state management.  Each player is simulating with imperfect data, and if you want to provide a smooth and fair gaming experience you need to do a lot of work. 

https://www.youtube.com/watch?v=W3aieHjyNvw",66.0
g71yh3m,j1ucn0,"Yeah but thats hard!

Thanks for the link, looks interesting!",15.0
g72cz7f,j1ucn0,"You can do it!

I did it a few years ago with WebSockets. It's really interesting, and I answered a SO question about it once - https://stackoverflow.com/questions/18114901/multiplayer-game-movement-synchronization/18390881#18390881",10.0
g738084,j1ucn0,does ws have the same 10k connections limit socketio has?,2.0
g74mecx,j1ucn0,I don't think so. In this blog post they were able to maintain 600k concurrent connections with a different library. https://blog.jayway.com/2015/04/13/600k-concurrent-websocket-connections-on-aws-using-node-js/,2.0
g79q7ep,j1ucn0,Yea...  I built socketio logic really deep into my app and have many regrets.,1.0
g726j9i,j1ucn0,You're welcome.  If there's one piece of closed sourced software on the planet that I'd like to use it's Overwatch's Engine.,2.0
g72c0k6,j1ucn0,"You need to check out Photon Quantum then, will be one more piece you can't access but would like to :)",2.0
g72kef8,j1ucn0,Overwatch netcode is garbage imo.  I've played it since launch and still have a big problem with no-reg hits that I've never seen in other games.,-5.0
g71ymrj,j1ucn0,I find socket.io to often be an unnecessary and bloated version of [ws](https://www.npmjs.com/package/ws),24.0
g72aaj5,j1ucn0,"I moved to ws from socket.io a few months ago. 

Detecting disconnects and auto-reconnect is about the only thing I can think of that you need to implement manually in ws.",11.0
g72irt0,j1ucn0,"Socket.io provides room logic, event name mapping to event listeners, serializing and deserializing of JSON messages, old browser support and a bit more. I haven't found a way to do these things with ws directly without writing it from scratch.",11.0
g730ubf,j1ucn0,"When I used socket.io, the rooms had state that I had to maintain anyways, beyond simply who was in what room.

So when I moved to `ws`, that was pretty much already done.

    let rooms = {} 
    
    ...

    rooms[newRoom] = {users: {}}

then just iterate over your room's users and send them messages.

TBH, I was always looking at that socket.io cheat sheet, they might even make that harder than it should be.",3.0
g732rxi,j1ucn0,This works until you have multiple servers,3.0
g73461r,j1ucn0,Is socket.io in a better position to handle that?,2.0
g73a54e,j1ucn0,"Socket.io has support for session IDs and a playbook to set it up: https://socket.io/docs/using-multiple-nodes/

 ws would require you to implement it manually or find a package that does it for you.",3.0
g72l17l,j1ucn0,Event sources and JSON are built into the browser and node though,5.0
g73ac0f,j1ucn0,"You still have to implement the event type handling manually (if statements, a switch statement, custom event handler object..) and you have to manually call JSON.parse and JSON.stringify",2.0
g73khjc,j1ucn0,"It may be shorter than you think:

    export const socket = new EventTarget();
    
    ws.on('message', (data) =&gt; {
      const payload = JSON.parse(data);
      socket.dispatchEvent(new CustomEvent(payload.event, { detail: payload }));
    });
    
    // In some other file...
    import { socket } from './wherever-you-initialize-ws';
    socket.addEventListener('some-event', someAction);

This is in the browser, but it's pretty much identical in node",3.0
g73ymu6,j1ucn0,I mean that‚Äôs like the easiest part of it. I wouldn‚Äôt say it‚Äôs super difficult work to set up room logic but it is pretty tedious.,1.0
g73zmkd,j1ucn0,"Well if you keep moving the goalposts... I feel like I did pretty much everything in your previous comment in 3 lines with no dependencies

Edit: I see you're a different person, my bad",1.0
g740qeq,j1ucn0,"I didn‚Äôt move any goalposts. One thing socket.io does is set up room logic in a simple way, as mentioned in the comment further up the chain. Your browser solution doesn‚Äôt have anything to do with room logic. I pointed that out.

I‚Äôm not saying it‚Äôs right or wrong or whatever.. I think the general consensus is that socket.io is pretty bloated and isn‚Äôt strictly necessary. My point is that it makes room setup way less tedious than manually doing it yourself. Similarly, express lets you set up route handling in a way that is much less tedious than manually doing it.",1.0
g7iwpcq,j1ucn0,I had socket adding 200ms of latency. Switched to ws and the problem disappeared.,1.0
g738454,j1ucn0,socketio has a limit of 10k MSG's /s which afaik ws doesn't have.,-2.0
g739aym,j1ucn0,"There is no built in limit to socket.io, limits are bound to hardware / application logic.

The only 10K per second benchmark for socket.io I can find is from an article published in 2011 for specific hardware and a general load test.",2.0
g79q2w1,j1ucn0,http://drewww.github.io/socket.io-benchmarking/ is my source.,1.0
g72vyfe,j1ucn0,"Unless you need support IE9 or older, native WebSockets is the way to go.

And if you don't need bidirectional socket communication, SSE with HTTP/2 works even better.",3.0
g72dzgo,j1ucn0,"Worth mentioning that you'll need to do some additional work with permissions/certificates to get this to work on Apple products. 

I tried using Socket.io when building an app last year and they didn't work if the user was on an Apple device.",4.0
g79nbzi,j1ucn0,"Heyy, I am working on a similar project! Just published my experience using socketio at scale

[https://dev.to/sauravmh/browser-game-design-using-websockets-and-deployments-on-scale-1iaa](https://dev.to/sauravmh/browser-game-design-using-websockets-and-deployments-on-scale-1iaa)

Not a very verbose state management required for my game here, but I here I've worked on handling a few states during the player turns",2.0
g737uey,j1ucn0,Is it better to emit the events to the clients as they happen or to use a polling technique?,1.0
g745sjt,j1ucn0,"If ""real-time"" matters to you, like it would in a first-person shooter game, then you probably want to emit events to everyone as they happen.  
If being in ""real-time"" is not a concern, then you could poll, but you don't need websockets for that.  
Somewhere in the middle, you could simulate push notifications by having the server ping the client (via websocket) that something has changed, then the client uses HTTP to see what the change is.",3.0
g71s9oy,j1ucn0,You're never going to get good or even decent performance with web sockets because it's built on tcp. If you want good perf for a multiplayer game you should open a webrtc connection to your server. And maybe avoid Nodejs. Golang or Rust would be good picks.,-38.0
g71tcm6,j1ucn0,"You have to be a blast at parties.

It's a game where someone clicks a button and it moves. This isn't GTA he's trying to create. It's a solid little article, teaches a concept to someone new to sockets, and doesn't pretend.",42.0
g71tvnm,j1ucn0,"This is totally wrong. You're not going to be running Fortnite or CSGO in your browser. Perf with websockets is totally fine for the simple types of games you run in a browser and generally easier to implement, even if it's TCP. I have to wonder if you've actually tried building a game with websockets before.

Popular, semi-massively multiplayer games like [slither.io](https://slither.io) or [agar.io](https://agar.io) both use websockets with no issues. They also use Node backends.",22.0
g71u1d3,j1ucn0,Yes I have... If you're making a turn based game then it's fine but if you want to make a fps or an rpg it won't. And yes you can play these types of games nowadays by compiling Unity to wasm for instance.,-23.0
g71w3qu,j1ucn0,"There are plenty of fast-paced games on the web, running with websockets. Good example would be krunker.io (fps) or hordes.io (rpg). Game networking is easily doable today with only TCP streams. The complexity of a basic WebRTC setup for non-p2p games is insane.",17.0
g72crox,j1ucn0,World of Warcraft is a popular (MMO)RPG that uses TCP for everything except voice chat.,13.0
g72d664,j1tgh0,"Symbols are a perfect example of cargo cult programming.  They *do* solve a *very niche* concern ... but when they first came out the JS community was like ""why use string keys for any object: use symbols for all keys!!!""

At the end of the day, programming is about using the right tool for the right job ... and symbols are only the right tool for a very small number of jobs.",16.0
g7339b0,j1tgh0,Sometimes it‚Äôs just fun to play with something new and shiny for a bit.,7.0
g73eazh,j1tgh0,"""Play with""?  Absolutely, 100% I agree: how else can you know when you should use the shiny new thing for something practical?

But using the shiny new thing in a production app without playing with it first ... *especially* if you're only doing it because ""all the cool kids are""?  *That* is a bad idea IMHO.",9.0
g72dyib,j1tgh0,Can't agree more!,3.0
g754heb,j1tgh0,They are great for unit tests tbh,0.0
g73bq68,j1tgh0,"Symbols are also good for not polluting the list of `&lt;string&gt;` keys. For example, if you're parsing a dictionary from another format (eg: JSON or XML), and want internal functions or values that can't possibly collide with the entry name:

    {
      [parsedKey]: parsedValue,
      [IMPORT_DATE_SYMBOL]: Date.now(),
    }

Edit: I also use them for enumerating `switch` cases, instead of an enum of number.",6.0
g72hx17,j1tgh0,"Very informative, thanks! I actually didn't know about the global register or system symbols.",5.0
g72uixh,j1tgh0,"I hate these articles that rhetorically ask ""why would anyone do this?"" and present only obviously bad reasons.  


So here is a reason you might want to use Symbols to create hidden/private object properties.  


**Object.defineProperty** is slow. Like, [really](https://bugzilla.mozilla.org/show_bug.cgi?id=772334), [measurably](https://humanwhocodes.com/blog/2015/11/performance-implication-object-defineproperty/) [slow](https://github.com/mrdoob/three.js/issues/9536). If you have some performance critical code that needs to create objects with properties that you want don't want to be enumerable then Symbols are your best option. That's because creating a property with a Symbol-key has *no performance penalty at all* over creating a string-key property.  


Non-enumerable properties are useful for classes. Symbols not allow allow for psuedo-private fields, but they also make it trivial to share the key via export so that other code can access the ""private"" key as needed.  


Symbols are *awesome* for this kind of thing. There is really no good alternative. They aren't ""cargo cult programming"", they are a valid, performant, useful tool.",2.0
g72yldy,j1tgh0,"Well, this of course leads to the question. Why would anyone need to create private fields besides some programming cult reason",-7.0
g741pal,j1tgh0,Internal methods and data...?,3.0
g74ajni,j1tgh0,Why not public. If they are  not for usage mark them as so.,-3.0
g74b7dn,j1tgh0,Guessing you‚Äôve never written any libraries then.,6.0
g75qsos,j1tgh0,"Yes, I have. i.e. in plain JavaScript using classes where SourceCode does not support private fields and methods. Also, in TypeScript, where everything in the transpiled/compiled files ends up being public, even if it is declared private in the Source.

Hey, I am not interested in talking ppl and what they have done and not, too much. If you have an answer to the question topicwise it might be interesting, if not, dont feel the need to hide it starting debatting ppl and stuff. It is fine. Nothing to be ashamed of.",0.0
g75qurj,j1tgh0,You get those are situations where you could use symbols right?,1.0
g75t1lf,j1tgh0,"Yes, which leads to where we started. Okay, guess it aint going anywhere.",1.0
g793z29,j1tgh0,"Why would you assume that someone wouldn't use something internal? Even if you made something called `DONOTRUNTHISFUNCTIONEVENASAJOKE(){...}` that encrypted the entire device's file contents holding them for ransom, spawned a fork bomb, and somehow wiped the device's firmware preventing anyone from powering the device back on, someone would still find and run that function.

Why a library author wouldn't make something private, either by using private members or closures, is mind boggling.",2.0
g79w2lq,j1tgh0,Sound like a valid point.,1.0
g71xqmm,j1tgh0,"If you asked me, Symbols are virtually useless, `WeakMap`s are universally better.

The only thing that `Symbol`s have on `WeakMap`s is that symbol properties get copied when cloning via `...` or `Object.assign`, which is not a typical need for libraries (and those that do need should be explicit and export a specialized copying function).",-5.0
g72p7a3,j1tgh0,How could things like `toIterator` have been implemented with `WeakMap`s?,6.0
g72dx92,j1tgh0,"What about hidden props and system symbols?

I think WeakMap is coming to solve a bit different problem",5.0
g73lh1x,j1tgh0,"When talking about private fields, yes you are right. ""symbols for soft private"" is utterly stupid. And I don't understand why we'd need that ugly ass #hard #private mess instead of simply using a weak map for that usecase.",1.0
g73vzbk,j1tgh0,"Why are ""symbols for soft private"" utterly stupid? Weakmaps have both performance and GC implications; symbols have neither.",1.0
g758rit,j1tgh0,"First of all its not private. It's about the same level as prefixing fields with an underscore. It's annoying and ugly to use, is unreadable and has zero benefits.

If I wanted private fields that arent even private, are crappy to use and look like garbage, I could have done so a long time ago by using ugly prefixes. 

Real, ergonomic private and protected fields still don't exist in Javascript, neither ""soft private with symbols"" nor ""hard #private"" fits the bill.",1.0
g70rmpd,j1k0qc,"```
if (doYouWantToBuildASnowman) {
  console.log('Olaf')
} elsa {
  console.log('NO')
}
```",109.0
g718x4x,j1k0qc,_angrily upvotes_,10.0
g71lls6,j1k0qc,"Ok, bye...",4.0
g706h4g,j1k0qc,Embedding? I would like to call go functions from js scripts. Looking for an escape from java and graaljs.,20.0
g70u8i1,j1k0qc,Isn't that possible already with wasm?,3.0
g70w1tw,j1k0qc,"Not to the full extent. Since spectre, shared array buffers are disabled or feature-flagged, so wasm gets the data by copy",7.0
g71nm7a,j1k0qc,"We will provide embedding support as a module to do two way communication to and from js.
... a bit like deno does atm with rust",3.0
g71q1a0,j1k0qc,"Very early support for Go plugins is already there. Although, we might want to switch to a more crossplatform alternative as go plugin buildmode is not supported on Windows.",2.0
g6zrlqn,j1k0qc,"Mmmm, so vs Deno it boils down to ""compiles to binary"" over using the standard V8 engine? That makes it a very easy choice...",27.0
g6ztwao,j1k0qc,"You can make an executable out of Deno projects. Though, they will be many times larger than Elsa. Both projects have different goals and are not comparable. Quickjs performance and features don't come close to v8 jit.",28.0
g7030w8,j1k0qc,[deleted],1.0
g7096c0,j1k0qc,"No. If you are using Elsa or Deno to create an executable for your projects, the end result will be stripped out a lot where the js engine size would be the biggest single factor. Those are just final binary sizes for each cli. 

You can probably notice an order of magnitude smaller executables with elsa than deno, not just 2x. 

For a comparison on size (V8 and quickjs): https://bellard.org/quickjs/bench.html",11.0
g70am34,j1k0qc,So excited for this.,7.0
g70gkku,j1k0qc,Pardon me being dense on this one but what‚Äôs the use case?,21.0
g70v5ux,j1k0qc,For when you want to build a snowman,28.0
g715sm1,j1k0qc,"You use it when you want to run apps way faster than Node or Deno. I think it's great, that there's finally a runtime, that is not using V8, in my opinion, that can differentiate more from Node.

The most exciting use case would probably be Go plugins and embedding, in my opinion",12.0
g722h08,j1k0qc,"&gt;	The most exciting use case would probably be Go plugins and embedding, in my opinion

Ah, that‚Äôs what I just couldn‚Äôt come up with. Thanks!",5.0
g71pvm2,j1k0qc,"Umm, currently QuickJS is not faster than V8 (jit) so, Elsa is way faster than Node or Deno is not true",7.0
g71sktv,j1k0qc,https://github.com/elsaland/elsa/tree/master/benchmarks,-1.0
g71sr2r,j1k0qc,[https://bellard.org/quickjs/bench.html](https://bellard.org/quickjs/bench.html),6.0
g72z50s,j1k0qc,"The readme seems to suggest that V8's JIT makes it faster and perform better in a lot of cases, but that quickJS has a faster start-up time. So how would it run faster than Node?",2.0
g70l3mf,j1k0qc,use case is when u wanna run js and ts,-46.0
g70ncgg,j1k0qc,I think he meant that isn't already satisfied with some existing runtime....,17.0
g70plri,j1k0qc,"read the repo instead of downvoting me dumbasses

https://github.com/elsaland/elsa/blob/master/COMPARISON.md",-51.0
g70sqbg,j1k0qc,You got downvoted because you didn't answer the question and then were an ass about it.,27.0
g70tbk0,j1k0qc,The question was what is the use case for Elsa. It's use case is to run javascript and typescript. Literally the only answer there is.,-50.0
g70y9vf,j1k0qc,You‚Äôre being an ass unnecessarily,24.0
g70za3p,j1k0qc,"Interesting, I view the commenter as an ass. Instead of appreciating the developers who work on shit that makes our lives easier (for free btw) he immediately questions what the value of it is disparaging the devs work. ""LOL Whats the point of a new runtime i Have noDeJs and iT woRkS fInE"".",-13.0
g70zsrj,j1k0qc,"It‚Äôs cool that people make these things. It‚Äôs cool that people appreciate them, but it isn‚Äôt a requirement. 

I don‚Äôt think you fully understood the context of what they were saying. I think it‚Äôs perfectly valid to ask what the use case is - I work in Go daily so I immediately see the value something like this can provide.

However - I also fully see the mindset of ‚Äúwhy do we need another build tool‚Äù

My point is that we‚Äôre all coming at this from completely different experience/ideologies/etc and the LEAST valuable thing you can add to the discussion is being mean. 

If the dev truly doesn‚Äôt understand why it exists, being mean just makes them certain to never care. Being nice could maybe get them to check it out.

If they do and are just being facetious, being mean just fuels their trolling, being nice does nothing negative.",15.0
g713rxo,j1k0qc,If you are referring to my comment you are way off on my intent.,10.0
g71x1j5,j1k0qc,&gt;Pardon me being dense,3.0
g711o6b,j1k0qc,Literally as in figuratively? Stop being an ass.,5.0
g71135g,j1k0qc,"I didn't downvote you, that was other people.",-4.0
g7018cu,j1k0qc,Does it support top level async stuff?,6.0
g70ga57,j1k0qc,"The latest QuickJS release has all the ES2020 goodness, so my bets are on ""yes""",7.0
g70wo6w,j1k0qc,"They‚Äôre waiting on esbuild to land support for it so they can support it in output bundles - see https://github.com/elsaland/elsa/issues/26

For the runtime, it should work.",0.0
g71bz92,j1k0qc,"Does this support TypeScript type checking or it can only read TypeScript files?

At the very top of the readme it says TypeScript is supported but then if you scroll down it also says that ""type checking coming soon"".",4.0
g71njkk,j1k0qc,It will be supported. We are currently working on a `elsa dev hello.ts` command to enable type checking without sacrificing performance.,5.0
g71u9qz,j1k0qc,"I'm confused about performance comparisons. I see the benchmarks for console, etc, and those appear to be way faster than deno and node, but what about a web server? Are you all planning on putting more info on performance in a more easily consumable way?",2.0
g72qk3y,j1k0qc,"Those performance metrics include startup time. You should look into bench for quickjs and V8 jit for actual performance. V8 jit is orders of magnitude faster. It's hard to measure performance of jits on short tests because they won't be able to optimize execution. Even then, V8 is faster than quickjs. 

Deno currently use tsc for transpilation which means it will be slower than esbuild (go) (which is what elsa uses). It will move to swc (rust) in near future which should improve transpilation times.

Quickjs startups are faster than V8. That's why the benchmark appears to be better.",3.0
g72huzn,j1k0qc,"Looks good, and interesting use of QuickJS!",2.0
g70nqwt,j1k0qc,Why can‚Äôt we compile using jit before shipping?,3.0
g71a2nd,j1k0qc,Why cant you eat the food already when its being packed at the factory?,12.0
g71j8gy,j1k0qc,"Because that would not be JIT, but AOT, and would be unportable",3.0
g71ge3b,j1k0qc,Wow this is really cool! How is performance?,1.0
g72natr,j1k0qc,"When does aels come out?

&amp;#x200B;

\*trollface\*",1.0
g71l3x7,j1k0qc,"What does that even mean, ‚Äúa runtime for javascript‚Äù? Is it an interpreter for js and ts? There seems to be a noun missing: a runtime what? Could you be a little more specific?",-2.0
g6zusm2,j1glnc,You'll get more traction if you include a descriptive title and post body.,40.0
g6zv6b9,j1glnc,Good advise!,5.0
g6zvkx7,j1glnc,"Updated:

I'm creating this project to help developers add voice, messaging, and video to their applications. I've been working on this for a long time now. Currently deploying two networks base on the current version. It is still a work in progress, but I wanted to share it with the community.

If you are on Github, please consider liking and sharing the project.

Programmable Voice Demo: [https://github.com/fonoster/fonos/tree/master/examples/dialog](https://github.com/fonoster/fonos/tree/master/examples/dialog)

Repo: [https://github.com/fonoster/fonos](https://github.com/fonoster/fonos)",20.0
g7076m9,j1glnc,So this project basically makes all of Twilio‚Äôs functionality open source such that anyone can run their own Twilio? If so that‚Äôs incredible!,8.0
g709ome,j1glnc,"Yes, that's the idea.",8.0
g72nu0w,j1cd2d,I also have a  video on a vanilla JS version of this tutorial at:  [https://www.youtube.com/watch?v=jrbXmQd5LGs](https://www.youtube.com/watch?v=jrbXmQd5LGs),2.0
g6yzh3v,j1cd2d,Really good animations.,1.0
g6yin7k,j1c6z3,"Here's why people who write their blogs on Medium (***in 2020!!!***) flop.

OP: If you weren't aware, Medium turns away a big chunk of your visitors!  If you used literally any other free blog host, 100% of the people who want to read your blog would be able to ... but with Medium you're making a choice to turn away tons of readers.

On top of that, Medium bullied a non-profit coding organization off of Medium (https://wptavern.com/freecodecamp-moves-off-of-medium-after-being-pressured-to-put-articles-behind-paywalls)!  They're just a disgusting company all around.",14.0
g71ww0m,j1c6z3,I think that HashNode [https://hashnode.com/](https://hashnode.com/) is doing a good job here,1.0
g72galm,j1c6z3,"Good suggestion!

Also, I didn't realize this (until I clicked your link and saw the quote on the front page), but apparently when **Medium bullied Free Code Camp (a** ***non-profit*** **org!) off their platform** ... Free Code Camp went to HashNode!

&gt; By far the best place to create a blog in 2020, imho.

&gt; Quincy Larson,  **Founder, freeCodeCamp**

**EDIT:** Actually ... I take all that back :-(  HashNode might be an ok host **today**, but they're all but guaranteed to become another Medium in a year or two.

Why?  Because *they have no monetization strategy!*  Their entire plan to make money is A) attract tons of bloggers, B) figure out how to make money off them.  In other words ... they have *exactly* the same plan as Medium ... and look at how that turned out?

&gt;How is Hashnode going to make money?

&gt;We have several ideas for monetization, but it's difficult to plan things at such an early stage. Right now we, as a company, want to focus on building a great platform for software developers. Our goal is to get more and more developers on the platform and make it the best place for developers to hang out and share knowledge.

&gt;We are well funded and our operating costs are less. So, we want to defer monetization and focus on building a great product first.
&gt;Sandeep Panda

&gt;Co-Founder, Hashnode

https://hashnode.com/post/how-is-hashnode-going-to-make-money-cip5eahzg05lplk53thftmw6e/answer/cip5u6wv406ksxz53082piohf

Until they add a link to their front page (or at least their About page) explaining how they plan to stay in business *without becoming Medium* ... I think we should all expect them to become a terrible company when their cash runs out ...

... because that's what *every* company becomes ...  when they run out of money, and either need to do something terrible to make money, or else go out of business.",2.0
g7awvbi,j1c6z3,"I thought Medium still allows you to publish normally and have your posts available to everyone, if you're a small blogger and not freeCodeCamp. Is this not the case? Did they make the paywall mandatory now?",1.0
g7azec1,j1c6z3,"I left Medium years ago so I can't say what's possible now.  What I can say is that they have a long history of misleading users about that flag, and (if the user gets big enough) of flat out bullying them into either enabling it or getting off their platform (despite having promised a free platform to get the user in the first place).

I can also confirm that I *regularly* still go to read Medium articles and get blocked by the paywall, so clearly lots of people are still ""choosing"" to enable it ... ""choosing"" in quotes, because I don't see why any blog author would *choose* to tell X% of their readers to go do something impolite to themselves.

Every blog author I've ever known wants 100% of the people who want to read their articles to be able to (something every blog platform except Medium offers).",1.0
g75ih2e,j1c6z3,"For those wanting to bypass Medium's paywall, Medium Unlimited is a godsend.",0.0
g6y974p,j1c6z3,kind of silly to say something that came out 4 months ago is a flop,21.0
g6ycol4,j1c6z3,"To use an analogy from cinema, maybe Deno is just a box office flop that will eventually be considered a cult classic.",2.0
g6yp9u4,j1c6z3,"Backwards compat would be a great compromise, especially if you could configure it for specific registries (such as NPM, natch).

Deno is going to have a slow rise, but I'm confident that it will become more common.   
 TypeScript is taking over, and native support for it makes life a lot easier.

Also consider that Deno needs a battle-tested LTS release before a lot of businesses can consider it viable.",3.0
g7azb6r,j1c6z3,"A while back I had to choose between Python and Deno for a personal project, a small one-file script that analyzes some log files.

The first version was actually in Deno, but I eventually moved over to Python just because the Deno WebStorm plugin lacked a lot of stuff.

A fully-featured plugin for VSCode and JetBrain's IDEs is a must if what you're looking for is to snatch early adopters.

One of the [WebStorm plugin reviews](https://plugins.jetbrains.com/plugin/14382-deno) reads:

&gt;types are not being shown even when imported directly from TS files

That's a pretty big thing to lack if you've been used to working with TypeScript and node. For most practical purposes `ts-node` has your back if you just want to churn out something fast for personal use.",1.0
g7wqel8,j1c6z3,"It has not flopped, ridiculous click-bait article.

Of course, it will take a long time for people to start using it over Node. Deno gets better every week, the linter is starting to shape up and the VS Code plugin is now over its initial problems.

Node compatibility is increasing too, only today new features were committed:

[https://github.com/denoland/deno/pull/7666](https://github.com/denoland/deno/pull/7666)",1.0
g722y67,j1c6z3,Using TypeScript on the server exposes the absurdity of using frontend on the backend because of the transpilation step.  You can just skip all that and choose a more appropriate technology instead of force fitting a force fit.,-1.0
g7aw3vw,j1c6z3,"&gt; choose a more appropriate technology

Deno is for people who want to choose TypeScript *for being TypeScript*.",1.0
g7t9cx0,j1c6z3,"The reason TypeScript exists is because there were non-frontend programmers who had to do frontend stuff, and felt encumbered by JavaScript.  They yearned for something more, but simply have no choice in a browser.  Browsers only run JavaScript.  

So they invented a strongly typed, OOP superset language that transpiles down to JavaScript.  Not ideal, but it's a viable half-measure workaround.

If you are not in a browser, you can use any language you want.  Using TypeScript in this case, then transpiling it to JavaScript, and running that in a JavaScript engine, just doesn't make sense.",1.0
g7vfimf,j1c6z3,"You must know that falls under the [genetic fallacy](https://en.wikipedia.org/wiki/Genetic_fallacy):

&gt;The genetic fallacy (also known as the fallacy of origins or fallacy of virtue) is a fallacy of irrelevance that is **based solely on someone's or something's history**, origin, or source **rather than its current meaning or context**. This overlooks any difference to be found in the present situation, typically **transferring the** positive or **negative esteem from the earlier context**. In other words, a claim is ignored in favor of attacking or championing its source.",1.0
g849e09,j1c6z3,"I am basing my argument on the new context.  There's a degree of freedom (language choice) in the new context (servers), that's absent in the old context (browsers).  That constraint is the reason the subject of the argument (TypeScript) was invented in the first place.  

It exists to simulate the missing degree of freedom.  Its utility is not applicable without the constraint.  All you are left with is its complications, the main one being the need to transpile it.  That's totally vestigial when transplanted into the new context.

If there was a TypeScript engine, I would just roll my eyes, and let Deno be, like I do with Node.  But, there isn't.  It's just one too many dodges for me to not criticize the whole idea of.

It's just, like, my opinion.  But my reasoning is sound.",1.0
g84ot2t,j1c6z3,"&gt;It exists to simulate the missing degree of freedom. Its utility is not applicable without the constraint. All you are left with is its complications, the main one being the need to transpile it.

While it's true that TypeScript was invented to add types to code that would end up running in browsers, this is not the same thing as saying that it has no utility outside that constrained context.

As many developers coming from purely nominal type systems have discovered, the DX of TypeScript's structural type system is an improvement over their previous experience. In short, TS is a pleasure to work with. This is why people some pick it *for being what it is*, a structurally-typed language that they *already know*, with a rich ecosystem for both browser and system use.

TS was invented because JS was limited, and JS was invented to run in browsers? Cool to know, but that's not the reason we're using it *now*.

Every choice of a back-end language is a trade-off. TypeScript's plus is that you already know it and that it's fun to use. Transpilation is really just an implementation detail of the runtime if performance is not an issue.",1.0
g6xxouw,j19cep,"SEO is just one thing, there are performance benefit as well. HTML should be loaded before Javascript and SSR does that very well. 

Another benefit: real redirection status code. For example, how do we simulate permanent redirect with traditional SPA?",41.0
g6y2554,j19cep,"Even just in building an app, the framework around Next.js is well thought out and handles data fetching smoothly. I find it much easier to pass variables in a url query versus global state between two areas of your app and just handle the query with Next.",22.0
g6zga8u,j19cep,"&gt; I find it much easier to pass variables in a url query versus global state between two areas of your app and just handle the query with Next.

Can you please elaborate on this? Is this something Next handles out of the box? Just curious, I'm a beginner with Next.",2.0
g6zjuau,j19cep,"Sure -- Next.js uses file-based page routing, so if you make a `pets.js` in your app root, you'll get a page at `/pets`. Along with this you can use directories and wildcard the slugs with markup so you could make a `pets/new.js` or `pets/[petName].js` and any page routes to something like `pets/Walter` would load that `petName`. 

You can access that slug either in the context item passed to your page in props, or from the same page export a `getServerSideProps` function to pre-load the data from your DB / apis before rendering the page which gets passed it in as props to your page component. You can similarly access a standard URL query this way so you can use a url like `pets/Walter?action=walk` or something. 

Depending on your use case, this can simplify some global state stuff you might be using Redux or something else to keep track of, provide persistent links for your users, and makes it easier to add extra views to your app. It also makes development easier IMO because you don't have to put together some janky temporary state to test what you're working on. Since it uses regular HTML links, it also improves accessibility. 

Next also comes with serverless functions out of the box inside the `pages/api` directory, which is enormously helpful for all kinds of reasons as well.",5.0
g6zldak,j19cep,Thanks for the detailed response. That sounds really cool!,2.0
g6xz4oc,j19cep,"I'm a luddite: I think SSR has *always* been preferable when possible. That said, first: solve the problem you have, not the problem someone else says you have. Do you actually have an SEO problem, or does it not matter?

Second, learn interesting technology no matter what it is. Even if what you learn has no direct application to your job, it is beneficial if it inspires you and keeps you from burning out. Exploring new perspectives on coding is always healthy. It can actually be detrimental to try and learn things directly for your job, because you will feel that time pressure and be less creative and open.",24.0
g6z52uc,j19cep,That's a great answer.,2.0
g6xxqq6,j19cep,"SEO is not the only benefit, SSR is also required to generate proper links with image and description when sharing urls on social network.",20.0
g700eck,j19cep,"Yeah, but you don't need to use SSR for the entire site to accomplish that.",2.0
g70f3pv,j19cep,but you need different meta tags for each endpoints,1.0
g6xxapv,j19cep,"Also important to note is the static optimization part.

With default SPA apps you need to look at a spinner for 2 seconds. If you are using a static generation framework, you can skip looking at the spinner. 

Great for seo and speed",25.0
g6xy9y4,j19cep,Do you mind to explain why?,2.0
g6xz4ac,j19cep,"well imagine you have CRA on a simple website, let's say your portfolio. 

You navigate to yourportfolio.com and need to load 200kb of javascript because you wanted to use react / react router to render your pages and components in a smart way.

Your content is static for every user visiting your site. We know up front what everyone will see but we show them a loading spinner anyway because we need to initialize react. 

What these tools like Gatsby and Nextjs can do with static generation is go through your portfolio and render out the html that the user will see when they visit yourportfolio.com

Which means we went from 

    navigate to yourportfolio.com -&gt; spinner / no content for 2 seconds -&gt; content! (+ javascript loaded)
    navigate to yourportfolio.com -&gt; content! -&gt; javascript loaded",10.0
g6y1uqk,j19cep,"&gt; What these tools like Gatsby and Nextjs can do with static generation is go through your portfolio and render out the html that the user will see when they visit yourportfolio.com

This is the part that confuses me. What's the different between this and CRA's `npm run build` command?",2.0
g6y30e8,j19cep,"An SSR approach will physically create different HTML pages and tie them together with your JavaScript. CRA, or any CSR approach does not. It just creates the JavaScript, and the only HTML you have in your entire app is your initial injection, usually something like `&lt;div id=""ROOT""&gt;&lt;/div&gt;`.  This tells web crawlers or SEO in general absolutely nothing about your application or any of its child pages.

Say you have a CRA site using react router. If you link someone to a page, say, `/about-us`, then it's still using the same HTML as the rest your site on that page.  CRA is just injecting the ""HTML"" (quoted because it's not actually HTML, it's JavaScript) in through the V-DOM, *but*, google and many other crawlers don't always know to wait for the JS to load, and even if they do they will penalize you or generally not be as effective.  Ultimately this makes it hard for things like SEO to know what's on what page, as they will always look to native HTML for this information first. 

In an SSR application, you can render that `/about-us` page into its own document altogether, with the appropriate meta tags, HTML markup and whatnot that crawlers can very easily see and access.  No waiting for JS to load, no guess-work about what page is what or what's using what, just a simple HTML document telling it everything it needs to know.  This is exactly how web crawlers and many other aspects of the web were built to work.  Ever shared a link in Facebook / Slack / Skype / etc. and seen a preview image of the site and its description expanded with the link?  With SSR that's a breeze, it can very easily just pull that from the HTML document.  In a CSR app you won't get that, because all it's seeing is `&lt;div id=""#ROOT""&gt;&lt;/div&gt;`, regardless of the JavaScript set to execute on the page you're linking.  It doesn't always know, ""wait -- maybe there's some JavaScript on this page I should execute"", and even if it does, it probably wont.  Rendering an entire SPA takes resources, and Slack / FB / etc. (even Google) don't like doing it for reasons like that.

TL;DR -- The Web ecosystem always wants you to have your important information in HTML that's readable and accessible.  A CSR approach injects that with JavaScript, which makes the crawler work twice as hard to get what it's trying to get and is prone to missing things (if it even decides or knows to execute the JS, otherwise it will see nothing).  An SSR approach renders out that HTML document ahead of time, giving crawlers or referral links or whatever exactly the data it needs in exactly the format it's expecting.",13.0
g6y20vk,j19cep,IMO in that case React seems like the wrong tool for the job. I might as well just use something like Eleventy.,-2.0
g6y3ea4,j19cep,"It‚Äôs not React, necessarily. If you like using JSX and components, you can work your way and it spits out static HTML/CSS without JS. If you need any JS, it will bundle it in as necessary. While SSGs are simple to pick up, if you‚Äôre used to JSX and the like, Next has that advantage over 11ty. And I‚Äôm a fan of 11ty.",5.0
g6yk8oj,j19cep,"Shameless plug, but if you just want JSX &amp; Next.js like routing without much interactivity, check out [Dhow](https://github.com/kartiknair/dhow). It's a JSX-powered SSG for Node.js, you can think of it like Next.js but without the 70kb JS bundle for ""Hello World"".",4.0
g6yd97f,j19cep,"NextJS **is not a SSR only** framework.

NextJS allow you to choose **page per page** (as of route per route) if you want to do :

* CSR (it will then generate the static html, leaving only the fetched data to come)
* Full SSR
* SSG: prefetch the data and generate a pre-rendered static asset of the page at build time (ideal for not very dynamic content).
* ISG: Same as SSG but will revalidate the data and render the new page in the background and replace it every given timeout

NextJS is a versatile framework that **gives you options**, with no other costs but a file based router (which is a not really a cost in my opinion) and many other built in features (automatic code splitting for example)

[NextJS Docs](https://nextjs.org/docs/basic-features/data-fetching)",7.0
g6ydhxf,j19cep,"Doing SSR yourself is a lot of work, and you're basically just creating a custom and crappy version of Next anyway.  
  
I assume that's what you meant when you said ""just learning plain React SSR"", but maybe you meant ""just learning plain React""?",8.0
g6zm6lf,j19cep,Honestly 90% of the reason to use Next.js is just to have all of the modern web tooling perfectly configured and maintained into the distant future at basically zero cost to the user. All the value it adds onto that is just the cherry on top.,3.0
g6xvjco,j19cep,"Yes, you should invest in SSR. While Google may be able to crawl your CSR apps better every year, as of right now the SEO of an SSR application is still much easier for it to digest and index. Google has stated before that having their crawlers render out millions of SPA's in a day is a huge draw on their resources, and maybe this has changed (I doubt it) but I know that they did penalize you for it. This among other caveats, too - - it will get better but it will never be the preferred solution for SEO, period. 

I personally would only use SSR for a production level application with any SEO needs at all - and a lot of that has to do with how easy it is. You don't have to invest much into something like Next or Gatsby to get a lot out of it, and very few companies are going to build their own SSR framework when tools like these exist.",12.0
g6xwn2w,j19cep,"I don‚Äôt think SSR should always be the answer.  
Do you need SEO? Sometimes not (for SAAS applications for instance).  
And if you do, you also have dynamic rendering services like Rendertron which do not affect your code base at all.  
To me it sounds overkill to change your whole architecture just for SEO.",7.0
g6xws6f,j19cep,"I agree, I've made games in react using CSR because they didn't need any SEO. Never said it would always be the answer. 

But again, if I needed SEO at all, I would use SSR. The architecture of something like Next or Gatsby is pretty much identical to that of a CSR.",3.0
g72zw6j,j19cep,You even included that caveat ‚Äúwith any SEO needs‚Äù in your original post...,2.0
g6y8amo,j19cep,One doesn't need to change their entire architecture... SSR can be added alongside an existing application.,2.0
g6yymc9,j19cep,What are some of the scenarios where SSR might not be the beat choice?,1.0
g6z1v5b,j19cep,"To be honest this is very much a ""right tool for the right job"" question and answer, tough to give blanket answers.

In the past, however, I've made a game using a CSR approach.  Simple home page, quick high scores modal, and the game.  I used react-router to show those few things, but only really want the app itself to be indexed and searchable.  I don't want somebody to be able to follow a link to just the game page, for example, as I wanted to make sure they're hit the with instructions on the home page first.

That's an example that comes to mind, I'm sure there are many others.",1.0
g6ytwnr,j19cep,"Server-side rendering in general should be the _default_ choice for anyone doing web development, and SPA only a choice when it really doesn't make sense.

Everything will be lighter and faster, and likely easier to maintain.",5.0
g6yd1tn,j19cep,"The thing about Next.js is that you get SSR _almost_ for free. The major changes from working on another React foundation is the way routes work and how you fetch data upfront. Next.js is the first solution, in my opinion, that makes SSR seamless. I am confident that we'll see more useful implementations once Suspense has been released, but no one knows when that'll happen.

On the SEO front, Google actually uses two different methods for crawling JS-rendered vs server-side rendered pages. First it looks at a page without JS execution, if it somehow determined that the page might be client-side rendered it adds it to another queue. So JS rendered pages are not equal to server-side rendered pages.",3.0
g6ynv2f,j19cep,"Problem with JS is that it breaks. If you have missing HTML tag or unsupported CSS property, page will work. It may look like shit, but user still can get content. But if your page rendered with JS and there is something wrong with this JS (might not even be on your part), page will crash. So, how does Next may help? 

First of all - next does a lot of stuff for you. This means that you can spend more time on business logic. And here we come to second piece. Next have very neat API for passing data into page. It works almost universally for server and client and you don't actually care if user have working JS or not. If not, he will just load static html. Next gives you this for free. And in this data fetching API you can reuse parts of your logic from client, for, say, dynamic forms.

Last bit is automatic optimisations that can query your backend and rebuild static html file on the fly, or just build bunch of html from data, or from md, or from remotes. And all this you also get with next.

Learning how to do React SSR on your own is good. It's always beneficial to learn more and know more. Next just gives you more tools and _tested_ features than you will get, building your own SSR.

A little note on SEO. In Russia our main search provider is not Google, and while that can eval client side is, they doesn't index pages rendered only on client without specially made pages with static content, so it's just easier to make pages with next to get SSR.",3.0
g6y480w,j19cep,"By saying SSR are you meaning static generation or server side rendering?

I'm midway through migrating a large site to nextjs and the plan was to use static generation across the board. However, when investigating some of the listing pages, we found that the items in the list we're dependant on other contextual factors like the user and their location which then meant that most users would load the static page then have to load everything from scratch from the API. So, for better performance we went with server side rendering for these views.

It's important to know what your design goals are and actually measure what's important too you rather than assume that one approach did all situations.",2.0
g6yzc2u,j19cep,SSR is `S`erver `S`ide `R`endering per definition,2.0
g6yx3hs,j19cep,Can‚Äôt recommend nextjs enough. It‚Äôs so well conceived and documented you could become very proficient in under an hour.,2.0
g6zslwb,j19cep,"I had never looked at it (but I use react at work all of the time) and just went and looked and I don't even really know what they meant by ""learn"" it. I agree with you 100%, I felt like I already know how to use it. They even have create-next-app!",2.0
g72q3zp,j19cep,"100%. Once one learns/reads about the pages directory, Link component, getServerSideProps/getStaticProps they covered more than most people.

The create-next-app made remember when I thought create-react-app was the coolest thing I‚Äôd ever seen.",1.0
g6zfgta,j19cep,"If you are already comfortable with React, learning Next shouldn't take too long. It's API on top of react is pretty minimal and adds quite a bit of functionality and adds a bunch of cool developer experience (i.e. live reload / refresh on save).

Just take 30 minutes to read the documentation to see if it fits your needs. I personally don't need it for the SSR, I just use Next to generate pre-rendered static pages. You can just host these on any static hosting service like Github pages and doesn't require a Node server.",2.0
g6y3kbh,j19cep,"The social media tags still require SSR.

Either way there are still search engines not as sophisticated as Google.

However the leap from CRA to next is small.",1.0
g71ad67,j19cep,"The hype is for SSG and ISG, not SSR. Try it out and you will understand why it is a massive improvement.",1.0
g724agv,j19cep,"The problem with SSRing a SPA is that you are just trying to turn a SPA into a multi-page site, but you could always do that much better with lots of other existing technologies.  You're just admitting you force-fitted JavaScript, probably because frontend is all you know.",1.0
g7dy9rs,j19cep,"There is a rule when ever i'm building an application.
If the app is gonna be used internally i will choose CRA, because i feel like router solutions in CRA are far better for app-like use cases.
But for the applications directed for the general public, i i will always choose Nextjs, because it gives everything you need for any serious application: SSR, SSG, ISSG, CSR out of the box, and you can use them interchangeably in the same application.
Besides that, for nextjs specifically, the team behind it is releasing new and important features every release.",1.0
g6y083y,j19cep,"Keep in mind that you will lose the benefit of NextJS SSR the moment you think about a state driven application with Redux or Mobx, if you're pages rely heavily on a global state, then there is no benefit in investing on SSR, a PWA would be better in these cases since your bundle and assets would be cached and could also work offline if needed, performance of  optimized PWA in general are way better than NextJS SSR apps where you wouldn't often exceed 70 in lighthouse benchmarks on heavy apps.",1.0
g6y49ty,j19cep,"well that's bullshit. Not gonna bother explaining why, just google next-redux-wrapper",2.0
g6y0xrr,j19cep,"You already got a great response on Google and the crawling budget of SPAs. SEO != Google, other search engines might not be important to you but there are other tools that care about your sites content.

Specifically talking about Facebook, Twitter, Slack and such. They like open graph tags for titles, description and hero-images. Those fancy link previews may or may not be important for your usecase, but its something to keep in mind.  
You could work around this it with services like prerender.io (which essentially proxy requests to headless chrome), also works for the ""stupid"" crawlers.

On the other hand, SSR (hydration specifically) isn't that much cheaper either. Especially if you keep an eye on Googles new web vitals (which sometime next year will influence our rankings). The FCP might be pretty good with SSR, but your FID and first CPU idle wont improve that much. Thats when you need to start to optimize the hydration process by lazy hydrating some stuff to get FID and CPU idle down*.  
But its not like a client rendered app is going to have better web vitals anyways, pick your poison I guess.

Not saying that SSR or SSG are bad, just that they are no magic bullets that eliminate all SPA drawbacks.  
Always depends on your specific usecase if you gain something by adding SSRs ""complexity"". Complexity in """" because Next does quite a bit of heavy lifting for you already.


\* thats what I experienced in Nuxt (a bit like NextJs for Vue), not sure if Next is significantly better or worse in this regard.",1.0
g6y5s8q,j19cep,"I agree that you don't need Next.   
But you need SSR if you want to build a somewhat serious service.  
  
As an example, people are thinking SEO without knowing how it works. You don't need meta tags and static content only... you also need a fast loading time, fast time to meaningful paint etc... and in this regard you can't beat a ssr page as there will be no initial rendering time.  

For mobile users you use less cpu and less data so it will also score higher on google while offering a better user experience... seriously it's a non brainer.",1.0
g7dxkxp,j19cep,"You mean SSG not SSR, because with SSR you always get initial rendering time for the server to request the necessary HTML. SSG in the other hand builds all the necessary HTML beforehand.",1.0
g6y7501,j19cep,"SSR at this point is like what PHP was 10 years ago. This is not an indictment on SSR, it‚Äôs just that PHP on the backend 10 years ago was a staple of web development. I believe SSR is here to stay for a while.",1.0
g6z6ysd,j19cep,"Normally, I'd advocate for SSR, but NextJS's (NuxtJS is even worse) performance is abysmal. You can see that for yourself using `wrk` or some other stress-testing tool.

What I find especially weird is that neither of these frameworks uses [worker threads](https://nodejs.org/api/worker_threads.html) or [cluster](https://nodejs.org/api/cluster.html) by default. And if you want to use them, you have to [jump through hoops](https://nextjs.org/docs/advanced-features/custom-server) and decide for yourself whether you want to ignore that scary warning or not:

&gt; A custom server will remove important performance optimizations, like serverless functions and Automatic Static Optimization.",1.0
g6xpvai,j18lov,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g6wuftd,j13b1n,"Thank you very much for the great support so far! This year I have developed a growing interest in coding and software development. When it came time to choose a topic for my final research project at my university, I decided to conduct research about a local and interesting startup in New Zealand.

They collaboratively automize code reviews by enabling teams to discuss and code their own rules using a sophisticated engine for static code analysis.

Alongside interviews, I have also compiled a survey to explore how such prototype creates value for software development teams. I would like to invite you to participate in my research. Your professional input will be highly valuable for the research report and further development of this prototype.

If you are interested and want to know more, it takes ten minutes to complete my survey which provides further details. Your support would be immensely appreciated. 

Happy coding!",1.0
g6xfnoy,j12c8r,"I think Web Push is the single most annoying feature added to browsers in a long time. I don't _ever_ want to enable push notifications from random blogs or stores. If anything, I want less notifications. The popups these add to sites is so annoying.",8.0
g71obb5,j12c8r,"Web Push should, in my opinion, only be allowed from installed PWAs.  
I think the only sites I've come across that use it are either demo sites demonstrating how it works or sites that try to abuse it to *push* more marketing to its users.

It's probably even better than E-Mail for this purpose: Users only have to click one button to receive them and there are many users who really don't know how to turn them off. There are no regulations, like for Newsletters or the App Store / Google Play Guidelines.

I now understand that Apple has *two* reasons for not implementing them. Though I really think it should be allowed for installed PWAs.",1.0
g6wsrc8,j12c8r,"I would love to hear your thoughts, because I hope to be not completly off the road,...",1.0
g6xiroq,j12c8r,[deleted],-2.0
g6yx894,j12c8r,/r/confidentlyincorrect,2.0
g6yx9p4,j12c8r,"Here's a sneak peek of /r/confidentlyincorrect using the [top posts](https://np.reddit.com/r/confidentlyincorrect/top/?sort=top&amp;t=all) of all time!

\#1: [I'll forgive this man for his attitude alone](https://v.redd.it/tplhfgnipa251) | [503 comments](https://np.reddit.com/r/confidentlyincorrect/comments/guk3e6/ill_forgive_this_man_for_his_attitude_alone/)  
\#2: [The way she dances says it all](https://v.redd.it/sqt5mecglaa41) | [600 comments](https://np.reddit.com/r/confidentlyincorrect/comments/enk3sz/the_way_she_dances_says_it_all/)  
\#3: [The sarcastic use of the thinking emote is the icing on this ahistorical cake](https://i.redd.it/ige5sw5f9v351.png) | [955 comments](https://np.reddit.com/r/confidentlyincorrect/comments/gzkytd/the_sarcastic_use_of_the_thinking_emote_is_the/)

----
^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/fpi5i6/blacklist_vii/)",1.0
g6y0o44,j0ybal,"I think you're misusing the word notorious. Notorious implies the Kent C Dodds article is well known for being shit.

Interesting idea though. Will probably try it out in the next few weeks or so.",1.0
g6xn5an,j0rps1,Wow. Never assumed `export let` would expose a stateful variable. This changes everything.,7.0
g6xp64i,j0rps1,"state is evil.

I'd rather have a function returning the state so I can manage it myself",2.0
g6y5efo,j0rps1,That's exactly what example shows. A readonly property that is managed in private.,3.0
g6xtw2n,j0rps1,"These articles are always so hard to read. Half their examples are undefined functions or purposefully wrong to show how wrong they are, and most of the concepts are things I've never gotten anywhere near needing.",5.0
g6xhqo1,j0rps1,Great article!,3.0
g6y6biq,j0rps1,Is the book is worth a read?,2.0
g7a4d46,j0rps1,"Check out the official website at [https://www.nodejsdesignpatterns.com/](https://www.nodejsdesignpatterns.com/) to see if it can be worth for you. Also, spoiler alert, I am one of the authors, so I am more than happy to  answer your questions :)",1.0
g6vta8q,j0rps1,[deleted],-26.0
g6vw3gq,j0rps1,Check [this](https://dev.to/swyx/5-tils-about-node-js-fundamentals-from-the-node-js-design-patterns-book-4dh2) out,59.0
g6w6uu6,j0rps1,LOL,11.0
g6ygyip,j0rps1,u/undeleteparent,1.0
g6xdxi6,j0rps1,It's such a short read!  Lmao!,3.0
g6u1eja,j0nuwn,The codepen exemple should use the same image with diff compression instead of two different pictures.,17.0
g6wjlg2,j0nuwn,"I took it for granted that *would* be the example. 

Don't take even simple logical things for granted, people. (Sometimes)",6.0
g6xe80a,j0nuwn,What means granted ?,2.0
g7zf4qm,j0nuwn,"What does granted mean?  The comment you're replying to used it in 2 different ways, which is pretty interesting.

&gt; I /took it for granted/ that would be the example.

I /assumed/ that would be the example.

&gt; /Don't take/ even simple logical things /for granted,/ people.

/Don't fail to appreciate/ even simple logical things, people.

J'espere que ca t'aide :)",2.0
g82z2pt,j0nuwn,Yes merci beaucoup i learn everyday,2.0
g6uqvaz,j0nuwn,How does it compare to [&lt;sl-image-comparer&gt;](https://shoelace.style/components/image-comparer)?,3.0
g6uyuwa,j0nuwn,"Great output, there is many ways to achieve it, a great training could be to dive in them all.

In particular, js `ResizeObserver`, css `resize: horizontal;`, etc etc",1.0
g72i0pm,j0mwmu,Nice idea! Time to get some of those Flash game times back :D,1.0
g6rl8x2,j0ixlh,"Project Page (?): https://github.com/oscargch/askLisa

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g6us1y7,j0ixlh,Nice.,1.0
g6ric0x,j0h568,"I was for some reason always adding a space at the end. Was always getting a 0. Thought it was broken until I read the instructions.

It would be easy to add a function that removes any extra spaces before and after on the input. I think that would be a nice thing to add. 

Aside from that I think it's cool.",15.0
g6rj2vr,j0h568,"I made this one a while back, but might be helpful. It still needs a lot of work. You can use your keys 1-0 to navigate each key. 

[https://oscargch.github.io/pianoscales](https://oscargch.github.io/pianoscales/index.html)/",7.0
g6spoax,j0h568,Cool! Love to see other people‚Äôs take on similar ideas,1.0
g6v1ihk,j0h568,I kind of made the reverse of your app: a [chord decoder](https://spacejack.github.io/dechord/),1.0
g6sy1ow,j0h568,I think I was able to fix it with just one line of code!,4.0
g6tnvh8,j0h568,You love to see it!,1.0
g6spltb,j0h568,"Awesome, I bet you‚Äôre totally right! I‚Äôll look into it",1.0
g6riwx7,j0h568,Is there a github to fork and play around with the front end?,5.0
g6s6ghw,j0h568,"Not too experienced with GitHub but I think I did it! 

https://github.com/dpshade22/chord_solver",5.0
g6uy9ek,j0h568,"I am always looking to practice front-end and UI/UX, so thank you. The added benefit of this is that it has COOL LOGIC to go along with it. Not that this will make it out of my local host, but I will obviously keep the credits and contact info to you. Again, thank you. I look forward to catching future code from you!",2.0
g6sjpzn,j0h568,That code needs a LOT of refactoring. Reminds me of my first project.,-13.0
g6spyb5,j0h568,"I would love to hear some ways I can improve it. This is the project I actually started to learn coding with, so I‚Äôm sure it definitely could use a lot of help",6.0
g6svdhu,j0h568,"I would suggest not having one big function. Create a bunch of smaller ""helper"" functions that take in parameters. They're especially useful if you have a lot of repetitive code. There is always a saying in computer science! ""You should never have to copy paste your code"". If you notice you're doing alot of copy and pasting, look into creating it into a function.",8.0
g6sl5u0,j0h568,Are you offering to help? Criticizing without providing any tools for this person to improve helps nobody.,12.0
g6u6rqg,j0h568,"I will download the code and play with it a bit, it was 2 AM here. Why the downvotes? He is a begginer you could help too. I don't think you took the time to look the repo like I did.",0.0
g6rwpea,j0h568,Nice!,3.0
g6spzva,j0h568,Thank you!,2.0
g6sw06q,j0h568,"This is so cool! This is way more interesting/useful than the projects I made when I was first learning. If you put a little more polish on it, this is something I would totally use",3.0
g6s1l1c,j0h568,"I'd like to see you be able to pick an instrument, and have it show the chord. eg, chord fingering on the fret board for guitar, and then maybe the variations.  
Also, it wasn't readily apparent that I needed to have spaces in between the letters for the notes and it was screwing me up.",2.0
g6spdxv,j0h568,Noted! Thanks for the input,3.0
g6s7qqh,j0h568,"Seems inversion is misspelt ‚Äúinverion‚Äù?

Edit: Specifically for &lt;E G B C#&gt;, C#√∏7/E (Gr6)

Actually the 1nd inversion half-dim 7 is the only place you misspelt that lol

    return (d + "" Half Diminished 7th (First Inverion)""",2.0
g6sgof8,j0h568,"&gt;C#√∏7/E (Gr6)

Ah, yes, my favorite chord!",6.0
g6tvfhj,j0h568,Ah yes good ol' C#√∏7/E (Gr6) what would I be without you,-1.0
g6u3w0b,j0h568,"Ah yes, repeating the same joke the previous user just said without adding anything!",2.0
g6ubaug,j0h568,You must be new here,1.0
g6udsqd,j0h568,Why?,1.0
g6v4zh1,j0h568,He should know that not one single one of us here have ever created something original! Bwah ha ha!,1.0
g6sq2wp,j0h568,Oops! Thank you!,2.0
g6sgetv,j0h568,"That's pretty cool! I would also make it so it recognizes alternate note titles, such as Eb &amp; D#. I input C D# and G, which should output C minor, but it said it wasn't a valid triad. I know the scale of Cm doesn't have a ""D#"" but rather an Eb, but I would make it universal in case it's a chord in another scale (in which case, it could have a D# and E natural instead.). Otherwise, pretty darn cool!",2.0
g6syezi,j0h568,"I guess it would depend on how notation/theory heavy versus simple the program should be. You‚Äôre right, we might just call it Cm, but could also say Cm(enh). Maybe a compromise towards whatever is ‚Äúsimplest‚Äù in terms of accidentals and intervals (A2 and d4 versus m3 and M3). Seems to me that traditional theory is kind of a nightmare to implement in a program, especially when what you call the chord depends on context (like in the example I used in my post, where in g you wouldn‚Äôt label &lt;E G B C#&gt; as C#√∏7/E if it came before the dominant, you‚Äôd call it a German 6th chord).",2.0
g6sltqo,j0h568,My advice for making it mobile friendly is to either look into media queries or use a css library like bootstrap. The drawback of the libraries is that they can be a little limiting and can cause your site to look like other sites using the same one but they do a lot of the heavy lifting for you. They‚Äôre especially good for making responsive design a no-brainer. Hope that helps in some way. Good luck on your path!,2.0
g6suyan,j0h568,Awesome! Thank you!,2.0
g6su54g,j0h568,"This calculation should be super fast, so why not show the results as you type?",2.0
g6tfblj,j0h568,"I thought about that, but didn‚Äôt know how to execute. I‚Äôll look into it",2.0
g6ujqwo,j0h568,"https://developer.mozilla.org/en-US/docs/Web/API/Document/keyup_event

or probably better:

https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event",2.0
g6v85f1,j0h568,Thank you!,1.0
g6wabdk,j0h568,"    &lt;input
	class=""input""
	id=""search""
	type=""text""
	placeholder=""Example: B D F A""
	name=""search""
    oninput=""doAnswer(); return false""
    /&gt;",2.0
g6wfjo5,j0h568,Works like a charm! Great suggestion man! Thank you!,1.0
g6tqs1l,j0h568,"The single input is confusing. That first page needs some instructions, and it is not immediately clear that About page is where to find the instructions.",2.0
g6v1byd,j0h568,I tried `Bb C E G` to see if it could figure out an inversion of a 7th chord and it brings up a print dialog?,2.0
g6v5cz1,j0h568,"Lol, that‚Äôs very funny and strange, I‚Äôll look into it",1.0
g6vef75,j0h568,Fixed it! I started this in python and accidentally used a print(answer). hahah,1.0
g6vfnto,j0h568,"Cool. By the way, I used a library to perform chord parsing that also does [chord detection from notes](https://github.com/tonaljs/tonal/tree/master/packages/chord-detect) that you might find helpful.",1.0
g6rt120,j0h568,I seem to play chords that your program can't recognize. I guess they will remain a mystery.,2.0
g6sprss,j0h568,"If a mediocre program doesn‚Äôt recognize it, it must not exist! Hahaha",3.0
g6tj32f,j0h568,"Cool! Couple of notes:

- I would take into account enharmonic equivalents e.g. Ab B Eb should still return Ab minor.
- There's a typo in ""First Inversion"" (test data was C Eb G A).
- It doesn't recognize diminished major 7th, augmented 7th, major 7 b5, or major 7 #5.
- Calling a major 6th chord a first inversion minor 7th is *technically* correct, but most musicians would probably identify it as the former. Same goes for minor 6th chords.
- I'd use the term dominant 7 instead of major-minor 7.

It would be cool to add support for polychords, altered chord extensions, case insensitivity, and quartal harmony.

As for the code, you have two READMEs without any real documentation. I'd organize your code into folders for your HTML, CSS, and JS.

Looking at your HTML, your `script` tag in `index.html` should be at the bottom of the body or have a `defer` attribute. `About.html` doesn't need any `script` tags as far as I can tell, and both HTML files have some weird indentation going on as well. Try some sort of pretty printer extension to see what could be improved there. I'd add a `meta` tag denoting utf-8 in the head for both files.

For styling, I'd strongly advise you not to use tables for layout. Add some transitions to your link hover behavior. Give some breathing room between the bottom paragraph of your About page and the footer.

Finally, your JavaScript could be tightened up a bit. Instead of an `onclick` attribute on your button, attach a click event handler to it in your JS:

`document.querySelector('button').addEventListener('click', function() { console.log('foo') });`

Keep in mind that long series of `if` statements should be avoided whenever possible. Using semitones is a useful way to bypass dealing with interval names. See my reply below for the algorithm I wrote for your app that accomplishes the same functionality with roughly 15% the amount of code.",1.0
g6tj9x9,j0h568,"`const btn = document.querySelector('button');`

`btn.addEventListener('click', () =&gt; {`

	// Get the value of the input element
	const notes = document.querySelector('input').value;
	// Convert the input element value to an array and each item into lowercase
	const lowerCaseNotesArr = notes.split(' ').map(note =&gt; note.toLowerCase());
	findChord(lowerCaseNotesArr);
`});`

`const findChord = notesArr =&gt; {`

	// This array will hold the number of semitones between each interval and the lowest note
	const semitoneArr = [];

	// Preserve the value of the lowest note and remove it from the array, then initialize
	// the index variable that will be subtracted from the index of each interval found in
	// twoOctaveChromaticArr, yielding the distance in semitones
	const lowestNote = notesArr[0];
	notesArr.shift();
	let lowestNoteIndex = undefined;

	// The difference in index between objects in this array represents the number of semitones
	// between one chord tone and another
	const twoOctaveChromaticArr = [
		{'a': true},
		{'a#': true, 'bb': true},
		{'b': true},
		{'c': true},
		{'c#': true, 'db': true},
		{'d': true},
		{'d#': true, 'eb': true},
		{'e': true},
		{'f': true},
		{'f#': true, 'gb': true},
		{'g': true},
		{'g#': true, 'ab': true},
		{'a': true},
		{'a#': true, 'bb': true},
		{'b': true},
		{'c': true},
		{'c#': true, 'db': true},
		{'d': true},
		{'d#': true, 'eb': true},
		{'e': true},
		{'f': true},
		{'f#': true, 'gb': true},
		{'g': true},
		{'g#': true, 'ab': true}
	];

	// Find the index of the lowest note of the chord within twoOctaveChromaticArr
	for (let i = 0; i &lt; twoOctaveChromaticArr.length; i++) {
		if (twoOctaveChromaticArr[i][lowestNote]) {
			lowestNoteIndex = i;
		}
	}

	// Loop through the list of chord tones and search for them in twoOctaveChromaticArr.
	// When found, push the number of semitones between the chord tone and the lowest note
	// into the semitoneArr.
	for (let i = 0; i &lt; notesArr.length; i++) {
		for (let j = 0; j &lt; twoOctaveChromaticArr.length; j++) {
			if (twoOctaveChromaticArr[j][notesArr[i]]) {
				semitoneArr.push(j - lowestNoteIndex);
				break;
			}
		}
	}

	// Due to the possibility of the lowest note having a higher index than some of the
	// chord tones, octaves (in the form of 12 semitones) are added to any negative values
	// found in the semitoneArr
	const adjustedSemitoneArr = semitoneArr.map(semitone =&gt; {
		let negative = true;
		while (negative) {
			if (semitone &gt; 0) {
				negative = false;
			} else {
				semitone += 12;
			}
		}
		return semitone;
	});

	// The adjustedSemitoneArr is sorted to maintain consistency with chordNameObject.
	// Remember: it doesn't matter what order the upper intervals are in; all that matters is
	// their relationship to the lowest note. Therefore we can rearrange them, and in this case,
	// sort them.
	adjustedSemitoneArr.sort((a, b) =&gt; a - b);

	// The adjustedSemitoneArr is joined and coerced into a string so that it can be used
	// to look up values in chordNameObject
	const chordNameCode = adjustedSemitoneArr.join('');
	return chordNameObject[chordNameCode];
`}`

`const chordNameObject = {`

	'47': 'maj triad',

	'38': '1st inversion maj triad',

	'59': '2nd inversion maj triad',

	'37': 'min triad',

	'49': '1st inversion min triad',

	'58': '2nd inversion min triad',

	'4711': 'maj 7th',

	'378': '1st inversion maj 7th',

	'459': '2nd inversion maj 7th',

	'158': '3rd inversion maj 7th',

	'3710': 'min 7th',

	'4710': '1st inversion min 7th',

	'368': '2nd inversion min 7th',

	'259': '3rd inversion min 7th',

	'3610': 'half-diminished',

	'379': '1st inversion half-diminished',

	'469': '2nd inversion half-diminished',

	'258': '3rd inversion half-diminished'

`}`",1.0
g6s5l60,j0h568,"I'd be happy to take a look at your code and possibly contribute if you open source this and are open to discussing some collaboration. I have several years of professional development experience and am quite interested in mixing programming with music. It'd be nice to collaborate with someone who has a musical background. I have some projects, but haven't been able to spend as much time as I'd like in exploring music theory since high school AP music theory 15 years ago.",1.0
g6sp918,j0h568,"I just posted the GitHub on another comment, I‚Äôd definitely be interested in collaborating more with this type of stuff!",2.0
g6tx6ma,j0h568,"Try vuejs or riotjs, they allow you to handle the live update in much easier way. There are other options as well but I feel like those libraries have lower barrier of entry.",0.0
g6q3618,j0djgk,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g6q32s5,j0djgk,Created my first public repo today. It's a wrapper for the GitHub Graphql API. Made so I would get a sense of how Graphql works and how to create a back-end with Express and Netlify for hosting. Name still a work in progress Don't forget to star.     ¬Ø\_(„ÉÑ)_/¬Ø,-1.0
g6rk2sg,j0akye,No it‚Äôs just a reference to APIs that are not commonly used or well known and have the potential to improve web,6.0
g6st2af,j0akye,"You forgot they are also behind a permission lock, so also harder to use. Although I don‚Äôt think this was always the case.... either way, I agree with you 100%.",3.0
g6rii7k,j0akye,I‚Äôm confused? is it a framework called hidden gems?,-6.0
g6pr63k,j0akye,[removed],-38.0
g6qpokd,j0akye,Hidden gem != Secret gem,12.0
g6t6v0w,j0akye,Fair enough,2.0
g6sa8fj,j08mgy,"This is really cool. I am a React user and typically use fetch or axios. Why would I use this instead of react-query or swr? Both utilize caching and include loading and error states. You can also use your own fetcher function. Last question, can this be used with GraphQL fetchers like request?",2.0
g6tdmpz,j08mgy,"Hello Stiforr! Thanks for the interest! :) 

When I created this module, I mostly worked with it in the backend. But... 

You **shouldn't use it instead of react-query or swr**. Rather **you should use it in tandem with those libraries** by substituting the fetcher function with this. Those libraries you mentioned, although they implement caching, they don't implement it while the fetch is loading (so if you perform the request two times, you'll get two different promises).   


This package, caches the request **while it is performed**, it doesn't cache any data returned. This means that this package is useful only for **certain usecases**. When you interface with APIs that **will return the same data for two consecutive requests**.

About your last question, if the GraphQL fetchers supports substituting your own fetcher function, yes. With a quick glance, graphql-request doesn't support that :/   


I'm happy to answer any other questions you might have! Also, if you need any help with the repo don't hesitate to open an issue :)",2.0
g6v0gi9,j08mgy,"Nice library!

I think you should be a bit clearer in the README that this isn't a permanent cache and will remove the promise once it is resolved. It wasn't super evident to me until I looked at the tests.",2.0
g6v0m70,j08mgy,Thanks for the tip! I will try to rephrase the README to reflect that :),1.0
g6pj1pe,j04nwe,"I built an opensource API for retrieving countries' geo-information; including their position, states, capitals, population, etc.

[http://countriesnow.space/](http://countriesnow.space/)

&amp;#x200B;

Contributions are highly welcomed: [https://github.com/MartinsOnuoha/countriesAndCitiesAPI](https://github.com/MartinsOnuoha/countriesAndCitiesAPI)",3.0
g6ojhj2,j04nwe,I've been developing some lessons on how to use my Javascript library to build scenes and animations with the &lt;canvas&gt; element. [https://scrawl-v8.rikweb.org.uk/learn](https://scrawl-v8.rikweb.org.uk/learn),2.0
g6ovd24,j04nwe,Scrawl seems super cool!,3.0
g6rm0ah,j04nwe,"I build a party trick fortune teller thingy.

[https://oscargch.github.io/askLisa/](https://oscargch.github.io/askLisa/)

make sure you read the instructions(hidden link on lower right) and understand how to use it before playing with someone.",2.0
g6ov7th,j04nwe,"I translated **Video Hub App** product website into 15 languages üéâ

[https://videohubapp.com/](https://videohubapp.com/)

GitHub: [https://github.com/whyboris/video-hub-app-gatsby-website](https://github.com/whyboris/video-hub-app-gatsby-website)

Uses *Gatsby* üòé",1.0
g6p6fpa,j04nwe,"Developed a telegram bot to help me monitor website changes and notify me. (because the great rtx shortage of 2020)

Originally written in JS, rewritten in TS

Github: [https://github.com/r1cebank/sentrybot](https://github.com/r1cebank/sentrybot)",1.0
g6xtvwd,j04nwe,"Hi, lately I made my first web app. It‚Äôs called Spaceman it‚Äôs basically a hangman game. I‚Äôm planing on adding a score board to it so every player after a streak of wins can write a name and save his score. I don‚Äôt really know how to do it yet but I‚Äôm working on it. If u have any idea or any objections, please share them. I‚Äôll be more than pleased to read them all!
Link to the app - https://hangman-252.web.app
Github - https://github.com/bako252/Spaceman",1.0
g6xtzrg,j04nwe,"Oh and I know that it‚Äôs pretty hard to play for now. I also want to add a score count and an ability to use a hint to make it easier. For now it 
generate random phrase number and save it so they won‚Äôt repeat.",1.0
g7121e5,j04nwe,"Hi all, Hope everyone is good. I have been working on a free and easy to use cloud based file sharing service. Added a new history feature and it's very cool. Check it out and give us your precious feedback :) Thanks.

[https://liltransfer.com](https://liltransfer.com)",1.0
g6nl5kg,j02xf3,I'm a content next.js user that's been really interested in Svelte but haven't had a chance to try out Elder or Sapper yet ‚Äì what do folks see as the pros and cons between these two and also next.js?,23.0
g6nm6h5,j02xf3,"Here's a comment from the creator of Elder.js with some hints at what he would use when building things, it's from the Svelte subreddit so it focuses a bit more on Sapper than Next.js but it should provide some clarity: https://old.reddit.com/r/sveltejs/comments/iyxvt5/elderjs_v1_released_svelte_static_site_generator/g6hsv6i/

My own experience is that for static sites (https://sveltesummit.com/ is built on Elder.js) you get much smaller JS bundles (but at the same time it allows for partial hydration) than exported Sapper (and Next.js) sites.",13.0
g6r0uxf,j02xf3,"for those interested, i am in the process of moving my site over from sapper to elderjs https://github.com/sw-yx/swyxdotio/pull/45

elder does much faster builds than sapper bc it is built for parallel static site generation from the start, whereas on sapper it's kind of a klooge. also, elder uses the ""islands architecture"" which means pages that dont need js never download any js or data to hydrate - JUST html. Googlers are taking to calling this the Islands Architecture and i quite like it https://jasonformat.com/islands-architecture/",4.0
g6nmaor,j02xf3,"All these static site generators are great but I don't see any that generates content as it is created. For example, you might want to generate pages using data from a CMS when you receive a webhook telling you some page was created or updated. I had to create something like this once, and it would've been nice to have a nice framework to work on top of.

If you have more than a few hundred pages of content, a setup like that is ideal.

Edit: After reading the replies, it seems like cunningham's law at work :) thanks for letting me know of so many different strategies of solving this problem :)",13.0
g6nree2,j02xf3,"That is supported by next and it is called ISR (Incremental site regeneration).
You can set some regeneration time (5 seconds for example) and after five seconds next will check if there are changes. 
If there are, then next will recopile and regenerate the static page or create new ones.",15.0
g6npgik,j02xf3,NextJS supports that out of the box,12.0
g6o6jwm,j02xf3,Wait really? Is there a link to that somewhere in the docs?,3.0
g6p27h8,j02xf3,"Yes if you look in the Docs for ""Incremental Static Regeneration"" you'll find it",4.0
g6w435g,j02xf3,"Thank you!

It seems like a nice solution as well. I don't know however, if I would be able to store (and keep updating) a very large website with arbitrary URLs with it, onto a cheap static hosting solution like S3.",2.0
g6nn0vq,j02xf3,"That should be possible with pretty much all SSG's? At least it's possible using GitHub actions i'm pretty sure. Here's a short guide: http://www.btellez.com/posts/triggering-github-actions-with-webhooks.html

Edit: I see now you're talking about incremental builds. That's supported by Elder.js: https://elderguide.com/tech/elderjs/#hook-allRequests",10.0
g6w3wpo,j02xf3,"Incredible!

I find it great that you can mess around with the \`allRequests\` array.

So in theory, every time my CMS sends me a webhook, I could render an empty Elder.js website, push the page I want to render into allRequests, and then sync the results with what I have on S3.

I can imagine it would have a bit of overhead (think compilation etc) but if this was done in a long-lived server which kept caches around it would be largely eliminated.",1.0
g6o4h1l,j02xf3,"Depends on what you are using. If you want to generate whole applications based on content files like JSON, then Nuxt Content can do that. See [Using Nuxt Content with a JSON File](https://frontaid.io/blog/using-nuxt-content-with-json-file/) for an example.

You can even combine that with a Git-based CMS like [FrontAid CMS](https://frontaid.io/). FrontAid stores your content into a JSON file and pushes that to your repository. Using Git Hooks and/or CI/CD you can then automatically regenerate and deploy your static page on every update.

edit: Upon re-reading your comment, I think I misunderstood it. I'm not sure whether Nuxt.js or Nuxt Content supports incremental builds like that.",4.0
g6w4xoc,j02xf3,"Nice initial pointer anyway. I found this repo: [https://github.com/hanbyul-here/nuxt-incremental-build-exp](https://github.com/hanbyul-here/nuxt-incremental-build-exp)  


Which would use git as a content database.  


I really like the idea of using git as a database because backups would be pretty easy, you'd keep history around, and syncing is easy too.  


If you used AWS codecommit you could push commits from your webhook listener by using the REST API, and a codepipeline job would run the build+push steps. You'd end up with a cheap to maintain infrastructure which would spin down to zero USD cost when unused (if you use lambda) and would be cheap to host as well by using AWS S3 and cloudfront.  


Sorry, I'm an AWS fanboy :P",1.0
g6pbh9m,j02xf3,I wish I didn‚Äôt read this because the last thing I need is another JS framework to play with. You have to love the options we have in the JS world!,5.0
g77bcnt,j02xf3,These with Remix kinda sound like frameworks of frameworks lol,1.0
g6pykbc,j02xf3,Still doesn't beat Hugo...,1.0
g6qbr7m,j02xf3,Hugo can generate partially hydrated static pages? TIL! üòÄ,5.0
g6pq469,j02tjb,"You're not really going to get a lot of responses to these types of questions. It's kinda all over the place and a lot of the questions are completely opinion based which people don't like to get into arguments about.

For the telemetry, I recommend reading over the telemetry documents for VSCode. It's not going to go out of its way to load up your OS with other stuff that it doesn't care about. But even VSCode collects some very basic anonymous data if you turn off telemetry. It's all in their documentation on the matter.

I'm skipping B since that's a massive answer to write out and this isn't really the place for it.

C is completely based on your needs. Everyone's IDE is different and customized to meet their needs. My solutions will not work for you because you're not working in the same code base. Though I'll give you some names in no particular order, just whatever I think of. Atom, Sublime, Brackets, CodeAnywhere, WebStorm, Visual Studio, and I guess you could include NotePad++.",1.0
g6o7ef1,j02j10,"That‚Äôs cool, I didn‚Äôt know we can create our owns üëç",11.0
g6ocu2k,j02j10,Anyone know of an extension like this for VS Code?,4.0
g6ojuvv,j02j10,JetBrains 4 Lyfe,11.0
g6woc83,j02j10,I tried but the problem is how to share config between IDEs?,1.0
g6xx2hx,j02j10,How would this make sense?,1.0
g6yo9b5,j02j10,How it‚Äôs not? If I use webstorm and configure all the shortcuts and everything and later use pycharm I have to configure EVERYTHING again from scratch. This is madness and not for me,1.0
g6zapx2,j02j10,"You can export and import settings in jet brains products, it was not clear that that was what you were asking about since I made my comment to someone asking about VS code.",1.0
g72u8w3,j02j10,You can‚Äôt sync. It‚Äôs horrible. You need to always have to export and import.,1.0
g738cg6,j02j10,"They have options to sync with your jetbrains account as well as export / import settings.jar files, I just exported my PHP storm settings and other jet brains IDE recognize it and show you what settings can be imported from it.",1.0
g6oolna,j02j10,"I don't know if there's anything to color files, but you can install Make Hidden, allowing you to instantly show only the folders you want to. This was the most useful part of JetBrains scopes, and it really helps to be able to easily get rid of the clutter in the explorer.

You can install Toggle Excluded along with it so you can unhide everything with ctrl shift a.",1.0
g6rzw9b,j02j10,vscode need this,1.0
g6s8kxz,j02j10,Ok fax this slaps,1.0
g6p4wv2,j02j10,What is a scope?,-2.0
g6pibo5,j02j10,That's what the article explains.,4.0
g6qwiqt,j02j10,Something you will definitely need to understand if you're coding JS,1.0
g6n5dh2,j027nu,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",21.0
g6ntipq,j027nu,"Since people upvote this comment I guess they'd like to see me pick a license, and I've been thinking about it too but there's something I'd like to understand first.

**For JS :** Here's what the page for the unofficial [JavaScript logo](https://commons.wikimedia.org/wiki/File:JavaScript-logo.png) says on Wikimedia Commons :

&gt;*This logo image consists only of simple geometric shapes or text. It does not meet the threshold of originality needed for copyright protection, and is therefore in the public domain.*

So, would the modifications brought by the purple and the ""X"" be enough to claim it's enough originality for someone not to use it as if it was public domain ?

**For TS :** Even though the unofficial JS logo isn't ""original enough"" to stand out from public domain, here's what the page for [the official TypeScript logo](https://commons.wikimedia.org/wiki/File:Typescript_logo_2020.svg) says on Wikimedia Commons :

&gt;This file is licensed under the Creative Commons Attribution 4.0 International license.

But honestly, even though the TS logo is a \*very little\* bit more thought out, I'd say the level of originality is about the same. However, it has been licensed.

So given all of this, from what I understand, I'd almost need to release each of them under a separate license, right ? Like, are my modifications to the JS logo enough to make it ""not public domain"" anymore ? If yes, I guess [CC-BY 4.0](https://choosealicense.com/licenses/cc-by-4.0/) would be a fitting license, as it's also the one used by the TS logo. What do you think ?",7.0
g6o399o,j027nu,"Your notion seems logical to me. Also, I think your changes add enough originality to necessitate a license. It‚Äôs also easier for the next person making a derivative work if there‚Äôs a license. I understand that Public Domain works are difficult for some legal departments to write policies for, as they‚Äôre generally starting from the assumption that there is a license.",8.0
g6rfjy1,j027nu,You can release the JSX logo under public domain at least.,1.0
g6n4kuk,j027nu,"Hi !

I like logos and I don't like having some icons not corresponding to the file extension in my IDE, so I simply made some unofficial logos for the `.jsx` and `.tsx` extensions to use with plugins like [Extra Icons](https://plugins.jetbrains.com/plugin/11058-extra-icons). I thought maybe they can be useful to some of you here too. :)

I don't take any credit for the creativity though, the design is the one I found used by [OpenJSX](https://github.com/OpenJSX).",6.0
g6o2f3o,j027nu,"I like these, one criticism though is that the TXS logo has rounded corners and the JSX one does not, it would be better to have consistency across both of them",2.0
g6o7s7t,j027nu,"Thanks for the feedback, although this difference between the logos is intentional.

The idea was to start from the ""cleanest"" or most official logo I could find for each language.

For JS, I took this very wide spread logo as the base : https://commons.m.wikimedia.org/wiki/File:JavaScript-logo.png . It has sharp corners and I imagined that's what I'd do with the TSX logo too.

However, the TypeScript team recently (a few months ago iirc) reworked the TS branding and released this page : https://www.typescriptlang.org/branding/ which shows the new TS logo variations, all having rounds corners. So I took this as a rule for mine too, trying to follow guidelines when I can :)",3.0
g6t0tu0,j027nu,"Wow, how can the original ts S be so ugly?",1.0
g6oa3qw,j027nu,There's also the font size which is inconsistent between both logos,2.0
g6u0hda,j020vk,"Cool article, I didn't actually know Typescript did this!",2.0
g6qj265,izyw51,There's the snippets app or the radium app,2.0
g6shcjz,izyw51,oh thanks! is it possible to run snippets automatically on page load? thanks!,1.0
g71kx7i,izyw51,"Not that I know of, radium browser can though",2.0
g75x9v8,izyw51,okay; i see. thanks for your help!,1.0
g6kdyl0,iznl3e,I read it as small pox first,61.0
g6o7yy9,iznl3e,I also read small pox,2.0
g6lrvqf,iznl3e,Same,2.0
g6mehtr,iznl3e,Came to say this,2.0
g6k8v1h,iznl3e,"Sounds interesting. I've been learning JavaScript slowly over the past 18 months, not very good at it, but only been learning in spare time after work, excuses excuses. Anyway I'm fed up of making Todo apps. What really good resources are there for learning JavaScript by creating games? That would interest me more definitely.",3.0
g6kf26a,iznl3e,Phaser is a pretty popular framework for making games. They have [plenty of resources](https://phaser.io/learn) to help with learning.,8.0
g6kh3tx,iznl3e,Thanks I had a look. They had links to Zenva which I really don't like their tutorials.I bought a massive bundle on Humble Bundle and they miss out so much detail. Also code examples are still using var and not let/const. Seems out of date and poorly constructed tutorials.,5.0
g6lgugk,iznl3e,Zenva tutorials are usually pretty bad.  I suppose DECENT if you're jumping in with zero knowledge but still not much better than just reviewing the docs and viewing game's source code.,2.0
g6o08c5,iznl3e,Have you spent any time building applications with CRUD/Rest APIs? This is great practice and employers love it if you decide to switch to full-time engineering/dev.,1.0
g6o3bd9,iznl3e,I've used CRUD in terms of local storage. I know some HTML GET POST theory. I'd like to learn MongoDB as well so I could get something going with that.,1.0
g6o5mhu,iznl3e,"I would recommend practicing with these and finding interesting 3rd party APIs to create more complex and intriguing software than the Todo apps. To dos can be incredibly complex, almost overly so, but building tools with datasets from an API is much more interesting.",2.0
g6kbp46,iznl3e,"Nice, smooth. Gamepad API would be a nice addition.",1.0
g6n9hhl,iznl3e,Set up a mirror on GitHub.,0.0
g6lbyjx,iznl3e,"This looks dope! It could be because I'm less familiar with gitlab, but I don't see a docs section in the repo or on the website? If you want it to catch on you should definitely feature that link if it exists in the README.",0.0
g6ld51n,iznl3e,"Sounds interesting, might give it a go when I get some free time.",0.0
g6no2lw,iznl3e,Time to play,0.0
g6mlqbl,iznl3e,Except this is released under AGPL‚Ä¶,-1.0
g6lin1t,izni3q,Cool *and* creepy,2.0
g6jqj9z,izjp9x,I don't mean to come off rude but this is YET ANOTHER abstraction for console logging,4.0
g6jqt5z,izjp9x,Not rude at all. That was one of the points of the post.,0.0
g6kmx9y,izjp9x,TLDR: Use the debug module to add debug logging.,1.0
g6jpj7f,izjowr,"&gt;	use Svelte and Firebase

unfortunately nothing concrete, just a lot of story and no examples",58.0
g6k290l,izjowr,"&gt; I have been a fulltime web developer for the last five years, and have survived every era of the web.

Stopped reading after the first line.",55.0
g6k35ue,izjowr,"I have been a mechanic for 3 days, and have survived every era of car manufacturing.",28.0
g6k6dyt,izjowr,How can someone have the balls to say something like this when they haven't at LEAST lived through the .com boom/fall? I mean the history is a lot longer then that but jesus that is probably the single most significant event in web history and he started years after that.,9.0
g6k9rab,izjowr,This guy started when support for you ie 6 was not a thing anymore. I lolled and stopped reading after that line too.,6.0
g6kanvl,izjowr,"Don't know about OP, but we supported IE 5 years ago :( Wasn't until we migrated to Angular that we dropped support for IE 6-8.",3.0
g6k9anj,izjowr,"Well, technologically you could have. I know I started as a kid with frontpage and frames and geocities, as a teen was making static sites for friends/family and doing side project forums with PHP/MySQL and dealing with IE6, moved to Python/Django as Rails was getting big when I started college, became a full time developer around the tail end of frameworks like backbone/knockout/extjs and now I'm a full time developer doing the current in vogue SPAs.

Sure, someone who's been full time all that time has more of a claim of it, but I can certainly sympathise with the development aspect of much more eras of the web than those I was professionally employed for.",0.0
g6jw124,izjowr,How to write a lot and not say anything.,37.0
g6jz1p7,izjowr,I'm sorry OP but this is really poorly written article...,26.0
g6k31j8,izjowr,What the fuck is this shitty article,16.0
g6juqe1,izjowr,I love Svelte :). The title is misleading tho,8.0
g6k3s2j,izjowr,"https://svelte.dev/blog/write-less-code

Seems interesting ...aside from the weird obsession with lines of code. Has anyone written a substantial sized app with Svelte?",2.0
g6k22hq,izjowr,Medium ‚Äúauthors‚Äù strike again,17.0
g6jyx67,izjowr,"&gt; ~~How~~ Why I Build Basic Web Apps in Just a Few Hours in 2020

FTFY",7.0
g6kab1n,izjowr,Two way binding leaves my stateless validation feeling some type of way.,3.0
g6lcwu4,izi34s,Have tried. Do recommend.,4.0
g6kira0,izi34s,"This has been posted before. It‚Äôs cool, but not mind blowing the 3rd time we see it.",2.0
g6kj898,izi34s,"Ok I did not saw it, sorry for the duplicate !",4.0
g6nt09d,izi34s,"Pretty cool man, i would like to use this on my chrome extension [http://getprotab.com/](http://getprotab.com/).

reload time had got a lot slower on dev with webpack, this looks promising.",1.0
g6nwnr6,izi34s,do not hesitate to share the results ! I'm super interested :),2.0
g6nwtlm,izi34s,I will üòä,1.0
g6jrdeo,izepkf,"Ugh, Medium!  When will people stop using a blog that turns away half their visitors, and bullies nonprofit code organizations!

Also the title is misleading: adding active classes in Gatsby is *trivial*.   No article is needed: `location.path.includes(path) ? activeClass : ''` is all it takes.

What this is is a workaround for a limit in an obscure library, Gatsby Links ... and I'm not 100% clear on why its needed.",3.0
g6hucu3,izb5p9,"I needed a lightweight JS decompressor (optimally a compressor too) for use in one of my other projects. I didn't want `pako` because it's way too big for my needs. So I started off with `tiny-inflate`, but the performance was honestly not great for some of the bigger files I threw at it. I tried `uzip`, loved it, checked the source code, and decided I could make it better.

I'm working on adding tests for more standardized benchmarks, but from my local testing, after warming up the VM, `fflate` is nearly as fast at compression as Node.js' native `zlib` package for some larger files. It tends to compress better for image/binary data and worse for text than `zlib` and `pako`.",39.0
g6i3fui,izb5p9,"What‚Äôs the use-case for this? Can I use it to, say, ZIP uploaded files on the browser?",11.0
g6ikeyp,izb5p9,"We had a use case for that on a front end compressing CSV and JSON files before uploading them. Some of the files would be reduced by as much as 90%, which is a life changer for the user when the file being uploaded are originally 200MB+ and the compressed data is just 20.",13.0
g6iuinw,izb5p9,Can't the browser use gzip compression natively?,6.0
g6j8cz7,izb5p9,"Browsers will decompress gzip natively if `Content-Encoding` header's value is `gzip`, that's about it. No compression, no access to decompression via JavaScript.",8.0
g6jilln,izb5p9,"I've actually been looking into a way to do this. I first tried creating a temporary compressed `Blob` and using `URL.createObjectURL` to then request it and hope it comes back uncompressed, but I can't find a way to set the `Content-Encoding` header.

I've also wondered if there was an image format that contained raw compressed pixel values. If so, I could actually treat the data as an image, render it to `canvas`, get the RGB values, and basically have decompressed my data with the browser's native solution.",1.0
g6mzlw9,izb5p9,"Not incredibly useful yet as it's only supported by Chrome so far, but in the future we might have access to [Compression Streams](https://wicg.github.io/compression/).",1.0
g6n6fek,izb5p9,"Thank you for linking that, I had no idea the draft even existed! I think its performance has quite a way to go though, I ran some quick tests and `fflate` is within 5% of this supposedly native solution. I also find it strange that you can't configure compression level.",2.0
g6ojcqo,izb5p9,"&gt; I've also wondered if there was an image format that contained raw compressed pixel values.

That's pretty much what PNG is.",1.0
g6p06ij,izb5p9,"I had previously thought that PNG had to be split up, but on re-investigation, it seems that you're right. I'm going to investigate the performance of such a solution.",1.0
g6mzdyg,izb5p9,"There's actually a [draft standard](https://wicg.github.io/compression/) to add native compression/decompression, under the idea that because the browser already uses this code internally you might as well expose it to JS. Right now only Chrome supports it though.",1.0
g6oj3i7,izb5p9,"That's actually pretty cool. Not keeping up with drafts myself, thanks for sharing.

&gt; the browser already uses this code internally 

Sounds reasonable.",1.0
g6iv3ca,izb5p9,This is pretty much what I‚Äôm looking to solve too. Were you able to do it? What library did you end up using?,2.0
g6ivgum,izb5p9,"Well, you could try OP's librairie. ;)

I think we used Pako, but I'm not very sure because I wasn't working on it myself. I'm just generally aware of the issue and it's solution.",6.0
g6ji4ex,izb5p9,"I'd like to add that if you want to stream data, this library is probably not the best solution, but if the data is already loaded fully in memory, it works faster than others in most situations.",1.0
g6i4kz9,izb5p9,"There are a wide variety of use cases. Yes, you can create a ZIP file to download to the user's browser with this module, but I haven't provided an API for the ZIP wrapper format. I could add one, but you could check out UZIP.js (linked on the GitHub page) if you want ZIP support.",4.0
g6iqh31,izb5p9,"Here‚Äôs a pedestrian question, but I‚Äôve only ever zipped stuff with PHP, I assume this package rely on a Node server and not client side?",1.0
g6j2iez,izb5p9,"It should work client-side too.  Most advanced thing it uses is typed arrays, and literally everything supports those, even Safari and IE.",3.0
g6i3t61,izb5p9,"That's neat! You mentioned wasm-flate being large and not that that much faster. I wonder if you'd be able to apply or port what you've done to an ""fflate-wasm"". It should definitely be possible to make it smaller, e.g. my little [Rust-based hashing module](https://github.com/connor4312/chromehash) is 13KB without any particular effort to make it small. [AssemblyScript](https://github.com/AssemblyScript/assemblyscript) may work as well to be a closer-to-direct port. You'd just run into the question of whether the overhead of copying memory into and out of webassembly would outweigh the benefit of doing work in there.",9.0
g6i4hlq,izb5p9,"I think the performance benefits of WASM are well worth a shot, but I'm wholly inexperienced with Rust. Though, `wasm-flate` is just a wrapper for an existing crate for compression; maybe if I tried learning Rust, I could create my own, smaller, faster crate.

I am pretty sure [WebAssembly Threads](https://github.com/WebAssembly/threads) allow directly sharing memory between WASM and JS, meaning no overhead at all. New technology though, and even less support.

Thanks for the suggestion!",5.0
g6i5jgv,izb5p9,"Sharing memory is possible, but you still need to copy the memory from the buffer you got from a stream into webassembly memory, compress it, and copy the result back out again. As far as I know there's still no way to have 'zero copy' sharing of memory between wasm and js.",1.0
g6ird0i,izb5p9,"Isn't this accomplished by using a SharedArrayBuffer, a.k.a. passing the shared: true flag when constructing some WASM Memory? See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory",5.0
g6jzvxt,izb5p9,"Yes, but you still need to copy data *into* the SharedArrayBuffer. Unless you're using \`fs\` operations to operate on file descriptors which let you read data into your own buffer, you'll be getting your data from somewhere else, in a standard Buffer or string.

Then, again depending on how you use it, you may need need to copy it out of the SharedArrayBuffer so that you can free and reuse that memory in your wasm while sending that buffer to a network stream or a file.",1.0
g6k111b,izb5p9,"Ah yes that makes sense, the data still needs to be passed in somewhere. I guess it would make sense if you could get a file handle and read it all from WASM directly. But I presume that at the moment this is not possible?",1.0
g6k264u,izb5p9,"It's definitely possible if you deal with file handles directly, but doing so is pretty rare to see in JS.

I actually [do that](https://github.com/connor4312/chromehash/blob/7c574faf0d3fa4c0940b944dff32b080f20ffca3/index.js#L20-L71) in the repo I linked to deal with encoding, but I don't encode it directly in wasm memory. I should look at doing that, it'd speed things up a good bit!",1.0
g6i66gz,izb5p9,"Ah, I see. I've literally never worked with WASM before, so this information is helpful. I still believe that having some C++ parsing a string into an expression, looking for a function to evaluate that expression, and finally discovering that the string &gt;&gt; in my JS means bit shift is leagues slower than knowing what to do straight out of the gate. Copying the memory really shouldn't be too big of a deal in all honesty, when every expression is evaluated more quickly.",1.0
g6inu0w,izb5p9,"This is really cool and a very welcome addition to the ecosystem!

From the docs it seems a Buffer or UInt8Array is required, meaning a file would always have to be loaded into memory, fully. Is that correct? Would streaming compression/decompression for large files have to be supported by the lib or is that something typically implemented on top of it?",7.0
g6jh5hy,izb5p9,"Yes, that's a major flaw with this system that I am interested in fixing (along with adding ZIP support and tests). Though, the code is much smaller because I didn't need to implement streams.",2.0
g6jfqbk,izb5p9,"fyi, the Yarn project maintains a wasm build of the libzip, along with an fs-like layer:

[https://github.com/yarnpkg/berry/tree/master/packages/yarnpkg-libzip](https://github.com/yarnpkg/berry/tree/master/packages/yarnpkg-libzip)  
[https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-fslib/sources/ZipFS.ts](https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-fslib/sources/ZipFS.ts)",8.0
g6jjcks,izb5p9,"Wow, never thought I'd see a reply from the maintainer of Yarn! Thanks for the links. I specifically avoided WASM because of the larger bundle size costs, but I agree that if the extra size is acceptable, a WASM compressor/decompressor is much better.",2.0
g6iafo2,izb5p9,How do people make it lightweight?,6.0
g6ibpye,izb5p9,"If you're asking how I made the library small, I wrote it myself with zero dependencies, working off of others' code and micro-optimizing everything I could. Then I put it through a JS minifier and found the result was 8kB minified, 4kB minified + gzipped.

The trick to having less code bloat is simply using less external libraries. They often offer more functionality than you need, and no matter how good your bundler is, it won't be able to remove all of the unused code.",15.0
g6in5kg,izb5p9,But wouldn‚Äôt it be ironic to use your library to write another compress/decompress library?,2.0
g6ihrjn,izb5p9,Write code that minifies well.,1.0
g6idcre,izb5p9,dumb person question. how does compare to zlib on blob deflation?  is there any reason to use this on the server or mainly for the browser?,3.0
g6ie6y9,izb5p9,"If in your blob you have binary/executable or uncompressed image data, it's worth a shot. That includes WASM. If you're using it for text compression, `zlib` (which is a *native module*) will typically do better compression and will at worst be a few percentage points slower. Think of it as a drop-in replacement for `pako`; although you *could* use it on a server, usually you'll be better off with the native solution.

Also of note is the fact that `zlib` has asynchronous APIs that offload the processing to a separate thread. Although it is still possible with `fflate` using [Node.js Workers](https://nodejs.org/api/worker_threads.html), I'd prefer a no-dependency route.

The only real use case for Node.js I see is live compression on a webserver for bitmap image assets (PNGs and JPEGs are already compressed, doing it again could even make compression worse).",7.0
g6ieqnh,izb5p9,yep. that's what I've read everywhere. thanks.,2.0
g6irv7j,izb5p9,This might be exactly what I need. Thanks for sharing!,3.0
g6iyn8m,izb5p9,"1. During compress/decompress big file will a browser UI hang for some time?
2. How do you compress JSON and send to api? Do you need a decompressor installed on backend? Node.js only?",3.0
g6jhesq,izb5p9,"1. If you're compressing upwards of 10MB of data, yes, the browser would usually hang, but I avoid this by running in a [Worker thread](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers).
2. You can compress on the client side, send the data over the network, and decompress on the server side using whatever decompression library you like. I typically use the `zlib` library for Node.js, but you can use any language and any library.",5.0
g6jatrp,izb5p9,"Nice work dude. I can definitely see this as usable for client-side compression of assets in LocalStorage. I dream of a day I can run my server-side applications in headless Chrome instead of Node.

On a side note, since it's just one file, are you aware you can type-check JavaScript with Typescript? You use to the same JSDocs you are using now for functions. Then transcompilation wouldn't be necessary are you could use it in any ES6 browser/Node v13+ environment by just copying the file.

I personally include type-checking as part of my eslint solution. I can share if you're interested.",2.0
g6jgnjx,izb5p9,"I'm well aware, I just used a few ES6 features in my code (like `const`) and TypeScript is both a language I like using and a transpiler from ES6+ to ES5. I want to support older browsers.

I also didn't include a linter because I have a bunch of long lines that I want to stay long.

Thanks for the suggestions though! I'll definitely try that suggestion for some existing JS projects that I want to add basic typechecking to.",2.0
g6jvn7o,izb5p9,What prompted you to make this amazing library? Others being heavier?,2.0
g6jyigo,izb5p9,"Yep, I [commented about it](https://www.reddit.com/r/javascript/comments/izb5p9/fflate\_the\_fastest\_javascript/g6hucu3?utm\_source=share&amp;utm\_medium=web2x&amp;context=3). I switched to UZIP because of weight reasons, and I realized that it was suboptimal in many ways. Performance being better was just something I realized I could do while working on the new version.",3.0
g72ijs8,izb5p9,Great to see a compression lib. for use in the browser with a focus on performance!,1.0
g6jyzpv,izb5p9,"honestly i don't care how fast it is, i like that it's almost ""felate""",-1.0
g6hp7yd,izaejn,"I wanted something like this myself but couldn't find anything, so I made it myself. Maybe someone else might find it useful idk.",3.0
g6hrle6,izaejn,"Congratulations on building this! The documentation site looks really good.

I was looking at the source, and it looks like a very thin wrapper around https://github.com/validatorjs/validator.js

Would you mind clarifying what this offers over the `validator` project?",5.0
g6hyghs,izaejn,"Yup it's a combo of validator.js ""no need to reinvent the wheel"" and a refined version of the [this](https://github.com/enricomarino/is). validator.js only validates strings tho and both lacked good docs ""imo"" so hence my ""all in one"" thing going on. I plan on adding additional validators that I may need in the future aswell or any that may be needed by other people.",2.0
g6tggvc,izaejn,"Thanks! That's something I was looking for, similar to [https://github.com/beberlei/assert](https://github.com/beberlei/assert) (in PHP).

One missing feature would be to emit an exception instead of returning a boolean. This will allows shorter code and cleaner handling (for eg. with a middleware in express or apolloserver to wrap it to an ApolloError)",2.0
g70v6lz,izaejn,[https://github.com/oslllo/validator-exception](https://github.com/oslllo/validator-exception),1.0
g6htnk6,izaejn,"Like 1/2 of your code is just using 
https://www.npmjs.com/package/validator
To do:

const validator = require(‚Äúvalidator‚Äù)

module.exports = function (...args) {
  return validator.foo(...args)
}

I think a mix of validator (never used it, but seems popular) and lodash should get you what you‚Äôre looking for.

If you‚Äôre going to fork, then do the full fork and extend.",1.0
g6hyss9,izaejn,"Validator only validates strings only and the reason I decided to wrap it was so that I can still be able to update it from upstream, So if a new release comes out for validator it's super easy to update it. No need to reinvent the wheel.",2.0
g6nmffy,izaejn,"Why not just contribute then? As you say, no need to reinvent the wheel.",1.0
g6qdkg9,izaejn,Contribute none string validating functions to a string only validating repo?,1.0
g6i2xsf,iz6zmw,It's neat but this is exactly the type of thing that drags a good data viz down rather than enhance it.,1.0
g6gzw4i,iz5mic,"""Does it do what I need it to do?""",2.0
g6iavwo,iz5mic,"I always have the impression that JS developers really overthink when it comes to frameworks.  In my opinion, a framework is something that takes only a few hours to have a basic working knowledge (usually, reading the official tutorial/getting started documentations).  Sure, you will not be an expert in 4h, but that is not necessary to get started. A framework is a tool. Any developer can learn it if needed.

In my team, we don't care if new developers have some experience with any framework (also, we don't care that much if they know JS or TS if they are junior). Good for them if they do, no big deal if they don't.  We are professional, and the cost of learning a framework is insignificant compared to the rest of the onboarding process anyway.

Developers, be confident of your ability to use tools.  What matters is to get work done. Don't be afraid to learn new tools!",2.0
g6jqowo,iz5mic,Dunno about js devs. But reddit and hackernews devs generally are on shiny new toy or atleast claim to be,1.0
g6gvhww,iz0psz,"I don't see the benefit to this.... seems way more complex then just normal markdown, or even mkdocs",2.0
g6gyrmt,iz0psz,The benefit is that you can automate it instead of having to manually update the file,1.0
g6fw9iz,iyymj4,"Euh, please tell me that you are aware that there is a ""class"" keyword and feature in js",10.0
g6gmpqi,iyymj4,"I think doing all this is a great exercise, \*and\* I also think it's 5 years too late to be of any production value. Before ES6 came out 5 years ago, every framework was indeed doing some variation of what you're doing here. But today folks use ES6 classes instead and perhaps TypeScript as well. Nonetheless, putting something like this together helps to reinforce and solidify knowledge.

Something to check for is how private data gets unintentionally shared and replaced during creation of each new instance.

    var class1 = NewClass({
        constructor: function(x) {
            this.private().privateProp = x;
        },
        public : {
            publicMethod : function() {
                return this.private().privateProp;
            }
        }
    });

    var instance1 = class1.instance(42);

    console.log(instance1.publicMethod()); // 42; ok

    var instance2 = class1.instance(14);

    console.log(instance2.publicMethod()); // 14; ok
    console.log(instance1.publicMethod()); // 14; bad",2.0
g6fmzh6,iyymj4,Please explain this.,1.0
g6fuu5a,iyymj4,"So when you create a JS ""class"" from scratch, there is this process

1. var newclass = function() { }
2. newclass.prototype = { property1 : ""value""......}     &lt;-- This is where the object properties/methods are defined
3. newclass.prototype.constructor = function() {  //commands }     &lt;-- This code will be executed when an object is instantiated
4. var newobject = new newclass()      &lt;--  This will create an instance of newclass and run the constructor

This library streamlines this process and obfuscates the JS-faux-OOP functionality with a more traditional OOP methodology.",-2.0
g6fyros,iyymj4,"The main question is, why?",1.0
g6fyu23,iyymj4,I believe JavaScript is OO already and although most OO languages come with classes this is not what defines OO,1.0
g6r6kdw,iyymj4,JavaScript shouldn‚Äôt be oo,1.0
g6gpr5t,iyymj4,"I'm sure you've worked hard on this... But it seems maybe more important for anyone who would in theory be tempted to use this to learn the built-in features of the language really well like prototypal inheritance, scope and closure, etc. After learning those things, I think the temptation to shoehorn in paradigms from other languages will mostly melt away.",1.0
g6hmxv6,iyymar,330kB gzip of JS for such a simple application is a monstrosity.,13.0
g6iqkur,iyymar,"For a B2C app, possibly used on mobile network? Yeah, could be argued.
B2B, or internal system? Could be ten megs and still would not matter.",2.0
g6jkbac,iyymar,Obviously you can throw any shit you want to a captive customer.,2.0
g6i28f1,iyymar,"ü§£ü§£ü§£
savage",2.0
g6i8lqb,iyymar,This is why material ui is terrible.,0.0
g6i4z7e,iyymar,The Navigation Bar doesn't show up on mobile.,1.0
g6i5so1,iyymar,Today I saw 3000 lines of javascript to produce a menu that drops down upon hover. ü§£,1.0
g6h9tu8,iyxhel,"I think having threads if you really need them with very limited, sandboxed memory sharing, and async for everything else is a pretty good all-round solution. There are tons of .NET and Java apps that have the footguns of threaded anything, but never make use of that power.",1.0
g6gjn4f,iywtou,"I appreciate that you are contributing content to the community but the article ends so suddenly without really explaining anything. 

I was really excited at first because this seemed like a nifty article about a thing I'm curious about but haven't prioritized learning.

Instead I got an article that boils down to:
Typescript uses structural typing.
Structural typing is a specific type of typing
Typescript engineers worked hard to make it work like JS devs expect it to.
Insert a random python code example on an article about typescript

90% of it is just fluff :/

I was really hoping to see a few examples, or descriptions/details about how exactly typescript is leveraging structural typing for the benefit of the people who write it.

It would be cool if you did follow up post(s) that was(were) more in depth.",15.0
g6gp95e,iywtou,"You're right. when I published the story and read it myself, I kinda felt what you felt too. when I was writing it, based on the number of words, I thought I should keep it short to prevent it from being boring but I just kinda miscalculated, I thought it would take 6-7 minutes to read the article but when I published it, Medium said just 3 minutes.

Right now I don't know whether I should add more stuff to this article or write a follow-up.",2.0
g6i8hg5,iywtou,Add more examples,3.0
g6fg74k,iywtou,How do they produce these code screenshots? I am curious.,11.0
g6fgfzv,iywtou,use [Carbon](https://carbon.now.sh/).,19.0
g6fgkml,iywtou,"If you use VScode, you can use this extension: https://github.com/kufii/CodeSnap",14.0
g6i5k9u,iywtou,Or Polacode,1.0
g6i8eiq,iywtou,"I've had problems with polacode when line lengths exceed a very small amount. Carbon has been good so far, although admittedly I've used it very little.",1.0
g6iepwt,iywtou,Polacode stopped working for me on the latest VSCode release and it looks like it's no longer maintained,1.0
g6fgke8,iywtou,"type True = true

type False = false

type boolean = True | False

const on: True = false // error

Only sharing this example because structural typing is way more interesting and useful when we stop focusing on objects and we look at all data.",6.0
g6ftc2x,iywtou,I don't understand what's being explained here.,8.0
g6g456e,iywtou,"boolean is a structural type composed of true and false. When spilt up, you can see structural languages are more than just object shapes it's about the shape of data. Expanding the example.

const myVar: boolean = true

const On: True = myVar // no error

const Off: False = myVar // error

Similar examples can be created with string unions, tuples, and many other non-object structures.

edit: added expansion to example",2.0
g6g8bo2,iywtou,"&gt; Similar examples can be created with string unions, tuples, and many other non-object structures.

Okay that makes sense. 

```
type Status = 'Draft' | 'Published';

const statusOfPost: Status = 'Thing' // error

// even though Status is a type of ""string"" you can't just use any ""string""; it must conform to the union.
```

Thanks for clarifying!",3.0
g6gg05p,iywtou,"No problem!

Technically string unions aren't a type of string, string is a type of all string unions. Just as boolean is a type of all boolean sub values",2.0
g6g4anc,iywtou,"How things work the way they should?
Idk, I'm confused too tbh.

PS. never used TS",0.0
g6g53o0,iywtou,No problem. I replied to the last guy. Lemme know if that helps some.,1.0
g6fgz5b,iywtou,"&gt; In the above code, **Person1** and **Person2** are two different types with different names but they‚Äôre structurally the same thing therefore **person2** is assignable to **person2**. 

shouldn't it be "" **person1** is assignable to **person2**."" ?",2.0
g6fh8kx,iywtou,I edited it 5 minutes ago lol. You're absolutely right.,5.0
g6gxffh,iywtou,Honestly not sure why you used a python example.,0.0
g6h48ao,iywtou,"I don't really know why I read that, what was the main point ? Why did it include python example, I feel I know more about ducks than anything else",0.0
g6foa8i,iywboe,"Its pretty awesome dude, but, finding out to double click on the joints in order to move it, its a little complicated, specially since, sometimes, i want to click on the shoulder joint, and clicked on the neck joint

Still, pretty nice.

Would be nice to be able to preserve the actual pose when changing from male to female. Had a rage quit when wanted to see how it would look as a female, and saw that I lost my pose",2.0
g6gjrqx,iywboe,"This is such a nice feedback. 

It should work with a single click. 

&gt; Would be nice to be able to preserve the actual pose when changing from male to female.

Thank you. will implement this.",3.0
g6g2af6,iywboe,[Tonight we dab in hell](https://imgur.com/a/o9NSc2k),2.0
g6hfyt0,iywboe,[nailed it](https://imgur.com/a/Tn7Qd56),1.0
g6en2bf,iythvu,why are you post non-English article here?,3.0
g6f01tc,iythvu,It is the first time after I graduated university when I can use my Turkish,1.0
g6dr3fz,iyoiny,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",10.0
g6ex9x7,iyoiny,"Looks interesting, this would save me time if it works.",2.0
g6ey9ml,iyoiny,"It does. Please, tell me if you need more details to implement it.",1.0
g6fx5qg,iyoiny,"Reading through the EXPLAINER.pdf it seems you are reading the browser's a11y-nodes, skipping a11y-api and screenreader mappings, which kind of ... does not predict what ""my screenreader"" (which one btw, I have few of them on different platforms?) will tell me.",2.0
g6g1rou,iyoiny,"You're right. I totally agree and this is why it's a theoretic experiment because it's not reading what OS' Accessibility API returns nor it doesn't reproduce the behavior (mapping) of Screen Readers. Additionally, It's only testing Chrome's Accessibility Tree, which is probably rendered differently from the other ones (This is why AOM spec has been created).

BTW, I think that this is a really helpful way to test the meaning of the UI of your applications without necessarily having to use a Screen Reader (manual testing) in all cases.

I believe it helps to maintain a good standard in a development environment and helps to change minds about accessibility in the industry.",1.0
g6g2u95,iyoiny,"I am not sure if it is useful since all information refers to screenreaders (""It tries to demonstrate that it is theoretically possible to predict what the screen reader will say"", ""how can I theoretically predict what my screenreader will tell me""). Since you just admitted that you are aware that it does not do anything screenreader related it might make sense to rephrase that stuff and quickly explain what it actually does do?

So I get it reads some Node attributes, which  Chrome i.e. does, too when hovering them in devtools. No screenreader needed for that. But I guess there is more automation?",1.0
g6czpxg,iyjv28,Code: [https://gist.github.com/N8python/93139a670408b163100207fd39430c8c](https://gist.github.com/N8python/93139a670408b163100207fd39430c8c),1.0
g6csaj6,iyfnb0,"The whole thing is toxic.

There, saved you some life.",8.0
g6f01de,iyfnb0,it is talk sick,3.0
g6ettqm,iyfnb0,[deleted],1.0
g6evr90,iyfnb0,Take it easy my friend,1.0
g6d4i0r,iye6ty,"Look into message queues. What you probably want here is for the client to send the message to the server, the server to immediately return a 200 OK response, and then for the server to publish a message to a queue when the processing is complete. The web application can subscribe to that queue and then react appropriately when the message is published.",6.0
g6c6tx6,iye6ty,"Something about pinging the API every sec feels DoS-y. If there's a guestimate, or known lapse of time taken to process whatever it is you're processing set a timer disabling a button which allows someone to manually check the result and initiate redirect.

Edit: You can implement a countdown timer just so they know how much time they've to wait",4.0
g6c8k4d,iye6ty,"That's the problem, the user can be processed in a window of 1 second to 5 minutes, and my boss demands that the user is redirect as soon as possible as it increases revenue, that's why I'm pinging it so much.   
Thanks a lot for the ideas anyway!",1.0
g6e7fg5,iye6ty,Your boss maybe doesn't know about programming. What will happen when you have 100 user ? 1000... 10000...,2.0
g6c6xlp,iye6ty,Sending a request every second is a lot! Certainly if the API is not made by you or when you get a lot of users. You could look into websockets which is used a lot for these kinds of problems.,5.0
g6c8p5t,iye6ty,"I will definitely look into that.  
The API is made by me as well and I ping it a lot because my boss demands that the user gets redirect as soon as possible.  
Thanks a lot for the help!",1.0
g6g9121,iye6ty,Are WebSockets or Server Sent Events an option?,1.0
g6esu94,iye6ty,"As others have said, don't do polling. Use websockets, or even SSE.",4.0
g6d8ite,iye6ty,See if the API sends (or can send) a webhook when it gets done processing. They will notify you the instant it is done.,3.0
g6edi4z,iye6ty,"Last time I had a request every second I DDOSed myself into oblivion after about 3 people joined the website =D  


That's when I learned websockets the hard way :-P",3.0
g6f70wh,iye6ty,"how long is it until the processing is done? 1-5s? you could simply hold into the request and to not respond until it's done, if it's longer, a web socket might be better.",2.0
g6by5hv,iycz15,"I've¬†recently¬†""finished¬†working""¬†on¬†my¬†performance¬†checklist.¬†It¬†includes¬†the¬†following¬†topics:

* **üõ†Ô∏è¬†Tools**
* **üèóÔ∏è¬†HTML¬†Optimization**
* **üñçÔ∏è¬†CSS¬†Optimization**
* **üë®‚Äçüíª¬†JavaScript¬†Optimization**
* **üñºÔ∏è¬†Image¬†Optimization**
* **üóõ¬†Font¬†Optimization**
* **üáº¬†Core¬†Web¬†Vitals**
* **‚öõÔ∏è¬†Frameworks** **(Only¬†some¬†points¬†for¬†React¬†for¬†now)**
* **üìö¬†Other¬†Resources**

It's¬†a¬†work¬†in¬†progress¬†as¬†I¬†plan¬†to¬†add¬†more¬†resources¬†in¬†the¬†near¬†future, as well as a more detailed explanation for some of the points. Please¬†let¬†me¬†know¬†what¬†you¬†think¬†should¬†definitely¬†be¬†included,¬†but¬†is¬†missing¬†right¬†now. 

Here¬†is¬†the¬†link¬†to¬†the¬†GitHub¬†repo:

[https://github.com/flowforfrank/performance-checklist](https://github.com/flowforfrank/performance-checklist)",2.0
g6dx2zv,iycba3,The default knob should go to 11. It‚Äôs one louder.,1.0
g6bsd5k,iybpjs,Underated post,3.0
g6ddsi0,iybpjs,Yes this is awesome! üíØüî•üî•,2.0
g6dg9vr,iybpjs,"I really appreciate a good tech blog post chock full of relevant links. Great job and impressive achievement.

I‚Äôm just bummed I can‚Äôt play it on my phone and I‚Äôm too lazy to open my laptop.",1.0
g6biy95,iy8ku7,"Happy to see my drawing posted here!

I've got more on my Twitter if anyone is interrested: [https://twitter.com/vincentdnl](https://twitter.com/vincentdnl)",61.0
g6b74e1,iy8ku7,i would say for a frontend engineer it has actually gotten better compared to like 3/4 years ago. The FE interviews have been more FE oriented because the whole field had become more specialized.,43.0
g6bb1l4,iy8ku7,[removed],1.0
g6bb1mh,iy8ku7,"Hi u/drdrero, this comment was removed because you used a URL shortener.

Feel free to resubmit with the real link.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g6bca1y,iy8ku7,how much salary ?,9.0
g6bdj4x,iy8ku7,"Always an interesting question, but it varies depending on the position and other benefits. I settled with something around 520k / year. In SEK of course.",14.0
g6bh2o9,iy8ku7,"520k SEK/year = 50k euro/year for those who did not notice the SEK and thought it was USD .

Are you from sweden ?

How much money you need for rent + food each month ?",17.0
g6bi9mp,iy8ku7,"I am moving there from another EU country when i start the job in 2 months. So i cant tell you what my average will be. Although, it generally is more expensive. My focus is to keep the rent lower, at around 11k-13k for 30-45m¬≤",5.0
g6bn9s1,iy8ku7,"1. Have you already looked for apartments ? 
2. Is the 11k-13k realistic ? 
3. Are you planning to live on your own in the apartment ?
4. How many years of experience you have in web dev?",7.0
g6bqf3u,iy8ku7,"Yes, yes, yes, 4.  


You can check it for yourself at [samtrygg](https://www.samtrygg.se/)",4.0
g6cu27w,iy8ku7,"For reference, this is a very high salary in sweden. It might seem low compared to American salaries but it's not because we are poor, instead we just don't have as many expenses (covered instead by taxes)

Anything above 40-45k let's you live quite comfortably.",5.0
g6cupmt,iy8ku7,"The fact that you have also not been a covid delusional country, you are into the eu and I am an eu citizen, and you speak english makes me think about trying to apply to sweden as a junior front end developer. 

How much does the salary range for a junior front end developer there?",-1.0
g6eadty,iy8ku7,"We are just as covid aware as any other country, just acted differently. We killed 10x more people per capita than our Nordic neighbours so it's not like our strategy has been a great success

Salary range is 25-30k for a junior",5.0
g6bfrsz,iy8ku7,[deleted],-43.0
g6bjfp0,iy8ku7,"&gt; 300K USD

Well, well. You cant compare American and European economy. All the paid insurances, health care benefits, pension system, holiday pays (in some countries you don't get 12 salaries but 14)  are super nice in Europe and i don't want to miss that.",12.0
g6bk7lx,iy8ku7,[removed],-1.0
g6bktnn,iy8ku7,"Hi /u/monkeysuffrage, please refrain from personal attacks. Thanks.",6.0
g6bln0h,iy8ku7,[removed],-13.0
g6buktk,iy8ku7,[removed],0.0
g6bvjwi,iy8ku7,"Hi /u/IASWABTBJ, please refrain from personal attacks. Thanks.",4.0
g6bxboe,iy8ku7,"It's a reference to the office, but fine",3.0
_,iy8ku7,,
g6bgbck,iy8ku7,"As someone that has recently started interviewing programmers as a regular part of my job, I can tell you that if your coding tests are live code tests then they are not about determining if you have the skills you need to do the job. It is about testing your communication skills and seeing how effectively you can explain complex topics as you work on them. If they are non-live coding tests, however, then yeah it is dumb if they are not related to the work somehow. When I give someone a non-live coding exercise it is almost always directly related to the job and something they would actually have to do on a regular basis.",15.0
g6binxh,iy8ku7,"yeah those tests were not live and i had sometimes several days to finish them. I am a passionate programmer, so when i work on something i enjoy, i will perform way better. And calculating some complex problems is not what i enjoy. That's why i am not a data scientist or a mathematician.",6.0
g6jajjx,iy8ku7,"I build 100x better UI then any ""real programmer"" could ever do  
And they do algorithms 100x better than me

It's sad that interviewers doesn't seem to get that there's a difference between us

I mean, have anyone of you guys ever met a ""full-stack dev"" that actually knows a thing or two about modern front-end?

The meme is spot on IMO =D",2.0
g7170hn,iy8ku7,"Yes, me!",1.0
g6bkrcq,iy8ku7,"Yeah for sure. My only point was that live coding exercises are not so much about testing your programming knowledge as they are about testing your communication skills. Lots of programmers think all you need to be able to do is code, and that's really only half the job. 

When I see memes like the one you linked, it gives the flavour of that type of engineer. Yes, inverting a binary tree on a whiteboard is kind of a stupid interview exercise, because it doesn't involve much communication, but I personally have only ever been given whiteboarding exercises in interviews that involved explaining something complex to test my communication skills. 

Anyway,  you were not talking about live coding exercises so none of this really applies. I'm reacting to the meme you are sending out more than what you are saying.",1.0
g6bpkec,iy8ku7,But in the end it was missing the topic. We can talk on the whiteboard how I would get started and setup a web project. How i would secure it and how I would try to improve it. Shows same communications skill but on personal experience. Inverting a binary tree is nothing anyone will ever do in their free time.,2.0
g6c2ijo,iy8ku7,Ditto this. We also decided to forgo take home challenges since they disproportionately favor people without current jobs or families.,3.0
g6cb6le,iy8ku7,"As someone who has been interviewing programmers for an unfortunately long time, live coding tests have always been about assessing multiple job-related skills, primarily problem solving, but also familiarity with data structures, communication, coding style, and thought process. The most successful exercises I've used aren't ""implement A\*"" or ""invert a binary tree"" theoretical stuff, but they are lower-level and intended to **not** be exactly like what you do every day. 

The most effective first screen I've found is ""implement a stack, arrays are cheating"" with follow-up stages of ""now reverse it from outside"" and ""now make a copy."" This is part of my full-stack process. If you're screening for front-end specialists, it can be different, but if your FE is a complex SPA there's plenty of need for logic and data manipulation.

This exercise gives several items to watch for signal:

* how they work out that they need to implement a linked-list
* if/why they decide to do SLL or DLL
* how much they struggle with the fairly simple ""track the head of the list""
* the thought process leading to reading the whole stack for reversing
* if they notice that reading the whole stack empties the original

After spending 45-60 minutes with someone on this, I can usually tell how senior they are and whether they have a CS degree. I don't put much weight on degrees (and don't have one), but it's still good to have representation from both backgrounds.

As another commenter said, take-home assignments select for certain populations. Since I have a job and a wife, I tend to half-ass them in a way that I think demonstrates the important parts of my skills and - if I'm not actually excited about the opportunity - include a paragraph in my submission about how homework is biased against people with night-parkour addictions.",5.0
g6dndhy,iy8ku7,"So you're interviewing someone with a problem that is not just contrived, but actually stupid?

You implement a stack with an array, it's the most efficient and effective way to do it.

Can you implement it with a linked list?

Sure, but it's going to perform worse in every possible way and provide zero benefits.

The correct answer to that problem is to say that implementing a stack as anything but an array is a bad idea and we shouldn't do it.

I get you think you're testing the developer's ability to problem solve and think outside the box, but you're forgetting that an interview goes two ways.

The best candidates are interviewing you as much as you're interviewing them often more so because they've usually got current roles or multiple options. This kind of question makes your company look bad. 

When you get your candidates to jump through hoops, you filter your candidate pool, that's fine if the filtering gets you the output you want, but if it doesn't it's counter-productive. 

Effectively you're testing whether your candidate knows about linked lists and implementing low level data structures, because if they do they can solve your problem pretty easily and if they don't they're probably going to struggle under the stress and time constraints.

I don't know about you, but I haven't used a linked list in a long time, and if I were working with someone who needed to know it would take me approximately ten minutes to explain what one is.

Do you really want to determine who you hire based on knowledge they probably don't need, and which you could impart in a coffee break if they did?",13.0
g6e9bey,iy8ku7,"I understand your points, but you're missing some context, making assumptions, and have an unpleasant attitude. Asking questions about things that you see as illogical is a great way to either lead someone to a better answer or to learn something yourself, and is way less likely to offend.

This exercise is intended to be approached as a collaborative effort. If someone is struggling, I progress from hint to pointer to suggestion to answer. If the struggle was with how to build a Node class, that's different information than forgetting to make links when adding nodes, or not being able to think consistently about Node&lt;T&gt; vs T. If someone doesn't know linked list because they never took the class, then I build them a Node and explain it in a couple minutes and see where they go. Each type of problem is an indicator; nothing is an absolute pass or fail. 

Part of what we're looking at is how they respond to the question. When the array constraint is given, it's ""you can't use any data structures from the language or common library"" and sometimes has to be clarified. Bringing up that arrays are the best solution is a positive signal about a candidate, and we tell them they're correct. Having a candidate respond by calling the question contrived, while accurate, tells us something about their personality. 

If someone doesn't push back on anything and just breezes through a linked-list impl, I suspect they just fell out of college. Those folks tend to spend more time figuring out the method for reversing the stack or getting tripped up by how similar reverse and copy are. Those are great opportunities for seeing how they cope with frustration or how well they take guidance. I've probably run close to 100 of these, so I've learned where a lot of the signal can hide.

As I mentioned, this is part of a process. The tech screen is just a simple ""can they think and code"" verification after the hiring manager does an intro call with discussion about the role. The next step would be an onsite, where the system design and complex logic questions are presented as realistic business needs.",1.0
g6f0hs0,iy8ku7,"Again.

When you interview, someone they are interviewing you.

And I'm telling you that getting someone to implement something that's not only pointless, but actively stupid is a **massive** turn off.

And again, the outcomes you're getting put of this are as follows.

1. Does the candidate know what a stack is?
1. Does the candidate know what a linked list is?

If they don't know what these things are, they won't solve your challenge and if they do, they will.

If they can't implement a stack using a linked list, once they know what those things are, they don't even know the basics of the language and if you can't tell that in a couple questions I don't know what to tell you.

If you think that telling you that you're asking a bad question is a bad attitude, well maybe your question is a good one, because I can tell you, I wouldn't want to work for you.",0.0
g6qfj1v,iy8ku7,"You should be aware of the signal you're sending: that you're rigid and only want to do things your way. Sure it may not be the most optimal way, but the interviewer *did* say that using arrays was cheating. 

If the interviewer wants to validate how you solve problems you haven't seen, which is *more important* than how you solve the same old problems, then they have to ask you to do things in a non standard way. 

This prevents ""studying"" for the tests. Because when üí©hits the fan and a product needs to ship, you being able to solve familiar problems is useless (otherwise üí©would have been solved before becoming an issue)",1.0
g6rhxk0,iy8ku7,"&gt;You should be aware of the signal you're sending:

My point is literally that the interviewer is sending a signal too, and it's a bad signal with this problem. 

&gt;If the interviewer wants to validate how you solve problems you haven't seen, which is *more important* than how you solve the same old problems, then they have to ask you to do things in a non standard way. 

But again that's not what's going on here. This doesn't test your ability to think outside the box, it tests whether you know what a stack is and whether you know what a linked list is.

If you know those two things and you handle the stress of interviews well enough to not panic, this is a stupidly easy problem.

If you don't, it's extremely hard and it's very likely that you'll fail without help from the interviewer.

This is exactly the stuff that people study, and worse it's information you can teach someone in an afternoon. 

Which this person **knows** because they've **literally** said that they actually take trivially solving this as a bad sign. Which is even more shitty because a pass on this test isn't even solving the problem. 

Interviewing is hard. You have to work out a way to test what you want to get the outcome you want.

But when I'm interviewing with someone, I'm looking at how they're going to be as a colleague or boss as much as they're looking at me.

This question makes the interviewer and the company look bad. It's another stupid algorithm question, but it's not even a good stupid algorithm question.

And finding out what the interviewer is actually doing doesn't make it better, it makes it worse, because asking a question where knowing the answer is a failure is ultra shitty.",1.0
g6rq6v5,iy8ku7,"Not true. A linked list is a fairly straightforward algorithm. The OP even said they were open to providing hints. In fact, I was asked to implement a linked list during an interview for a fortune 500.

I had never written one, or seen one.

But after they explained the specs, I was able to cobble something together to his approval. Mind you it wasn't even a complete solution. But I was able to communicate that I could do it given more time. He said so himself. 

I agree that it's inadequate if all they want is a perfect implementation without thought.

But if what they're looking for is understanding of pointers, classes, etc, then it's actually a good indicator of abstract thinking. The OP never claimed they wanted a perfect solution. Only to see how you think. 

Thinking outside the box is an overused term in programming. The computer does *exactly* what you tell it to do. And you'll be spending more time debugging than writing clever solutions to problems. Yet the signal you're sending is that you can only solve bugs you're familiar with, rather than crafting one on the spot. Something you may struggle to do without basic understanding of fundamentals. 

Besides, you can't test problem solving abilities by looking at past work. Bugs are context dependent, and you may have even stumbled towards the answer. Not necessarily understood why it happened so you can avoid it next time.

To sum up, asking for algos is not the problem. Demanding a precise solution is.",1.0
g6uxmm8,iy8ku7,"&gt; In fact, I was asked to implement a linked list during an interview for a fortune 500.

Just because it's a fortune 500 company doesn't mean they interview well. I totally get that as an interviewee you have to prep for this kind of shit, but OP is an interviewer and has the power to not be shit.

&gt;I had never written one, or seen one.

&gt;But after they explained the specs, I was able to cobble something together

Yes, because a linked list is actually not that complicated, just really rarely used outside of university algorithm courses, but because you didn't know it, you were at a **massive** disadvantage from the very beginning. 

Which is why it's actually a bad question.

You had to spend interview time that other people didn't working out something that's not actually needed for the job.

I take it from your comment you didn't get the job? If so, that's part of why. 

&gt;But if what they're looking for is understanding of pointers, classes, etc, then it's actually a good indicator of abstract thinking.

Kind of, assuming we're talking about C or C++ here, but there are better questions for this kind of knowledge.

&gt;Thinking outside the box is an overused term in programming.

I agree, but thinking outside the box is what saying ""Implement this thing with arbitrary restrictions"" does.

You could actually test all sorts of interesting things just implementing the array version, because if you don't have a fixed size you need a vector/dynamic array and if you do you have to bounds check.

&gt;Something you may struggle to do without basic understanding of fundamentals. 

The problem here is that you're not really testing this. Interviews are stressful, even for veteran developers, even when you don't need the work and have the knowledge.

Asking algorithm questions or asking trick questions like OP did, adds to that stress. It makes the test more about how well the interviewee handles that stress, which isn't actually a useful metric, because work stress and interview stress are different. 

Beyond that though, if an interviewer feels that determining how you work under stress is an important selection criteria, that is a huge red flag. You do not want to work somewhere that views handling stress well as a major job qualification. 

&gt;To sum up, asking for algos is not the problem. Demanding a precise solution is.

Asking algos is lazy. It gives an advantage to CS grads and people who spend a lot of time studying for interviews. 

What it doesn't do is actually get you the candidates you want. 

And as an interviewer that's the point. To find the best candidate, so any question you ask should eliminate bad candidates or highlight good ones. 

This question doesn't do that. It tests knowledge of shit OP quite obviously doesn't care about. 

And again, an employer trying to trick you in an interview is probably not a good employer to work for.",1.0
g6v6g97,iy8ku7,"Interesting conversation, so I want to give your thoughts the attention they deserve. So sorry for the upcoming novel lol

&gt; Just because it's a fortune 500 company doesn't mean they interview well.

This one did though. All 5 of my onsites focused on conversation and understanding of core concepts. In fact, the hackerrank pre-screens were harder. And people cheat on those all the time. 

I actually thoroughly enjoyed the process. And compared to the startup I interviewed with, felt better assessed in my actual potential to deliver and grow. 

&gt; OP is an interviewer and has the power to not be shit.

They're only shit if their sole requirement is a perfect complete solution. If they're assessing how you solve problems, there's nothing wrong with this approach. 

Just because something is misused, does not mean it's flawed. Nuclear energy is the cleanest energy we have. Yet we build bombs with it instead.

&gt; because you didn't know it, you were at a massive disadvantage from the very beginning.

But I wasn't because the point of the exercise wasn't to write one, but to gauge how I understood basic concepts. I managed to cludge through it in 15 min.

If I did it sooner, then a good interviewer would have shifted to tougher questions. The whole point is to get to a point where they have to think, and not regurgitate.

&gt; You had to spend interview time that other people didn't working out something that's not actually needed for the job.

Nope. I spent time discussing CS fundamentals. First while speaking through creating the linked list. Then on the other topics asked when I finished. In the end the interviewer even told me he got a really good sense of my abstract thinking abilities. 

So like I said, it all comes down to how the interviewer uses the tools. I can kill you with a hammer, but that doesn't mean it's dangerous to hang pictures with a hammer. 

&gt; I take it from your comment you didn't get the job? If so, that's part of why.

Wrong again. My feedback was that everyone gave me a strong hiring rec. I just don't like to count my chickens before they hatch, cuz things can always change. Like positions no longer being required, or the company suddenly needing to layoff people. 

If you'd like, I'll come back in a week or so and update you on the final result

&gt; Kind of, assuming we're talking about C or C++ here, but there are better questions for this kind of knowledge.

Nope. It was all javascript Frontend tests. The pointers are just instance variables pointing to the next node. You think there are better questions, buy maybe because *you* naturally get it. I've met many entry level candidates that couldn't link to the next node without being told to do it.

I'd encourage you to see that what's easy or obvious for you, isn't necessarily for everyone else that's qualified. 

&gt; I agree, but thinking outside the box is what saying ""Implement this thing with arbitrary restrictions"" does.

I disagree. The best code is the simplest code, given restrictions. It's not about thinking outside the box. It's about understanding the basic tools at your disposal. But I suppose if one is unable to do it without built in methods, they may consider that ""outside the box"" thinking.

&gt; You could actually test all sorts of interesting things just implementing the array version, because if you don't have a fixed size you need a vector/dynamic array and if you do you have to bounds check.

This does not exist in the Frontend, which is what the thread is about. Javascript handles all of this for you. So no, you couldn't test it with your method.

&gt; Asking algorithm questions or asking trick questions like OP did

The OP stated they would give hints. So it's not a trick question. You keep trying to rephrase his post to make a point.

Guess what? At work you'll need to ask for hints here and there. No one knows everything or even the whole codebase. And then you should be able to continue solving the problem.  Just like the OP states he does in interviews.

&gt; It makes the test more about how well the interviewee handles that stress, which isn't actually a useful metric, because work stress and interview stress are different.

I'd counter that stress to ship is just as stressful as an interview. The *only* major difference is that you can put in extra hours. But when a deadline is approaching, you lose even that. Besides that, it's just familiarity with the situation. 

I've been in combat, and deadline stress feels *awfully* familiar, with emotions on edge, people not thinking clearly, communication breaking down. 

Stress doesn't change because of the situation. It only changes based on how the person handles that particular situation. 

And it seems you feel more comfortable with situations that are familiar to you. Which is natural really. 

&gt; Beyond that though, if an interviewer feels that determining how you work under stress is an important selection criteria, that is a huge red flag. You do not want to work somewhere that views handling stress well as a major job qualification.

Maybe my military background biases me. But I fully believe testing how someone works under stress is absolutely required. As the hiring manager told me, you only know how people truly communicate when everyone is stressed. Because it's easy to collaborate when everything is smooth.

That has been my experience in the military, and in my last corporate job.

And deadlines are an absolute part of this job. No matter if it's a small marketing agency, or a fortune 500. Clients pay for a delivery date. Things can and do cause delays. 

Besides, I think what you mean is if stress is a *normal* part of the work environment. And I agree. But you won't know that until you're hired, or you look on glassdoor unfortunately.

&gt; Asking algos is lazy. It gives an advantage to CS grads and people who spend a lot of time studying for interviews.

I spent 40 hours over 5 days before my interview. So I'm gonna have to disagree that alot of time needs to be spent. I did however already understand basic programming concepts, and that helped make the algos make sense to me. So there's that component you're overlooking.

&gt; What it doesn't do is actually get you the candidates you want. 
&gt; And as an interviewer that's the point. To find the best candidate, so any question you ask should eliminate bad candidates or highlight good ones.

This is actually incorrect. Interviews are about minimizing false positives, while *attempting* to minimize false negatives.

It's much more expensive to hire a false positive, than it is to lose a false negative. Especially for startups. To think they only care about finding the absolute best implies a lack in understanding of the hiring process.

I've run my own business and hiring is hard. Laws on firing inadequate people make it harder. That's why ""managing out"" is an actual tactic. False positives derails projects and companies. 

*-----*

I will say this though, algorithms **are not** the best questions for **every** Frontend job.

The requirements to build an ebay site vs google docs are massive. Sites built by marketing sites are vastly different than core business web products by Palantir or Salesforce. 

So the issue is either poor job descriptions, poor understanding of what the company's products need, or both.

The tech world is **huge**. There's a place for everyone and not every product requires deep abstract thinking. It is unfortunate that many smaller companies imitate larger companies. I agree with this. 

But that's on the company and not necessarily the process. Bigger companies solve different problems after all.",1.0
g6fnsdi,iy8ku7,"If you want something to be collaborative and see how the person works/thinks and responds, you should just tell them to ‚Äòdo X‚Äô instead of ‚Äòdo x, but the way that no one would do it‚Äô.  That way, if you‚Äôre looking for a specific answer they‚Äôll just say that answer, and it‚Äôll be clear as to what you want them to do.",0.0
g6d79ys,iy8ku7,I write Java primarily and when I test i try and keep it to 45 min to an hour. Usually two parts. The first is some basic multi loop code to print some things. Second is basic generics. Most people don't get the second part. If they start by writing tests I just go ahead and hire them,2.0
g6bg39y,iy8ku7,"That's interesting.. I also recently changed companies. While I was going through the interview process, I still had a full time job, and a new infant crawling all over the place and my wife needs a hand in the evenings so my free time to work on ""vanity"" projects is very limited. I barely have time for ""passion"" projects.

So, I had only a few that requested something built from scratch, which though fun and giving you a change to truly show some skills, I wish they'd opt for a github repo review. In the past, I've had companies ask me to show them some code I've done in a particular language or framework and talk to them about it, and they could ask me ""Why did you do X? or How would you handle Y? etc.. How would you scale this, performance improvements, etc.""

This way, we could talk about something I was intimately familiar with, and should be able to speak intelligently about.

I ended up taking a job at a company (about 2 months ago) that uses a proctored test (like hackerrank or testdome). But, they said when they hired me, that they thought my ""node skills weren't as good as my FE skills"" which plain shocked me. Fast forward 1 month and my manager legit apologized to me for not assessing my skills properly and now I'm helping with interviewing at this organization. So, I love seeing threads like this to get a better understanding of what the norm is and how the candidates respond to the different types of assessment. Thank you for posting your experience!",5.0
g6bj3xh,iy8ku7,"Thanks for your input. I think that talking about what you have done in the past is as good as creating things from scratch. In the end it doesnt matter if you have done the project last week or last year.

And yeah, I enjoy the feedback when they search through my GitHub and that's pretty much my portfolio. Because there they can see all my projects and all my capabilities. Not just that one particular task they had requested.  


You're welcome, I appreciate it as well when others do, so i wanted to share.",1.0
g6bqzbq,iy8ku7,"sounds heavy, what amount of time did you put in?",4.0
g6brgnk,iy8ku7,"as mentioned in some other comment, about 15hours average per project",1.0
g6beduh,iy8ku7,Weird question but were you previously located in Sweden / are you Swedish? I've been wanting a job in Stockholm but I'm American. I'm curious to know if your process might reflect a route I could take :),3.0
g6bkjuu,iy8ku7,"I am not. It is my biggest life goal so far to move to an other country. And fuck covid, I just did it. Moving from an EU country is pretty easy. I am allowed to move there, work there etc. I just need a flat, a job and I can claim a personennumer. From America, It is more difficult and honestly I have no clue what you have to do. But you find a lot of information online.",3.0
g6bz5cq,iy8ku7,Ah okay makes sense. Well congratulations on the new job! Thanks for the insight,2.0
g6bieie,iy8ku7,wow that's great. Can you share those github repo links here as well,3.0
g6bnoht,iy8ku7,"[https://github.com/drdreo/better-reddit](https://github.com/drdreo/better-reddit)  
[https://github.com/drdreo/LeoMovies](https://github.com/drdreo/LeoMovies)  
Didnt push the GitHub project because I didn't finish it.",2.0
g6iiwyd,iy8ku7,Thanks for sharing :),2.0
g6ij780,iy8ku7,ur welcome,1.0
g6et154,iy8ku7,"you missed the opportunity to have called it ""blue/blew it""",1.0
g6bjs6o,iy8ku7,"Hello!

Really interesting write up there! 

As someone from Sweden who is currently trying to switch into web development. Would you mind sharing your education/knowledge? Feel free to dm if you don't want to share it publicly.

I just want to understand which route to go and what to learn before I'm confident enough to job hunt in that field.",2.0
g6bpbbo,iy8ku7,"Started with fulltime Bachelor studies in Mediatechnology and -design. Freelanced to earn some money because freelancing gave me the chance to work on the weekend. Wasn't quiet enough. Was also part-time employed. In my freetime i created web games, web apps, just cool projects to learn something new.  


Continued with a masters degree in ""interactive media"" which is just a fancy word for-do whatever you like. I focused myself on web dev.  


The key moment when i realized i want to become a web dev was when i  recognized I can work hours and hours on the same project without getting bored. I sorta sound like a workaholic, but in the end i spent more time on partying and having fun than nerding out.",2.0
g6chgrk,iy8ku7,Cool! Thank you very much for the answer! :),1.0
g6brvh0,iy8ku7,"If you specifficly want to go into webdev:

I would recommend to start with simple HTML/css tutorials. Just few will do for the start, just enugh so you get the basic idea how it works.

Then i would reccommend taking some tutorial like this one:  
[https://www.youtube.com/watch?v=BXJrJP5ULY4](https://www.youtube.com/watch?v=BXJrJP5ULY4)

or similar one regarding React or Vue.

Then you will generally know what you'll be dealing with and if you want to push further, udemy or similar service courses will get you there. (if you open up course window in private tab you'll generally see discount that you may otherwise not see)

For complete webdev you'll need to learn about api's as well but bear in mind that you'll learn most on-the-job.

the most fun part about it is learning anyway :) have fun",2.0
g6ci479,iy8ku7,"Thank you!

I already know HTML and CSS from before. I used to run a simple website for my local football team back in high school. I even learned a little bit about database, enough to create a guestbook where people could leave comments.

So I have been interested in web development for years, just fell out from and just recently realized I want to come back!

Thank you very much for the pointers! I am currently attending Harvards CS50 on distance, where I will choose web as my track for the finals.

After that I will most likely look into udemy. Are the courses on udemy creadible enough to prove for future recruiter that I am knowledged you think? Depending on which courses I do of course. :)

And I also have some knowledge about API as well, but mainly from the user side, like creating python scripts that uses gmail api or spotify api for example. I will definitely look into learning how to create API.",1.0
g6cwdz8,iy8ku7,"Glad to hear that! Keep it up! The only course i got from udemy was this one: https://www.udemy.com/course/the-complete-guide-to-angular-2
And i can say, that it covers pretty well all common use cases.

In the end you'll get some task to do on interview but i would advice to get a job as soon as possible (Junior Developer position) even part time because it counts onto every next job that you wiull have in the future. Both ""on paper"" and in terms of experiance.

If you know how to use API's then that's fine :) Creating one is fun though but it's not common task for FrontEnd's",2.0
g6d3lt3,iy8ku7,"Thank you very much, I really appreciate your answers!

Made me feel more confident that I am not in too deep with this! :)

That course was actually on a great sale right now. :D",1.0
g6eprke,iy8ku7,"No probs :)

The udemy discounts works in weird way, that it is always on sale in Browser's Private mode :)

That said, it's still of good value so i guess it does not matter that much.",2.0
g6f6zyv,iy8ku7,"Haha! I visited through reddit is fun on my phone, guess reddit is fun works the same way as incognito on browsers then.

Anyway, 91% discount was a steal! :)",1.0
g6bygdx,iy8ku7,Thank you for this !,2.0
g6d2r2y,iy8ku7,"&gt;Create a movie finder app using any movie db API. Use React. Should have a search field, a table for results. Make it possible to set movies as ""watch later"" and ""favorite"". Provide enough tests. Should work on Desktop and Mobile. Include posters and trailers. Provide a demo website and a GitHub repo.

Is this roughly how they phrased the assignment? No design mockups, no nothing? Do they expect a frontend developer to be a designer too?",2.0
g6dbmoc,iy8ku7,"yes. Just shortened it a bit but in general that were the details.  
It depends. This one was more UI focused, but that doesn't mean you have to be great at it.   


My reddit clone was not the prettiest, but they said: ""you could have done a bit more designing there, but we got designers anyways, so no big deal""",1.0
g6bqr1n,iy8ku7,Ummmm,1.0
g6brd8q,iy8ku7,yes,2.0
g6czv5x,iy8ku7,Thanks for the rewards u/animabash  &amp;  u/jagdishsorot . These are my 3rd and 4th ever.,1.0
g6e5yhi,iy8ku7,"Some of the pre-employment coding challenges are getting seriously out of hand. Applied to a job recently where they asked me to build something that I estimated would take at least a full workday, depending on how many of the ‚Äúbonus‚Äù features I decided to include. The application they were requesting also looked suspiciously like something they‚Äôd be using in house. I considered just building it and then invoicing them for my time, but I told them to pound sand instead.

I think going forward, I‚Äôm not doing any coding challenges that would take longer than an hour without a phone interview first.",1.0
g6yec30,iy8ku7,"Is this your first developer job? If so, how long did it take you to get to this level?",1.0
g6yi0u9,iy8ku7,"No. Wouldn't try to get a job in a foreign country otherwise. Its like the third, and freelance contracts additionally",1.0
g6b3ldy,iy7rkp,You've programmed your Computer player to pick Scissors 50% of the time. Is that intentional?,3.0
g6b45g6,iy7rkp,"Nope! It wasn't intentional, I will fix it on next commit :)",2.0
g6b5bgp,iy7rkp,Fixed! Now it should have Equal Chances.,1.0
g6bg0ln,iy7rkp,[removed],2.0
g6bgbxc,iy7rkp,33% of picking rock; 33% of picking paper; 33% of picking scissors,1.0
g6bgxqc,iy7rkp,"&gt; Equal Chances

And the other 1% ? Rage quit ? Because that would actually be an interesting feature.",2.0
g6bxk5p,iy7rkp,"Lolz.. I'm a newbie to Game Math!

It would be really helpful if you can send a pull request with improved logic. Thanks :)",1.0
g6chr0k,iy7rkp,I just submitted a PR,1.0
g6dfech,iy7rkp,"Hi Pal, I DM you regarding the changes. Kindly take a look :)",1.0
g6cqeys,iy7rkp,"Hi /u/monkeysuffrage, last warning on the personal attacks.",1.0
g6b0tv5,iy7rkp,"Project Page (?): https://github.com/jaganganesh/rock-paper-scissors

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g6d3tb6,iy7rkp,"[http://www.cim.mcgill.ca/\~siddiqi/COMP-102-2015/03Logic.pdf](http://www.cim.mcgill.ca/~siddiqi/COMP-102-2015/03Logic.pdf)

there was fun bit on rock paper scissors truth table. You can convert your values to binary and use the logical expression to determine winner",1.0
g6dgvqe,iy7rkp,"Thanks u/masapa, Let me take a look :)",1.0
g6jt5oo,iy7rkp,Time for a new battle royale,1.0
g6bk50a,iy7g3b,"I feel like this was a bit lacking in the explanation of how the ""clock"" allow for reactivity. Specifically I think the issue is that even when taking about tagged values, they are referred to as the global clock. Thankfully this linked article did give a good run through on how that all works https://www.pzuraq.com/how-autotracking-works/


My main take away was that autotracking is very interesting, but I'm not sure I see it having benefits over event based reactivity like mobx. Event based is much more versatile to me, in that you can have reactivity anywhere you like and it is not tied to some global handler. I do wonder about performance tradeoffs between the two:


Autotracking seems to do very little immediate work when updating values, but that leads to more work when traversing the tree for needed updates of derived state.


Event based methods focus the brunt of the work when values are updated, and do not require traversing a tree for needed updates on derived state. Instead the values when updated directly queue derived state to update.",1.0
g6dwrgq,iy5suz,"Timely dropping this link here. Day.js is not a new library at all, but I can confirm it can be set up to fully replace your moment.js code. Depending on which features you use in the monolithic Moment, you may need to add some of the additional plugins that come with Day.js. Even still there are just a couple minor incompatibilities I ran into that were more like bastardizations of my team's misuse of Moment. Shame on us for relying on edge cases.

Day.js gave us everything Moment has, at a fraction of the size, with far better performance.",2.0
g6epi4d,iy5suz,"Only 84 open issues at the moment. Mainly around locale. That, timezones and off by 1 are the most fun programming challenges to solve!",2.0
g6amfff,iy4pcd,"So I wrote this post that enumerates possible backend options for front-end devs. It should show you the ropes when trying to figure out what you should use as your backend, and basically directs the reader towards what (I consider to be) the simplest option.

I think it turned out quite nice, and sheds some light on the back of the stack that might appear a bit unreachable for people who are used to working in the front.

I'd be interested in figuring out whether that's an actual issue - as in, whether the back is actually as dark as the conversation that sparked this blog post (see [here](https://twitter.com/leeerob/status/1292571190599602178) ) made it out to be. I can then expand much, much further into this and help with some concrete guidelines on choosing the backend. Could turn out to be quite a nice post actually!

Let me know. :)",1.0
g6aezkg,iy2soj,"Js is a fine language to build it in, but you could also do it in c# or Java, etc. Go with what your strong in unless its not a paid project then do what seems fun.

For pro cons

1) remember its a mostly single threaded language. The runtime is backed by some threads for networking but your 
application server will be single threaded.  This is both a con and a pro, and the throughput of node is still pretty good. 

2) js is less performant for the same kind of task as most compiled languages, though its quite a bit faster than python and most other interpreted languages

3)js doesn't have a type system, which can become annoying in larger projects or when you're working with other people. You can use typescript but that also gets to js having a somewhat complicated build system, especially if your doing a all js stack.",4.0
g6hphfv,iy2soj,"Recently I developed an internal application for my company, was more of a CMS than CRM. My initial plan was to rollout a stock standard elixir application with Postgres DB etc but I end up going a different route and instead I just went with a serverless SPA in pure JS with the following:

- FaunaDB (serverless Database)
- Lambda functions for requests/api
- Mithril.js for the SPA
- Netlify for hosting (leveraged Netlify functions)
- Authentication using oauth + third parties

May not fit your use case but going pure JS and serverless is dope and if the project doesn‚Äôt need to scale to ‚Äúmillions‚Äù then definitely check that approach. What was originally suppose to take 8 - 10 weeks went live in literally 4. 

Anyway, best of luck!

Edit: typo",2.0
g6alqfo,iy2soj,"You should probably look at how good are the 3rd party libraries that you'll need to use to access any other systems. e.g. If you need to access a database, is there a good, well maintained client library available for the one you're using? Compare that with what might be available for other languages you're considering.",1.0
g6bjdy1,iy2soj,"Do you mean should it be a SPA or a ""multi-page"" site?  If it's a SPA, then use JavaScript, because that is the only language browsers run.  If it's a ""multi-page"" site I would recommend a classic server-side OOP language, unless you simply do not know or want to learn one.",1.0
g6e3hdp,iy2soj,"JavaScript is fine for server side, so are many other languages.

Like someone said, nodejs is single threaded but with a load balancer you can have multiple node processes and use a database to share state across them all.

So, you can use node for big or small projects.",1.0
g6f4jv1,iy2soj,"not much to go by from your description, but a generally good advice is to go with the language you're most comfortable with if there are no issues with it (performance, lacking important libraries for project, etc), unless you're looking to learn. ""is this a good language for this project"" is a bit subjective, and it's something you should answer with your own experience since you're the one that's going t build it.",1.0
g6acfoh,iy2soj,JavaScript isn't really a good language to build anything with. What do you value in a programming language?,-9.0
g6acpm4,iy2soj,That's a pretty outrageous claim.  Care to explain?,4.0
g6acytz,iy2soj,"It's never the best choice of language for anything, basically. If it hadn't had a leg-up by being the only choice in browsers for a long time, no-one would ever have chosen to learn it.",-5.0
g6aedqb,iy2soj,"&gt; It's never the best choice of language for anything

That's the same assertion without any explanation.",4.0
g6ahgmn,iy2soj,"You can't prove a negative, so I don't know what you want me to say to be honest.",-4.0
g6atrh3,iy2soj,"That's a chickenshit excuse.  Tell us why JavaScript isn't good for anything.  It is actually widely used and not just in browsers, so presumably you know something that the rest of us don't.  Share.  Is it the typing?  Memory management?  Control structures?  Data types? 

I, with a couple of years of server-side JS development, decades of development experience, and a couple of degrees in computer science, can list some of JavaScript's shortcomings,  but it's still quite suitable for certain uses.  Or so I thought.",1.0
g6ays1e,iy2soj,"I didn't say it wasn't good for anything; I said it wasn't the best choice for anything. I've been working with JS for 15 years, and I don't believe there is a single use-case where an alternative wouldn't be better.",1.0
g6e1xow,iy2soj,To me the single most important contribution is JSON,1.0
g6bmmen,iy2soj,"This is true.  The obvious (and only) motivation for using it like a universal language is the fact that tons of webdevs know it already, because its easy to start playing, not because its better than any other language.",1.0
g6bn8vf,iy2soj,"Yes, exactly.",1.0
g6adhqj,iy2soj,See I thought the complete opposite. I learned JavaScipt is the ‚Äúlanguage of the web‚Äù and was very versatile.,1.0
g6adti3,iy2soj,That's a common trap to fall into unfortunately.,1.0
g6e29kl,iy2soj,"It's obviously very versatile given its implementation everywhere... Even if it doesn't outshine other languages
It's relatively easy to learn, easy to run, forgiving etc
Like even if it's not performant or opinionated in whatever fashion you prefer - it's still usable",1.0
g6e8a7l,iy2soj,Oh I'm not disagreeing that it's versatile. I'm suggesting that isn't necessarily a good thing.,2.0
g6jdykq,iy2soj,"Then i guess we agree, damnit.",1.0
g69d9ob,ixxls0,"Thanks for the great support so far! This year I have developed a growing interest in coding and software development. When it came time to choose a topic for my final research project at my university, I decided to conduct research about a local and interesting startup in New Zealand.

They collaboratively automize code reviews by enabling teams to discuss and code their own rules using a sophisticated engine for static code analysis.

Alongside interviews, I have also compiled a survey to explore how such prototype creates value for software development teams. I would like to invite you to participate in my research. Your professional input will be highly valuable for the research report and further development of this prototype.

If you are interested and want to know more, it takes ten minutes to complete my survey which provides further details. Your support would be immensely appreciated. [You can find the survey here.](https://otagopolytechnic.au1.qualtrics.com/jfe/form/SV_b15riYH1K3pDkb3)

Happy coding!",1.0
g69tupx,ixt6wx,This has the interesting side effect that simple functional JSX components (without hooks) would become completely reusable across libraries with zero changes!,40.0
g6b0qrd,ixt6wx,That‚Äôs actually really cool. Thanks for pointing this out,1.0
g6bfkaa,ixt6wx,How so?,1.0
g6bxcfw,ixt6wx,"Because it returns just a object which can be parsed by any javascript library. Before it returned an result of a react call.

Edit: Sorry im wrong there. Misread something.",1.0
g6c9lw5,ixt6wx,"I'm sorry but what? Why does this change do that? What does the object look like? Could you explain it a little more or perhaps provide links for further reading?

Edit: Answering my own questions.

    function jsx(type, props, key) {
     return {
       $$typeof: ReactElementSymbol,
       type,
       key,
       props,
     };
    }   

[Source](https://github.com/reactjs/rfcs/pull/107)",1.0
g6cn0h0,ixt6wx,Sorry i was wrong. Ive misread something.,2.0
g6cv3ly,ixt6wx,"Not quite. It allows you to specify the function that produces said object without needing to explicitly import a library at the top level. The actual shape of the object is an implementation detail, which the corresponding library will be able to consume.",1.0
g68vuki,ixt6wx,"Hmm, I thought JSX was already decoupled and used something like `_h()` under the hood. I remember reading about something using JSX with Vue instead of template blocks and assumed it just worked because of that.",28.0
g68x4ck,ixt6wx,"Babel has a pragma option that you could use to make JSX turn into a different call than `React.createElement`. That's what preact, mithril, vue and friends use.

But pragma still requires the variable to be declared manually (i.e. if you specified `pragma: 'h'`, you're still responsible for manually writing `import {h} from 'whatever';`

The auto-import magic from TFA uses a new alternative called importSource. So, in theory, it can also be used with all the libs that use JSX.",32.0
g690djz,ixt6wx,"Compiling JSX to JavaScript got standardized as HyperScript often denoted by ""h""  where any library can provide their factory function and take advantage of JSX. This opened up JSX to a number of libraries as all you needed was to handle a function that accepted 3 parameters - the tag or Component, the props, and the children.",15.0
g68u6zv,ixt6wx,"&gt;With the new transform, you can use JSX without importing React.

Dan Abramov promised this a few months ago in a GitHub issue thread, but I wasn't sure I could really believe him until I saw this. 

Awesome improvement React team!",71.0
g6a9sg8,ixt6wx,Dan is a god damned genius. I have crazy respect for that guy.,6.0
g6ave89,ixt6wx,"Do we know if he wrote this feature? Dan is a great guy and really puts himself out there in the community, but people treat him like he‚Äôs the one writing all of react.",22.0
g69tv84,ixt6wx,"Or declare React to be a global. With Webpack, you can use it's ProvidePlugin to do this, for example. QED no `import React from 'react'` required.",-9.0
g695jlu,ixt6wx,"Ok I'm completely stupid, what is the point of this? Everywhere I use JSX is a react app that's imported already for other parts and tree shook for performance.


Can someone share a real life use case of this?",35.0
g69dbqx,ixt6wx,"&gt; Depending on your setup, its compiled output may slightly improve the bundle size.
&gt; It will enable future improvements that reduce the number of concepts you need to learn React.

probably that stuff",15.0
g698o3y,ixt6wx,"I may be interpreting it wrong, but it looks like [tech debt cleanup](https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#motivation) from the paradigm shift to functional components.",27.0
g6b35j1,ixt6wx,Unit tests for example,1.0
g6bqw3w,ixt6wx,It's great for using jsx in other frameworks,1.0
g6c0lnt,ixt6wx,"Introducing a new feature to a bloated pointless library built on top of a well purposed language! Now you can write HTML in your JSX and convert it to Javascript instead of just writing HTML or Javascript in the first place!

Feed me downvotes for my opinion, idc, but react is an abomination. So are all of these libs that make you do 10 times the work to print out a div with your name.",-5.0
g6h6sz7,ixt6wx,"HTML is and always has been written in Javascript since it is not dynamic, that's what the Dom-Api is for. JSX is not HTML, it calls createElement to piece together dynamic UI. Doing that manually is hard to scale, hence your rant was typed right into a React component.",1.0
g69mdh8,ixt6wx,try again,-27.0
g69bqc8,ixt6wx,[deleted],-77.0
g69cqh6,ixt6wx,That‚Äôs not how IDEs work,48.0
g69d0le,ixt6wx,[deleted],-91.0
g69d4ul,ixt6wx,Clearly you need a PhD on something to understand how they work,29.0
g69eliv,ixt6wx,[deleted],-82.0
g69et6d,ixt6wx,Yikes. I hope you don‚Äôt talk to your coworkers like this.,51.0
g69ge61,ixt6wx,[removed],-12.0
g69lzmk,ixt6wx,You must be a joy to work with.,15.0
g69slm7,ixt6wx,&gt;implying that guy is working,15.0
g69ihhj,ixt6wx,"Jesus Christ, read the room",17.0
g69ve4f,ixt6wx,"Hi /u/Jadart, please refrain from personal attacks. Thanks.",8.0
g6arnum,ixt6wx,"IDEs are literally just glorified text editors, so saying an IDE could do this is kind of like saying notepad could do this.

If you don't see the code in the file, it's not there.

Do you mean the build sequence maybe? It's possible for transpilation tools (such as webpack) to insert something like this during the build process.",8.0
g69d6fk,ixt6wx,"it‚Äôs a feature of some frameworks, too, like Next.js",11.0
g69q7z3,ixt6wx,"If you‚Äôre not importing react in your projects then it‚Äôs likely that it imports it for you at build time.

Common way to do this using webpack is by using webpack‚Äôs ‚ÄòProvidePlugin‚Äô method.

You‚Äôre probably using some nice tool to start your projects which takes care of all that for you. :)",10.0
g6ajv1d,ixt6wx,"It appears Typescript includes JSX support. VSCode is bundled with Typescript, so this might be what's going on.

https://www.typescriptlang.org/docs/handbook/jsx.html",4.0
g69f4f5,ixt6wx,Using babel?,3.0
g69iha1,ixt6wx,[deleted],-14.0
g69l1te,ixt6wx,You have to be a troll,16.0
g690pjx,ixrtu7,That's how to get out there and learn. Jump in. Good article,4.0
g6b5yj0,ixncn9,Dude that's awesome..,2.0
g6brv73,ixncn9,Thank you very much!,2.0
g683qeo,ixmi94,"FWIW, I've always recommended [Build Yourself a Redux](https://zapier.com/engineering/how-to-build-redux/) as the best example of the ""build a mini Redux"" post genre.",3.0
g6hq0lo,ixmi94,"Personally, I‚Äôd say there is far more benefit in learning [Meiosis](http://meiosis.js.org) than there is learning Redux.",2.0
g688tty,ixmfiw,I‚Äôd be more interested if it only showed issues marked as bugs. I don‚Äôt contribute features unless I need them (I think this goes for most people).,11.0
g689bar,ixmfiw,"Makes sense. It does output issue tags, so if the author is disciplined about applying tags, you can surface the bugs that way.

Maybe I'll add a command-line option for filtering results by tag. (PR welcome if anyone wants to tackle it.)",9.0
g68mo2i,ixmfiw,"Most issues are opened as bugs anyway, even when they're enhancement requests.",3.0
g67rfho,ixmfiw,What is dis for???I m new into web development....,-8.0
g67x5bf,ixmfiw,"This is for surfacing open issues for the packages that your project depends on. The idea is that with [Hacktoberfest](https://hacktoberfest.digitalocean.com/) around the corner, you can find a way to contribute back to the projects that make your project possible. (If you work in JavaScript professionally, you could convince your manager to budget some time to support the projects that make your business possible.)",8.0
g67vsc4,ixmfiw,"This is for unearthing regrets about your choice of dependencies. 

In all seriousness, I‚Äôm not too sure.  I don‚Äôt generally care about my dependencies‚Äô issues unless they affect my project directly.",-2.0
g6853kn,ixmfiw,"Some developers aren't selfish and are more than happy to donate some time back to the libraries that make their projects possible. This is for those developers who already give back to the community, and those who would like to.",10.0
g68n6jf,ixmfiw,"To be fair, and no offense to those that make amazing libraries that make my job simple, but repo owners get super nazi about their project that anything I've ever tried to commit is criticized in PR review for weeks going through every line asking why its necessary and what not that I don't feel like wasting my time contributing. I don't have time to changeup my style to fit the project standards or read the entire codebase to see how things work for every new library I encounter that I want to contribute to. I look at the 10 lines that deal with what I'm working on and make it work. Obviously thats bad for maintainability, but I have my own deadlines to deal with. And thats why I don't contribute. I'll throw a few bucks to maintainers who can prioritize an issue fix for me though.",1.0
g699tnl,ixmfiw,"Those maintainers sound like angels. If you opened a PR that was hacked together and didn‚Äôt follow the projects code style, I‚Äôd probably just ignore it.",2.0
g69e3jf,ixmfiw,"Exactly why I dont bother. I mean I'm not terrible or anything, I just have better things to do, like getting the feature I need working and getting back to the project I wrote it for.",1.0
g686tom,ixmfiw,"That‚Äôs a little harsh,  I think my comment is valid if not a little flippant.  

I don‚Äôt get paid to contribute to open source, I get paid to deliver value through software and knowing about issues in the open source dependencies I use doesn‚Äôt help me to do that.  

Now if I spent most of my time contributing to open source projects I could see this being useful, but I don‚Äôt.",-3.0
g6893yr,ixmfiw,But if you get paid by using open source projects is in your own interest that this projects are as flawless as posible.,4.0
g689zr8,ixmfiw,"True, that‚Äôs why I pick carefully. Knowing about every open issue doesn‚Äôt really help once the choice is made.",-3.0
g68d8zh,ixmfiw,"It's precisely because your income depends on these projects that you should give back to them when they're in need and when you have the time to do so, because they directly contribute to your quality of life as a developer and because letting libraries that your income might depend on languish is only detrimental to your projects. I don't understand why the simple concept of reciprocity escapes you.",4.0
g68ffzs,ixmfiw,I give back by reporting and helping to resolve issues that affect the work I get paid to do.  I think that‚Äôs fair.  I should not have to give up my free time because I used a library to help solve a work related issue.,-1.0
g67vlph,ixmfiw,Node developers,0.0
g6861vu,ixlxoh,"It's not correct to call it a plug-in. JavaScript is not a framework or a library. This thing is a library written in JavaScript

You should also consider adding the demo link to the README.md I had to look a bit to find the URL",9.0
g68io37,ixlxoh,I couldn‚Äôt find the link. Could you post it here?,1.0
g68p4cz,ixlxoh,https://nzbin.github.io/photoviewer/,3.0
g69qr79,ixlxoh,"I have added the examples link.

You can also check the Magnify Demo

[https://nzbin.github.io/magnify/](https://nzbin.github.io/magnify/)",1.0
g68n75i,ixlxoh,"Great job! Since your library doesn't rely on jQuery, you should probably add a vanilla JS version of the `Initializing form a list of links` part. And have you thought about adding a [Web Component](https://developer.mozilla.org/en-US/docs/Web/Web_Components)?",1.0
g67hm2d,ixlxoh,"I checked the magnify demo and it looks pretty sweet!

This version is a vanilla JS plugin which makes it very usable in today's javascript projects!",0.0
g67jzxt,ixlxoh,"Exactly, vanilla JS plugin is very useful.",-1.0
g67a6vg,ixkr32,"Nice one, in the readme, i would suggest to change the href of the npm version shield to point to your [npmjs.org](https://npmjs.org) package link.",4.0
g67aczy,ixkr32,"oh, good catch, thank you!",1.0
g67dm2v,ixkr32,"Nice lib! I like the cleanliness of the code, especially the amount of documentation for each function. I'd personally invest a little more time on the tests to try and find edge cases and check their behavior too (empty strings, null, etc).",2.0
g67ihu2,ixkr32,"Yes, that's definitly in the plans. I just wanted to ship it as early as possible, but there are still things to be refined.

&amp;#x200B;

Thanks a lot for the feedback!",1.0
g6792se,ixkr32,"Hey guys! Just released my first public npm package, called [ramda-addons](https://github.com/AndreaPontrandolfo/ramda-addons) . It's a colletion of utils that requires Ramda.js (as a peer dep).

Any feedback welcome, thank you.",1.0
g68514c,ixkr32,"Most or all of these utils seem to be able to be written fairly easily without having to depend on both ramda and lodash. Why did you choose that route, rather than making this it's own independent package?

Just curious. Nice job!",1.0
g677iy3,ixkehy,"In a nutshell, a Medium article with thoughts about tooling, storing, securing, testing, caching, clustering, bundling, hosting, logging, distributing a JavaScript App (and not so much about overusing words ending with ing!)",0.0
g66xnj7,ixib0e,"I personally prefer to add them. Ultimately, it's a very small amount of code being added, but it makes it a hell of a lot easier for me if the data coming from the API changes. That way I only have to update my code in one place, rather than everywhere that data is used.",3.0
g66xqdw,ixib0e,"What if you had a middleware like gtaphql, to transform the data as per your needs?",1.0
g66xqkr,ixib0e,What are you talking about? Would you like to include some examples so we know what you're talking about.,2.0
g66xume,ixib0e,"I mean like adding entity classes in the UI to model the data coming from the backend. It's already modelled in the backend. Do we have to create model and getters and setters for them in Ui also?

For example backend you have a User entity. So the data will be structured. Do we need to create a js class to represent User in the UI code

I understand we need these for js functionality like managing local storage or authentication, we can a class and manage all the functionality in ot. But what about data?",1.0
g66zs2s,ixib0e,"Generally, no. The reason for this is that TypeScript helps deal with data shapes now, and so class based approaches tend to not be so necessary.

For complex apps, especially ones that use DTOs or something, you may still find it useful.",1.0
g66x4u3,ixdg7k,"TIL about comlink, thanks",8.0
g67a7lr,ixdg7k,"Weird class-based API, but ok",-2.0
g67e145,ixdg7k,"u/Ebuall the [GoogleChromeLabs/comlink-loader](https://github.com/GoogleChromeLabs/comlink-loader) 2.0 provided the abstraction is very simple to use. 

The limitation is currently the comlink-loader abstraction hides the lifecycle of the web-worker unless this [PR](https://github.com/GoogleChromeLabs/comlink-loader/pull/27) is merged. 

But in general, using the comlink loader in a singleton or worker pool pattern (don't need to terminate the worker) is simple and fast.",3.0
g67bqbv,ixdg7k,How is it any different than using any other web API ?,2.0
g67djr4,ixdg7k,It looks like magic.,0.0
g67dztg,ixdg7k,It is magic but I think they abstracted the right things away for you to add web workers to a projects with minimal friction. You should try it and try vanilla web workers to compare.,6.0
g67mvcq,ixdg7k,"The Comlink API isn't ""class based"", the core API is literally two functions; wrap(), and expose().",2.0
g666pop,ixdg7k,"I posted [a video demo in twitter](https://twitter.com/gaplo917/status/1307647160192651266?s=21).

The video demo demonstrates a web application implemented with web worker could use all the machine‚Äôs CPU cores to process your business logic!

It proved that there is nothing wrong to build a desktop application replacement by using web technologies(WebApp / Electron) :)",14.0
g66yg4w,ixdg7k,"Interesting research! 

When you say 120hz is coming, do you mean that generally there is a trend toward higher refresh rate monitors and that 120hz is emerging as a new baseline? Or is there some technical spec for 120hz animations that browsers are implementing? I had a 144hz monitor and noticed that animations were silky smooth (given the right circumstances!) so assume this is just relating to adoption of new hardware.

I tried out the live demo on my phone and it's interesting to see how the different worker strategies affect performance for the virtualized list. Interestingly, Chrome on my Android device crashes reliably when using the dedicated worker, but the other strategies work well.

I'm going to share this with my colleagues to spark some debate as we have a couple of very UI intensive apps that could benefit from offloading their compute to workers. The issue we've had is being able to bundle and serve these easily with webpack.",5.0
g670vun,ixdg7k,"The statement ‚Äú120Hz is coming‚Äù is a opinionated guess based on the following facts. 

- I have been used iPad Pro 2018 120Hz Safari browsing for two years.

- Some recently rollout Android phones also boost the refresh rate to 90Hz - 120Hz

For a desktop computer using &gt;= 120Hz monitor, enable the ‚ÄúDeveloper Settings &gt;  Rendering &gt; FPS meter‚Äù to check if your Chrome is running &gt;= 120Hz. As I know, a mixed screen refresh rate(two monitor with different refresh rate)might cause the chrome locked to 60Hz refresh rate.

In addition, the ‚ÄúDedicated Worker‚Äù  mode create as many as needed web workers to process the compute task. You could try to use ‚ÄúPool‚Äù mode to set a very large pool size. My iPhone 8plus crash immediately when the pool size &gt;= 300!",7.0
g67zfkh,ixdg7k,"Have been using comlink and webworker for a lot of data coming in for a while now, and boy you can really notice the difference",3.0
g66yw4g,ixdg7k,nice CPU you got there O\_O,1.0
g670xhs,ixdg7k,I do want a Ryzen 9 3950X instead :P,6.0
g67h6u4,ixdg7k,How about a 4950x? üòÆ,2.0
g67fptt,ixdg7k,"I tried the demo but in all examples the UI froze and the rows got stuck in ""loading"" when using WW more than when using the UI thread.",1.0
g67ikrl,ixdg7k,Maybe the default computational config is too large for your computer/phones. Could you try to lower down the number of \`Pow\`? Each compute would run fewer iterations.,1.0
g67mdxu,ixdg7k,I have an i7 3rd gen and the CPU was only at 20%,1.0
g67oocb,ixdg7k,"Use ‚ÄúWeb Worker (Pool)‚Äù mode, increase the pool count to match your CPU thread numbers, increase the computational difficulties ‚ÄòPow‚Äô to 2.7-2.9 (I guess)

Scroll the virtual list fast to see the parallel computations in the background thread. Then enjoy the full utilization of your CPU.

If this doesn‚Äôt work, would you mind to share your browser and OS version to me. If it is a browser limitation, It would be great for me to include it in my research. Thanks!",2.0
g656vaw,ix8h0p,"Hi everyone, 

We are happy to announce our new open source project, blindsend. Blindsend is made with TypeScript, React, and Libsodium, and it enables easy, end-to-end encrypted file transfer between two parties. 

[https://github.com/blindnet-io/blindsend](https://github.com/blindnet-io/blindsend)

We hope it will be of use to anyone looking to tackle privacy issues in their apps, reduce your system‚Äôs exposure to personal users‚Äô data, and ensure GDPR compliance.

Feel free to use it, send us feedback, or simply star the project - we can use all the love we can get :)

We also invite you to join one of our online meetups to learn more about blindsend and our latest initiative.

*Wednesday, September 23, 23h CET / 5pm EST / 2pm PST (East coast / New York)*  

*RSVP: https://www.meetup.com/security-and-privacy-for-software-developers-NYC/events/273282000/*

*Monday, September 28, 18h CET / 12pm EST / 9am PST (West coast / San Francisco)*

*RSVP: https://www.meetup.com/Security-and-privacy-for-software-developers-SF/events/273281965/*",1.0
g64alvu,ix3s41,"Hello, I finally wrote something about my Redux usage over the last years. I hope the topic is not too narrow and still accessible although it's not for beginners. Feel free to ask questions.

I should be expecting a lot of redu hate, though.",1.0
g64s7pd,ix3s41,"Skimming through the post briefly, this looks excellent!  Particularly pleased to see that you've referenced Randy Coulman's posts on ""globalizing selectors"", as I always thought those were very insightful.

Any chance you could put together a small example repo that demonstrates these utilities in action?

Also, obligatory question: is your project using [our official Redux Toolkit package](https://redux-toolkit.js.org) yet?  If not, you should definitely give it a shot.  Given the number of reducers and actions you described, RTK should help shrink the size of the code you've written significantly.",3.0
g65agwx,ix3s41,"Thanks for your kind words /u/acemarke. I was expecting a question from you regarding RTK. I wrote these utilities years ago and they require very low maintenance. I a sense this has worked so well that no ones looks at it anymore in the project despite the room for some clear improvements. We already discussed together why my project has not yet migrated to thunks. I hope that it will take the full RTK package someday. 

I have this secret wish to take some time in order to isolate this colocation tooling in another repo indeed. Maybe an evolution of it can land in the public redux ecosystem (and perhaps in RTK, who knows...)",2.0
g652ztm,ix3s41,"&gt;I should be expecting a lot of redu hate, though.

Heh.  I legitimately think most people shouldn't be starting new React projects with Redux, simply because (post-hooks) small sites just don't need the library.

But even if that's true (you can agree or disagree), Redux *still* has a very valuable place in state-heavy React apps.  I've yet to hear anyone make a convincing argument otherwise, so keep on using Redux *and* writing about it ... for legitimate use cases!",1.0
g658q3e,ix3s41,"Since this comes up all the time, see my post [Redux - Not Dead Yet!](https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/) for discussion of how Redux compares to various other tools for various use cases.",2.0
g65zij6,iwurli,"I like how in your last example you are not bound by the ""laws of hooks""",2.0
g66cnbj,iwurli,"Yeah I mean in all honesty you'd probably compose that out of the JSX template. But I wanted to show conceptually the sort of things you can do. Declarative data patterns based on primitives are a great composition pattern, and when they aren't restricted by the renderer can apply almost universally.

In this case, you can view custom directives as a ""Hook"" more or less. When you have the ability to modularize to this degree the benefit isn't just making higher-level ""Hooks"" that are re-usable. It's more that you organize your code in these units that what makes a file or a component match exactly what's comfortable for you without the framework butting in.

Since things are already logically grouped you can break off components or re-usable bits as you see fit or not. The premature introduction of boundaries can lead to some of the most painful refactors. I think other libraries have established some good patterns for organization but it doesn't need to stop there.",2.0
g66gvba,iwurli,"That's a good point and potential value proposition of your framework, which I haven't used, but seems interesting.

I wonder if that has organizational effect as well? Reason I ask is we try to use DDD to get around ""premature introduction of boundaries"" so our process is basically waterfall, with agile lingo thrown in to seem hip",1.0
g66qxax,iwurli,"DDD is a good technique. I've exercised that at my previous startup.  The right domain model will allow services to have the right responsibility and I've witnessed first hand how beneficial that is even as products pivot and things evolve (as people tend to change slower than product).

That being said I think it's at a different scale. The benefit here is more felt from going from first implementation to refined system. Having this flexibility I find lets things grow easier while adding features. It helps make initial development faster because there is less concern of refactoring without incurring big costs. It lets you test new ideas quicker.

So organizationally I suppose it can help with a more agile development cycle but I doubt it would be a catalyst the same way CICD is.",2.0
g6600p9,iwurli,I hate components and scope isolation in vue. It's a nightmare to pass down the prop when you have nested components. Sometimes you have to create a prop for a component just so you can pass something further down the line. What's the purpose of this prop that is not being used anywhere in the component? Erm. It's for passing down other things.,2.0
g66bk9v,iwurli,Prop drilling. React can suffer from this as well.,2.0
g66ea3r,iwurli,"I mean all libraries Solid included can suffer from Prop drilling. Although it does call into question whether the separation of components is logical and there is a better way to abstract functionality. I hate when libraries force this on me when I never would have split the components apart in the first place.

That being said if there are components in the middle it's likely this is a problem for stores. If the data is conceptually owned at the same level as the navigation this is a good candidate. I think things like Context, nested level stores do make sense at times when this is extensive. It still complicates things.

But as things grow it does help to break things apart so this sort of complexity is inherent and just needs good planning. I remember doing an excessive amount of prop drilling years ago but over time found patterns to avoid it for the most part.",2.0
g6a2r00,iwurli,"I don't like SFCs either but Svelte is so nice and allows to me to work so fast that I forgive all these drawbacks.

Vue... I don't know. I started using it in 2015 or so and was pretty enthusiastic about it. These days I think it doesn't excel at anything. Svelte is faster, lighter, and easier to use. React is more popular and other JSX based libraries are more suited for JS purists. For example, SolidJS by the author of the post is excellent.",2.0
g67hk6x,iwurli,"I think it makes lots of sense if your html is fixed for the specific component. However, with view you can have rather dynamic html (template) if you use inline-template or slot for example. I can have a form component to load and submit the form and I can tweak the html to whatever I want. Now imagine have form input components in inside the form component, and perhaps I can use this form inside a product component in some cases. I want to trigger a check of the product inventory when the quality input changes, I may want to pass down an inventory check method from the product component to the quantity input component. (Yes I can use event and such but there are cases when it's much more elegant to tap into a component data or method of the parent). That was kind of possible in angular 1. But I guess scope isolation was done to make testing and isolating error easier?",1.0
g687m4i,iwurli,"There is value in encapsulation here. You can sort of get around this by passing a model/context object throughout as your pattern but it gets messy. Angular 2 was pretty much built on a foundation of Dependency Injection I figure to get around these sort of issues, yet still give the ability to access data throughout the tree without heavy prop drilling. Most modern libraries have a version of this using stores. We commonly see them as singletons at the root level but they generally support nested ownership (providers) and hierarchical lookup (ie.. nearest parent provides the value).

I'm just stating here is while this is all true and good, sometimes things develop organically and we should be comfortable being able to defer these decisions until it makes sense.",1.0
g68fus8,iwurli,"You are absolutely right, with vuejs there is dependency injection as well. If I can find a way to dynamically define what I want to inject I would be some happy lol.",1.0
g61ggap,iwmbvd,"My two comments:. 

- if you can't describe and recognize the situation where lack of semicolons causes a bug, you should keep them.

- even if I knew that case by heart, I'd keep them because they serve a purpose.  Without them, I have to read the next line of code to see if it is a chained call.  With them, I know immediately if the line is complete or not. 

Programming is about reading and doing code much more than it is about writing code.",76.0
g622fhq,iwmbvd,"&gt;Without them, I have to read the next line of code to see if it is a chained call. With them, I know immediately if the line is complete or not. Programming is about reading...

Thank you, that is the best pro-semicolon explanation I've heard. Good rule: When in doubt, always favor readability.",22.0
g61hpus,iwmbvd,"I can relate to that.  Actually this is how I saw the problem about 2 years-ish ago, and then I slowly got talked into joining the dark side after seeing it so much.  I guess the thing that convinced me was that if my code was getting hard to read, I had problems that weren't being solved by semicolons.",3.0
g61i89f,iwmbvd,"To each their own...I work with a team that maintains several repos, some are Vue, so no semicolons, and some aren't, so we have them.

I never see the lack of semicolons as clean, and I do find Vue code harder to skim.",9.0
g627ycq,iwmbvd,"some of us in the vue community also like typescript and semicolon enforcement, there's dozens of us",5.0
g62i3ho,iwmbvd,"The only issue with no semicolons is when ASI causes something unexpected to happen, just use eslint and that issue goes away.",1.0
g613rf4,iwmbvd,I think code is much cleaner and it avoids strange mistakes that can occur when semi-colons are missing.,59.0
g61cijt,iwmbvd,"In 2020, with the state of text editors and linting, you can safely omit semicolons if you choose to.

Some good reasons to choose one style over another:

* You are more comfortable with one style
* You work frequently with other languages that require or exclude them
* You work on a team with a style-guide that enforces or omits them

One gotcha if you choose to omit them is [Automatic Semicolon Insertion (ASI)](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Automatic_semicolon_insertion). JavaScript makes semicolons optional by adding them at the end of a line if omitting it would cause a syntax error.

This creates a set of circumstances called ASI Hazards, whereby omitting semicolons in particular places, your code breaks.

Here are a couple examples:

**A semicolon is required before an IIFE**

    const puppeteer = require('puppeteer')
    
    (async () =&gt; {
      const browser = await puppeteer.launch()
      const page = await browser.newPage()
      // Do more stuff with Puppeteer‚Ä¶
    })()

In this example, we're trying to work with async code. Because many environments don't have support for top-level await, we need to wrap our code in an Immediately-Invoked Function Expression (IIFE) `(()=&gt; { /* Code Here‚Ä¶ */ })()`.

JavaScript combines these lines together which causes an error

    const puppeteer = require('puppeteer')(async () =&gt; {
    // The rest of the code‚Ä¶

**Don't start lines with** `[`

    const activeItems = document.querySelectorAll('.active')
    
    [...activeItems].forEach(item =&gt; {
      item.classList.remove('.active')
    })

Here we used `.querySelectorAll(‚Ä¶)` to get a list of elements and we iterate over them with `.forEach()`. NodeLists have a `.forEach()` method, so we didn't need to turn it into an array with the spread syntax `[...]`, but this is something that someone might write.

Once again, JavaScript combines these lines and causes an error:

    const activeItems = document
    .querySelectorAll('.active')[...activeItems].forEach(item =&gt; {
    // The rest of the code‚Ä¶

The solution to these problems is when a line follows a statement and starts with the characters `(`, `[`, or `\``, put a semicolon before it.

Personally, I prefer my code without semicolons and I use ESLint, so the combination of their [semi](https://eslint.org/docs/rules/semi) rule and [no-unexpected-multiline](https://eslint.org/docs/rules/no-unexpected-multiline) rule keeps me from ever stumbling into ASI Hazards.

Just be consistent and if your team uses a style, use the team's style, even if it's not your preference.",43.0
g61fri7,iwmbvd,"I applaud the thorough reply sir, I'm probably going to adopt these eslint rules from now on.",8.0
g61yxtc,iwmbvd,This was such a great reply,5.0
g62170s,iwmbvd,"&gt;const activeItems = document.querySelectorAll('.active')  
\[...activeItems\].forEach(item =&gt; {  
  item.classList.remove('.active')  
})

Oh man, that one. It has caught me (a non-semicolon, er, -ist) so many times.   


I have pretty much switched to using \`Array.from()\` on \`NodeList\`s over  spreads almost exclusively, precisely because this is the one thing I forget about semicolons.",2.0
g623ii9,iwmbvd,"Yeah, this is a reason I've been largely ditching `.forEach(‚Ä¶)` in place of `for‚Ä¶of` loops.

```
const activeItems = document.querySelectorAll('.active')

for (const item of activeItems) {
  item.classList.remove('.active')
}
```",2.0
g63clrm,iwmbvd,"Well `forEach` works on `NodeList`s, doesn‚Äôt it? I find myself having to convert because I constantly want to use array methods like `map`, `reduce` and so forth on arrays of DOM nodes.
I wish `querySelectorAll` would just return an array already, or else that there were some newly named standard equivalent (`findAll`? `select`?) that did.",3.0
g671cug,iwmbvd,unfortunately if it returns an array and then another node is added to the dom your'e out of luck,0.0
g64wetm,iwmbvd,"So that's really a ""begin these structures with a semi-colon"" rule.",2.0
g614mtp,iwmbvd,"Automatic semi colon insertion causes some strange bugs, notably with IIFEs. Best to stick them in.",29.0
g615csb,iwmbvd,"That's true, I have noticed the IIFE issue.  But your comment implies there's more, is there any list of these things documented somewhere that I can read about?",5.0
g61dan9,iwmbvd,"ESLint's documentation for their [no-unexpected-multiline](https://eslint.org/docs/rules/no-unexpected-multiline) rule details some examples where omitting semicolons causes errors.

**Line starts with** `(`

    var foo = bar
    (1 || 2).baz();

**Line starts with** `[`

    var hello = 'world'
    [1, 2, 3].forEach(addNumber);

**Line starts with** \`

    let x = function() {}
    `hello`

**Line starts with Regex**

    let x = foo
    /regex/g.test(bar)

You'll notice that most of these cases involve creating expressions without assigning a reference to them, so they're typically pretty rare in real code.",7.0
g61fgzc,iwmbvd,"This is awesome, thanks for this",3.0
g61k88w,iwmbvd,"Yes, semicolons are nice to signify the end of a single multi-line expression.

    foo === ""bar""
        ? { response : ""baz"" }
        : { response: ""foo"" };",19.0
g617ofn,iwmbvd,"I omit them myself, but I'm not terribly religious about it.  Both my IDE and build pipeline will scream bloody murder if I run into any of the ambiguous cases where a linebreak results in getting bitten by ASI.

BTW, the JIT does not infer semicolons, the parser does.",9.0
g619wgu,iwmbvd,"Ah, the parser, my bad.  Looks like I have some homework to brush up on.  I'll fix that, cause he probably didn't say exactly that.",2.0
g618all,iwmbvd,I don't use them personally. I've never encountered any of the issues that have a small chance of happening when you don't use them. Don't write many IIFEs.,3.0
g620ecj,iwmbvd,"I personally don't like semi colons or single quotes because it's hard to move between the languages I use.

Python and Go are my backend professional languages and when I move to JS codebases with semi colons, I'm not a big fan. Same with single quotes.

In reality, it doesn't really matter with the advent of auto formatters. The point about IIFEs Is valid I guess, but I usually don't let my engineers write them because I prefer explicitness of writing a function and calling it.",4.0
g61fdvr,iwmbvd,"Something in between? I feel like code looks cleaner without semicolons, but for me it is also a bit more comfortable to read code with them, coz then I know certainly where line ends and that it actually ends on that line.",3.0
g625dcc,iwmbvd,"I like to be consistent with my style regardless of language, so for me it's better to always end statements with a semicolon rather than adapt to a different style depending on language.",3.0
g61bafg,iwmbvd,Every few months someone asks this question. The right answer is: stop bikeshedding and just use prettier.,15.0
g621gl3,iwmbvd,"This. With prettier it doesn't matter anymore: semicolons, spaces, new lines. I write code in one line. Then format",3.0
g61dcd8,iwmbvd,"I do agree that on a project, whether or not to use semicolons is trivial.  But, this is just personal enrichment for all us devs on Reddit to have a fun debate. ;)  I wouldn't consider it bikeshedding unless there's a project getting held up by the discussion.

I have another unpopular opinion, while we're here, haha.  I don't like Prettier.  It didn't have many flexible options the last time I checked, and it occasionally causes issues with the order of imports.  On top of that, I feel it also promotes a small amount of carelessness.  If new teammates rely on prettier to do the work for them, then they're not learning the conventions of the project or the reasons behind them.  For these reasons, I prefer to use a strict linter that forces the dev to fix their mistakes before it will build successfully.

Don't worry, I'm not a stubborn grouch about literally any of this, these are just my nitpicks from experience.  I'm perfectly open to using Prettier and semicolons if that's what the team decides as a unit.  I think having a style-guide and consistently following it takes precedence over any personal preference I can imagine.",3.0
g61iswh,iwmbvd,"Your disagreements are sort of the point of prettier - don't let people configure and we can all skip the pointless discussions about how to configure it.

...

But *personally*, I disagree with just about every decision it makes.",9.0
g63izqx,iwmbvd,"I think everyone is secretly mildly annoyed by its choices. The point is that it mildly annoys everyone equally ;)

The upside, of course, is that it automatically formats everyone's code the same way",2.0
g61vrg4,iwmbvd,"Yeah I really dislike a lot of what prettier does, especially cause it always breaks my JSX/TSX",1.0
g623o9z,iwmbvd,The irony is that you can configure Prettier to not use semicolons.,-1.0
g63ja6z,iwmbvd,"yes, but due to the autoformatting, ASI bugs get reformatted in a way that makes the bug obvious. So if you format on save, you get a tight feedback loop regardless of what setting you pick",3.0
g65oedu,iwmbvd,"The point is that Prettier still leaves the decision up to you - while semicolons being the default carries some weight, it doesn't completely obviate the potential for bikeshedding.",-1.0
g61q6zq,iwmbvd,"Relying on ASI is [not recommended by TC39](https://github.com/tc39/ecma262/pull/1062).  
Besides, this question is trivially solved by hitting the format code equivalent in your editor/IDE or binding that action to saving.",6.0
g61rg1y,iwmbvd,"Also, [this guy](https://github.com/standard/standard/issues/581#issuecomment-237214596) took my words from me.",2.0
g61r1la,iwmbvd,"This seems to be a recurring point in this thread, but I think this is a misunderstanding of the topic.  The preference for or against semicolons is one regarding legibility, I don't think anyone has issues with simply typing out semicolons.",1.0
g61s0dz,iwmbvd,"You asked it yourself

&gt; Is there some reason beyond preference to use them or avoid using them? 

And I gave an answer. At this point reliance on ASI just adds more to think about when you read and write code.",1.0
g61sone,iwmbvd,"Right, and I appreciate the TC39 link, btw.  Just sounded like the second part of your comment, after that, wasn't in direct response to that quote.  It reads like you meant those who omit semicolons are trying to solve a problem and inserting semicolons on save is an easier way to achieve the same result.",2.0
g61yr6l,iwmbvd,"Many others have already spoken about the impacts semicolons can have in terms of performance (seems like the majority say semicolons are better than not). As far as straight up legibility goes, I'd give it an even stronger ""yes,"" semicolons dramatically help with readability. I think the legibility gap with/without semicolons is even greater than the performance gap.

One huge example is what u/_default_username pointed out (ternary statements). If-statements is another (esp if you choose not to use curly braces). Arrow function endings is another (esp if you don't enforce linting rules on indention).

I'll go do far as to say I feel the exact opposite of how you described: if I don't see semicolons, it often results in me having to spend more time understanding what the code is doing. Even more so when debugging. That's why we enforce it in our linting rules, and they've helped make more readable code bases.

But hey, it's JavaScript, to each their own.",6.0
g620omj,iwmbvd,In most cases I'd argue programming is more about communicating ideas to other people than it is a tool to make computers do things. Semi-colons communicate a lot of useful information to others.,5.0
g61vwkm,iwmbvd,100% on return statements and assignments.  that's about it for me.,2.0
g620zq4,iwmbvd,"Semi colon yes.

There are some edge cases where it introduces bugs. That's reason enough for me",2.0
g623850,iwmbvd,"Across all programing languages, I find semicolons helpful because they help me understand when one line terminates without having to read the next. 

I remember it took me a while to learn Go because I found the code hard to read. That and Go has the weirdest directory structure requirements.",2.0
g623ku1,iwmbvd,"It is 2020, why we still need semicolon?",2.0
g62leek,iwmbvd,"Because if two lines are separated by nothing but white space, the parser will first try to treat them as a single line. If it cannot, it will backtrack and insert the semicolon for you.  

There are multiple edge cases where two separate lines can also be read as a single line.",2.0
g67ije6,iwmbvd,"No. They're useful in some cases, but mostly I prefer my code without them. I used to be on the other side of this debate, but working a while without them is really a lot clearer and cleaner - they're mostly useless visual noise serving very little purpose.",2.0
g61wezs,iwmbvd,Yes.  Lint-rule it.,3.0
g61yf06,iwmbvd,"I always explain it to my students like this...

Have you ever had a friend send you a text, but they left out the periods in-between sentences?  You probably still were able to figure out where the sentences started and stopped, even without the periods, right?

Javascript can do the exact same thing, and infer your ""periods"" (semi-colons) for you ... most of the time.  But just as in English, the parser can get confused.  Imagine if someone sends you:

&gt; Come on over and we'll eat Grandma says hi

... then the periods *do* matter.

So essentially your options are to learn the exact rules by which the parser infers the semi-colons for you, and always code in a way where you avoid saying ""let's eat grandma"" ... or you can just always use semi-colons.",3.0
g6207z0,iwmbvd,"I like that analogy, haha.  Very solid way to get the idea across.",2.0
g625oe4,iwmbvd,"Or worse, when Grandma sends you

&gt; come on over and eat grandma",2.0
g61xifr,iwmbvd,"StandardJS checking in - if you know the 4 or so instances you actually need it, you can adapt for them. Otherwise, no thanks",1.0
g61xqg9,iwmbvd,I don‚Äôt like using them but I know I should.,1.0
g61xya4,iwmbvd,"JS documentation advises using semicolons, so I use 'em.

&amp;#x200B;

Fun story. I got into a discussion about ASI with a senior engineer during my interview and he basically admitted that whenever he sees semicolons being using in JS, he assumes he's dealing with an inexperienced developer.",1.0
g61ya2i,iwmbvd,"Oh no, haha.  I like my semicolon-less syntax, but that sounds like a kind of elitism that could potentially cause problems.  I wonder how many good devs missed out on the job over semicolons.",2.0
g622efo,iwmbvd,No,1.0
g64y40s,iwmbvd,"My personal preference is no.. But these days with prettier and format on save, it's not something I put a lot of thought in to; I'm ""semicolon fluid"" if you will.   If it *needs* to change, that's one-line config change and reformat the codebase... merge conflicts on outstanding PRs be damned!

Anyway, anytime this comes up I like to share this case that stumped me before - I actually asked this subreddit about it, that must've been 4 or 5 years ago.  Take this code block :

    someFunctionCall()
    
    ['some', 'static', 'list'].forEach(item =&gt; {
      // do something with item
    })

So, a really broad rule for ASI is ""if these statements combined cause a syntax error, a semicolon is automatically inserted at the end of a line"" - this isn't a perfect axiom, but it's pretty darn close.  

In this case, there's an array accessor on the result of the function call. The comma delimited list of the array turns into a list of expression delimited by the comma operator, so each is evaluated and the last one is used, so becomes \`list\` -- and then an attempt is made to call \`forEach\` on whatever is returned - usually undefined. Because that entire mess can run on a single line and there's no syntax error, no semicolon is inserted.",1.0
g654m2t,iwmbvd,"Yeah, that has been brought up a bunch in this thread too.  I never run into these issues because I assign everything to variables as a personal rule.  That makes it easier for minifiers and even debugging sometimes, because you can see the values of each independent part at any given time.

    const staticList = ['some', 'static', 'list']
    
    staticList.forEach(item =&gt; {
      // ...
    })

I also never put IIFEs on their own lines anymore, especially now that I've been using modules for everything.  Usually, I can define a function explicitly and then run it so I have no need for them, but when I DO use them, they're not standalone on their own line.

    const greeting = (() =&gt; {
      const hello = 'hello'
      const world = 'world'
      return `${hello} ${world}`
    })()

Also I learned a neat es6 feature recently that lets you write an anonymous block, so as long as you're using const or let, you'll have a new scope.

    {
      const greeting = 'hello world'
      console.log(greeting) // 'hello world'
    }
    console.log(greeting) // undefined

Anyway, point is if you have all the right habits, you never encounter these edge cases anyway.  So for me personally, it's a non-issue.",2.0
g6588zk,iwmbvd,"I always use them. It's traditional, many other professional languages use them, and you can, so why not?

I have never had a problem when using them, I have encountered unexpected bugs when not using them. To each there own, I don't semicolon-less code ""cleaner"", clean code for me boils down to other factors.",1.0
g6205oi,iwmbvd,"semicolons are standards. It WILL cause errors in your code depending on where they are removed

It might look cleaner, but that's actually very bad code. Not to mention how broken some scripts would become. Overall don't do this. Semicolons define separations between expressions. Remove them and most expressions become a single expression. that's broken asf

This doesn't apply everywhere, but no matter what you should follow syntax standards

I don't really care if others tell you ""in 2020 it's okay"". The standards have been the same for over a decade, and risking the stability of a script over it? It's not worth it.

IMO, I wouldn't even consider doing this if I were you.",-1.0
g620x92,iwmbvd,"Haha, this may be the most opinionated hot take in this thread so far.  I think it's probably an exaggeration to call it broken code, but I understand where you're coming from.",2.0
g622avy,iwmbvd,"Their definition of ""most"" is perplexing.

Apparently ""most"" is a small number of things that come up rarely.",2.0
g624pr7,iwmbvd,"yes I get very triggered when people
don't follow commonly accepted standards",-1.0
g61ipav,iwmbvd,"Finish a sentence: add punctuation!
or
Finish sentence puctulolololol

Oh hey, the code should look like this, but iFYouWant,gONutsBro",-5.0
g61jbiv,iwmbvd,I take it you're not a fan of Python ;),2.0
g61nyyg,iwmbvd,"Huge fan, love it, live it, on PyPi, enjoy everything about the language.",1.0
g65z8yd,ix5mz4,"Since the vast majority of these comments are off-topic for r/javascript, I'm locking the post.",1.0
g65yu6d,ix5mz4,I wonder how well this improves WASM-&gt;JS calls. I've been looking forward for the dust to settle on the host bindings thing. Maybe the standard will be that new frameworks are written in WASM and JS is just the business logic?,11.0
g65aiu8,ix5mz4,"&gt; Whitespace: OK to use?

Very offensive",42.0
g65xk4z,ix5mz4,"I don't understand the context, is there a discussion about sensitive language in the announcement? I didn't see anything like that

Edit: Nevermind it was right at the top. Don't know how I missed that :-/",5.0
g65jnp4,ix5mz4,Literally Hitler.,10.0
g65b6pw,ix5mz4,"Regarding terminology:

This is a stupid box to open, and everyone will have forgotten all about this manner of policy in a few years when the wealthy people who've enacted them no longer need it to feel better about the privilege they were born into.

If they gave a fuck they'd look at economic reform. Wealth/class is the biggest differentiator, particularly given most of us inherit our futures.",39.0
g653clv,ix5mz4,"I disagree with the assessment that any of those words are offensive in the context of programming, but I can't even figure out why ""redline"" is considered offensive in any context. Wtf",43.0
g653ftn,ix5mz4,https://en.m.wikipedia.org/wiki/Redlining,28.0
g653z9s,ix5mz4,"Oh, this is another case of American politics needlessly infecting the rest of the world.",88.0
g655v5b,ix5mz4,Just US things...,21.0
g6553im,ix5mz4,"It's absolutely insane. Pretty soon git will probably change the word ""repo"" to something else because it's offensive to people who have had anything of theirs repossessed. *smh*",44.0
g65ybia,ix5mz4,"&gt;It's absolutely ~~insane~~ unexpected

[https://v8.dev/docs/respectful-code](https://v8.dev/docs/respectful-code)",17.0
g658qiv,ix5mz4,"&gt;It's absolutely insane.

Wow just wow my fragile mind is shattered by this horrendous language i cant code anymore help",21.0
g65y7va,ix5mz4,"I've always laughed at people like you and /u/midgitsuu.

You're commenting on codebases attempting to be more inclusive... by calling out people for being sensitive. Don't you see the irony?",-11.0
g65dqy0,ix5mz4,"Dude, don't act like this excessive political correctness is anything but insane. No, it doesn't ""ruin Javascript"", it's the principle of it. Stop being arrogant.",-21.0
g65ejrb,ix5mz4,"Sarcasm my dude. ""Insane"" is one of the cited no-no words in that post.",17.0
g6553j4,ix5mz4,"well Google *is* an American company, so...(not that you‚Äôre wrong)",8.0
g658zzx,ix5mz4,It's not even American politics.  It's a tiny faction that lives in a small part of California.,-11.0
g65e85r,ix5mz4,Redlining was a national policy. It affected everywhere.,10.0
g65eziq,ix5mz4,This word isn't an issue everywhere.,2.0
g65kyqm,ix5mz4,"I never said it was. But u/elmstfreddie said it was ""American politics"" and you said ""no, it's just a small part of California"" so I don't even get what your point is since it very much was a national policy.",6.0
g65ks9g,ix5mz4,"""Native"" is offensive? I understand some people prefer to be called ""indigenous"" or ""aboriginal"" but is it offensive to say ""native""?",13.0
g658o75,ix5mz4,I can't believe someone would consider any of these words offensive. But who would've guessed any different in 2020...,14.0
g65ag1y,ix5mz4,IMHO any action like this is terribly counterproductive. I mean we seem try too hard to forget our past mistakes.,13.0
g65vrus,ix5mz4,"Is this the right venue to learn from those mistakes, though? Is this the only record of them?",6.0
g65eg0d,ix5mz4,"Most of them are current mistakes.

There's no reason to use the language of slavery, or terminology that reinforces the idea that black = bad; white = good.",-16.0
g65s774,ix5mz4,None of those reinforce any ideas.,6.0
g65y417,ix5mz4,"The most offensive part IMO is the usage of the Latin alphabet. It came from Greek alphabet, which culturally appropriated the alphabet of ancient Egypt.",5.0
g65nlsy,ix5mz4,Incoming change on tachometers to orange or some other colour.,4.0
g65s4qb,ix5mz4,No color is safe.,3.0
g655yf7,ix5mz4,"# Edit:

I agree that these changes are largely useless in terms of fixing the actual issues at hand, and I see your points presented, and agree with much of what has been said. 

I just don't really see how the changing of a small subset of the language at some software development companies affects us all on a whole negatively. They haven't said that these words are outright *bad* in any way, they've only tried to avoid using words that have stronger negative connotations. Some of their word/phrase choices are **definitely questionable** but all things considered, I don't see where the industry is going to suffer for it. 

That being said, I do think they would need to exercise caution in extending these types of lists because at some point it will get too restrictive in terms of language which has valid meaning outside of racial/political contexts. I think this is what many of you are worried about happening, and I personally wouldn't like to see the software/dev space become too 'woke' for its own good either. For right now though, it's nothing major and it's not an industry-sweeping change.

---

They may not be offensive in the context of programming, but in a general sense, it makes sense to avoid certain words or phrases that have certain negative connotations altogether. 

I never really advocated for these vocabulary changes but I can definitely understand why it's being done, and we're not losing out on anything with these changes. 

You can still use any language you want in your own repos so unless you're a developer for Google, I don't think this should really affect you much, if at all.",-4.0
g65kuy3,ix5mz4,"**\/\/EDIT Start**: 

I'd just like to add that I get this _comes_ from a well meaning place. People seeing the recent injustices and atrocities against African Americans looked around their sphere of influence and said something along the lines, ""This is terrible what can I do?"" The current line of thinking however, censoring benign words with no racial divisiveness, is looking beyond the mark and ineffective at providing any real help. All it will do is vilify otherwise benign, good or even great things, people and projects.

**\/\/EDIT End** 

&amp;nbsp;



&gt; I don't think this should really affect you much, if at all.

It's naive to say this. 

When FAANG starts doing XYZ as a ""best practice"" it _generally_ will pick up steam. Not all the time, but often. This has a very high likelihood of becoming the status quo. If I'm not racist but don't subscribe to this virtue signaling bullshit and I don't ""get in line"" then the assumption will be I'm racist and my Open Source project has a very high chance of getting ~~blacklisted~~ (oops, sorry) denylisted.


[Blacklist was used as early as 1624](https://www.reddit.com/r/AskHistorians/comments/866ynp/what_are_the_origins_of_the_words_blacklist_and/dw3svkw?utm_source=share&amp;utm_medium=web2x&amp;context=3). It became popular during WWI and was made so by the British.

Ironically by censoring the word `master` (Master's Degree, Master Jedi, Master Bruce Wayne, [Master William](https://www.youtube.com/watch?v=xaKsC2AwFt0) - Fresh Prince of Bel Air) from git branches the word **becomes** a racially divisive thing whereas before it wasn't. Furthermore, as mentioned above this is just virtue signaling that won't change a racist's mind. 

All this will do is salve our conscience that we ""did our part"" when in fact we did nothing at all but unnecessarily censor a bunch otherwise benign words. **By making them forbidden we gave them racially divisive meaning** this in turn increases the means and words whereby racists can racistly express themselves.",22.0
g65u0ca,ix5mz4,"&gt; They may not be offensive in the context of programming, but in a general sense, it makes sense to avoid certain words or phrases that have certain negative connotations altogether.

No, you will run out of words quickly. Change the negative connotations to positive instead of running away from problems.",3.0
g65dst3,ix5mz4,"&gt; it makes sense to avoid certain words or phrases that have certain negative connotations altogether.

that is basically every word if we're ignoring context, which is what you're proposing.

&gt; we're not losing out on anything with these changes.

you honestly don't see any costs associated with changing git master to main? really?

i think code of conducts at events and in dev circles are important. i think using more inclusive language is a fine goal, especially language that could be reasonably considered offensive. i don't think changing master or whitespace is helping those that feel excluded as much as it is ""othering"" them and mostly appeasing those offended on their behalf. i also don't like, as someone else pointed out, how inclusive language centers around US politics and progressiveness which, ironically, excludes many other groups.",6.0
g65gpv4,ix5mz4,"There's an argument to be made that these changes don't solve any real problems.

However, appeals to censorship are misguided. The government can't enforce changes like this because of free speech, but surely private entities are allowed to determine what they'll tolerate. This is literally the power of free markets and voting with your wallet/your salary/your time.",1.0
g655ezs,ix5mz4,Respectful variable names? Holy fuck we really do learn nothing from history.,40.0
g659qru,ix5mz4,"No one wants to be [the man who stopped clapping](https://www.disappearingman.com/communism/men-wouldnt-stop-clapping/).

Including me.  A lot of us are dealing with this in our workplaces right now, not saying a peep about it.  I can tell you, we're peeping in private.",15.0
g659w25,ix5mz4,Damn. It's hard I know,6.0
g65bz11,ix5mz4,"Sorry, which part of history tells us not to replace names found in computer code with more respectful names? Must have missed that.",6.0
g65c4fx,ix5mz4,Your idea of learning from history is only if it's an exact copy of the present?,8.0
g65d4qe,ix5mz4,"Exactly, because there isn't one. What you mean is ""censorship"". But that's a slippery slope fallacy, because that's not what's going on here. It's just a group of people using _their_ power over software projects to improve things according to how they see fit, nothing more.",6.0
g65dkwx,ix5mz4,I wouldn't call this censorship. It's less obvious and slower burning than that. It's signalling to the world that they have the right to be angry at every step. Guess what. They'll take you up on that offer.,-2.0
g65fdac,ix5mz4,"It's mostly nothing like the censorship of historical totalitarians because it's a private entity (and contributors) exercising control over its own projects. The project's maintainers and contributors have sole discretion over the contents of their projects. It's how it's always been, you just don't agree with them now.

Don't like it? Fork it. Or quit software, nobody there cares about your opinion.

Ahh, freedom.",7.0
g65g4i0,ix5mz4,"Love the options. O.K what do you do here?

One of your Devs declares var blackMask = '#000'.

Another dev (Caucasian) comes to you claiming this is offensive. The original dev says it helps him reason about what color the modal mask will be. The other dev is furious and says he should rename it to hex000mak or he complains. 

Congrats. Your workplace just got a lot more fun and collaborative",8.0
g65kymq,ix5mz4,"Replace your disagreement with literally any other disagreement, of any kind, between employees. Solve it. It happens all the time, this is why companies have HR departments.",7.0
g65l8gz,ix5mz4,Humor me. What would you do if you were hr?,6.0
g65ce7w,ix5mz4,Where did I say that? Which part of history can be construed to be warning us against doing this?,6.0
g65d5br,ix5mz4,"Militant do gooders like you who want to sterilize and ""fix"" everything they don't see fit end up on the wrong side of history. 

""The road to hell is paved with good intentions."" You think Nazis thought of themselves as bad guys? You think crusaders saw themselves as sinners? Maybe people conducting witch hunts knew they were wrong all along?

When you become puritanical about policing language, you need to pull back.",-8.0
g65emk9,ix5mz4,Who had 4 deep for Poe's Law? Anyone?,6.0
g65dj8e,ix5mz4,"Ah yes, the removing offensive words leads directly to Nazism argument. One of the most important lessons the reign of the Nazis has to teach us. Thank you for enlightening us.",9.0
g65dmzu,ix5mz4,You're welcome.,1.0
g65i7xo,ix5mz4,I don't get why people are so bugged by this. Arguing that this effort could be spent elsewhere is like saying if anyone improves anything that isn't the best use of that time/money/effort that it is completely pointless. Are you really arguing that language has no impact on culture? Why don't we keep using the nword? because it has meaning! Renaming whitespace to niggerspace would be a problem right? Isn't it possible it work the other way as well?,7.0
g65nxey,ix5mz4,But whitespace doesn't even have any positive or negative connotation. It has no link to racial inequality at all.,5.0
g65dijr,ix5mz4,"You learn weird things from the internet, like the various ways history is learned. These include, amongst other things, statues and variable names. Both seeming to be more important to books",1.0
g65ten0,ix5mz4,"Nobody would change their opinion on slavery because they read the word ""master"", ""redline"", or ""native"" in a codebase.",8.0
g656vxe,ix5mz4,"Like the history thats repeating itself right now in the US ?
The answer would apparently No ! Just ask I our fair Emporer trump. I didn't want to say Emporer but I didn't want to offend anyone üôÉ",-1.0
g658tdy,ix5mz4,Unless webster has the definition of whitespace as a place white suprematists like to gather i fail to see how the simple usage of a color name in a widely accepted name refering to the empty space between characters is offensive. Its not like its called caucasianSpace .,21.0
g65b1p8,ix5mz4,"It excludes ""the blacks"" from the space, so it's racist!",20.0
g659fmo,ix5mz4,Apparently blackbox is offensive now,16.0
g65jikx,ix5mz4,2020 ...,10.0
g65knjz,ix5mz4,the fun never stops,5.0
g65w25f,ix5mz4,"I've never thought about someone's skin color when hearing the words blacklist and whitelist. It's counter-productive to demonize these words and expressions because it effectively adds negative associations that were never there to begin with. 

It might even take focus away from actual racism.",12.0
g65gubo,ix5mz4,"Corporate pushed for these changes at work and it‚Äôs been a few months in and hearing ‚Äúmaster slave‚Äù has become kind of shocking to hear now. 

In my experience, the use of these words is one of those things that‚Äôs just accepted for what it is because it‚Äôs so commonplace. But when you look at it within the historical context of North America (I‚Äôm working for a NA corporation and Google in this article is as well), it is pretty insensitive. 

I‚Äôm seeing a lot of slippery slope concerns here that we‚Äôll be censoring all kinds of words. The words that are being changed generally have positive/negative connotations. Master slave should be obvious. Blacklist makes sense if you look at how many phrases that use black to mean something bad or evil. 

This situation reminds me of how words got phased out of acceptable social vocabulary when I was younger. I saw/heard similar arguments over ‚Äúgay‚Äù and ‚Äúretarded‚Äù being labeled unacceptable as a pejorative but those people have come around and accepted that we shouldn‚Äôt be using those words in that way even though at one point, it was socially acceptable to do so.

At the end of the day, these changes aren‚Äôt huge changes that will affect our day-to-day. But It may make a difference to someone else so why would I fight that?",10.0
g65l03s,ix5mz4,anyhats are now vs blockhats,5.0
g6597qd,ix5mz4,The people who want this probably don‚Äôt even code,7.0
g65erxf,ix5mz4,Black people don't code?,-23.0
g65aphb,ix5mz4,"This thread clearly illustrates why minorities feel unwelcomed in tech.

""Let me be reminded of the ongoing systemic oppression of my people because Joe really doesn't want to search/replace this variable name. No one wants to give Joe another reason to incessantly whine.""

**Edit:** [Bring on those downvotes, yum!](https://youtu.be/Ula8oi_M4Ww)",-29.0
g65h1du,ix5mz4,"It's gonna take a while to convince any of them that there's a problem. They see like 0.0001% of the issues that women and minorities have to deal with, so to them, it's like ""just ignore it"".

They can't fathom that dealing with this shit almost every day of your life is fucking exhausting. My first year as a developer was just straw after straw until I was on the verge of a spinal fracture.

* Constantly being asked to fill in for the secretary if she was off because 'i'd be better at that kind of thing'.
* Being asked 'who are you here with?' at any event for developers.
* Never being taken seriously by clients to the point where I just used my initial for a bit.
* Having my code checked way more than the guy who started the same time as me in my first job, despite making fewer errors.
* Everyone else getting IMs for stuff, but guys just having to walk to my desk and hover around me to talk instead... and often way too close for my comfort.
* And many hundreds more",-9.0
g65mkvc,ix1zyg,"We always ask ""how far?"" but we rarely ask ""at what cost?""",17.0
g65matl,ix1zyg,"I knew I was going to see something cool done with Typescript 4.1' template literal types, but a goddamn SQL DB and so fast... Impressive, very impressive",9.0
g6e3q6n,ix1zyg,fully jokerfied,1.0
g6h21x2,ix1zyg,That‚Äôs insane,1.0
g67j3io,iwwbv7,"Why are you mutating the `msg` variable instead of returning a value from `setValidator`?

Odd approach imho - I don't know if it's an unwritten rule or what, but mostly I consider hooks return values to be immutable - I've never seen a hook mutating a variable like in this example:
    
```
function Login(props) {
  const [data, setData] = useState({});
  const [msg, setValidator] = useValidate();
  
  const handleChange = (event) =&gt; {
    setData({
      ...data,
      [event.target.name]: event.target.value
    );
  }
  
  const handleSubmit = (event) =&gt; {
    event.preventDefault();
    setValidator(data, {
      email: 'required|email',
      password: 'required|string'
    }); 
    
    if(!msg) {
      alert('Great ‚úÖ');
    }
    
  }
  // ...
}
```",1.0
g62yhi5,iwwvaz,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g6415ix,iwppfz,"The website lags for me, too many particles I think.",2.0
g64aaea,iwppfz,I'm running a really bad GTX 1060 6GB and it seems fine.,0.0
g64fk85,iwppfz,"Well, normally you don't need a dedicated graphics card to read documentation, so it might still be nice to cater to even lower specs.",6.0
g64g2qw,iwppfz,I‚Äòd guess it runs in CPU anyway? So graphics card doesn‚Äòt matter,2.0
g64sv90,iwppfz,"You are right, most things are done on the CPU. You can create particles using WebGL shaders that utilize the GPU, see [here](http://guitarjawa.net/?page_id=955). GPU Particles are also extremely performant compared to CPU controlled ones.",1.0
g64uvb6,iwppfz,"I'd like to see the performance but the demo website isn't working, just a white page. WebGL is something I'd like to add to the project but I have other priorities at the moment.",1.0
g64ulnh,iwppfz,"Nice point, I think I'll add a toggle button to enable/disable particles animations",2.0
g61nsnn,iwp09h,"This year I have developed a growing interest in coding and software development. When it came time to choose a topic for my final research project at my university, I decided to conduct research about a local and interesting startup in New Zealand.

They collaboratively automize code reviews by enabling teams to discuss and code their own rules using a sophisticated engine for static code analysis.

Alongside interviews, I have also compiled a survey to explore how such prototype creates value for software development teams. I would like to invite you to participate in my research. Your professional input will be highly valuable for the research report and further development of this prototype.

If you are interested and want to know more, it takes ten minutes to complete my survey which provides further details. Your support would be immensely appreciated. 

Happy coding!",3.0
g6030nn,iwi4lb,"Hello! I am making a simple toy interpreter ([https://github.com/bergsans/crudelang](https://github.com/bergsans/crudelang)) wanting to learn more about interpreters and language design etc. (Have much to do and many bugs to deal with.) Does anyone share this interest? If yes, do you have any good learning resources to share?",3.0
g614yxa,iwi4lb,Actually yes I share this interest. I read Bob Nystrom's [Crafting Interpreters](http://www.craftinginterpreters.com/). I was also learning C++ at the time so [I ported his Java to C++](https://github.com/Jeff-Mott-OR/cpplox). It implements a language he named Lox that seems similar to JavaScript in syntax and features.,5.0
g62pe1g,iwi4lb,Thank you! I will look into this. Seems great! Cheers!,1.0
g604mpt,iwi4lb,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g5zdth0,iweofi,"Check out the [You don't know JS series on GitHub](https://github.com/getify/You-Dont-Know-JS)

Also here is an article about what [JavaScript course reddit is recommending](https://lukaszadam.com/blog/best-javascript-course#what-javascript-courses-does-reddit-recommend) the most.",6.0
g5zo809,iweofi,"i would highly recommend the MDN docs. they have a great and full js tutorial. they teach you the old ways and the modern ways of doing things. After you are done and have are gained practical experience, you can periodically check out their advanced js repository. 

You also have to figure out what format works for you... docs, books, videos, or lectures.",2.0
g6026dd,iweofi,"If you are starting from scratch, it's worth trying out https://www.w3schools.com/default.asp
It's all free and very user friendly.",0.0
g60ghtw,iweofi,"I wouldn't recommend W3Schools for learning JavaScript.

They don't have as bad of a reputation [as they used to](https://www.w3fools.com/), but a lot of their content hasn't been updated in quite some time, such as their [JavaScript Variables](https://www.w3schools.com/js/js_syntax.asp) section which makes no mention of `const` and `let`.

[javascript.info](https://javascript.info/) is a free resource with tons of good information.",2.0
g5zb4f7,iwef31,"In fact the improvements largely came from streamlining the BNF, which is now workable:

https://github.com/djalbat/yapp/blob/master/es6/parser/javascript.js

The readme file has been improved, too. Contributions are very welcome, not just for the JavaScript grammar but for any of the supported languages or indeed new plugins.",1.0
g5ycsb6,iw9qmh,"Great article, I'm using these methods when prototyping the front-end with ""backend-logic"" with nested object Arrays and id's. So far so good. 

I'll add the spread operator `...` is super, super handy for data normalization, working with Arrays and objects, it makes complex things easy once you understand how it works. Combined with newer methods like `flat()` (introduced in 2019) to convert an array of arrays into single array, managing data becomes easier than ever. 

Finally and not less important object destructuring, once your data becomes large &amp; nested you might want to avoid repeating all over the place

 `obj.arr[id].data.something`.


In this case you would destructure data like.


`const { something, age, name } = obj.arr[id].data`


Now you can reference just `something`, and you end up with a more readable and maintainable code.",13.0
g5ytzns,iw9qmh,Thank you for object destructuring.  I had started recognizing this pattern in a few places but wasn't sure what it was doing.,4.0
g5z0928,iw9qmh,"&gt; The sort method handles all of the movement of items around for you, and returns a brand new array

This is incorrect, the sort method sorts the array *in place* and returns the sorted array. In this case it modifies `results.items` as well as returning another reference to that same array. `.sort()` is pretty dangerous in that respect, unfortunately.",12.0
g5ykbak,iw9qmh,"    (a,b) =&gt; a.open_issues_count - b.open_issues_count

&amp;#x200B;

&gt;A value less than 0 means the first value is greater than the second, and should come before it in the order.  
&gt;  
&gt;A value of 0 means both values are equal.  
&gt;  
&gt;A value greater than 0 means the second value is greater than the first, and should come before it in the order.

a value less than 0 in your above mentioned function would mean that B is greater than A. so you got your description wrong.

Edit: still hasn't fixed it after 5 days.",6.0
g5yulfj,iw9qmh,Yes. That‚Äôs what I was thinking.,4.0
g61vzxt,iw9qmh,"a.k.a., how to use JS Array methods to handle data, plus a quick unrelated `await`ed call.",2.0
g5yz7hy,iw9qmh,"It's good to know tools to morph data from API to fit your needs, but in most cases it's much better to know how to persuade API developer to do it on backend.",2.0
g600l2w,iw9qmh,If a backend serves multiple clients they can't customize the data to the exact needs of each client. Often client side normalization is required in these cases.,2.0
g5zcfa2,iw9qmh,"Most times this is not the case, when you are doing both backend &amp; frontend. It could be a bit messy to do on the backend, it could mean adding extra api endpoints if you are using rest and just making the api harder to maintain &amp; understand. 

 On the other hand if you use GraphQL you can just grab the data you want and that's it, but it really depends on your needs.

And lastly if you are building a complex application on the frontend chances are you'll need to normalize data to fit your needs for instance. You have a file explorer, a tree viewer, and a project viewer with the same data. You may really want to make one api call and normalize data and then update the components.",3.0
g5ylxoa,iw9qmh,is it ok to use fetch in 2020 ? I think axios is better,0.0
g5yq3l1,iw9qmh,"I see axios the same was as people that still use jQuery. It's bloated and native functionality is good enough these days to not need it. 

Even if you needed any library, I'd much rather use one which confirms closely to the native specification so that it's easy to swap it out in the future.",7.0
g5ymxie,iw9qmh,"I've switched to fetch after using axios for a few years and I think it's great. I use Nextjs, so I use the pi node-fetch for server side code, works great!

Axios was annoying to configure, especially for CORS. And I think the project is mostly dead with very few commits nowadays.",11.0
g60v017,iw9qmh,"Axios has a lot of features that fetch doesn't have. It has better error handling, it's more concise because of it's built in json support, interceptors are incredibly useful, etc. There are probably a bunch of other differences I'm not aware of.

Calling it mostly dead is unfair I think. It's still being actively and well maintained.

Ultimately they both accomplish the same but given the choice I prefer axios. We have a lot of Node applications so using only 'native' functionality isn't a choice anyways and Axios seems to be a very well done implementation of a lot of features I'd have to write myself if I was using fetch.",1.0
g5yv5ro,iw9qmh,"With that point I could say, why use axios just use GraphQL. 

The point is that the post is oriented to show how to handle data with native js methods, so using plain js as example can help people with and without knowledge of the library.",2.0
g5z33p6,iw9qmh,"Native (and polyfills) will always be recommended over an external library with its own dependency tree. You never have to worry about what's going on with the package, maintenance, security concerns, compatibility, deprecations, code changes, etc. You should also worry about how entangled your code gets with external calls.

Also, you should weigh how much of the whole package you are actually using. If a small ,`util/fetch.js` file with two functions is enough for your use cases, that's a small amount of abstraction. A library that does everything can also be hard to split apart. For example, if you scripted by hand, you might want to use fetch for one thing and a different external JSON parser.  Using an external library should be a last resort thing, not something you do off the bat.",2.0
g5x8ith,iw6vaa,"Forgot to mention, PRs are highly appreciated. There's still a bunch of APIs to implement üòã",3.0
g5yb8lr,iw6vaa,"This looks really cool, but what is imgix, and how would this be used in an actual app?",4.0
g5ybk66,iw6vaa,"Imgix is an image CDN, but their pricing model is not not attractive. bildx is designed to work independently from your actual app, a separate thread, container or Linux box. All images are stored in a storage space where bildx reads from. There is still a lot to implement and improve. Feel free to star, fork and PR!",4.0
g60l1sg,iw6vaa,"I've actually found imgix quite affordable, but my usage is heavy on bandwidth not on master images. I'm assuming your use case must be the opposite?

Just curious. The main reason I'm using it is for the speed of their global CDN which seems hard to match with a custom setup.",1.0
g5yq5g3,iw6vaa,"I may be missing something, but for me a single thread language/framework doesn't sound like a good candidate for heavy CPU parallel tasks.",1.0
g5yqlrq,iw6vaa,"I absolutely agree. Node.js is super sensitive to anything that blocks the event loop: such as CPU-bound workload. Ideally, you can swap different processes or create a master/slave cluster. I'd personally use this for my future projects when I know paying for imgix is not worth it.",1.0
g5yrhns,iw6vaa,"I understand the motivation, I'd just use a different language / virtual machine than js.",1.0
g66006i,iw4w4z,"&gt;Among some JavaScript programmers it has become fashionable to  completely avoid classes and OOP because they think functional is  better. But given that you can‚Äôt do real functional programming in  JavaScript, completely avoiding OOP will only eliminate the advantages  of OOP while not gaining the benefits of pure functional style.

A voice of reason, React hooks, factory functions, and composing functions with side effects does not a functional style make. It's time for some honesty",3.0
g66kiyc,iw4w4z,Then use redux. There's also the experimental component suspense. Allowing you to declaratively handle asynchronous requests. https://reactjs.org/docs/concurrent-mode-suspense.html,1.0
g66lke1,iw4w4z,"Not a big fan of redux, but use it as an example

So I'll use redux and handle updates in a functional style, which is possible in JS and makes sense like the article says

But if some side-effects are needed, JS doesn't have a functional way of doing that, its FP features are quite limited

\- redux middleware (not functional, more like message passing, an OOP idea)

\- suspense - throwing stateful promises, not functional either",1.0
g66n4jd,iw4w4z,"I'm not quite sure how we're defining functional programming. IO, such as network requests are side-effects. Languages like Haskell are often called purely functional but they still provide a way to work with side-effects. 

If the tools I mentioned for handling side effects aren't considered functional, then how is it different from how Haskell is handling side-effects?",1.0
g66pzlr,iw4w4z,"I think the article just uses the regular definition, ""programs that consists of trees of expressions as opposed to statements.""

Haskell uses algebraic types (which JS lacks) to describe effects. All of that code is just pure expressions, that are lazily evaluated. The runtime itself is where effects happen. JS doesn't have a special runtime like that so the strategy when making part of the code functional, is create some boundary where effects happen within your code itself, like the article mentions.

Example, in redux you write pure reducers, but ultimately somewhere in the redux source there has to be some code that does state = reduce(currentState, newState). That happens in your code, not some special environment.

So with dispatch(fetchItems, opts), we're using an impure function to send a message that executes another impure function. Just like Singleton.fetchItems(opts). An OOP pattern. Using functions doesn't make it more functional. That seems to be what the article was getting at.",1.0
g66xo7h,iw4w4z,"The article seems to be complaining more about modern js runtime environments, and the browser's dom api than the language itself.

It also doesn't mention anything about React.js or hooks. As far as the inefficiency issues with writing functional JavaScript in the browser it's not a problem for 99% of developers. You're not usually dealing with giant datastructures in client side code where the additional memory cost of using array methods is a big problem. If it is there are libraries like immutable.js. The lack of tco is unfortunate, but again I have yet to run into a client-side problem where that was an issue.",1.0
g66ym3o,iw4w4z,"Yes, it doesn't mention hooks. I just meant that things like *""React hooks, factory functions, and composing functions with side effects""* are confused with ""functional programming"" just because they use functions. Sometimes it's better just to reach for OO than pretend to write functional code.",1.0
g687oll,iw4w4z,"From the article:

It turns out that FP languages such as Haskell have a system for dealing with functions that have side-effects, that neatly separates the part of the program that is pure and the part of the program that is impure (and does all the dirty work like updating the screen). Impure parts of the program is fenced off from the pure parts. Pure functions cannot call impure functions.
...
The important part here is keeping portions of your code that has side-effects separate ‚Äî and minimizing the amount of such code. If code that has side-effects is spread all over your program then you are not really using functional style.",1.0
g5uk40a,ivy3sa,"They are related but not the same. Firstly I‚Äôll say that AI is a bit of a buzzword these days, it‚Äôs always thrown around by tech startups to make it sound like they are cutting edge when they are not doing anything of the sort.

Anyway, **AI** is supposed to be about simulating human intelligence and decision making. But it‚Äôs often used as a synonym for **machine learning**, which is taking a bunch of past data and using that to make future decisions.

An **algorithm** is a set of instructions used to complete a task. It can be very simple - e.g. for checkers ‚Äúif the opponent places their piece diagonally opposite mine, take it‚Äù. Or an algorithm can incorporate machine learning - e.g. ‚Äúin the past 10 games, it was a winning love to do x, so do x now‚Äù. And every game it plays, it learns what works and what doesn‚Äôt and uses that for future games.

Hope that makes sense!

Edit: tbh I don‚Äôt know what your tutor means by saying to use AI, if you haven‚Äôt actually been taught about how AI/ML works. Probably your checkers example is the kind of thing they want.",8.0
g5v6rko,ivy3sa,[deleted],1.0
g5va9dm,ivy3sa,"Do they actually want you to *program* it? Or just ‚Äúthink‚Äù about it? Lol

 Well either way your checkers example is a good one. They‚Äôre probably thinking about a game CPU like you get in chess etc. Often they don‚Äôt use real AI but an algorithm (a set of rules) to choose the best move.",2.0
g5uxfw9,ivy3sa,Yeah ai would generally be better called automated decision making or something. Its just an algorithm/set of rules that can take in state and return some action to perform. There is no difference between a sedoku solver and a sedoku ai,3.0
g5v7idr,ivy3sa,https://marketbrief.edweek.org/wp-content/uploads/2018/07/iamdevloper_aiandifstatements_best2-880x464.png,3.0
g5whp7f,ivy3sa,"They are probably thinking state machines or morkolv chains? AI doesn‚Äôt exist, so, that‚Äôs a hell of a project assignment ü§£. You could probably fork a gpt-3 repo and play around a bit.",2.0
g5ver95,ivxmtz,"Where you have:
`document.getElementsByClassName(""search-box"")[0]`

You could have:
`document.querySelector("".search-box"")`

Which will stop at the first match rather than scanning the whole DOM and taking the first match from the array of matches. It'll be a lot more efficient in large DOM trees.",11.0
g609pmj,ivxmtz,"Either case these are less than 0.01ms operations so efficiency is not really a factor, but if you're going to get pedantic about it this is absolutely wrong.

Classes are cached. querySelector has to construct a query to search through the DOM, and in best case scenario would be able to reduce the query to a getElementsByClassName call. getElementsByClassName, despite getting all of the classes would be at least an order of magnitude faster than querySelector.",2.0
g6a2ycs,ivxmtz,TL;DR: Went from jQuery to vanilla. The end.,1.0
g5u546i,ivx0ga,"Project Page (?): https://github.com/jedzoka/plantiet

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g5u75mv,ivwsu1,"Most graphing libraries I've seen tend to be built using d3 (in whole or a subset of d3s modules), and either rendered to canvas or more popularly SVG.

&gt;I guess you must tell what each pixel should be colored every frame in a sort of custom rendering engine.

Not really. In the case of SVGs your building a DOM of 2d vector graphic elements and the browser handles how to render it. With canvas if you're using the 2d context, your basically building a set of instructions such as draw a circle or line at x, y in the canvas. I'm less familiar with using canvas with the webGL context, but my understanding is it functions similarly in that you provide it a set of 3d elements which can have shaders and textures applied to them.

All that being said you could build your own renderer in JavaScript that does it pixel by pixel like you said, but it wouldn't be nearly as optimised.",5.0
g5un7ex,ivwsu1,"This is the correct answer: the majority of complex data visualizations you see on the web today are either written in D3 directly, or in a D3 helper library (eg. NVD3).

There are plenty of basic ""here's a pie or bar chart"" libraries, but if it's something cool and 3D it's *likely* D3-based.",3.0
g5z3wyk,ivwsu1,"Uh, is D3 commonly used for 3D visualisations? All the examples of it I've seen are 2D despite the slightly confusing name. Ditto things built on it, like C3.js and NVD3.

Three.js seems more common in the 3D space.",1.0
g5zgw16,ivwsu1,"Sorry, when I said ""3d"" (in the context of talking about ""most graphing libraries""), I meant 2d visualizations that *look* 3d.

For *true* 3d (ie. you can move your mouse to look at the data from different angles in all three directions) you're right: D3 is probably not the best tool.",1.0
g5u4kwb,ivwsu1,Almost everything is built on the HTML5 Canvas element which is built in to the browser. You can use this directly to draw any 2d graphics very simply.,3.0
g5v1uhh,ivw5bt,"I‚Äôm a big fan of accountsjs

If you have a node graphql api and a react apollo frontend, it‚Äôs the goat",1.0
g5tniy4,ivtbq3,"Not exactly new:  being a Stage 4 proposal, most browsers already support it, even Safari.  TS has supported it for years, not sure why this wasn't an instant slam dunk in ES.

I do wish TC39 proposals had a history section like Java's JSRs.",120.0
g5toik0,ivtbq3,True fairly good support!,8.0
g5twfot,ivtbq3,"Definitely not something I had ever thought of, but now that it's brought up memories of too many or too few digits pop up and it makes sense.

And while underscores aren't any of the ways I can think of that people normally separate thousands, it makes sense to use something new so as to stop any need to ""localize"" it. could you imagine trying to support all the differing ways?",34.0
g5tzq3y,ivtbq3,"Yes a lot ways are supported, you can put underscores wherever you want then, even works with BigInt. you can find examples here https://github.com/tc39/proposal-numeric-separator",4.0
g5vucv1,ivtbq3,"Can someone explain the cents thing to me, I'm dumb? I'd think if you want to organise your cents in dollars you just use dollars with a decimal separator. If you have a niche use case and need to keep it in cents, why are you styling it in dollars?",1.0
g5w6x66,ivtbq3,"When working with currency, it's a best practice to ALWAYS use integers, as floating point math leads to imprecision and value drift over many operations. As an example, open your console and run `0.1 + 0.2`  and you'll see the answer is `0.30000000000000004.`

Using integers for currency solves this issue. You just use the first two digits to represent cents. The only time you ever convert it to a true decimal is when you're displaying it to the user, in which case you just divide the integer by 100.

If you're writing financial software, storing your values using floats is a rookie mistake that can lead to incredibly subtle and hard to track down bugs.",14.0
g5y4rp5,ivtbq3,"You are correct about floats. However using integers is also a rookie mistake. Although one can get away with that mistake if you are working with geographically localized project, something small like e commerce site, which supports only one currency.

Few reasons:

On any 32-bit system or windows systems (not sure about windows 10 though) max integer value is  \`2\_147\_483\_647\`. And there are currencies which has very small value per number. For example Belarusian ruble. That amount will equate to \`150 000\` EUR.

Secondly, what are you going to do with currencies which do not have 1/100 as fractions. Dinars (1/1000 fractions) and Yenna (no fractions at all) pops to mind.

There may also be cases when you should retain precision way beyond it's fraction parts. Typical use-case would be calculating commissions.

&amp;#x200B;

Conclussion, don't invent the wheel. Use money dedicated libraries which use precision math implementation. And store values in database as decimals with 6-16 precision.",4.0
g5zqk1s,ivtbq3,"&gt;On any 32-bit system or windows systems (not sure about windows 10 though) max integer value is \`2\_147\_483\_647\`. 

We live in a 64-bit world now. Unless you're running Windows XP, you never encounter MAXINT.

&amp;#x200B;

&gt;Secondly, what are you going to do with currencies which do not have 1/100 as fractions. Dinars (1/1000 fractions) and Yenna (no fractions at all) pops to mind.  
&gt;  
&gt;There may also be cases when you should retain precision way beyond it's fraction parts. Typical use-case would be calculating commissions.

Simply set aside however many digits of precision you need. In our system, we use 3 since we deal with bulk orders whose individual items are priced out to the hundredths place.

&amp;#x200B;

&gt;Conclussion, don't invent the wheel. Use money dedicated libraries which use precision math implementation.

If it's available, sure. Things get iffy when you need to exchange data between several languages/systems. In our case, Postgres, PHP, and JS. BigInt is a reliable format with great interop.

&amp;#x200B;

&gt;And store values in database as decimals with 6-16 precision 

As an aside, most DBs nowadays actually have a built-in type for this. Postgres, for instance, has the ""Money"" type.",2.0
g5wyqme,ivtbq3,Having written just enough code and database schemas you encounter the joy of floating point maths... you makes a ton of cents. And sense.,4.0
g5weps8,ivtbq3,Thank you for the thorough explanation! &lt;3,2.0
g5w6zup,ivtbq3,Floating point precision,2.0
g5wycyo,ivtbq3,"If you have a strip function you can just strip and then covert to int. I‚Äôve done it in python. 

ex:

an_int = int(‚Äú1,000,000‚Äù.strip(‚Äò,‚Äô))

Ok, so uglier, but if you wrote a simple function like:

def sint(seperatored_string_int):
    return int(seperatored_string_int.strip(‚Äò,‚Äô))

Of course this is pseudo-code because you‚Äôd probably want to make sure the end result did look like an int or raise an error, but the point is made.",0.0
g5vq6j4,ivtbq3,"This sold me: 

* `0b01010110_00111000`
* `0x40_76_38_6A_73`",17.0
g5wst4f,ivtbq3,"Oh wow, never even thought about this",3.0
g5tt70y,ivtbq3,This works in Node.js,12.0
g5tn4l1,ivtbq3,C# has had this since 7.0. PHP since 7.4. Yay.,28.0
g5xmglu,ivtbq3,Python has long had this as well.,6.0
g5xvt3p,ivtbq3,"I should know this, and I didn't :).",1.0
g5tt4qk,ivtbq3,Ruby has had it for a while as well.,8.0
g5yn9tz,ivtbq3,I've never seen this sorcery before,2.0
g5yp14f,ivtbq3,Yep.,1.0
g5zmvbi,ivtbq3,"But I wouldn't use it in my PHP code yet, as I try to be backwards-compatible a few versions back. For JavaScript I'm even less ""up to date"" so there's a good chance code runs on all browsers. In the case of JS it's of course not even available yet.

You can also write e.g. 5.46E9 for large numbers, making it short and sweet, but if you have many significant digits, a separator would still be useful.",1.0
g5tncrg,ivtbq3,"What's your point? Another language already has it therefore it isn't worth implementing, or it's not worth telling people that it's been implemented?",-50.0
g5to842,ivtbq3,"Based on the word ""yay"" at then end we can conclude that they are happy to see this feature in JavaScript. Why are you being so aggressive?",49.0
g5to3mj,ivtbq3,"No, rather that it's established practice, and the syntax is given.",20.0
g5usfol,ivtbq3,"I'm pretty sure Perl has had this since the 90s, but I'm glad it has made it's way into JS",3.0
g5uvved,ivtbq3,Look.  Perl is not invited to this conversation.,11.0
g5wsve5,ivtbq3,D:,3.0
g5wqq4f,ivtbq3,"I use it all the time. I didn‚Äôt even realize this was not in the standard yet.

I‚Äôve been using this syntax from the Perl days and just assumed it was a mature feature.",3.0
g5tz263,ivtbq3,Makes sense. Java already does this.,4.0
g5u00cj,ivtbq3,"This has been part of Ruby for years, it‚Äôs nice.",3.0
g5u7u9a,ivtbq3,Been in Ruby for years. Very handy!,2.0
g5u4cla,ivtbq3,[deleted],1.0
g5ua4z8,ivtbq3,Scientific notation already works in JavaScript.,3.0
g5uhyfh,ivtbq3,Nice very cool,1.0
g5y7vtz,ivtbq3,"I'm surprised enough people write out large numbers like this often enough for it to warrant this feature. 

I understand programs using large numbers but when does anybody ever write

let foo = 1343225908544;

?",1.0
g5y9sd6,ivtbq3,"Fairly often while prototyping and developing algorithms or working with algorithms that use magic numbers or large binary masks. Pretty much at least once a week for me. Also great if you're using javascript as a calculator, similar in spirit to mathematica or jupyter.",3.0
g5ya8ts,ivtbq3,"Ah, I understand. Interesting. Thank you.",1.0
g601163,ivtbq3,"Often during performance testing.

records_to_insert = 2_000_000;

I often write that as:

records_to_insert = 2 *10 ** 6;

But its harder to read.",1.0
g5uhn9s,ivtbq3,Souldn't this be resolved with UI desgn?,-2.0
g5wtm5q,ivtbq3,"I was under the impression that this was for developers' readability which in that case, does make it a UI design solution",4.0
g5uvnpi,ivtbq3,"You could parse it and change it in the IDE, but this change improves readability of plaintext",5.0
g5y2pj7,ivtbq3,1E6 or 1E9 for million or billion,0.0
g5y50ic,ivtbq3,So doing what DLang was doing many years ago...,0.0
g5tqv3y,ivtbq3,Can just be ide plugin though ü•¥,-17.0
g5v890i,ivtbq3,"https://en.wikipedia.org/wiki/Decimal_separator#Digit_grouping

&gt; The groups created by the delimiters tend to follow the use of the local language, which varies. In European languages, large numbers are read in groups of thousands, and the delimiter‚Äîwhich occurs every three digits when it is used‚Äîmay be called a ""thousands separator"". In East Asian cultures, particularly China, Japan, and Korea, large numbers are read in groups of myriads (10,000s) but the delimiter commonly separates every three digits. The Indian numbering system is somewhat more complex: it groups the rightmost three digits together (till the hundreds place) and thereafter groups by sets of two digits. For example. one trillion would thus be written as 10,00,00,00,00,000 or 10 kharab.

So, it depends on the context and the plugin wouldn't know anything about that.

Controlling the behavior via comments would be silly.",5.0
g5uncwk,ivtbq3,"No, there are way too many ways to view and edit the code to make this feasible as an editor feature. (any ide, browser dev tools, online text editors, notepad, ...)",2.0
g5tvu2l,ivtbq3,"Exactly. Plugins can make it look even better than this stupid "" \_ "". (They can format big number you write automatically to readable form which is more useful than counting trios of 0's from the end yourself and adding \_ )

Also, whats the point of having such a big number in code unless its some physics/mathematics copy-paste constant?

I mean It won't really hurt anything, but still. Says something about shipping near useless proposals without good enough filtering and thought....",-3.0
g5u2u1l,ivtbq3,I never even thought of using a plugin for that. Could you perhaps recommend a plugin that does this for VS Code?,3.0
g5vgsn6,ivtbq3,"Why not just write a function to parse a bigInt number. Into a more readable string for users to actually view?

Having a seperator in the actual database is going to cause issues. With freely interpreting it later on. 

But, if this can be used to *more easily* create better ""viewable"", on end-user, output. Then I can see its usage. 

I'd personally just stick to strings. Parsing b/w that and what output I'd like to result in. 

    1000000 === ""1,000,000""   

Or something as such.",-5.0
g5vinu5,ivtbq3,The point is code readability. I fail to see how this can be ‚Äúfreely interpreted.‚Äù,13.0
g5w6xgz,ivtbq3,"Freely interpreted by nature of having as low-level as you can get.

Less to get in the way of compiling at run, executing without error. And, easier Audits of your code in the future. 

By future engineers, operating under ""different"" standards. Within different circumstances.",0.0
g5vvgn2,ivtbq3,"&gt;dev.to/shubha...

when we store a number with the underscores, say   
\`\`\`  
let a = 1\_000\_000;  
\`\`\`  
Its the exact same thing as if we had written \`let a = 1000000\`. It just makes it easier for the programmers to read in the javascript file, that is the only difference.",8.0
g5w7v20,ivtbq3,"That sounds great then. 

What [about](https://i.imgur.com/hcV6BgH.png)

    ```js
    let a = 1_000_000;
    let x = a + ""5000"";
    
    console.log(x);
    ```

This throws an error. B/c its using it as an Identifier.",-1.0
g5w9vo7,ivtbq3,Where are you using it? Works fine for me in chrome.,4.0
g5wc01u,ivtbq3,"That's your linter (or whatever that is) throwing that error which would be updated to support this proposal...

As chrome already supports this, you can see it's exactly the same as writting it witout the underscores which are only there for readability ‚Äî for writing/reading code, not end users (see how much more quick it is to understand that the bottom number is one million) : https://imgur.com/a/Aza7CTY",3.0
g6013zl,ivtbq3,Nobody is talking about putting separators in databases. Why are you????,2.0
g5t0abe,ivr3xo,"I created a **highly customizable chrome productivity extension** called **ProTab**. You can design your own new tab layout with widgets and have easy access to all the productivity tools you will ever need. It has **tab manager**, **todos**, **notes**, **read laters**, **collections** and much more.

[https://getprotab.com/](https://getprotab.com/)",6.0
g5t2k8p,ivr3xo,I made a website called [AffiliateHero.io](https://affiliatehero.io) on which you can support creators or other people when buying products on amazon.,5.0
g5t2l0p,ivr3xo,"I made a live visualization of Twitch chat using D3. For any live stream you can check out top emotes, messages/emotes per second, realtime polls or just to visualize a really popular stream.

https://chatgraph.live",4.0
g6cc89l,ivr3xo,This is really cool. Good work!,1.0
g6chnbu,ivr3xo,Thanks!,1.0
g5ton0x,ivr3xo,"Here‚Äôs an open-source lightweight browser-based lecturing platform powered by WebRTC:

[liteboard.io](https://liteboard.io)

[github](https://github.com/jeverd/lecture-experience)",4.0
g5ttu41,ivr3xo,"I'm developing an open-source Discord Bot called [I.R.I.S. Utilities](https://iris-utilities.com/).

I.R.I.S. can play music, do fun stuff, and provide utility commands.

Unlike the big bots, I plan on keeping the code public!

https://github.com/MidSpike/iris-utilities/",3.0
g5zptz0,ivr3xo,Nice!,2.0
g601izk,ivr3xo,"I finally moved my hand-coded website to **Gatsby üéâ**

Original: [https://videohubapp.com/](https://videohubapp.com/)

GitHub: [https://github.com/whyboris/video-hub-app-public-website](https://github.com/whyboris/video-hub-app-public-website)

New: [https://vha.vercel.app/en/](https://vha.vercel.app/en/)

GitHub: [https://github.com/whyboris/video-hub-app-gatsby-website](https://github.com/whyboris/video-hub-app-gatsby-website)",2.0
g5tylrq,ivr3xo," Hello everyone, I have made a CLI tool to keep track of your soccer queries right in the terminal. It is a new project and I would love some people to use it and provide feedback as well as help me to improve it further. Feel free to open up any issues or PR if you like. Thank you. Happy coding! 

[https://www.npmjs.com/package/terminalfootball](https://www.npmjs.com/package/terminalfootball)",1.0
g621xif,ivr3xo,"I wrote a small notification module usong one of my most anticipiated JavaScript features private fields and methods. I'm torn around class style an object composition style, but when I go class I really like being able to lock down the APIs of my modules.

https://writingjavascript.com/lets-code-a-plain-javascript-notification-queue-using-private-fields-and-methods",1.0
g69h6cf,ivr3xo,"I created a [Turmite Explorer](https://observablehq.com/@mattdiamond/turmite-explorer) on Observable. I think ""Zippy"" is probably my favorite rule, but they're all pretty fun to watch.",1.0
g6ao0el,ivr3xo,"I've created **declarative style JavaScript PDF generator library**. Works on Node and the browser!!

[https://labelmake.jp/javascript-pdf-generator-library/](https://labelmake.jp/javascript-pdf-generator-library/)",1.0
g6byn0h,ivr3xo,"Collab with me!

Project Name: DonateGifts

Visit my live site at: https://donate-gifts.com (Thanks Patrick, fixed the SSL issue, now works without :443)

Overview: This project enables users to donate holiday/ birthday gifts to the children in foster care and orphanages --simply by clicking one button-- which will automatically add the child's wish item to the user's Amazon cart &amp; deliver to the child's address.

Tech: 
Node + Express + Mongo + jQuery + EJS + CSS

Disclaimer:
This is a non-profit volunteer project to help foster children. Join if you want to give back to the society using your skills. 
I have reached out to foster care agencies and a lot of them already expressed interest in signing up and using the app. 
I‚Äôm just one CS student and will be so grateful for any help or collaboration. 

I will share more details if you message me!",1.0
g6t3kor,ivr3xo,"Hey, is this open source? Would love to help out.

Edit: Saw your edit, DMed as well",2.0
g6t9mbu,ivr3xo,Yes you are welcome to join,1.0
g6ta4da,ivr3xo,Yes you are welcome to join,1.0
g6d82lb,ivr3xo,Would love to hear more about it. Also a CS student. I don't have that much free time but I would love to help where I can :D,1.0
g6df2b6,ivr3xo,"Awesome! If you are interested, send me a message!",1.0
g6cp3x0,ivr3xo,I wrote an application which run lighthouse on your applications and maintains a history of all the past data. https://github.com/akmittal/webaudit,1.0
g6dd8cu,ivr3xo,"hey üëã I created UNFOLD App's Text Editor [react-native-drag-text-editor](https://github.com/eneskarpuz/react-native-drag-text-editor) .It's a 

* draggable
* resizable
* editable text editor.",1.0
g5tfmg4,ivr1vq,"You could try URL.createObjectURL

var image=URL.createObjectURL(blob\_url);

That's what I do when uploading to Firebase.

You might need to make the path a blob first:

var myBlob=new Blob(url);",3.0
g5te0ya,ivr1vq,[This?](https://stackoverflow.com/questions/11876175/how-to-get-a-file-or-blob-from-an-object-url?lq=1),2.0
g5t41sc,ivqzzb,U had a little automatic scroll up when you reach the bottom. But this is a great job,2.0
g5t7uvt,ivqzzb,Thanks for the feedback. I‚Äôll try to fix it.,2.0
g5td8yw,ivqzzb,Looks great except for that massive contrasty slash that goes right through the otherwise readable text. Add a translucent backdrop to those large boxes or something so that the text is easier to read.,1.0
g5tor2u,ivqzzb,"Thanks. The screenshot is just to denote that the site supports dark mode theme as well. While browsing the actual site, there won‚Äôt be a text-dividing slash.",1.0
g5tvhsk,ivqzzb,"Ohhhh. Duh. I understand now. I actually kinda liked the big slash as a design element, aside from it going through the text, haha. But that makes more sense!",3.0
g5xnpv7,ivqzzb,looks great... maybe add some css transitions?,1.0
g5xwa8q,ivqzzb,Good idea. Any recommendations as to where you‚Äôd expect the transitions ?,1.0
g5xwri6,ivqzzb,perhaps to each article,2.0
g5sx1hs,ivqhea,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g5t0kdf,ivq27f,"Local storage has a simple API and is synchronous. Indexeddb has a more complex API and is asynchronous. 

For basic use cases where you aren't reading or writing very much, local storage is fine. For use cases where you will be handling lots of data or doing it frequently you should use Indexeddb to avoid jank. 


https://softwareengineering.stackexchange.com/questions/219953/how-is-localstorage-different-from-indexeddb#219964",19.0
g5tix43,ivq27f,"Additionally, indexeddb is a full database and has queries, tables, can store complex data types, etc.


Local storage only stores strings",7.0
g5te9ez,ivq27f,I use Dexie on my projects. It is basically a IndexedDB wrapper. It has very good documentation and quite powerful. Worth a try in my opinion,5.0
g5v1ujs,ivq27f,I use nedb. It's a database that has an API that mimmics mongodb and will either use local storage or indexeddb. So if a user doesn't have indexeddb support nedb will switch to localstorage.,1.0
g5th8gv,ivq27f,"I had some issues on the iPhone with IndexedDB using LocalForage, so I switched to LocalStorage.

If anyone is interested, the issue was:

UnknownError: Connection to Indexed Database server lost. Refresh the page to try again",2.0
g5thhap,ivq27f,"Thanks for the feedback

Can you remember how long ago this was?",1.0
g5tmtfz,ivq27f,"&gt;Can you remember how long ago this was?

I had this issue last week, on Safari 13.1.2 and 13.0.4, it affected 9 of 500 people.",2.0
g5tj79y,ivq27f,"Iphone historically has been behind on features.

It has indexeddb now though. I have a PWA, emberclear.io that uses indexeddb exclusively",1.0
g5tpe69,ivq27f,"LocalStorage is slightly faster and much simpler than IndexedDB.

I‚Äôd recommend using IndexedDB for large data, and LocalStorage for small amounts of data that you need synchronous access to.

The localStorage quota is \~5MB, IndexedDB does not.

If I can, I always prefer LocalStorage.",2.0
g5svh7c,ivq27f,"Bear in mind that browser security settings can also disable IndexedDB usage (I personally have that set in Firefox).

LocalStorage is also arguably less secure than Cookies for data storage.",3.0
g5svlej,ivq27f,why do you disable IndexedDB?,3.0
g5swpor,ivq27f,"In my case I think it's actually a consequence of using my browser in permanent private browsing mode.

Any security/privacy hardening guides for browsers also recommend disabling IndexedDB.

I'm not saying it's something you need to overly worry about, but it's something to be aware of if your site/app is dependent on using IndexedDB in some way.",2.0
g5swrw1,ivq27f,does disabling it cause many issues when you're browsing the web?,1.0
g5sx85r,ivq27f,"On the whole, no. There are some sites that just attempt to save or fetch something via the IndexedDB API, which then errors, and they're not handling that, so then the whole site just errors. That is fairly rare though.",2.0
g5sx9eu,ivq27f,"That's really interesting, thanks!",1.0
g5tjfgc,ivq27f,Some apps won't work at all,2.0
g5tjcfg,ivq27f,"That's a myth, and I hate people propagating this security concern. It's only a concern if you've been pwned, in which case you have bigger issues to worry about",3.0
g5t1914,ivq27f,"&gt; LocalStorage is also arguably less secure than Cookies for data storage.

Interesting... What led you to have this perspective?",2.0
g5t2sev,ivq27f,"That main thing is that LocalStorage can be read by any JS on the site, including scripts loaded from third party domains (such as ads, or analytics). So it makes LocalStorage a more viable entry point for XSS attacks. For example, if you stored a session/Auth token in localStorage, a Google analytics script on your site could access it if they wanted to, which they wouldn't be able to do with a cookie.

There are pros and cons though. Cookies have stricter size limits for instance, and it's also possible for the server to set cookies that JS can't access (a plus in my eyes).

I'm not saying you should always use cookies over LocalStorage - they each have their purpose - but it's worth knowing the differences about what can and can't access them.",10.0
g5tjitl,ivq27f,There is isolation per domain still,5.0
g5tr7k9,ivq27f,"Yeah, if your site allows cross site scripting, localStorage is only one issue.",1.0
g62pisc,ivq27f,Yes but anything that gets added to your site's dom accesses your site's localStorage (and can phone home with it),1.0
g634ddv,ivq27f,So then use a CSP.,1.0
g5yposs,ivq27f,"Do you need to write &amp; query lots of structured data? If yes, IndexedDB.

If no, localStorage will be easier. Usually you don‚Äôt want to use IndexedDB, for many reasons. It‚Äôs a lot more complicated because it‚Äôs a full-fledged database with indices and complex queries, whereas localStorage is a synchronous key value store and not really anything else. With IndexedDB, you need to do migrations or it will fail to open. With localStorage, if you change how you structure your data you‚Äôll handle it manually",1.0
g72bc2d,ivq27f,"IndexedDB is newer tech than localStorage so it‚Äôs got better thought of Functionality around use cases. 

For most stuff, and for most use cases prefer IndexedDB over localStorage. 

However there is one specific feature which localStorage provides which IndexedDB doesn‚Äôt and that‚Äôs the syncStorage (not actually  localStorage technically but mostly the same)

SyncStorage syncs all the data  across all your browsers as long as you are logged into an account (Mozilla/Google account).",1.0
g5t9ztj,ivovq6,The only thing I could think of is that the += forces the body to be reparsed and rerendered. Which means the canvas you were drawing on gets deleted from the DOM and replaced. I suggest looking into document.createElement and Element.appendChild etc. Using innerHTML is discouraged as it leads to undefined behavior like this.,1.0
g5stq08,ivoqdb,"When you progress as a developer, you start embracing your tools the longer you progress. We‚Äôre inherently cleverly lazy and try to automate what bores us and find ways to not make mistakes by having our work tested as we do it.

In this live session, join [Chris](https://twitter.com/codepo8) PM on the Edge team and [Marie](https://twitter.com/_mhoeger) software engineer on the Azure Function team, as they share and discuss ways to avoid repetition, get guidance on building things right rather than easy and share our favourite titbits of information about the tools we use. Found that one amazing keyboard shortcut that cuts your development time in half?

Realised you can set up a service to do boring or complex tasks like bundling and converting for you? This is the place to woo and share with others and learn about similar things.

Bring along¬†your questions and enthusiasm.¬†",0.0
g5st2f0,ivi0wd,"On performance deno is still behind node, am I wrong?",19.0
g5tcqu3,ivi0wd,"They're pretty close https://deno.land/benchmarks, usually within 10% by the graphs.

I think that's pretty impressive, being less than a year old vs a 10~ year project with a decade of optimisations &amp; work :), I assume we can expect it to match node performance in the future.",20.0
g5tjiyt,ivi0wd,"Isn't it just all V8 under the hood? Are there node-specific optimizations? Not trying to be facetious, I'm legitimately curious.",15.0
g5tqi7s,ivi0wd,"Node and Deno both have their own event loop. Deno adds a security/permissions layer. The importing of modules is different. Probably more than that. But yes, under the hood they're both V8.",10.0
g6cs0b7,ivi0wd,"There are also the core API, which makes use of native code for to interact with the host system. A good example of this is Node‚Äôs `fs` module.

Another use case for custom native code is for performance-sensitive functionality, like with Node‚Äôs `crypto` module.

Node mostly uses C++/C for this functionality, while Deno uses Rust.",2.0
g5yt6tc,ivi0wd,Both Node and Deno have their own HTTP servers IIRC; V8 does not do that. Some of the benchmarks focus on request performance.,1.0
g5tna1q,ivi0wd,Normally you don't use node for heavy computation anyway.,1.0
g5tpyfo,ivi0wd,"Performances don't have to be tied only to pure computation. For example, node http server is extremly efficient with some framework outputting some of the best performances out there (fastify). 

Plus, performance boost is always good, even when you're not number one.",5.0
g62oeas,ivi0wd,And climate friendly,1.0
g5txdpi,ivi0wd,Performance is also latency!,2.0
g5tqmno,ivi0wd,"Or if you do, you make a call to a c library asynchronously.",1.0
g5st8ip,ivi0wd,Watch mode and the WebSocket API look like such useful features!,6.0
g5ttt8q,ivi0wd,Fuck yes! Watch mode is definitely needed! Was missing this in my last deno attempt and made it almost unbearable,3.0
g5sappm,ivi0wd,Deno is slowly becoming the runtime Node should always have been,17.0
g5smzk0,ivi0wd,I mean... that *was* the stated purpose for creating it.,54.0
g5tn5xg,ivi0wd,I've tried Deno a couple of times now and both times had serious problems. Specifically around Deno's std library being broken and not working with TypeScript correctly. Has this improved?,3.0
g5y2pz1,ivi0wd,Being broken as in you didn't import the std version matching your Deno version?,1.0
g5sivuk,ivi0wd,Cool,1.0
g5sj6gw,ivi0wd,That‚Äôs still a thing?,-31.0
g5tqtlo,ivi0wd,"Yeah, who does this guy think he is? You don't just go and invent your own JavaScript runtime. We already have Node! /s",9.0
g5sqq4b,ivi0wd,Give it time,15.0
g5saq71,ivfws3,This is wicked!,2.0
g5szari,ivfws3,Thanks !,1.0
g5sjy0o,ivfws3,Great work,2.0
g5szayx,ivfws3,Thanks !,1.0
g5rd4y3,ivdamj,Those template string literals look sick.,8.0
g5tbvg5,ivdamj,"&gt; `jsx` and `jsxs`

what's `jsxs`?",1.0
g5ualfc,ivdamj,"I may be wrong here, but it looks like it's one of a few new alternatives to `React.createElement`, aimed to simplify element creation logic and improve optimization in production bundles. It is mentioned in [this React RFC](https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#always-pass-children-as-props) and it looks like React 17 [added support for targeting these new functions using separate bundles](https://github.com/facebook/react/pull/18299), which I think should enable better tree-shaking so that less development-specific code ends up in production bundles.

Again I could be wrong here as I hadn't heard of this either, but this is what I've gathered after a bit of research",2.0
g5v9zc8,ivdamj,"I took a look in React repo. Looks like some cryptic internal: [https://github.com/facebook/react/blob/90f8fe6f5509cab7d6d280b4ed17181697f394e9/packages/react/src/jsx/ReactJSX.js](https://github.com/facebook/react/blob/90f8fe6f5509cab7d6d280b4ed17181697f394e9/packages/react/src/jsx/ReactJSX.js). Which has been around for [definitely over a year](https://github.com/facebook/react/pull/16432/commits/1b07249c3bd6e628f28755135396a39e5e261f88), but I did not do any proper archaeology on the repo.",1.0
g5wswg9,ivdamj,"My understanding is that it relates to a potential future optimization, where the compiler can identify ""static"" elements and improve performance accordingly. Right now they are identical at runtime, but the JSX transformer separates them in preparation for this future.",2.0
g5q5v63,ivb9oa,"It's called `thing-adjuster`, It's my very first npm package, and if you've got a thing that needs adjusting, it'll adjust your thing.

I'm working on a web-crawler project, and I needed a way to increase/decrease the number of requests I send at once based on how hard Node's working. Node 14.10 introduced the `eventLoopUtilization` API, and so I wrote `thing-adjuster`.

If event-loop utilization is right where I want it, `adjuster()` returns `1`. If I should double my workload, it returns `2`. If I should halve my workload, it returns `0.5`. This is fine-tunable, so it can scale up slowly and down quickly if needed (50% up and 200% down are the defaults).

&gt; It doesn't technically return a number - it's an object that implements the `valueOf` function so you can treat it as a number, or access extra info if you need to, like the measurement of the metric

I realized this is probably more useful than just monitoring event loop utilization, so I made it a little more generic. If you have a variable (""thing"") that influences a metric, thing-adjuster can measure that metric and tell you how to adjust that variable. It works best if the thing and metric are linearly related, but they don't have to be. In the readme, I have an example where it measures hippo happiness in a zoo, and then adjusts how much the hippos are fed.

It could adjust the music volume at a party to keep the dB level constant, so if people are talking the music gets a little quieter. This is where the slow increase and rapid decrease is really nice.

It could (theoretically - and I wish it did) adjust the hot water knob in my shower to keep the temp constant while my hot water heater runs down.

The point is, in general, to adjust previously static variables / settings to adapt to changing real-world conditions.

My questions for the js community:

- Do you think people will use it?
- What other use cases could you think of?
- Is there a way I could describe it in a better way?
- Should I work on making it browser-compatible? (It's node only right now)

Any and all feedback is helpful. Thank you!",1.0
g5q51qk,ivau0h,"It really depends on what functionality you're going for. I doubt you'll use all the features in a single widget that an enterprise-level framework makes available to you. 

However, Preact is, thankfully, tiny. So if you're going to rely on a framework, that's a good option.",1.0
g5q7d2f,ivau0h,Agreed in terms of not needing the full kitchen sink. It will mostly just be layout/forms/auth/backend communication.,1.0
g5szsmw,ivau0h,"Using framework can help isolating your code but I don‚Äôt think that‚Äôs the main thing that will protect your code from interfering existing code. At the end of the day proper use of closure, exposing external configuration interface and scoping css selectors to the namespace only your app will use are the main things imo. (jQuery plugins are made this way so those are probably the best references you can try to mimic)

I have personally been successful in building an isolated interactive UI module using most.js reactive library and just plain css with proper scoping. If you want to use virtualdom lib like React or Preact I‚Äôd try to skip the build process and write components with hyperscript style (using handmade h function) rather than JSX - because build process adds a lot of additional code that is not really beneficial for consumer sites",1.0
g5q6u2i,iv9kf5,You will see articles such as this everywhere over this week and even next week.,84.0
g5szfin,iv9kf5,It‚Äôs not an article it‚Äôs literally the release notes.,7.0
g5qitns,iv9kf5,And a bunch of people that suddenly decide to learn it immediately.,13.0
g5qltkp,iv9kf5,Isn't that what happens when new versions of things come out?,41.0
g5qqy0n,iv9kf5,"Not necessarily a bad thing, tho. New features, new ways of doing things, etc.",16.0
g5qsu2c,iv9kf5,Definitely! In this case especially since you can use composition with Vue 2 with an extra plugin if you decide not fully upgrade or you can't on a certain project.,6.0
g5rqlht,iv9kf5,"""Why VueJS 3.0 is Going to Eviscerate React""",19.0
g5s777z,iv9kf5,Best of luck to it.,8.0
g5stx14,iv9kf5,"Why Vue 3.0 Leaves No Reason to Continue Using Svelte

Because relevance is meaningless if you use trendy/eccentric libraries in your article.",5.0
g5s1l1k,iv9kf5,Why is that bad?,5.0
g5s8c4z,iv9kf5,"And as a result, a bunch of youtubers suddenly making content on it. At the end of the day, will attract more people to learn it. The circle is complete.",3.0
g5qqvy0,iv9kf5,"Better than learning react, though.",-14.0
g5tnu1v,iv9kf5,"That's... Cool, I guess? Aren't we all here because we find this stuff interesting?",2.0
g5q89v9,iv9kf5,"I had a little fit because I just started feeling comfortable with Vue 2...but it looks like the transition is only good things with very little to learn.

So yay.",29.0
g5qd2yz,iv9kf5,"Yeah, shouldn't be too heavy. Sounds like a pretty good time for you to keep expanding anyway.",12.0
g5sppcz,iv9kf5,"Every web developer, every single day: ""ARGH GOD DAMN IT, now I HAVE TO adapt to a tool that is better than the one I previously used! Shit!""",2.0
g5qgjld,iv9kf5,"Still not entirely sold on the composition API

But I'm looking forward to seeing a real world app with it",18.0
g5qm07a,iv9kf5,We've been using it for quite some time. I really like it.,16.0
g5z4ix5,iv9kf5,For what kind of things?,2.0
g5totzm,iv9kf5,I wasn't either until I used it. With the short hand `&lt;script setup&gt;` syntax is especially great for mixins (need vue-loader v16 currently in beta). And if your code base is TypeScript it's got the best type safety.,1.0
g5q5jnp,iv9kf5,"God damn it, now I have to change everything all over again",36.0
g5q7ik2,iv9kf5,You don't _have_ to; I'm pretty sure it's mostly (if not entirely) backwards compatible. But you might _want_ to.,49.0
g5t69to,iv9kf5,"That's not how it works unfortunately. Eventually everyone will start using new features, then the libraries will start demanding that you use newer features and then eventually sooner or later you'll have to move your code to the new pattern.",3.0
g5qfktu,iv9kf5,The last major update was 2 years ago... and you don‚Äôt have to update if you don‚Äôt want to.,26.0
g5qmogw,iv9kf5,"""You don't have to stay current if you don't want to"".",-29.0
g5qnzn5,iv9kf5,"Uh, yeah? Not sure what your point is.

Multi-billion dollar companies still run jQuery because chasing every new update and technology is not only silly and foolhardy but also expensive.",35.0
g5t3k1s,iv9kf5,"I‚Äôm thinking they must have meant staying ‚Äúprofessionally‚Äù current, because otherwise your point is exactly correct about production environments.",1.0
g5qplms,iv9kf5,"Do people actually keep projects current? We usually stick to latest minor version of whatever the version is when we start. I've worked on an AngularJS 1.5.x project today. Before you say ""oh man I'm sorry"" - it's a very stable, known thing and really easy to maintain.",3.0
g5q9rru,iv9kf5,"People before the release:
*This is taking really long*

People after the release:
*God damn it, now I have to change everything all over again*",82.0
g5ssf4i,iv9kf5,Different people though,10.0
g5qoj7w,iv9kf5,"Even if you update, pretty much 99% of what‚Äôs in Vue 2 will still work in Vue 3!",8.0
g5qg347,iv9kf5,Frontend development in a nutshell.,11.0
g5qc49f,iv9kf5,"Looking at the docs, my first impression is that the Vue author liked the React Hooks API, then decided to rewrite Vue from scratch in order to accomodate it.",14.0
g5qejy4,iv9kf5,"Well Typescript was always kind of a touchy subject with Vue and the functional API helps accommodate better Typescript support. I think that was the main driver.

But really Vue ""hooks"" don't actually even behave very similar to React hooks in that in Vue they're called once during the setup function and that's it, then you basically boot into a reactive component like normal. With React they're actually much more complicated in that they're called on every render and keep hidden closure state, so they have some weird edge cases, gotchas, and rely on more framework magic. I think ""hooks"" actually accommodate the Vue model better so I'm not surprised Evan kinda dove in head first.",51.0
g5qg6gp,iv9kf5,"Exactly this. In the announcement today he basically admitted to being inspired by hooks and he played around with it during the development of Vue , but that he was able to make a version of ""hooks"" that fit better within Vue and its reactivity system. Not that it *is* better but that it suits Vue more",20.0
g5sjs5s,iv9kf5,It is better. No need to sugarcoat it. Fact that it's decoupled from render cycle unlike in React makes it more flexible tool.,11.0
g5sn60u,iv9kf5,"While I understand the negative knee jerk reactions in relation to framework comparisons, probably due to being scared of supposed framework flamewars, trying to dismiss conversations about architecture on the of chance that it might be difficult or uncomfortable to handle is infantile.

I do most of my work in React. And have my fair share of building non trivial front ends, namely, graphical richly interactive tools. 

And yes, I can say that in fact, composition API is better, because it's decoupled from framework to a language primitive which is accessible anywhere in your application, unlike react hooks. Which makes it more versatile.

Now reactivity is something open for discussion obviously, but when you have a choice between tightly coupled vs loosly coupled, but cohesive the second is better.",7.0
g5s01ie,iv9kf5,Getting called multiple times and having closure is kind of the opposite of framework magic.,-5.0
g5skcmm,iv9kf5,"Do you know how they work? It sounds like you don't, and I don't blame you because the behavior is not what you would expect from a standard closure, a.k.a they behave magically. They also can only be called or work correctly inside of a react render function, hence framework magic.

The closures track external state managed by the framework to know which component is currently being rendered to know which state it has access to, and then they use counters to track which hooks are currently firing in the component. So they use call order to determine the proper hook state (which is why you can't use hooks inside conditional statements without errors). It's pretty unique behavior to React, if you want to use something like hooks outside React you need to use a completely different implementation, like [TNG-hooks](https://github.com/getify/TNG-Hooks).

This is in stark contrast to vue where, from what I've read, they can be used in or outside a vue component (unless you're talking about something like a lifecycle hook which, of course, needs a component) and there isn't anything magical about how they work (unless you consider the reactivity magic, which it kinda is; but it is not unique to Vue).",3.0
g5qjbi2,iv9kf5,"When the React Hooks API was first announced Evan had a twitter thread about the potential for that API in Vue.

The plans for how the API would integrate with Vue has changed. Should it be a plugin or replace current Component definition or be an advanced option.

I am quite happy with how the Vue RFC process has worked. It produced well reasoned decisions with input from the community.  

I believe that the move to rewrite Vue had more to do with cleaning up internal rendering API, and formalizing that API. That let's projects like vue native can target other rendering backends then just web browsers.",7.0
g5qjylj,iv9kf5,"Speaking of React, what do Vue users here prefer about Vue over React? I used Vue before I used React, but I think I like React a lot better now.",11.0
g5qlx9a,iv9kf5,"&gt; Speaking of React, what do Vue users here prefer about Vue over React?

The guys I know are simply used to HTML templates, so they feel more comfortable with Vue templates (the old ""JSX sucks"" rant).",19.0
g5qn79j,iv9kf5,"Interesting. The reason I _like_ React is because it lets you use more ‚Äòstandard‚Äô HTML, rather than a bunch of proprietary attributes and pseudo-HTML XML type syntax.",15.0
g5r8so4,iv9kf5,"&gt; pseudo-HTML XML type syntax.

Isn't that exactly what JSX is? You're not writing HTML at all, you're writing embedded-pseudo-XML that is transpiled to JavaScript. Surely things like the need to avoid keywords like `class` and the clearly not XML/HTML compatible access of JS in elements like `&lt;input className=""foo"" type=""radio"" checked={this.checked} /&gt;` are a dead giveaway that you are far from writing ""standard"" html?",18.0
g5re1ob,iv9kf5,"I guess that‚Äôs fair, but it‚Äôs a lot closer to standard HTML by virtue of not trying to incorporate programming logic into the XML markup.",8.0
g5t6aen,iv9kf5,"`&lt;p v-if=""that feels more standard to you than className"" @:focus=""good-riddance"" /&gt;`",-1.0
g5rcmy2,iv9kf5,JSX is literally pseudo-HTML syntax....,5.0
g5tgx0c,iv9kf5,"It's not really about the fact that is it is a template. With react you use javascript to control the template. With a framework like vue/angular, you write in a magic embedded dsl.

In templating languages you need to know the arcane incantation to summon forth the templating magic genie, (asp-for, *ngFor, v-for). This templating language is often an adhoc programming language and can be difficult to debug.

In react, if you need to loop you use map. The jsx is 'dumb', it is more like a html literal with interpolation. You could write it in the functional style, the dsl is just a translation of that function composition tree. If you've ever use elm or flutter, you've seen how react does the same thing under the hood.

This is covered, along with many of other reasons in one of the foundational talks for react if you haven't seen it: https://www.youtube.com/watch?v=x7cQ3mrcKaY",1.0
g5ta33v,iv9kf5,How is VUE templates not standard HTML when you don't even have to compile them?,0.0
g5rke52,iv9kf5,JSX broke with a standard. But you can still use it in Vue as well. Many do.,2.0
g5qwnbx,iv9kf5,"&gt; simply used to HTML templates

you say that as if there are no benefits to templating over JSX when there are plenty of reasons to prefer it. the primary reason for me is the simplistic DSL while still being powerful enough to do most things easily; in many ways simple is better to both people (clean consistent code across projects and developers) and compilers (performance benefits).",3.0
g5y38ye,iv9kf5,They said nothing of the sort. They simply stated a fact. Designers who work only in HTML and CSS find it Vue template syntax easier to grok,1.0
g5qnfer,iv9kf5,I use laravel every day and it heavily supports vue. React and vue are both perfectly fine frameworks and equally competent. If I used node over laravel I‚Äôd probably use react over vue. So it just depends what stack you are using and what employers is most common with employers in your area,8.0
g5qw7yj,iv9kf5,"I've used both for a number of years.

Vue is more pragmatic than React but much less elegant. It's also easier for beginners.

Another advantage it has over React is that it can easily be integrated in a typical SSR project (PHP, Rails, Django, etc) as a modern jQuery replacement, so to speak. You can use it without any build setup or heavy JS skills.

Honestly, I think Vue is a great gateway into reactive components, but if you're an experienced React dev it might not make much sense to switch.

Personally I'm enjoying working with Svelte a lot more, although it has a number of drawback which might not make it suitable for all use cases.",6.0
g5rk6it,iv9kf5,"Now I am curious, would you list a few things side by side where you think Vue is ""less elegant"" than React?

I have been doing React for years but in the past 2 years almost 100% Vue only. To me they are very similar in many ways, but what sold me to Vue is its much easier learning curve, very straight forward and less complex in general.

I think they are both elegant in many ways.",5.0
g5tryol,iv9kf5,"Obviously it's very subjective, but for example the way you configure components. With React it's either a function or a class, these are pure language features. With Vue you use this ugly custom object with so many arbitrary ways of declaring things (computed, watchers, etc).

Also, JSX, seems much more elegant than Vue's template format.

OTOH I think Vue is very pragmatic and does a lot of things for you, but I wouldn't classify this as elegant. React tends to be more verbose and it forces you to understand stuff like `this` but for the most part it's JavaScript knowledge not React knowledge. Unlike Vue which is full of custom abstractions and grand narratives.",3.0
g5twq6r,iv9kf5,"You are right about ultimately being subjective, that is definitely true with almost everything. I see the point about JSX, but ultimately each one of us has to decide where to compromise. Ultimately I think they are both great frameworks, and I am not one of those people who takes it religiously. I can work with either, or even other frameworks if necessary.",1.0
g5tx0na,iv9kf5,Oh yeah both are great and will allow you to do the job. It's a matter of picking the one you personally prefer.,2.0
g5qxrif,iv9kf5,"Interesting insight, thanks.",2.0
g60stid,iv9kf5,"\&gt; although it has a number of drawback which might not make it suitable for all use cases.  


Do you have some examples? They have fixed all problems I had recently, right after adding support for typescript",1.0
g60y8yi,iv9kf5,The biggest one is the lack of popularity. This means its very difficult to hire people and the ecosystem is minuscule.,2.0
g612b3o,iv9kf5,"But it's so fast to learn, you can hire a random vue dev and train them in a week.  


How big of a problem is the ecosystem size in practice? Do you mean component libraries?",2.0
g63var0,iv9kf5,"&gt; How big of a problem is the ecosystem size in practice? Do you mean component libraries?

I guess it depends on your needs.

For example, there are a couple of routers for SPA but when looking for one we ended up doing our own because none supported the features we wanted. There is no SSR framework like Next (Sapper is not really SSR as it becomes SPA after the first request). Etc.",1.0
g645rgr,iv9kf5,"Great answer, thanks",1.0
g5qotxa,iv9kf5,"I like the ecosystem around vue for a really wonderful dev experience. (cli, plugins, router, dev tools)

The vue cli + ui with plugins make it extremely easy to get a project up and running.",4.0
g5rl83s,iv9kf5,Ditto!,1.0
g5r4dl1,iv9kf5,"I also switched to react, mainly because of a job but also because the ecosystem is just better. What I saw in Vue.js with Single-File components (SFC) is a clear structure. Developers new to frontend had an easier time to learn Vue.js in comparison to react because of the opinionated design (see Vue.js guide: https://vuejs.org/v2/guide/). Html, css and js was still completely strict and divided. No mixing of styles. I see a lot of newer react dev's putting in line styles, or state in the wrong places. With vue there were simple and opionated rules to follow. Typescript support was mehh but to be honest the SFC made up for it.

I think the general picture with the introduction of hooks in react made the state managing a lot easier to comprehend for new dev's. And pair it with TypeScript and styled-components and it looks similar to Vue.js SFC. And I guess that's the stack for most of the teams right now + will evolve the next year's. It always reminds me back on the early Vue.js 2 days. Personally did not really look at Vue.js 3 yet but I hope I can try it next week's somehow. Do not really understand the usage of hooks because computed properties were amazing by itself. But yeah let's see ü§∑",2.0
g5rl47y,iv9kf5,"So you are saying Vue is ""opinionated"" because it lets you use standard html, it is more readable and easier to maintain, etc, but React with JSX that requires you to break from the Html standards (class vs className etc.) is not ""opinionated""?

I am confused sorry.

(btw I think they are both great frameworks and have their place, but simpler and convenient usually wins overtime so I would keep an eye on Vue if I was you)",6.0
g5srhop,iv9kf5,"good old standard html v-on:\[eventName\]=""doSomething"" v-bind:class=""{ active: isActive, 'text-danger': hasError }"" v-bind:\[attributeName\]=""url"" @\[event\]=""doSomething"" &lt;li v-for=""item in items"" :key=""item.message""&gt;

jsx is not html, it represents a vdom, basically the same as if you'd construct your view with createElement calls. className is the [official dom api](https://developer.mozilla.org/en-US/docs/Web/API/Element/className). you can use ""class"" in react just fine, but ""class"" is a reserved keyword in javascript.

as for simplicity, reacts api surface spans 5-6 functions. jsx is a semantic. the whole framework can be learned by looking over a small example once. react is just view=function(state), and that's certainly why it's that popular. we're keeping out an eye on vue for over 6 years now, though it seems to me all it does is adding more complexity. it kind of does everything now: classes, functions, jsx, templates, hooks, lifecycles - is there any sort of vision?",3.0
g5su60u,iv9kf5,"I've never heard anybody claim that it's a bad thing for a library (and in the case of Vue, mainly its development environment) to support many styles and paradigms. What it means in practice is that you can pick a style that fits you/the team best, and then stick to it. The core concepts remain the same, but you get to choose your own flavor.",2.0
g5tb2zl,iv9kf5,v-bind:class can just be :class and the logic you have inside there for 'active' can (and should) be returned by a single computed property (this is also a good practice in React or any other framework with declarative bindings),1.0
g5st3oy,iv9kf5,"I don't know what the above comment (which you replied to) was about, but I definitely think Vue is an opinionated framework when compared to React which feels more like a low level library.
 
For example Vue tells you exactly how to style your components and route between views, whereas in React world you have 200 different options for styling and similarly for routing.",0.0
g5t1inu,iv9kf5,Vue has the best CSS in JS support with very little effort.,1.0
g5qmt9i,iv9kf5,"Which is crazy, because hooks are an abomination.",-5.0
g5tpgpd,iv9kf5,"I would miss $on, $off and (especially) $once...",2.0
g5qeo07,iv9kf5,"Good, now I can't feel bad about forgetting everything I learned about VueJS 2.0 3 years ago.",5.0
g5qoz95,iv9kf5,You May Not Need React in 2020.,7.0
g5t6jpp,iv9kf5,But your boss will.,6.0
g5sanei,iv9kf5,Noob here but what's does this mean.,1.0
g5svuaw,iv9kf5,"Congrats on a seemingly huge release and kudos for at least trying to get over its worst parts.  Which will never happen, period. Tech-savvy shops will probably have zero issues migrating and adapting, but everybody else will have a hard time getting it right, because for years Vue was the reason why frontend devs had always an excuse to not question their most brutal anti-patterns. It was methadon for Angular junkies: Not deadly enough to kill you, but just enough of a fix to never have to address the main problems in the first place.",-1.0
g5swn8d,iv9kf5,"Savage, but a fair warning for the future.",1.0
g5qi7hb,iv9kf5,"What does Vue bring to the table that others don't, there too many dang frameworks now.",-6.0
g5qlbop,iv9kf5,"If you're looking for a job, jQuery, Angular, or React are what employers are looking for as far as JavaScript libraries/frameworks",-19.0
g5qlspf,iv9kf5,I mean that's not necessarily true. There are a decent amount of Vue jobs out there. My current job is building enterprise Vue apps and my previous job also heavily used Vue. Sure they're not as plentiful as Reach but there's a good amount of them.,5.0
g5qr598,iv9kf5,"jQuery? rly? I've never seen a job offer in 2020 that requires devs to know jQuery. Most of them require the devs to be familiar with Angular, Vue or React(no specific one).",-1.0
g5qy1ut,iv9kf5,"Yeah, it's still used widely at a lot of companies. I work with jQuery for older apps at my office. Our latest stuff is using Angular.",6.0
g5qv4vz,iv9kf5,"Yes I'm a senior dev proficient in most of the main frameworks. I still like ionic with angular the best so far. 

React is ok but that community has drunk the kool aid, and it's just a small library that requires lots of third party support.

Polymer looked kinda cool but it's gone quiet.

The original Vue just didn't look good, now Vue and Svelte have started showing up on job boards lately. I'm getting old and learning new things is effort.",-2.0
g5qris9,iv9kf5,[deleted],-5.0
g5rb5gd,iv9kf5,"If compare to React hooks, methods to solve race conditions should be similar in both. Or am I missing something?",3.0
g5qsxg7,iv9kf5,Ah yes....one more thing to add to the list of stuffs to shove up my ass....,-18.0
g5r7amz,iv9kf5,"Sounds like a fun afternoon, how deep is that... list",11.0
g5qd5re,iv9kf5,"Ah, just in time when developers are starting to realize that React Hooks were a bad idea after all.",-19.0
g5qep8w,iv9kf5,Can you elaborate on some of those reasons?,15.0
g5qt6j8,iv9kf5,"Yes, sure. In the grand scheme of things, it is easier to write badly designed components with hooks. There are quite a few non-obvious particularities that increase the learning curve and might be missed by the beginners.

Hooks turn synchronous code into a mixture of sync and async code with side effect.  Designing components properly with hooks requires more architectural thinking. Wrong decisions at this stage will lead to errors that are more difficult to fix. In the real world, not all of the code is written by senior developers and such problems can slip through the review process.

Here is [an article](https://blog.logrocket.com/frustrations-with-react-hooks/) that elaborates about some frustrations that Hooks can cause. Be sure to read the comments.

All in all, technologies go back and forth, though this movement is sometimes hidden under revolutionary ideas that supersede previous revolutionary ideas.",12.0
g69ccbq,iv9kf5,"Perhaps coding it in vue 3 composition API would help? I mean, your component's setup function  is literally called at created, no more. yet you still have everything what react hooks offer...",1.0
g5rsv8m,iv9kf5,Heaven forbid to engage in 'architectural thinking'. FFS are you a software engineer or not?,-4.0
g5qeto6,iv9kf5,"Please find me one tweet from the last year advocating to go back to classes and lifecycles. Don't worry, I wont wait around.",20.0
g5qrapp,iv9kf5,Why do you think hooks are a bad idea?,3.0
g5s0xjk,iv99jl,Any article talking about migrating away from moment that doesn't include the built in Intl as an option already loses credibility for me... It can't do everything moment can is likely enough for most people,2.0
g5saw4b,iv99jl,"Builtin \`Date\` \`Intl\` object are a little tedious to use,  maybe a few years later, there will be a new wrapper library base on \`Date\` \`Intl\`, and become the new ""moment.js""",1.0
g5sb6cm,iv99jl,You mean like Luxon?,2.0
g5sho8l,iv99jl,"yes,  but with a more uniform api design, luxon's API feels not enough wrapping for me, unintuitive at the first glance.",1.0
g5y8ho5,iv99jl,"My biggest issue with migrating away from
Moment is the time zone support that it provides. I can‚Äôt find any good alternative!",1.0
g61za2j,iv99jl,"&gt;My biggest issue with migrating away from Moment is the time zone support that it provides. I can‚Äôt find any good alternative!

Time zone support should be pretty mature for those libraries, may i ask the specify issue you encountered?",1.0
g5pf4jx,iv376z,"If browsers vendors had just picked, wouldn‚Äôt we just be stuck in outdated  patterns with some implementation of angular 1 made into activeX controls?  How best to create, integrate, and reuse components is constantly evolving and new frameworks are bringing these changing ideas to life.",26.0
g5pk01q,iv376z,There were a few Web Component proposals that had this feel to them around templating. They never passed being too opinionated. I think it's dangerous to equate the platform and libraries/Frameworks. The last thing you want us to be fighting outdated opinions at the core of what you are doing.,3.0
g5padk4,iv376z,The callback based variant of String.prototype.replace being slow is no surprise in hindsight. I encountered a [similar bottleneck in JSDOM's `.tagName`](https://github.com/jsdom/jsdom/pull/3008) which also uses replace callback based.,7.0
g5paya6,iv376z,"I need another JavaScript framework, like I need another pair of socks.  Really wish JavaScript and the browser vendors would just pick one of these things and incorporate directly I to the engine of the browser.

I don't understand the fascination with JavaScript developers keep on re-inventing  the fckn wheel. Sure there's some value to these frameworks, but I've worked on enough projects with older outdated non supported frameworks (cough Angular 1) to know the technical debt they incur once their shiny glossy appeal wears thin. Then it's just a crap load of code that breaks all over the place (because the framework is abandoned and hasnt kept up with browser standards) and often times it's just easier to rip out the whole thing and start fresh...kinda defeats the whole framework reusability concept.

Let's stick to minimal frameworks or just add some  barebones framework to the browser. Frameworks are nothing more than higher level abstraction  for common patterns, if they're common enough let's bake them into the browser.

Remember back in the day when you needed like 20-30 lines to do. javascript date/time picker, but today its like 
`&lt;input type='date' Id=d1 &gt;` .. yeah something like that.",42.0
g5pke6o,iv376z,Look at this guy having enough socks.,56.0
g5pzz35,iv376z,"He doesn't need socks because he's ""integrated the solution into core"" i.e. sewn fabric on his feet",12.0
g62omwb,iv376z,Morbid,2.0
g6czccw,iv376z,It‚Äôs only morbid if you die first.,1.0
g5pld3k,iv376z,"&gt; I don't understand the fascination with JavaScript developers keep on re-inventing the fckn wheel

&gt; often times it's just easier to rip out the whole thing and start fresh",11.0
g5pmhxb,iv376z,"I see your point , but my use case is   generally out of desperation, not out of amusement",3.0
g5putsj,iv376z,I await your brand new *DDD JS library* (Desperation Driven Development),3.0
g5qs4u7,iv376z,"Honestly the fact that there are so many choices is probably a good problem to have. Like...there's so many different ways to tackle the same problems, ya know?",2.0
g5pq0gl,iv376z,"&gt;	Remember back in the day when you needed like 20-30 lines to do. javascript date/time picker, but today its like _&amp;lt;input type='date' Id=d1 &amp;gt;_ .. yeah something like that.

Yeah, Safari probably wants a word with you. Cross browser and legacy browser support is one of the reason why we often need frameworks. Not everyone has the luxury of only support the latest Chrome or Firefox",11.0
g5pb4tz,iv376z,They did. It's called web components.,16.0
g5piekx,iv376z,"WebComponents are an interesting topic. As a long time proponent (I started Solid to be a WebComponents library), I have a few thoughts coming out the other side. https://dev.to/ryansolid/maybe-web-components-are-not-the-future-hfh",5.0
g62p82d,iv376z,I think that web components have sort of found its use case in design systems.,1.0
g5pdwcc,iv376z,"Right, but it's browser support is still a bit flaky , and if web components were so popular where are all the web components repositories and interest? 

I would love it if there was a GitHub like repo of popular web components which I could just integrate into my project, but sadly no, sure there's https://www.webcomponents.org/ but the selection of components is very slim.",8.0
g5pepia,iv376z,"&gt;popular where are all the web components repositories and interest

one popular is stenciljs

But i got your point, i would love to see webcomponents gaining more acceptance",7.0
g5pi1yk,iv376z,"This means that if you learn how to build WCs now, you could be building the soon to be popular ones. üòé",5.0
g5pqyjt,iv376z,https://github.com/ing-bank/lion,2.0
g5q5noa,iv376z,"Found another:
https://github.com/material-components/material-components-web-components

Your point still remains valid. There‚Äôs not many of these and they aren‚Äôt as popular as any ole dumb React component libs",1.0
g5phvbq,iv376z,"Heavily support this.  Switched from
React to WC a while back and never looking back.",3.0
g5poeu7,iv376z,Do you write plain web components or do you use the Polymer Project or StencilJS?,3.0
g5qm6so,iv376z,plain JS! The only 3rd party libs Im using are webpack and babel.,1.0
g5tr0de,iv376z,"How do you deal with the WC templating? I guess using interpolated strings helps with the dynamic nature of the HTML. I personally always disliked that, and the overall WC API. I feel like a lot of improvements are needed, but that's just my opinion",1.0
g5vue49,iv376z,"At first, I was using literals, but then i switched to creating nodes. and assigning properties.  Once i did this i stopped using a majority of the WC api (with the exception of connected/disconnected callbacks to open/close data streams.

I think the biggest issue the understanding what a wc's scope should be. Ive expanded that scope from initially building individual elements, to any template-level component, or view.

WCs at the moment though have very bad CSS support.  almost enough for me to hate them.",1.0
g5vulxo,iv376z,"You mean you're using document.createElement for everything? Honestly that's a big turnoff for me, especially after working with React",2.0
g5vwgr1,iv376z,"I ended up hitting enter before finishing my thought lol sorry about that.

short answer, yes. which i didnt want to do at first, but once I tried it out, patterns surfaced that were easy to automate, and now to create a baseline functional app that displays/modifies/saves data I dont have to write any sort of js or html.  I just do it all via a config.",1.0
g62o5a1,iv376z,"What if I told you both that Solid is more performant than vanilla js webcomponents with better developer experience? Don't believe me look at this. Solid outperforms WASM too.. only pure VanillaJS without any addons outperforms it: [https://krausest.github.io/js-framework-benchmark/2020/table\_chrome\_85.0.4183.83.html](https://krausest.github.io/js-framework-benchmark/2020/table_chrome_85.0.4183.83.html)

It's not even a fair comparison as those implementations are using hand-optimized code. But the overhead of Solid is less than native web components or WASM (other than of course the few kbs of JS size).",2.0
_,iv376z,,
g5pi4jn,iv376z,Thanks for the feedback. I've been at this for several years but it's always nice when people find Solid for the first time.,1.0
g5pdk2u,iv376z,they have to keep that resume padded so they can keep switching between FAANGs and keep getting those sweet pay raises,-5.0
g5pnr7x,iv376z,Solid looks nice. A pity that React can't just copy and paste these enhancements into their code,3.0
g5q1m41,iv376z,"Yeah the problem is the execution model is completely different and incompatible. React tried some experiments but they mechanically were very different. Ironically I was working on this stuff before Hooks were ever announced but they served to bring the libraries closer to parity.

The closest popular library to this approach is Vue 3, but they still feed into a VDOM. And Solid's design is much more inspired by React's explicit unidirectional flow. I guess you could say Solid to React is a bit like Svelte to Vue.",3.0
g5qkvth,iv376z,We just need to help you finish up that fancy documentation site so that Solid can easily get more traction.,3.0
g5p58nn,iv376z,Great read Ryan.,4.0
g5q888i,iv376z,Nowadays there is more js frameworks than actual js projects made :),1.0
g5r545s,iv376z,Does Solid have SSR support? I'd love to try it out!,1.0
g5r7nfh,iv376z,"Yes this article is about how Solid has the fastest SSR renderer. There is no Next.js level library here, so it is early days but it's definitely tryable. I have a few examples here: [https://github.com/ryansolid/solid/tree/master/packages/solid-ssr](https://github.com/ryansolid/solid/tree/master/packages/solid-ssr)",1.0
g5nycyi,iuxr3u,"While i appreciate the project, i hope you know what a deep hole this is.",20.0
g5nz813,iuxr3u,"oh yea, i'm fully aware of how much there is to-do for just a huge scale project. I think going step by step and seeing where it goes is best. This might not be the next VSCode, but if I learn something or it's useful for someone, who cares, yk?",9.0
g5nzccl,iuxr3u,Exactly why i said i appreciate it. I‚Äôd say it‚Äôs a good start.,5.0
g5oiyd2,iuxr3u,"&gt; email me your built binaries so the community can enjoy

Would you mind elaborating on what you mean by this?",1.0
g5ojm8f,iuxr3u,"I need a macbook to compile the source code for macOS. Since I don't have one, I can't make an executable for it. If you have a macbook and compiled the code, you could email it to me so I could put it on the releases page so mac users could run it without needing to download the source code. (I am able to make Windows and Linux binaries by myself)",1.0
g5okf5b,iuxr3u,"Github Actions , setup macos builds. Push to releases from that. 
you should find examples to this on my repos. 
github/barelyhuman",5.0
g5oo3ey,iuxr3u,"Huh, TIL. I don't know if I'll ever get to use this, but thank you.",2.0
g5ootpd,iuxr3u,No problemo,1.0
g5oof8u,iuxr3u,[deleted],0.0
g5oosnv,iuxr3u,"I scrapped up from various docs online both github docs and various custom actions, but you can find enough tutorials about setting up electron forge and electron builder builds online. 

And since it‚Äôs all over the place, i guess you can use an example electron build from the repos, I‚Äôll link one here for you. 

https://github.com/barelyhuman/corus

Let me know if you need help explaining the action files.",1.0
g5p01bs,iuxr3u,How can you be sure they aren‚Äôt sneaking in something extra? Sounds like a potential security risk.,2.0
g5pp3pc,iuxr3u,"good point, i'll just use github actions lmao, i was wary of emails anyways.",2.0
g5qhp6i,iuxr3u,You got downvoted by the guy trying to sneak in something extra üòÇ,1.0
g5qo8l3,iuxr3u,"I was going to say! Not sure what my downvote was for. 

Thanks kind stranger. üëåüèº",1.0
g5qqchk,iuxr3u,"Lmao, idk why someone would do that. I was thinking what you were, I've setup Github Actions so I builds for all operating systems every new release. Thanks so much to everyone!",2.0
g5qapt3,iuxr3u,Cool,1.0
g5tom6w,iuxr3u,[deleted],1.0
g5u62gd,iuxr3u,"I hope for it to be customizable and small enough out of the box so you can get a simpler experience than most IDEs. For example, I'm working on a settings menu right now, and you can easily chose keybindings between default, sublime, emacs, and vim. Since there's so much baked into the text editor, it means I can make my IDE pretty powerful without too many lines of code.",1.0
g5noj22,iuwohy,"Lol what do you mean ‚Äúbeat‚Äù? That shit never goes away, for me anyway. I‚Äôve been doing this for money for 6 years now.",8.0
g5novmo,iuwohy,"lol I feel that, I feel the same way.  I just mean to ask for like a little anecdote about something that made you feel better about it.",1.0
g5np8ku,iuwohy,Shipping things always helps to boost the confidence. It‚Äôs also great when other engineers come to you for help. That feels good.,3.0
g5oig4b,iuwohy,"Can confirm. I'm the ""highest rank"" JS dev on my floor, yet I have to daily convince myself that my opinions _actually_ matter :O",1.0
g5nrcvs,iuwohy,"OP here, I can start off with a story of my own, although I wouldn't say I'm over my self doubt by any means, but it certainly boosted my ego that day.

Recently, my company was maintaining a client's website, who was using a third-party library.  I won't use names for obvious reasons, but this third-party is quite prevalent in ecommerce.  They were undergoing a rewrite and were trying to migrate all their clients to the new codebase, and so they sent a few representatives to touch base with us every week.  I'll be honest, I was a little intimidated and just hoped I could keep up with the conversations we were about to have.  I was still relatively new on this project so I didn't want to disappoint.

Now, the existing code in this ecommerce website was a far cry from being pretty.  In fact, let's face it, you've all seen legacy spaghetti code before.  Because of the dated framework we were using, many things didn't work, but at times it just served to cast doubt that an issue could lie with anything else besides the outdated codebase.

Fast forward a few days and I wrote some simple code I knew should work, but it simply did not, so I reported back in the next meeting that something in their source code seemed to be blocking me from proceeding with the integration, and asked them to have their QA team look into it on our environment.  A week later, they said it worked everywhere *else*, and to try *looking harder* for a solution.

I ended up troubleshooting into their own source code to figure out exactly where it was failing, and found that, indeed, it was an issue on their end.  Their bundler had compiled a UMD module and they were telling me to run it via script tags.  We were using AMD in our project, so naturally the UMD would try to adapt and fail because it was added as a script tag, not injected as a dependency like AMD expects.

I told them about my findings, and they told me dependency injection was not possible, and they preferred the script tag for legacy implementations.  In fact, I found that this script would fail if you were using ANY module system at all.  This went back and forth for weeks until finally they got their lead engineer on the phone with me, who proceeded to demonstrate a ""hacky"" workaround (by his own admission) in a codepen, but even that didn't work once it was dropped into our environment.

I told them straight up, in the most professional, yet pointed way, that there was no excuse for releasing code to production if it was not production-ready, and in response they finally escalated the issue to their dev team to resolve it.

Now, you'd think that would be the end of it, but no, they actually *continued* to insist it should work with the script tag, even though I could clearly step through the debugger and see that it wasn't and why it wasn't.  At this point I had enough of listening to what they were telling me, and I started trying things for myself.  I injected it as a dependency and boom, it magically worked.

TL;DR: I was kind of intimidated by a big important company, but they shipped nonworking code and I troubleshooted it for them, convinced them to escalate it, then showed them how to use it properly.

That was definitely an ""I guess I'm doing okay after all"" moment.",5.0
g5ofimv,iuwohy,This is just a real deal situation,2.0
g5nzvyo,iuwohy,"I‚Äòm a Freelancer hopping from project, to project. I was used to find projects via Headhunters. After 5 years companies like Siemens and Airbus   started to contact me, because they‚Äòve heard of me. This was the moment I realized people were remembering and recommending me for the work I did. This was awesome for me.",3.0
g5tzxrj,iuwohy,"That's a nice wholesome bit, haha.  That must feel good, years of building a reputation finally paying off.",1.0
g5urf8i,iuwohy,"It totally was! Knowing my work makes my customers happy was what I always wanted. Also for a personal reason.

The first company I've founded was with a friend who wanted to milk every customer. He worked 1-2 hours a day, but wrote 12 hours on the bill. When customers didn't want to pay, because the price was so much higher than the initial estimate he called his lawyer to write a letter.

This guy was making much more money than me at the start of our company so I sometimes wondered if I was making things right by trying to provide real good service.",3.0
g5vdqax,iuwohy,"When my senior commented on something that I'd worked on and said it was like I had imagined every scenario, and it was a dream to work with. That was a huge validation for me. 

(I created a highly interactive virtualized table component in React that is versatile enough to be used as a general table)",3.0
g5ofiu9,iuwohy,"I'd been a graphic designer for about 8 years and was just getting over my imposter syndrome in that role. Then, last Oct., I started working as a front end developer and was plunged back into the depths of self doubt.

Just released my first major application in this role and am hoping that helps curb some of it. We'll see...",2.0
g5pf6do,iuwohy,you got this,3.0
g5p0vt1,iuwohy,"I don't think ""imposter syndrome"" is a bad thing.  I keep a healthy dose of humility around all the time. 


Rather than ""beating"" it, i keep it at my side.  Like the best friend who won't ever bullshit you when your shit sucks, regardless of past successes.",2.0
g5pxvjn,iuwohy,"It does feel like a fine line.  Some days I'm like, I should ask for lead right now.  Other days I shy away thinking I don't know enough of what a lead should know.  It almost feels like asking might be a bit cocky of me.  But sometimes I find myself teaching new stuff to other people who already have the title.  I don't judge them for not knowing, but I just have wonder what the deciding factor was to grant them that role, and whether or not I actually have that gusto.",1.0
g5vc1eb,iuwohy,"I don‚Äôt think it will ever go away. Every time I see something I‚Äôve never heard of, I feel it. And new things come out daily.",2.0
g614f5t,iuwohy,"They really do, it's nonstop.  Actually I sometimes get discouraged because I come across more basic things that I feel like I should have known years ago.  It's especially embarrassing when you have peers looking up to you and you have to be like ""...oh.""  Haha.",1.0
g5p0tzh,iuwohy,"When I realized there were a lot of developers out there that were better than I... And a lot of devs who were just as bad as I. And that none of it matters. 

I realized if my employer wanted to employ me I'd do my best and stop worrying about it. 

At a certain point isn't imposter syndrome kind of insulting to your team or employer? Like it's insinuating that they're not competent enough to make the decision they want to work with you. It's not like you're lying on your resume/interviews.",1.0
g5pg74a,iuwohy,This is a good way of looking at it.  Nice reminder to have as much faith in yourself as your team does.,1.0
g5psf2y,iuwohy,[deleted],1.0
g5ty56j,iuwohy,"I've had a very similar experience.  In my  free time I can write complex features for my app without breaking a sweat, but trying to tackle the same exact feature in a legacy codebase at work takes me wayyyy longer.  And having seen the good, bad, and ugly, I can confirm a great PM makes a big difference too.  They can either hold you back or support you, and it definitely impacts my confidence at the end of the day.

As far as new tech exploding then falling from grace, I've only seen that with things that were once useful until the native landscape caught up.  This could be another interesting topic for another day, but it seems like we only laugh at them today because we have it better now.  Going back in time, that was all we had, so you know, I think jquery and JSP templates might just be getting too little credit.

But, nothing wrong with letting it fly overhead I suppose.  Just a rough awareness of the ""what,"" ""why,"" and ""how"" is what actually counts.",1.0
g6125ge,iuwohy,"For me is not about imposter syndrome, is about being better than everyone else. Believe me this is not healthy at all, don't go down this path",1.0
g614quj,iuwohy,"lol, that reminds me of this meme.

[https://pbs.twimg.com/media/CnLShkXXEAEzpZ2.jpg](https://pbs.twimg.com/media/CnLShkXXEAEzpZ2.jpg)",2.0
g5pcix9,iutcpm,"Disclaimer: I work full time on monorepo stuff at uber

Not sure I get the point here. Seems to be a not-completely-broken alternative to npm link, which I suppose helps velocity if you live in a multirepo world, but as far as monorepos go, npm link is just not a good paradigm at all

If this tool creates a mapping file, presumably one will want to commit it to version control? But then you're getting into stuff like git submodules and stuff goes downhill real fast from there.

One of the biggest appeals of monorepos is atomic commits, i.e. your library commit does not break any apps, as guaranteed by the test suite. Linking is but a tiny part to making that work. Tools like yarn workspaces are better suited for that goal IMHO",0.0
g5qdu6x,iutcpm,"It‚Äôs not an alternative. Are you familiar withe the concept of wrapper scripts? It‚Äôs just extending npm/yarn link functionality.

It‚Äôs not supposed to be submitted to source control and it is not a monorepo tool. It‚Äôs not suited for production use. It‚Äôs just a helper to link things in a multyrepo project for development.

Yarn workspaces, for instance does not fit the need of the project I‚Äôm currently working on. Through my experience, a lot of projects are sloppy with versioning, some would keep version 1.0.0 forever as template for the script to replace during build. Some projects simply can‚Äôt convince the management to transfer to monorepo and are forced to work through multiple related repos. Some times you want to checkout a certain tag with particular dependency versions and test it locally without linking. Sometimes you want to link to develop a certain feature.

I find myself maintaining up to five links between interdependent projects during work sometimes because of typescript. Writing the full package name sucks. I don‚Äôt know how many time I have tripped over forgetting to force install after linking.

So my cli wrapper is there to address all these problems and help the developer link things quickly on demand and unlink safely with restoring things to previous state. One of the main ideas was to maintain type safety between heavily interrelated codebases. I guess I was mainly focused on my current problems and wanted a tool for myself. But then I thought that you get to see all sorts of crazy things in JS world and there might be other developers with similar problems. So I wanted to make it usable for others. It will scan any crazy nested project structure to help link and  develop things easier. Also I made it opensource so that people could help me guide this project into something generic and useful for many.",1.0
g5qobwv,iutcpm,"If it's working for you, more power to you. I've been there with multirepos, and I can totally relate with your point about convincing management.

I just wanted to point out that full-on monorepo-oriented workflows are quite a bit different than just the idea of linking things together.

For example, one pain point that I had with the multirepo-oriented approach is that large cross-repo refactors can be challenging even with linking tooling (e.g. there's a lot of things that can go wrong with the publish workflows that linking doesn't really help catching), and version management can be a pain in the ass, when you have to publish a bunch of things in lockstep and you want to follow semver correctly. At some point, we were clocking at about 70 interrelated libraries with a biweekly release cycle, plus a few hundred apps, across many many teams. At that scale, linking/unlinking just doesn't really cut it anymore.

In my experience, people are also not super open to weird workflows, so we'd often have ""throw-over-the-fence"" scenarios, where to get an external team to test something, you'd have to publish a set of canaries. etc.

At scale, you run into all sorts of dumb nasty scenarios lol.

With that said, monorepos are no silver bullets either ._.;;",2.0
g5nmsqa,iut0cm,Awesome,1.0
g5lz8h7,iuomkd,"Project Page (?): https://github.com/thednp/bootstrap.native

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g5ljw89,iul1qb,Love all the new components! &lt;3,24.0
g5llhd1,iul1qb,Thank you! More to come soon hopefully.,7.0
g5lexyo,iul1qb,"Really cool! The only thing I could see missing, is transition animation - like in the accordion, switch, etc.

Great job tho! üëå",30.0
g5lfbte,iul1qb,Good catch. I might add them in a future release. Thank you!,20.0
g5ly9gx,iul1qb,This looks awesome! I like how you kept a lot of classes there same as in bootstrap. Should make migrations pretty straightforward üëç,13.0
g5m2u4s,iul1qb,Thank you. Another reason is that Bootstrap classes are basically muscle memory for a lot of us. So having those here really speeds things up.,14.0
g5lqxlw,iul1qb,Thank you! How do you already have 1.4k stars?,7.0
g5ltxp2,iul1qb,"Yep, as the other comment mentions, it was posted in a few other places. It has been getting some solid traction.",7.0
g5ltlec,iul1qb,It's already shared in other places like css-tricks,6.0
g5lhwly,iul1qb,Nice! Can you please release a CSS or SCSS only version?,6.0
g5ljlze,iul1qb,"Thank you. The CSS version is available on the repo: [https://github.com/halfmoonui/halfmoon](https://github.com/halfmoonui/halfmoon)

As for SCSS, I am basically betting the framework on CSS variables instead of SASS or other pre-processors. I really think that this is the future of CSS. Browser support is already at 95%, so it should become a 100% available standard within one more year. However, there may be an SCSS fork on Github, I am not entirely sure about that. At least one other person brought it up in an issue.",16.0
g5oghuw,iul1qb,"CSS variables hardly cover a portion of what SASS is used for, and you don‚Äôt lose anything by supporting it. Seems like something worth keeping on the roadmap.",8.0
g5ltpt6,iul1qb,"Fantastic work! Absolutely love it! If I get a chance, I'll surely use it in a project..",4.0
g5lu4mr,iul1qb,"Thank you, and sounds great.",2.0
g5ltpyl,iul1qb,Loved it! I hope it grows and gains more popularity.,2.0
g5lu9v8,iul1qb,"Thank you, and I hope the same.",2.0
g5lwwew,iul1qb,"Amazing, I'm gonna give it a shot.",2.0
g5m2pzq,iul1qb,Awesome!,2.0
g5m0c23,iul1qb,"I'm gonna use this soon, thank you :)",2.0
g5m2w87,iul1qb,Sounds great!,1.0
g5m1xmv,iul1qb,So it doesn't support browsers without css variables?,2.0
g5m32eu,iul1qb,"It actually supports pretty much all the browsers, including almost fully supporting Internet Explorer 11. You can read this docs page to understand how it works: [https://www.gethalfmoon.com/docs/internet-explorer-support/](https://www.gethalfmoon.com/docs/internet-explorer-support/)",3.0
g5m4q66,iul1qb,"Thats like using es2015 directly in the browser, im sure most of the new browsers support it, but thats just not yet a good strategy to go raw like this. You're assuming no one using your library will have audience using ie10 or lower.",-1.0
g5m5dch,iul1qb,"No I think there is a misunderstanding. Halfmoon has a ""flattened"" CSS file as well, called halfmoon.css, which uses no CSS variables. What the page I linked is trying to say is that if you want your site to support IE, you should stick to the flattened CSS version.",5.0
g5m5ix5,iul1qb,"Why can't I scroll up on the site, only down (mobile)? It wants to refresh the page instead, when I try scroll up.",2.0
g5ma5fj,iul1qb,"What's your phone and OS? I would like to reproduce the issue, but it works fine on the devices I have tried.",3.0
g5ogrud,iul1qb,"It seems the browser of Boost (the Reddit app on Android) only does it. My main browser doesn't do it.

HOWEVER, this us the first time I've seen this kind of problem. Did you fiddle with how scrolling works through JS?",2.0
g5ot9vm,iul1qb,"Nope, the scrolling has been left untouched. I did not test the in-app Reddit browser, Facebook's one seemed to work fine. I will look into this, could be just a weird glitch in the browser though, since other browsers work fine.",1.0
g5m9lct,iul1qb,"Looks really nice! Noticed that I cant swipe alerts to dismiss them on phone, and I think it works in bootstrap, any chance on seeing it in the future?",2.0
g5mafqy,iul1qb,"Thank you, and yes hopefully in a future update. There is another swipe related issue on Github: [https://github.com/halfmoonui/halfmoon/issues/4](https://github.com/halfmoonui/halfmoon/issues/4)",2.0
g5mdq23,iul1qb,Sounds great :) Will try building my next website or smth with this framework :),1.0
g5mfq92,iul1qb,"&gt;A long and descriptive title of the picture that is slightly pretentious

Hahahah love it",2.0
g5mjb6x,iul1qb,I'm still pretty new to front end stuff so I haven't explored a framework before but this looks fun... might have to play around! Do you have any example sites built on it yet besides your own?,2.0
g5mlkqx,iul1qb,"You could check out the ""Used by"" section on Github: [https://github.com/halfmoonui/halfmoon/network/dependents](https://github.com/halfmoonui/halfmoon/network/dependents)

Some of those repos have links to sites built with Halfmoon.",1.0
g5mortj,iul1qb,Nice worrk,2.0
g5nrz92,iul1qb,Thank you.,1.0
g5mr8cc,iul1qb,"I've been following this since it was initially released, this is fantastic work and very well written. I can't wait to see how it continues to grow!",2.0
g5ns265,iul1qb,More to come hopefully. Cheers!,1.0
g5mv0qo,iul1qb,"This is neat, great job",2.0
g5n403s,iul1qb,Started using Halfmoon three days ago. Awesome job. Love the update.,2.0
g5n5hc0,iul1qb,"These look amazing, but one bit of feedback regarding the docs.

I open the modal on my android phone, I click the X at the top left to close it. Afterwards I tap back, that reopens the modal. 
I don't know if that was intentional, but it feels like a bug to me. 

That aside, I wish these existed years ago. I've been rolling my own for a few years now since I refuse to use anything that requires jQuery or similar. These look way nicer so I might have to swap over.",2.0
g5ns7p8,iul1qb,I can't reproduce this issue on my Android phone. Could you maybe post a screenshot of which modal you are talking about?,1.0
g5oci28,iul1qb,https://youtu.be/ob80Xnm1iHc,1.0
g5ot7dy,iul1qb,"Thank you for the video, definitely helps pin-point the issue. Is this the Reddit browser? One other comment on this thread also mentioned a scrolling issue on it.",1.0
g5otgog,iul1qb,"It'll be whatever browser Reddit opens, yeah :)

So my guess is some basic browser, but since it's android I'd like to think it's still chrome based... But I can't be certain.",1.0
g5n9co8,iul1qb,Yesterday?  Was it beta before?   I'm a MERN stack bootcamp student and when I saw your first post about making this over quarentine it was the week we were doing our first group projects.  We switch from Bulma to Half-moon based on our familiarity with bootstrap and utilized it for our project!   Default dark mode of course!,2.0
g5nscwc,iul1qb,"Not beta, previously it was v1.0.4. This release is v1.1.0. And glad to see people are making the switch. Thank you!",3.0
g5o0vo1,iul1qb,Do you have plans for a CDN or do you have am idea as how to is it with frameworks?  Sorry if they question sounds dumb,1.0
g5osx69,iul1qb,"Yes, there is already a CDN available for serving the files: [https://www.gethalfmoon.com/docs/download/#cdn](https://www.gethalfmoon.com/docs/download/#cdn)",2.0
g5nauf0,iul1qb,Damn man.  This looks good,2.0
g5nbi1l,iul1qb,Gonna have to check this out just because of the built-in dark mode,2.0
g5ndt49,iul1qb,Awesome. I hate bootstrap sometimes so this looks great. How's the mobile browser adaption?,2.0
g5nsk7u,iul1qb,"Mobile browsers compatibility should be great (from what I have tested, and user reports). There are also overall usability improvements planned for v1.2.",1.0
g5nf5p9,iul1qb,Is every call to action element content laying on the bottom right on purpose?,2.0
g5nt52g,iul1qb,"If you mean the example on the docs (as in submit button of forms, etc), then yes, it is on purpose. There is some data (although far from anything conclusive) that action buttons on the right align more with user's expectations. Here's a nice little write-up on this: [http://measuringuserexperience.com/SubmitCancel/index.htm](http://measuringuserexperience.com/SubmitCancel/index.htm)",1.0
g5ngdi2,iul1qb,[deleted],2.0
g5nwtnk,iul1qb,"Bootstrap 5, in alpha now, drops jquery. 

The doc site for some reason is hard to find via google or the main bootstrap site: https://v5.getbootstrap.com/docs/5.0/getting-started/introduction/",2.0
g5nsp69,iul1qb,"jQuery makes some things really, really easy, so I understand its prevalence. But yes, it is definitely over-used to the point where most people forgot about basic DOM functions.",1.0
g5oni4s,iul1qb,"&gt; to the point where most people forgot about basic DOM functions.

DOM API still sucks big time.",1.0
g5ntcvo,iul1qb,a BS alternative that didn't rely on jQuery that worked as well would pretty much be the death knell for jQuery. We have some legacy apps that we had to upgrade versions of jQuery recently and literally the only reason we use jQuery is due to BS components that no one wants to go in and replace.,2.0
g5o4ycx,iul1qb,The labels in your buttons on homepage are not vertically centered.,2.0
g5ot0p0,iul1qb,Even though the `height` and `line-height` properties are the same. It's a weird issue where fonts have white-space on top and bottom. Someone opened an issue about this on Github: [https://github.com/halfmoonui/halfmoon/issues/36](https://github.com/halfmoonui/halfmoon/issues/36),2.0
g5of46q,iul1qb,"Wow, epic work, nice.

Any plans for making some components(Like pagination, modals or navbars) React js compatible? Or I could contribute? :)",2.0
g5ot3xv,iul1qb,"If you are talking about React UI components, some people are working on it: 

[https://www.npmjs.com/package/react-dark-light-ui](https://www.npmjs.com/package/react-dark-light-ui)

[https://www.npmjs.com/package/darkmoon](https://www.npmjs.com/package/darkmoon)",2.0
g5pamwi,iul1qb,"Ohh, they been faster :(",1.0
g5ohpdl,iul1qb,Looks good. I am hoping to collaborate on it soon enough,2.0
g5oy6y3,iul1qb,It looks beautiful... amazing job buddy,2.0
g5p40vb,iul1qb,"Just added this to a project I was using a custom dark theme on. 

Gotta say, it looks lovely. Great job!

Are you planning to add customisation for range-sliders? Also, would you be open to a PR for the same?",2.0
g5leevt,iul1qb,I really love this. Ty,2.0
g5lezw6,iul1qb,Appreciate it.,2.0
g5x30ip,iul1qb,Thanks for this,1.0
g5mt0q5,iuiyft,"""Become a master of micro-optimizations."" OMG no. This is exactly the opposite of what developers should be doing.

Micro-optimizations are betting against the future, saying ""I'm smarter now than the engine ever will be."" Sorry, but no, you almost certainly cannot outsmart the engine, and you shouldn't even try.

This brain power should be spent making code more readable and maintainable. Quit trying to beat the computer at what it was designed to better than you at.",25.0
g5n9yg1,iuiyft,"My first reaction to the article's title was the same as yours -- that micro-optimizations are bad and this is going to be a bad article. But I thought the author handled the situation well by preceding the list with the ""measure before optimize"" advice.

&gt; You don‚Äôt want to change every single line of code and apply all these performance suggestions. You instead need to find the blocks in your application that have a significant influence on your performance (measure) and optimize these parts (optimize).

Which seems fair. A micro-optimization is a lot less micro when applied to just the right bottlenecked spot. But still, yes, it's good to emphasize to readers that 97% of the time, we should optimize for *humans* (that is, readable and maintainable).",6.0
g5nlp96,iuiyft,"[mini rant]
It's reasonable to *say* ""measure before optimize"", but I've found that almost no JS developers actually know how to measure/benchmark properly. In fact, I'd go so far as to say that even knowing about micro-optimizations actually makes you worse at it. The JS engine is fantastically more complex than we give it credit for, and ""defeating"" those optimizations so you get a clean test result is nigh impossible.

And if even if you *do* successfully get a clean benchmark reading, it's actually nearly useless because that's almost certainly not the conditions your real code will run in.

The only type of performance benchmarking on JS code that I recognize as legitimate is the kind where you have an entire function or line of functionality from your app being benchmarked. If you're measuring a single statement, or even a collection of a few statements, and it's like a single isolated task, it's almost guaranteed that whatever measurement you take, and reasoning you infer from that, won't match reality.

This area is so fraught with complexity that 99.99999% of JS devs should never, ever even attempt it. And since they can't (or won't) measure properly, the ""micro-optimizations"" they try to employ are essentially bogus.

If you got 0.001% real actual improvement in your app's performance, but you spent several hours doing so, my claim is your app could run until the heat-death of the universe and still not actually recuperate the benefit you could have had if you just spent that time on readability and maintainability.

Every line of code you write is read dozens, hundreds, even thousands of times over its lifespan. Even an extra second or two spent having to understand it adds up to hours, days, even weeks of time in total-cost-of-ownership over the long run. Then let's count all the dozen or so times that each line of code will be thrown out and re-written from scratch because a future reader of the code (even your future self) won't understand it, so ""it's quicker if I just re-write it than to figure this mess out"". So now that line of code has exponentially increased its total-cost-of-ownership.

I don't think it's an exaggeration that an hour spent making code more readable will pay off 100x or even 1000x more, in terms of time spent, and time spent more effectively, over the lifetime of an app, vs the milliseconds or seconds of compute time is may save in aggregate across all users.

Optimizing JS code, from the perspective of micro-optimizations like choosing ++i instead of i++ and things like that, is just plain a losing proposition. There's simply no way that ends up being a good general usage of your time. On a team of 100 talented developers, 1 of them should spend about 3 minutes per year thinking about stuff like that. All the rest of the time, focus on what actually saves and better appropriate time and resources.
[/mini rant]",25.0
g5nt7al,iuiyft,Is it maybe a bit different though if you're working on a project that's not an app but a module for which you hope one of the selling points could be better performance? Obviously keeping in mind your point that benchmarking and optimization is hard and ought to be done properly if at all.,1.0
g5o67s8,iuiyft,"I can understand the desire, when building code that other apps will consume, to want the ""best performance"" you can. Yes that matters and is worthwhile. But I don't think libs should use misleading ""marketing"" like ""x% faster than Y lib"" or whatever.

Get more adoption because your lib is better designed and better maintained and better documented and better tested. Don't just try to get bandwagon followers who are swayed by thin claims based on dubious, highly selective benchmark results.

Moreover, a few points:

1. you can't really know how your code will be used by those other apps, so your benchmarking can only go a little ways towards that goal of ""good sensible optimization"".

    You should set up performance benchmarks against your test suite. But not just limited unit tests, also benchmarks on larger, more comprehensive integration type tests.

    And yes, if you can make non-engine-specific, non-micro-optimization types of optimizations on your lib, you absolutely should do so. 

2. However, your choice to micro-optimize is even more risky because a version of your lib may live in someone else's app long after you updated your lib to undo/change a micro-optimization once some JS engine changed its behavior.

    The problem of betting against the future is much worse when users of your lib aren't guaranteed/required to keep updated with the ever-changing landscape of micro-optimizations.

    They won't necessarily know or realize that browsers could change out from underneath them, and the version of your lib that yesterday was really fast is now missing out on optimizations. Performance (especially from micro-optimizations) is incredibly opaque to most consumers of libs and app devs, so it's much harder to ensure they stay on that leading edge.",4.0
g5otczg,iuiyft,Wow thanks for the response. I appreciate it. Those are very good points to keep in mind,2.0
g5o82up,iuiyft,"That's not the message my article is aiming to have. My aim is to raise awareness not to beat the ""brainpower"". JS devs should not start by learning C++ and only read the v8 blog. And I'm even with you that people should spend more on readable maintainable code. But, I also think that is important to know how that code I write gets handled in the browser.

Things like the AST or a compiler are way underrated while becoming an expert in JS. Of course, you can become a really great JS developer without knowing about these things, but for me, it was a bit like reading about the magic that happens after I'm done with my code.

And this knowledge adds a bit of extra thinking to me while writing JS. I don't want to start every JS developer setting up performance benchmarks before and after their line to delete an array item. But I know that this might lead to perf issues when I do this a million times and I have it in my mind when I measured a perf issue in a block (function, component, etc.).

I think that 100% JS experts (not the junior) should know how the engine works on an abstract level like in ""What is a JavaScript engine?"". In everything else you are writing, I think you are right. Readability and maintainability are way more important than knowing about the engine if you want to compare it.

For me, it's like in this [post](https://www.reddit.com/r/javascript/comments/ipcxea/learn_about_common_performance_issues_with/) be aware of it but don't spend to much time on it.",2.0
g5o935r,iuiyft,That's a more reasonable position than the pretty click-baity post title here. My reaction was against that tone than any specific content in the post.,6.0
g5n64n1,iuiyft,"You need to fix your website on mobile

https://i.imgur.com/K1ffkNm.jpg",4.0
g5o87i6,iuiyft,"Oh yeah, thanks!!",-1.0
g5lh0ps,iuiyft,Micro optimizations? That's a funny term like civil war.,6.0
g5m1olh,iuiyft,"&gt;Become a master of micro-optimizations

Isn't that a bit like being the master of saving money with grocery store coupons?",5.0
g5m6wsf,iuiyft,"Yes and no. ""master of micro-optimizations"" doesn't mean to apply them any time any place. IMO JS devs should be aware of what happens under the hood of an engine. If so, it's much easier to integrate it into your daily work or to identify perf problems.

To stay with your comparison: it's important to know how to save money with the grocery store coupons and especially to know how the grocery store coupon system works to get a benefit for you.",3.0
g5n3cu2,iuiyft,so like assembly? :P,2.0
g5l72ra,iuhe5y,"Been using it for a year or two now. Its amazing. Have used it in a production environment for spa apps, but our main use is using it with capacitor for hybrid mobile apps. 

Hyperapp is simple, yet flexible and robust, wicked fast (running and to develop with). Community is great, and super helpful. Honestly i have tried about every framework under the sun and Hyperapp is the best developer experience i have ever had.",8.0
g5lldad,iuhe5y,"What does the setup for a capacitor / hyperapp project look like? rollup plugins, webpack, idk",2.0
g5llwkj,iuhe5y,"We have used brunch, and parcel. We like parcel more, but any build system works really, as long as your finished site gets dumped in your public folder. We really just point parcel at index.html, and thats it. Then point capacitor at the output from the build, ans your done.",4.0
g5me8q9,iuhe5y,"Hyperapp apps are written in a purely functional style, designed as [finite-state machines](https://en.wikipedia.org/wiki/Moore_machine). The framework enforces this architecture and won't let you work around it. That's really the only significant difference to other frameworks. 

Hyperapp might be for you if you're interested or already working with this paradigm.",7.0
g5lh2zu,iuhe5y,"Same as f# with elm architecture
Waiting for typescript version",5.0
g5l163u,iuhe5y,"I haven't used v2 yet, but built a few smaller projects using Hyperapp V1 and found is easy to become productive with. The appeal of Hyperapp over React for me was it's small size (V1 was 1KB compared to React's 20-ish KB not including Redux) and performance. Hyperapp V2 is looking great so far, and can't wait to try it once all the docs are fleshed out. For more opinions, check out some of the many [HN threads](https://hn.algolia.com/?q=hyperapp).

Also, if you're not a fan of Hyperscript, you could still use JSX with Hyperapp.",8.0
g5l5mlu,iuhe5y,Awesome. Those HN threads are huge!,3.0
g5lecho,iuhe5y,Paging /u/okwolf,3.0
g5nar3s,iuhe5y,https://www.reddit.com/r/javascript/comments/iuhe5y/askjs_thoughts_on_hyperapp/g5n3nnv,1.0
g5n3nnv,iuhe5y,"reduced size is nice, but the real simplicity comes from fewer concepts to learn and use

the real con is from a smaller ecosystem, but if you agree with the philosophy behind the project we‚Äôd love your contribution, I‚Äôve made a few and can vouch for how nice the community is",3.0
g5ornil,iuhe5y,"I was absolutely intrigued by it when it first came out, but never really gave it a shot. Seems like the ecosystem has grown quite a bit these days.",3.0
g5punhd,iuhe5y,"I would definitely consider a micro library like Hyperapp in scenarios where page load times and bundle size is critical. Like components designed for distribution on other web sites, embedded applications and so on. For normal projects I prefer React simply for the documentation and the ecosystem.",1.0
g613lq0,iuhe5y,"I'm looking forward to simple frameworks. We have a boatload of complex/overkill frameworks out there. It's time to go back to simplicity.

Idk if thats the case with hyperapp, never used it, it's just what is looks like.",1.0
g5kz1x8,iuhe5y,"Looks like React with more steps, harder to read code, and less possibility for SSR. The fact that it's so small and doesn't use bundlers is novel though. Makes me think there might be something here worth exploring more. I feel like it's so different from existing libraries it would be difficult to build a community around it. Is there really room for more monolithic front end libraries?",1.0
g5l7mpn,iuhe5y,"I see nothing new or revolutionizing here. If you already use React, Vue, Svelte or any of the other popular libraries/frameworks/not-a-framework I see no reason why you would want to switch to hyperapp.",-1.0
g5l9snb,iuhe5y,maybe because of size?,5.0
g5ldmqg,iuhe5y,"I've never experienced size being a major pro/con when evaluating a framework. Other factors have always been of higher importance. Then again, I work primarily with markets that have well developed network infrastructures. Size would be more important if I were to work on a market where bandwidth isn't as readily available.

Edit: There's an unintended but obvious ""That's what she said""-joke hidden in here...",0.0
g5i9sg6,iu3qbd," Couldn't find anything like that, so I made my own.

Feel free to use, share, copy, contribute, etc.",1.0
g5igtj5,iu3qbd,What's wrong with lodash?,1.0
g5jeozr,iu3qbd,"I'm not a huge fan of lodash so I missed that. But still, if you need only these parsers, payw could be a lightest alternative.",2.0
g5hs3en,itze8f,"&gt; [The venerable master Qc Na was walking with his student, Anton](http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/msg03277.html).  Hoping to prompt the master into a discussion, Anton said ""Master, I have heard that objects are a very good thing - is this true?""  Qc Na looked pityingly at his  student and replied, ""Foolish pupil - objects are merely a poor man's closures.""
&gt;
&gt; Chastised, Anton took his leave from his master and returned to his cell, ntent on studying closures.  He carefully read the entire ""Lambda: The Ultimate..."" series of papers and its cousins, and implemented a small Scheme interpreter with a closure-based object system.  He learned much, and looked  forward to informing his master of his progress.
&gt;
&gt; On his next walk with Qc Na, Anton attempted to impress his master by saying ""Master, I have diligently studied the matter, and now understand that objects are truly a poor man's closures.""  Qc Na responded by hitting Anton with his stick, saying ""When will you learn? Closures are a poor man's object.""  At that moment, Anton became enlightened.",24.0
g5hu0rw,itze8f,"Was gonna cite this quote. I actually wrote a whole book chapter expanding on its (seemingly contradictory) truths with respect to FP:

https://github.com/getify/Functional-Light-JS/blob/master/manuscript/ch7.md/#chapter-7-closure-vs-object

Summary: they are largely equivalent ways of representing preserved state, but there ARE important differences (not only ergonomics but also capabilities).",8.0
g5kutdu,itze8f,Surprised this wasn't from [The Codeless Code](http://thecodelesscode.com/).,1.0
g5hp1qd,itze8f,Or maybe closures are just a fancy way of writing objects? :),31.0
g5t0ng0,itze8f,I think it‚Äôs the other way round - objects are specialized closures because objects are higher level constructs than closures with special rules,1.0
g6d1q87,itze8f,What exactly do you mean by ‚Äúhigher level‚Äú and ‚Äúspecial rules‚Äù?,1.0
g6dcynh,itze8f,"By higher level and special rules I meant objects are formalized way to group variables and functions, variables are cached inside an object and when talking about objects it gives me the impression that they are stateful although they don't have to be and there are ways to enforce that.

I think exactly because it's a higher level concept, we can use language syntax to \*enforce\* certain properties like internal variable has to be initialized within constructor etc. Having the concepts of states + \`constructors\` + \`setters\` imply that objects have lifecycles - it's created, updated, destroyed. Also notice how functions in objects are called \`methods\` - they're inherently different from just a function because methods have implicit references to instance variables.

On the other hand closure is a more atomic concept - it's in essence scoping of variables. We can implement objects using closures certain way and we need to be disciplined about it because it's not enforced by the language syntax.

What I want to say is objects are aggregates of a lot of different concepts and they are inherently more complex than the concept of closure.",1.0
g5hq81u,itze8f,"I am pretty sure that it is a well known fact:  you can implement classes with closures.  Also, the way you do it is more complicated than necessary. 

A usual way to show it is something like this:

    function Person(firstName, lastName) {
        let fName = firstName; 
        let lName = lastName;
    
        return {
            getFullName() {
                return fName + ' ' + lName;
            },
            setFirstName(firstName) {
                fName = firstName;
            }
        };
    }

Also, obviously, there is an equivalence between reading a key in an object and calling a function with a string argument.",10.0
g5ii47o,itze8f,"Your code is not actually the same thing as a class; it's a factory.

The critical difference is that your code creates separate `getFullName` and `setFirstName` functions/methods for every instance of `Person`.  Make fifty people, and you also make fifty versions of `getFullName` in memory.

In an *actual* class system ... either a traditional one (eg. Java's), or even in Javascript's wacky ""prototypal inheritance"" system ... that function only ever exists once, on the class/prototype itself.

In other words, in a proper class system, all instances of `Person` (ie. all `new Person()`) will *reference* the original method on the class/prototype, instead of duplicating it.  There will be one `Person.prototype.getFullName`, instead of a new `getFullName` for each `Person`.",16.0
g5imult,itze8f,The original blog post solution suffers from the same problem,11.0
g5pbba3,itze8f,"This is hardly worth thinking about in my experience. How many encapsulated stateful instances of anything do you need in an app? A few dozen? It would take 100s of thousands before you'd need to worry about it, but at that scale you really shouldn't be creating stateful instances of things if you care about performance, they should be pojos or more likely flat arrays.",2.0
g5pgcb9,itze8f,"I agree, *very strongly* with the overall sentiment of this post.  So many idiot devs wring their hands and worry about stupid ""performance"" issues, like the Big O signature of a loop that will run a max of ten times.  It's completely pointless.

To me, being smart about performance in web development 100%  means *ignoring* all the idiots and their pointless worries over things that will never practically matter ... *but*, a needlessly costly pattern you re-use throughout your codebase is far more likely *to matter*.  If you adopt a pattern throughout your code, you're unlikely to think ""should I use it?""; you're likely to just use it on both your least and *most* complex data (eg. the thousands of rows of results you `fetch`, or the really complex UI that's repeated 100 times on the page).

So I'm not saying ""don't use factories"" ... or even *never* create objects in factories with methods ... although, as we both agree, you *do* generally want to stick to ""pojos"" (and as an aside, wow, haven't heard that term in awhile)!

I'm just saying, in functional programming you want to generally avoid methods altogether, and just use functions that take the object as an argument ... and in OOP (in Javascript) you want to take advantage of the `prototype`.  If you do that, it won't matter what the scale of data your working with is, because neither pattern has the flaw that the lorduhr approach has.",3.0
g5pblc2,itze8f,"You don't even need the extra variables.

	function Person(firstName, lastName) {
		return {
			getFullName() {
				return firstName + ' ' + lastName;
			},
			setFirstName(fName) {
				firstName = fName;
			}
		};
	}",1.0
g5i525t,itze8f,So.. You can abuse something and shoehorn it into something and make it look and work _worse_. Why would you do that?,11.0
g5ifm6k,itze8f,More people want to have programming blogs than there are helpful articles to write.,11.0
g6d2moi,itze8f,Illustrating the core principles behind common programming constructs using concrete examples is genuinely helpful.,1.0
g5hn02p,itze8f,"Is this just to point out that they can work the same? Because in your example, the class structure is a lot cleaner in both the creation of the class and invoking it..or am I missing something?",4.0
g5k93gp,itze8f,"Are we gonna ignore the fact this is bad for memory?
Each function creates its own functions in memory...",4.0
g5i1dtk,itze8f,"instead of returning a function with a switch statement, you can return an anonymous object containing references to your functions, and then the syntax to call your methods is exactly the same as a class.


    function Person(firstName, lastName) {
    let fName = firstName; 
    let lName = lastName;

    function getFullName() { 
        return fName + ' ' + lName;
    }
    
    function setFirstName(firstName) { 
        fName = firstName
    }

    return { getFullName, setFirstName }
    }

    const person = new Person('John', 'Doe');
    console.log(person.getFullName());

I do like this trick of creating a class. You now can use constants with this method if you like.

You can also simplify your code by not redeclaring your variables and define your methods in the return object.

    function Person(fName, lName) {
        return {
            getFullName: () =&gt; fName + "" "" + lName,
            setFirstName: firstName =&gt; (fName = firstName)
        };
    }",3.0
g5l64bq,itze8f,"I don't mean to be rude, but why would you do this?",3.0
g5hpjlf,itze8f,"I mean not really, right? Objects have internal state that can change, whereas functions do not. Objects are not passed messages that manipulate arguments, they're passed messages which manipulate their internal state. So it's not really the same thing.",3.0
g5hx4wd,itze8f,"Functions do have state that can change, it's just more opaque than normal objects. That's why you might return one or more functions that take advantage of closure ‚Äî so they can modify those function scoped variables even after the function was run. Like public getters and setters modifying private variables in a more traditional OOP language.",8.0
g5humy0,itze8f,a function easily can have an object inside for storage,3.0
g5hwgy2,itze8f,"Why would you do this:

```
return function(method) { 
    switch (method) { 
        case 'getFullName': 
            return getFullName; 
        case 'setFirstName': 
            return setFirstName; 
    } 
}
```

When you could do this:
```
return { 
    getFullName,
    setFirstName
}
```

And then when you run the function, just destructure that object you get if you want. I mean really isn't the latter just about 10 times more intuitive?",2.0
g5hx961,itze8f,They did it Intentionally to help show the idea that it‚Äôs message passing.,5.0
g5pu3a6,itze8f,"Classes in JavaScript are, cause they're just flimsy tricks in a prototypal language to do fake OOP.  Classes in other, real OOP languages have a much stronger feeling of tangible utility.",0.0
g5i5npw,ityh6x,"[https://github.com/halfmoonui/halfmoon](https://github.com/halfmoonui/halfmoon)

Halfmoon - Front-end  framework with a built-in dark mode and full customizability using CSS  variables; great for building dashboards and tools.",3.0
g5j5qif,ityh6x,"https://github.com/AlexAegis/auth

Yet another Angular JWT auth library, this one automatically refreshes, but only when needed.",2.0
g5oxr4u,ityh6x,"[https://github.com/igniteram/appium-webdriverio-typescript](https://github.com/igniteram/appium-webdriverio-typescript)

Test framework for automating mobile apps with appium using webdriverio &amp; typescript!",1.0
g5hywey,itw6tr,"Thank you, OP!
I make a U-turn immediately every time I see RX in our project. Just a huge Nope for me.
It‚Äôs time to show who‚Äôs the little bitch here (not me)",3.0
g5hwjdw,itw6tr,"Compliment sandwich! I love it and this is a great resource for a topic that is quite sparse in actual examples that walk you through the process... I wish I had something like this years ago.

Secondly - It‚Äôs ugly; I said it. I get the vibe, and your casual and amusing tone from the first 2 articles shines through wonderfully. I think with the code, the choice of images, and just the extra complexity of this post compared to the 2 previous, you lost the balance and it got a little too chaotic/abstract.

I loved the YouTube metaphor in your previous article it gave the reader a really good framework to understand the concepts; this post could have really benefitted from a really solid metaphor like that rather than the abstract cat going to the party game. 

Still, huge net positive, I have no doubt if I need to spin somebody up on Rx an project I can send them to this.",1.0
g5t0xhc,itw6tr,"It‚Äôs ugly because RxJS was modelled after its RxJava OOP sibling (I‚Äôm not sure how the latest API looks like tho)

Personally I still wonder why Bacon.js or most.js aren‚Äôt more popular. . They follow a more idiomatic JavaScript syntax with well-designed APIs",1.0
g5i6djf,itvf8v,You ever take the day off and just use JS to make a button green or something.,69.0
g5j74r1,itvf8v,"How does the color green usually appear to you personally? In data8 or in data16? It all matters to the assembly, you know.",7.0
g5ke7e2,itvf8v,"struct Color { uint8_t r, g, b, a; }",2.0
g5kg38t,itvf8v,"Funnily enough the next episode is adding a kind of structure feature to the assembler (though not quire the same as C):

    struct Color { r: $1, g: $1, b: $1 }
    data8 block = { $00, $ff, $00 }
  
    code:
      mov &amp;[ &lt;Color&gt; block.g ], r1

Structures in this assembler are basically just like a lens that you can apply to a block of data/memory, in order to treat it as a certain type.",3.0
g5hnbej,itvf8v,Why am I in this group... I have no idea what any of that means,38.0
g5iqmzs,itvf8v,"Precisely because of this reason, actually! Well, maybe not so directly. But you're here to learn. And it's great when you find about things you don't know about or what the hell do they mean. Some Google searches, some questions asked in a confused fashion and you just might learn something awesome.",11.0
g5h6en5,itvf8v,Daem that's great content. Subscribed. Thanks.,6.0
g5h04xm,itvf8v,Your videos are really great!,4.0
g5h3j6r,itvf8v,Thanks Steve!,3.0
g5k2as6,itvf8v,We will watch this channel with great interest üòâ,2.0
g5i6xdv,itvf8v,"Why JavaScript? Although its possible, it's clearly not what JavaScript is for. Sorry if you already answered that question in your videos.",-1.0
g5i8fa2,itvf8v,"Well the channel is all about discussing these ideas through the lens of JS, because a lot of people know JS but don't necessarily have a lot of exposure to low level/computer science stuff - which I think is a shame.

&gt; Although its possible, it's clearly not what JavaScript is for.

I know what you're getting at, but I don't really know that there is anything that JavaScript *is for*. Do you have particular ideas about that?",21.0
g5j035z,itvf8v,Just wanted to say I am a huge fan of your videos and I thank you for exploring lower-level concepts through the JS lens. Keep the content coming!,3.0
g5ie9kc,itvf8v,"It's primary use is for client side scripting - that's what I was told by people who 'presented' it to me. I don't use it often, I mainly write in C/C++ and all the scripting I do is in bash or python. And yes, JavaScript is general purpose programming language, but I would expect mainly web devs to use it.

Because it's mostly used for www apps, a lot of people know it, but as you said they don't have  exposure to low level stuff, mostly because they don't need it. It's a loss for them (from the educational pow), but unfortunatly that's the result of a size of IT industry. The people who do need to know that stuff will usually write in low level imperative languages so it would be more natural to write an emulator in one of these - both for educational and performance reasons, although I know now why you chose JS.

Anyway it's a good project and looks very ambitious, I will probably check out your videos. Operating system for your platform and userspace code will be written in your new language anyway, so usage of JavaScript for an emulator doesn't change much - it just bugs me cause of performance.",3.0
g5kgywa,itvf8v,"&gt; It's primary use is for client side scripting - that's what I was told by people who 'presented' it to me.

It definitely used to be, but in the last 5 or 6 years the language has evolved a lot, and gained many features that make it a capable language (typed arrays, array buffers, data views, arbitrary sized integers, etc). Node has become a mature and stable platform for running JS outside of the browser, and the V8 engine contains a very sophisticated JIT compiler that can produce very performant code.

&gt; Because it's mostly used for www apps, a lot of people know it, but as you said they don't have exposure to low level stuff, **mostly because they don't need it**.

This is probably the other missing piece here. I'm not making videos that people need for their everyday jobs. I'm making videos for people that *love programming*. It's fine for anyone to only write code in order to make money, but there are a lot of people out there (like me) for whom development is more of a hobby or passion.

&gt; ...so usage of JavaScript for an emulator doesn't change much - it just bugs me cause of performance.

Performance is something you measure, understand, and address. It's not a standalone aspect - it's always relative to whatever you're trying to accomplish. For example, if you decided JS is too slow, and you want to use something like C# instead, what stops me from saying that C has better performance? And then someone comes along and says no, you should write this in pure x86_64 because the C compiler is missing all the opportunities to unroll and vectorise your code? And then someone else comes along and says you're still bound to a monolith CPU that cannot be fully understand, and you'd get way better performance by writing your own parallel processor on an FPGA.

Real understanding of performance comes from understanding constraints and tradeoffs, and taking careful measurements. Not from guessing.",3.0
g5jw3g9,itvf8v,What about ecma is clearly not applicable to this domain?,3.0
g5kcmvl,itvf8v,My guess would be weak dynamic type system with lots of implicit coercion.,1.0
g5kw5wd,itvf8v,"Meh, being a good programmer is about discipline more than anything else. Can I implicitly get the floor of a float with `someFloat | 0`? Yes. Would I ever do that? No, I'd write `Math.floor(someFloat)`. And trust me - despite the memes you might see, no one is actually adding empty arrays to objects in the real world.

You can learn how to write decent JS by just enabling the standard ESLint rules for a day, and reading the explanation every time you inadvertently break one.",1.0
g5lklol,itvf8v,"If you don't mind me asking, what were the factors that lead you to choose JS for this project? If you already answered in one of your videos, I can just watch the video.",1.0
g5lq0f4,itvf8v,"I don't mind at all. I started the channel as a way of talking about concepts that I personally find really interesting (parsing, compilation, digital logic/fpga, API design) with a group of developers who are normally exposed to those kinds of ideas. JavaScript is basically a kind of lingua franca now, and despite what a lot of people say, has become quite a capable language in the last few years.",1.0
g5l8nwo,itvf8v,"I agree about your points of what makes a good programmer. I was focused more on why ECMAScript might not be the first choice for implementing an assembler and language for a custom console. ECMAScript is turing complete so it's possible, as demonstrated in the video. But a language that generates LLVM bytecode would yield numerous benefits and require less work than going through a javascript engine.",1.0
g5gxzah,itvf8v,....... why,-21.0
g5h23xt,itvf8v,"Well, being able to inline data definitions in the binary output allows you to model data structures, or build tables of precomputed values. Constants have all the benefits of giving something a name (using in multiple places, change once/change everywhere, etc) with no extra overhead at execution time.",15.0
g5hz1gp,itvf8v,That is truly awesome.,4.0
g5h23h9,itvf8v,Why do people climb mountains?,12.0
g5gsifl,itutwi,Source: [https://github.com/electric-eloquence/game-of-drones](https://github.com/electric-eloquence/game-of-drones),1.0
g5gl26q,itteyx,"This is the official node.js security google group (if you're using node in production, it's a good idea to subscribe!). That said, I think it might require logging into a google account to view it, so here's the full text:

---

Updates are now available for v10,x, v12.x and v14.x Node.js release lines for the following issues.

### HTTP Request Smuggling due to CR-to-Hyphen conversion (High) (CVE-2020-8201)

Affected Node.js versions converted carriage returns in HTTP request headers to a hyphen before parsing. This can lead to HTTP Request Smuggling as it is a non-standard interpretation of the header.

Impacts:
* All versions of the 14.x and 12.x releases lines

Thank you to Amit Klein who works at Safebreach for reporting this vulnerability.

### Denial of Service by resource exhaustion CWE-400 due to unfinished HTTP/1.1 requests (Critical) (CVE-2020-8251)

Node.js is vulnerable to HTTP denial of service (DOS) attacks based on delayed requests submission which can make the server unable to accept new connections. The fix a new http.Server option called requestTimeout
with a default value of 0 which means it is disabled by default. This should be set when Node.js is used as an edge server, for more details refer to the documentation.

Impacts:
* All versions of the 14.x release line

Thank you to Paolo Insogna and Matteo Collina who work at NearFom for reporting and fixing this vulnerability.

### fs.realpath.native on may cause buffer overflow (Medium) (CVE-2020-8252)

libuv's realpath implementation incorrectly determined the buffer size which can result in a buffer overflow if the resolved path is longer than 256 bytes.

Impacts:

* All versions of the 10.x release line
* All versions of the 12.x release line
* All versions of the 14.x release line before 14.9.0

## Downloads and release details

* [Node.js v10.22.1 (LTS)](https://nodejs.org/en/blog/release/v10.22.1/)
* [Node.js v12.18.4 (LTS)](https://nodejs.org/en/blog/release/v12.18.4/)
* [Node.js v14.11.0 (Current)](https://nodejs.org/en/blog/release/v14.11.0/)",31.0
g5hjw5z,itteyx,Sorry not a node.js developer. But does this effect local installs of node for use by programs?,7.0
g5hub7f,itteyx,"I guess it would depend on what those programs use Node for. If they're using it to make web requests, then you should be safe from the Denial of Service and HTTP Request Smuggling ones (since these seem to affect server-side Node). 

You could potentially have buffer overflow issues if the local app is using the file system module to read paths though.",4.0
g5i0fjs,itteyx,Thanks man. I wonder how I could check that. I believe node being used by sublime-text and adobe products.,1.0
g5k2tnn,itteyx,"You would need very long file paths and file names to trigger the Buffer Overflow; I've done it before when I was using complete sentences as my naming structure, it's something that could definitely show up in the node\_modules directory, with a library importing its own node\_modules several tiers deep. These errors would certainly trigger issues in the app that calls them, so i doubt you've run in to it",1.0
g5k2nkm,itteyx,Those softwares should update their own local node when you update them,1.0
g5gwf7v,itteyx,Eek the DoS is a pretty bad one.,3.0
g5k352v,itteyx,"&gt;All versions of the 14.x release line

I guess I'm lagging but I wasn't even considering node 14 yet, still using 12. That this wasn't an issue until 14 suggests they had addressed it previously but some of their recent changes undid that approach.",2.0
g5kiyc6,itteyx,"If it's in the 14, it probably exists in 12 but a slightly different approach",2.0
g5i802k,itteyx,Yeah... is that just a slowloris attack? Been around since 2009...,1.0
g5griwq,itteyx,Why is the link trying to get me to log in!?,2.0
g5k2mb6,itteyx,"the  fs.realpath.native  seems so familiar to issues I've had in windows, which for a long time had a 256 character limit on filepaths+names",1.0
g5k5osk,itteyx,Thanks for update this. It's a helpful to developers.,1.0
g5gal5t,itrbxd,"Hi again everyone! I recently built a small version of mspaint in the browser using only html, css, and js.  No third party libraries. It was built in 48 hours, the code is kind of messy, but I have never done anything with canvas before, so there were a couple refactors in the process

[Link to app](https://ms-paint.uzairashraf.dev/)  
[Link to source code](https://github.com/uzair-ashraf/paint-clone-js-hacks-1)",2.0
g5gjy9a,itrbxd,Took you too long :p,2.0
g5gli12,itr6tr,Every time I ask someone what they mean by e2e I hear a different answer - I hate the phrase. I‚Äôm co creator of selenium back in 2004.,45.0
g5h1cvo,itr6tr,"Can you expand on why you don't like it? The usage in the article is exactly what I think of when I hear E2E:

&gt; End to end testing makes sure a system works as expected for the end user by testing the different flows that a user might take within an application

By this I understand that a web page is loaded up, some input actions happen, then the DOM is inspected to verify functionality.",10.0
g5hhwdk,itr6tr,"As I said everyone I chat to about what is end-to-end (or e2e) tells me a different thing.

Is it in an environment like QA? Is the QA like production env? Is is actually QA? Are humans in there too? Are there other bots/scripts active in there concurrently? How often does that env get re-created? How long does it take to recreate it? Is data reset between tests? Is data reset between test runs? 

""a web page being loaded up, some input actions happen, then the DOM is inspected to verify functionality"" is something I'll do on localhost in a server I'll bounce as fast three/five times a second (one per Se test). I'm never going to call that e2e.",6.0
g5htb0v,itr6tr,"I think you're overthinking it. A dev build on localhost is not E2E - it's an integration test. A prod build in QA is E2E, whether or not there are bots or people (although I think it depends on the app as to whether this interaction is representative of prod).",2.0
g5j8gam,itr6tr,"\&gt; As I said everyone I chat to about what is end-to-end (or e2e) tells me a different thing.

Probably because people are writing different applications for different reasons/target groups and therefore the definition of what a passing e2e test suite is/can be varies from case to case?",3.0
g5k1cks,itr6tr,"I guess. But to be useful as a term it should have some consistency. - ""do you have e2e tests"" if answered ""yes"" has to be followed with ""what precisely are your e2e tests"", when you discover the massive variance.",-1.0
g5gpn06,itr6tr,"respect for being part of selenium.

The original article said end to end testing, I also prefer it over e2e. Would love to hear from you what do you think about automated testing. It's becoming a lot more popular over the last two years (at least among the developers I personally know).",1.0
g5gs54y,itr6tr,"I dislike the term ‚Äúend to end‚Äù too.

This is what I like - https://paulhammant.com/2017/02/05/a-16-second-java-webapp-build-including-webdriver-tests/ and https://paulhammant.com/2017/02/01/ui-component-testing/",5.0
g5gbxkg,itr6tr,"I always struggle with it, I wonder if there is someone here that done any large-scale automated end to end testing before (via API or Web automation)?

What was it like? a much time it took to build, what is your experience of it?",8.0
g5gv78s,itr6tr,"At the company I work at currently myself and two others pretty much worked solely on e2e tests for a month using cypress. I think we ended up having about 600 tests. Cypress itself is fine,it does what it needs to do but can be a pain with tests timing out or minor UI changes causing lots of tests to break.",6.0
g5h13jt,itr6tr,"Minor note about minor UI changes:  a better solution would be using selector maps with automation id attributes instead of hard coding classes or dom structure into e2e tests.  Then this selector map is shared between source code and tests.  Maybe obvious, maybe not.  But requires a chunk of time refactoring for much less test breaks in the future.

Ex: selectors: { save: 'data-automation-save } then this variable is used in two places.  

Of course this can only go so far based on the complexity of assertions.

As for tests timing out, no matter what tech stack I was working with at my past company, we partially solved it with a retry pattern.  All failed tests get queued at the end to run at least one more time.  If they pass, the suite is considered as a pass but marked as flaky for human review / statistical analysis (a high amount of flakes on a *particular* test *may* point to a real problem in an endpoint or micro service but sometimes it's just random noise, hang ups, miscellaneous test framework glitches)",3.0
g5gyaxo,itr6tr,"We recently adopted Cypress. We tested 9 different areas of our app, a couple dozen examples, in a bit over a week. The suite runs in about 4 minutes. Some stray thoughts:

* It was tough to figure out best practices, there was a lot of trial and error before we felt like we figured out good habits to make them stable, easy to interpret, and reasonably easy to maintain. I‚Äôd love to share some of my notes and swap ideas if anyone is interested or has their own to share.
* It‚Äôs going to be an ongoing struggle to define just what should and should not be tested, I think it‚Äôll be a bit easy to overlook important things or go the other way and test too much, which could result in a very slow and brittle suite.
* It can be slow, it has some weird bugs. We‚Äôve opened or commented on two issues related to performance and stray errors since we started.
* It‚Äôs glorious once you get it working. We caught a couple small bugs with it already and I think it‚Äôs going to be more and more important as we add team members. I‚Äôm very glad we invested the time and I expect us to really take advantage of it.
* Despite some bugs, Cypress is a great product, at least so far. I really like their library and test runner interface. I do not like some of their opinions, particularly their stance on conditional testing.
* I still don‚Äôt have it running in our CI environment, I‚Äôm not sure when that will happen. I‚Äôll need to figure something out with Docker containers to create the full env. My advice here for others is to think carefully about how, where, and with what frequency you want to run these tests.

So overall, a kind of tough adoption but an extremely valuable investment. It‚Äôs already giving us a lot more confidence as we work.",4.0
g5gwx3n,itr6tr,"I've enforced e2e tests on the last few projects I've lead, and honestly it's been nothing short of career-changing. Most of the devs working on these projects end up loving the tests and using it on their own projects.

Mainly just use cypress for frontend, idk anytime I'm done making a feature without e2e tests I'll have to click on everything to make sure it works right? I just write the e2e test instead, add test ids to elements, literally ""click on this button"" ""expect this element to show up"" ""select this dropdown"" ""expect this to change"" etc. The actual cypress code is almost as easy as what I just wrote in english imo.

On my backends I use mocha/chai to actually hit my endpoints and expect certain behaviors or values. Again if you normally make an endpoint you test it manually when you're done right?? Why not just write that into the automated tests so that it checks that every time from now on?

Last integration note, I think it's extremely important to force the project to run tests on every commit/PR/whatever. If you're on a team and you don't have confidence that everyone's running the tests, it loses efficacy. I always run my tests on PR using github actions, can't recommend enough.

Honestly super painless and immediate benefits. I promise you all, there is nothing more liberating than writing apps with test coverage. I WANT bugs to come up as often as possible so I can fix them and fix my tests, and return to confidence that there are currently no bugs with our current test cases. Literally any bug report I would just run my tests again, either it was a new edge case that I write a new test for, or my tests passed and it really wasn't a bug.",3.0
g5gpkfa,itr6tr,Our team has been using chromatic with storybook. It‚Äôs provided sanity in my life. We‚Äôre in the midst of a redesign and our team doesn‚Äôt have resources to write headless browser tests. Screenshot testing has been more than sufficient.,1.0
g5h0132,itr6tr,"We started doing something similar at uber. You write storybook stories, then CI checks whether the screenshot has changed. Autofail on things like blank screen (i.e. js error), provide a before/after comparison UI if there are changes over some threshold.

The problem with integration tests IMHO is that it's not easy to narrow down to a root cause from the assertion failure. This is particularly annoying when the regression is introduced via something like a library upgrade.

Also, in my experience, it's far easier for integration tests to be written poorly, e.g. test passes today then fail tomorrow because someone forgot to mock a date.

And they flake out a lot too, so you need to do things like retries and failure categorization to try to get things somewhat under control.",3.0
g5h2atx,itr6tr,"Nice to see you here! 

You dont know me but Im still using mithril 0.2.4 for my complex knowledge management app and love it.  Just wanted to let you know that =)   Thanks so much!",2.0
g5h6c5l,itr6tr,"Interesting. I‚Äôm curious about when the screenshot comparison was being run at uber? Also, did you all choose an alternative approach that was much more sufficient? Or what do you think is a better solution? We‚Äôve been running screenshot comparisons as a PR requirement because too many things were changing/rippling effects and screenshot testing provided us with more traceability. Now, any UI differences have to be approved and if denied then the PR code (styling/JS) must be re-evaluated.",1.0
g5hk3xw,itr6tr,"So the way we do it is we run the CI job when a commit lands on master, and we store the screenshots from there. Then when you create a diff, we run CI again for that diff and validate the new screenshot against the one from master.

We're transitioning to this screenshot-based approach to discourage people from writing ""tests"" that consisted of jest snapshots of huge unreviewable blobs (from e.g. enzyme shallow renders).

Naturally, we still encourage people to write unit tests where they make sense. Our framework also allows people to write something we call [simulation tests](https://fusionjs.com/docs/testing/simulation), which are similar to integration, but don't spawn the entire application in a browser, but rather consist of mocking/disabling plugins that are not of interest and running tests against e.g. specific middlewares/routes in a pure-ish fashion.

We also surface test coverage and type coverage reports per diff, and we alert on bundle size changes per diff as well.

People can also write puppeteer-based integration tests and we have a bunch of infra to deal w/ microservice proxying, shuffling docker images to cloud spot instances and all that jazz.

Going forward, I think the plan is to start getting more into cross-browser testing w/ playwright instead of puppeteer, although that's not as high priority, since everyone generally uses https://baseweb.design/ internally and thus, a lot of that type of testing can be centralized to that framework.

The CI stuff is fairly tightly coupled to our infra, but if you're interested in any of this, our web framework is open source. I believe we're also planning to open source the storybook/screenshot tool at some point.",2.0
g5i2126,itr6tr,"Yea, the simulation testing is very similar to what we're doing with the [react-testing-library](https://testing-library.com/docs/react-testing-library/example-intro). Looks cool and I definitely will dig deeper into that link you sent me. Appreciate it! 

In terms of test coverage we're leveraging [codeclimate](https://codeclimate.com/). We started using [calibre app](https://calibreapp.com/) to get a better narrative on performance (but that's basically on a cron job that runs against staging and production). Probably is a good idea to automate tests against bundle size.  

As far CI is concerned, we have CircleCI running docker, linting, running tests, shipping tests off to code climate, running chromatic, deploying storybook, and updating respective environments.",1.0
g5h13tz,itr6tr,"I used backstopjs to visual test all storybook stories, works pretty well off the Jenkins ci we have too. It takes some time to get all library tested (6 mins for about 250 components) but gets the job done",2.0
g5i4vyc,itr6tr,"I did QA (manual and automated) for 10 years before switching to development. End to end testing is a huge time investment and despite all that effort, bugs still happen.

You have a finite amount of capacity to automate things or to maintain automation, you have to invest it wisely to keep moving.

This is not to say you shouldn‚Äôt test, you should. End to end testing across several features and services and god forbid applications is madness though, and once you start doing it people will start to rely on the false confidence it gives you and you‚Äôll never get away.

Instead do feature level tests of all the most critical pieces of your system (the ones that make money and actually get used) and make sure you are designing in such a way that if a component fails the whole system doesn‚Äôt fall over.",1.0
g5gpe76,itr6tr,"Just started spinning up cypress for more automated acceptance tests for our startup.  So far it‚Äôs great, but only a single module in a dev instance so far. I‚Äôve seen huge amounts of effort and engineering go into testing and it almost always ends up being painful and flakey no matter how much goes into it. It‚Äôs a difficult aspect of the craft to get right.",3.0
g5gc342,itr6tr,Thank you for sharing this. It is great article. I wonder how people do performance testing other than load runner,2.0
g5hctqu,itr6tr,"I spent months (not full-time) building up a framework with Puppeteer and Jest. The hardest part honestly was getting most of the stack running in the CI environment. We primarily use JVM languages and Spring MVC in the backend so the memory requirements are very challenging for resource constrained CI environments. In some cases, we needed to turn services on and off at different times.

Writing and maintaining the test code is also challenging. Like people have been saying, there are always weird instances of the test getting stuck. Never fall into the trap of adding static waits/sleep in the test code because it's a fragile solution (unless all other options are exhuasted). Instead, introduce retry mechanisms at different levels. In some cases, the test would have a retry function on clicking an element and wait for another element to appear for example. We also implemented retry on full test failures as well.

I also recommend writing driver functions that are reusable, like selecting a date on a datepicker, or interacting with form elements. The driver functions can wrap boiler plate, like waiting for selectors and logging, as well as reduce the complexity of the interaction, so that the top-level code is very readable.

Since e2e tests are relatively expensive in terms of time and resources required, I found it effective to focus on user flows and things that are hard to unit test. This bolsters the multi-layered test philosophy; leverage the things the test technology is good at, but don't try to solve all testing with one approach.",1.0
g5lpiim,itr6tr,"Organizations spend millions of dollars employing automation engineers, enforcing coverage, running tests, and fixing false-positives. Yet in my experience, these tests almost never catch real bugs. And if they do, it's something obvious that anyone with a functioning set of eyeballs would see if they bothered to look (like say, a QA department or a code review).",1.0
g5hftxw,itr6tr,"All of these comments make me want to continue to not use tests and stick to manual testing, which we've done for every project I've been on at my company for 2.5+ years.

Months of writing nothing but tests and you _still_ have edge cases that break everything?

I'm sure I'll move on to a company with stricter guidelines around tests, and maybe that will help me see the value, but are all of your webapps truly that complex and complicated that they need MONTHS of tests written?

I can't imagine the annoyance and frustration of having to update tests after making a quick fix or update to a feature, especially in the client world where they want tons of changes all the time.",0.0
g5h8mv9,itqp2c,"I'm not sure what the article is trying to say. The real reason to use proven shuffling algorithms is that most shuffling algorithms that people come up with are not truly random -- they introduce bias. You mention runtime complexity analysis, but don't actually analyze any of the functions you mention.

Your first implementation has a worst case runtime of Œò(‚àû), whereas the Fisher Yates algorithm has a worst case runtime of Œò(n), so yes, that's an improvement, but the bigger problem is that without a formal proof, it's hard to know whether a randomization algorithm you come up with is correct.",9.0
g5odpqq,itqp2c,"Would you explain more where is the problem, please?

After some googling, now I know that I should've analysed the functions I provided. But I don't understand what you mean by formal proof!

I'm trying to figure out where are my mistakes, whether being in my way of writing the post or in the tech information themselves, so that I can learn from them.",1.0
g5qxjxg,itqp2c,"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Algorithmic%20Complexity/complexity.html


https://www.cs.cmu.edu/~adamchik/15-122/lectures/complexity/complexity.pdf


https://www.cs.cmu.edu/~avrim/451f11/lectures/lect0906.pdf",2.0
g5haah9,itqp2c,"A few comments:

When you say ""If you care about performance, and you should do"" you should remove the ""do"". 

In your ""But what is wrong"" section you say ""Big O notation!"" Was that a placeholder where you find the actual Big O runtime? Just saying ""Big O notation!"" is kind of a non sequitur, add that's the measurement function not an actual description. It'd be like talking about something very hot or cold and saying ""Degrees!"". 

Your conclusion is a bit of a ramble. I suggest giving the recommendation and tying it up to the article. Also there definitely a limit for how far premature optimization gets you, but I feel like that's a topic for another time :)

I'm glad you found a good algorithm and learned something, good job! Keep it up, constant learning is the best part of programming.

If you want a real puzzler I have used an alternative shuffle that caused a very strange bug.

I'm on mobile so this may not show up right, but the idea is to sort an array with a random response each time.
```
myArr.sort(() =&gt; Math.random() &gt; 0.5)
```

This caused a VERY interesting bug. I'll let you find it if you want :)",2.0
g5hcz5c,itqp2c,Another good example why you should use proven algorithms rather than coming up with your own!,2.0
g5ofvex,itqp2c,"So, I wanna thank you for the grammar correction, I removed ""do"" :)

Also, I've read about the premature optimization. I didn't know about it, so thank you about that, too.

About the VERY interesting bug, I didn't see any interesting bugs I just replaced ""&gt;"" by ""-"" and it worked!

`myArr.sort(() =&gt; Math.random() - 0.5)`

If I didn't see what you were talking about, please explain what you meant.

Another thing, I actually came up with my own algorithm which was the ""bad function"" I mentioned in the post, but I wanted to see if there was any better algorithms.",1.0
g5p3r6f,itqp2c,"&gt;About the VERY interesting bug, I didn't see any interesting bugs I just replaced ""&gt;"" by ""-"" and it worked!

Heh, no that's not very interesting, that's just me typing on mobile.

Look at the distribution of the arrays after sorting. Then look at arrays that are smaller than 10 in size versus larger arrays. It also depends on what browser or version of nodejs you're running on.",1.0
g5hgm9r,itqp2c,Change the title: ‚ÄúThings I learned when trying to code an array shuffle.‚Äù,1.0
g5i4z6u,itqp2c,"Thanks!

That actually makes sense, I couldn't edit the reddit post but I edited the original post's title.",3.0
g5gwhe9,itqp2c,"import _ from ‚Äúlodash‚Äù

_.shuffle(array);",0.0
g5g887b,itqp2c,[deleted],0.0
g5gbcji,itqp2c,"Thanks for the note.

In the link I referred in bottom of the post, you could see why this also is not the best way.",1.0
g5fnszr,itnhyd,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g5fpd29,itnhyd,Fixed!,1.0
g5gday1,itnhyd,"&gt; the work is under exclusive copyright by default

Then why do companies need to put Copyright on everything?",1.0
g5geofl,itnhyd,To remind people?,2.0
g5kgy7o,itgzc8,"That's nice, though you will get far superior results with

[https://github.com/uNetworking/uWebSockets.js](https://github.com/uNetworking/uWebSockets.js)

and somewhat in-between results with [socket.io](https://socket.io) and another ws engine

[https://github.com/mmdevries/eiows](https://github.com/mmdevries/eiows)

in both cases, it'd a good idea to \*not\* put a proxy to avoid useless overhead and complications.

Also note that uWebSockets.js provides a lot of functionnalities except long-polling fallback. However, clients actually in need of long-polling are very rare (&lt; 50 out of 6000 this morning on a cluster i own) when using wss, because firewalls won't know how to stop websockets hidden inside SSL traffic. I suspect the ones with xhr are just having a slow connection, or multiple browser tabs open to the same site. In which case:

[https://github.com/IguMail/socketio-shared-webworker](https://github.com/IguMail/socketio-shared-webworker)

could be a nice solution to avoid the browser limits on concurrent websocket connections.",1.0
g5d2sk4,it9qln,"

I used the free version of Dialogflow mentioned at last. It's also easy to connect to many free platforms like Facebook Messenger.
works by detecting Intents like Amazon Alexa that are configured in the online interface",1.0
g5h36mr,it79ju,"Pretty cool. I eventually am going to be building an Electron app that should be able to send a PDF file to a printer, so I'll have to dive into the underlying nodejs module.

Another option if you have access to the machine where the printer is connected, is qztray. I've only used it on Windows and not from node, but from a simple webpage. But you can print a pdf pretty easily by sending messages via websockets to the machine running qztray.",3.0
g6s3r36,it79ju,"Web based printing is so convenient. It's what I always used when I was in university on a Linux machine. My early CS courses had assignments that needed to compile and run in a Linux environment, so I used to dual boot. I didn't have to deal with printer drivers when I used web printing.",2.0
g5ch6pw,it747g,Nice! Thanks for sharing,2.0
g5dsupb,it747g,No problem :),1.0
g5ch7f8,it747g,"It's not exactly the most secure way to add a watermark, but it would be much better utilized to add interactive elements of some sort.",1.0
g5ckic0,it747g,Yeah this would be super easy to hide. A more secure way would be to play the video on a canvas and add a watermark to the canvas on top of the video.,2.0
g5dstq8,it747g,"Hmmm, very interesting, I'll look into doing it that way. Thank you :)  


But I should note that I'm probably going to be using this in an electronjs desktop app with developer tools disabled, so the users won't be able to get rid of it that way.",1.0
g5cc638,it53dx,What's MonogB?,1.0
g5ctch5,it53dx,"Thank you for calling my attention to this.
I meant MongoDB.",1.0
g5ct9jd,it53dx,"Oops.... So sorry, I meant MonogDB.
Unfortunately I can‚Äôt edit it.",1.0
g5cfefp,it3qbp,"\+1, but title is utterly incorrect.

JS type system rules around implicit type coercion (\*) are there to be used. Its not result of including some other functionality. It was conscious design choice and end result is what JS creator wanted to achieve.

&amp;#x200B;

(\*) Implicit type coercion === ""weakly typed"" as far as author explained that term. Type coercion is a thing with definition, ""weakly typed"" is not a thing and everybody mean a different thing they they use it including ""better then yours"". Please do not use ""weakly typed"" term. Be precise. Implicit type conversion is implicit type conversion. Duck typing is duck typing. Dynamic types are dynamic types. Non of those is ""weakly typing"". Thx!",3.0
g5cqrgc,it3qbp,"&gt; This makes it difficult to analyze how the program works just by reading its source code.

Yeah if you're really bad at writing code it will. but 99 out of 100 of cases it's not reading source code that types help with. Well, unless you use union types a lot. 

Also 

&gt; One of the surprising rules that the loose comparison operator uses to compare values of different types is the one that says that null and undefined are equal, while the strict comparison algorithm treats those two values as different.

Like, is this really that surprising that the two types of nothings are the same when loosely compared :v",1.0
g5c0ra9,it1dx5,That is done very professionally. Thanks to everyone who contributed to Moment.,180.0
g5bsi0v,it1dx5,It's been a long time coming. Moment made an incredible contribution to the ecosystem in a time where Javascript definitely needed it but it hasn't been a good choice for new projects for a few years now. Things like tree-shaking are pretty much requirements for modern libraries,285.0
g5c9m3d,it1dx5,"Just like jQuery. New developers don't understand it, but we are grateful forever towards those libraries that shaped the browsers with standardizing everything. We shall mourn our dear friends. Before you know it the next ones will be React, Angular or Vue",146.0
g5ca6ah,it1dx5,"Yes indeed, every library is a stepping stone to the next. New developers don‚Äôt understand what life was before jQuery.",67.0
g5cn7k4,it1dx5,"I was writing SPAs before gmail existed. document.getBy...... was my world.

RIP Moment.",41.0
g5cvdk9,it1dx5,"Every time I type ‚ÄúquerySelectorAll‚Äù, I still get excited about being able to use that ‚Äúnew‚Äù API.",67.0
g5e1pvj,it1dx5,I am a noob. by 'new'  API you mean Jquery?,2.0
g5e8367,it1dx5,"As far as I know, when jquery was born, there wasn't a native way to query the DOM with css selectors, so I think they created it (or at least popularized it) but eventually, querySelectors were added to Javascript.

He's saying that he's been in the business long enough as to witness the introduction of that api, even though to this day it has existed for a ""long"" time and it's no longer new.",13.0
g5eq9ls,it1dx5,Indeed. xhr blew people's minds. Not having to use invisible iframes to load server responses was incredible too.,4.0
g5ei8y2,it1dx5,I see I see. The u/relativityboy above said he wrote with document.getBy.... before Gmail. Does that mean document.getBy... existed before Jquery and then they added querySelectors after the Jquery?,1.0
g5epxln,it1dx5,"There was get by id and, element type IIRC. jQuery's biggest contribution was css queries. It was a REVOLUTION. The other was pushing chaining as a standard practice. ( promises with multiple .then are a good example )",4.0
g5fjb6k,it1dx5,"Nice, promises invented by Jquery? And then JS used them?  Now I wanna know more about people who wrote Jquery... 

Are css selectors Jquery invention too? Because Ive used that in PHP scraping libraries. I don't if those are older than Jquery",1.0
_,it1dx5,,
g5etqrj,it1dx5,"When jQuery came out, it allowed you to manipulate the DOM with selectors like `$("".className"")` and `$(""#id"")`. This made developers' lives considerably easier, and it was such a good idea that when they revamped JavaScript in 2015 with ES6, they added `querySelector("".className"")` and `querySelector(""#id"")` (which essentially do the same thing) as official features of the language.",6.0
g5e6fuk,it1dx5,He means querySelectorAll,3.0
g5eluwz,it1dx5,"No, it's the browser API that lets you manipulate the DOM",2.0
g5erqom,it1dx5,"It's FANCY. But far too many letters. Alias to $.... 

FTR, I'm a react junkie these days, but I think web peaked w/backbone and related extensions. Didn't scale to devs of varying talents as well, but you could make things of real beauty.",1.0
g5qtfl2,it1dx5,"Hilariously, I used to use it all the time, but I've started to prefer specificity as much as I can these days - I'd rather do getElementsByClassName over querySelectorAll",1.0
g5ctc5o,it1dx5,DHTML BAAYYYYBEEEEE!,8.0
g5eqbjx,it1dx5,&lt;3,1.0
g5cnm5a,it1dx5,Oh. I do. 20 years of JavaScript development leaves scars on a person.,18.0
g5dawwr,it1dx5,"...then you're not one of the ""new developers"" that the comment was referring to.",17.0
g5cqkzl,it1dx5,"They were also a stepping Stone to the Next.js

Ill ser myself out now.",1.0
g5cbpl0,it1dx5,Before JQuery writing an event handler could take weeks.,14.0
g5cj2db,it1dx5,Weeks??!?? It took months!!,3.0
g5ek7td,it1dx5,Yep 100%. Those who‚Äôve been there from the beginning definitely have a much higher appreciation for these libraries that are now so often scoffed at,1.0
g5cifgr,it1dx5,Trying to keep up with this shit is frustrating to the point of infuriating,-10.0
g5cipv8,it1dx5,If it‚Äôs infuriating keeping up with trends and learning new things maybe it‚Äôs not the field for you?,25.0
g5cqlgr,it1dx5,"I kind of agree, but also harsh. If you can't find joy in being frustrated then maybe this isn't the field for you, lol.",9.0
g5cydow,it1dx5,"I kind of agree, but also irrelevant. If you can‚Äôt find joy in passive-aggressive communication with your incompetent managers then this isn‚Äôt the field for you, lol.",3.0
g5dqjr4,it1dx5,ding ding ding - winner,2.0
g5bszrh,it1dx5,What is tree shaking?,48.0
g5bti1v,it1dx5,"It allows bundlers like Webpack to ignore unused code and just bring what is needed, not the entire library.",104.0
g5by33v,it1dx5,Us old timers used to call it ‚Äúlinking‚Äù,71.0
g5cnuyj,it1dx5,Linking is a low-level implementation detail of modules. Tree-shaking is a high-level construct on top of modules.,17.0
g5d3xej,it1dx5,"Exactly, it's also related to [Abstract Syntax Tree](https://github.com/estree/estree) that is used for code analysis. Compiling code as an abstract syntax tree then ""shaking"" the tree to remove any unused code (or more accurately, it's ignoring anything not in the AST, making it more like ""live code inclusion"").

Linkers typically don't do that, and all the linkers I've used link dynamically by default, whereas tools like webpack include all necessary code which is more like static linking. Abstractly, tools like webpack could also be considered text pre-processors. Including code from a `require` or ES6's `import` is no different than what a pre-processor directive like `include` does in C.",15.0
g5dozb9,it1dx5,You haven‚Äôt used that many linkers then. Check out Link Time Optimization.,4.0
g5etpx2,it1dx5,"Not sure what you mean. I'm talking about [this technique](https://en.wikipedia.org/wiki/Tree_shaking), which is different because it's not ""exclude if possible"", it's ""include if necessary.""",3.0
g5c5r0e,it1dx5,"Yeah I wonder why they use such a fancy new term, when a perfectly good one exists.",0.0
g5c6kut,it1dx5,"""Linker"" has a specific meaning in the context of compilers. Webpack is not a compiler but a bundler. So it would be incorrect and / or confusing.",77.0
g5cmy66,it1dx5,"Webpack is a textbook linker though...


I have no issues with the term bundler especially when on the JavaScript context, but webpack meets the definition of a linker IMO",11.0
g5c74lv,it1dx5,damn those [lisp developers in the 90's](https://groups.google.com/g/comp.lang.lisp/c/pspFr1XByZk?pli=1) invent a new term!,24.0
g5ckdcf,it1dx5,"Tree shaking is different than linking.

Let's say you link a library to yours, such as momentJS. After your build process, without tree shaking, you have 100% of your code and 100% of your modules' code.

With tree shaking, you're able to determine which pieces of the secondary module are being used and tailor the build process to only what's needed. The result: your build process is able to trim all the unneeded code from your imported modules and you have a fairly svelte end-product.",14.0
g5cnskd,it1dx5,"Honestly it's just different terms that mean mostly the same thing.


In the C world linkers have LTO (link time optimization) which does the same thing as tree shaking.",8.0
g5cpmh2,it1dx5,"Each language has its own vernacular.  I wouldn't complain about Java having a name for something in the r/Java sub, because it's their language. If it helps to think of it that way, tree shaking is JavaScript's LTO.

Everyone tries to improve on what exists (hopefully) and comes up with the language to describe it in their own way.",10.0
g5cnxzv,it1dx5,What are you planning on doing to that svelte product,2.0
g5cp425,it1dx5,"Let's say it's a single page app in Node:

Without tree shaking, your final product size is the size of your node_modules directory plus your code, for example. Aaaaall the modules code plus your code.

With tree shaking, using webpack for instance, your delivered single page app could be 1/100th the size (totally made up number) because it's only grabbing the pieces it needs.",3.0
g5bth8s,it1dx5,"Genuinely asking? If so, it‚Äôs the automatic removal of dead code when bundling JavaScript files into a single file.",21.0
g5bvdgt,it1dx5,I don't think it provides dead-code elimination. Rather it only includes things that have been explicitly imported from the library.,17.0
g5bycuq,it1dx5,Tree shaking does in fact eliminate a decent amount of dead code as long as it can be accurately statically analyzed.,31.0
g5c92wy,it1dx5,"Treeshaking and Dead code elimination are different features, but even though it leads to some confusion I think it's fair to call code that hasn't been (transitively) imported ""dead"", at least from your app's perspective.",14.0
g5d733e,it1dx5,https://i.imgur.com/qBgAqH4.gifv,3.0
g5f3084,it1dx5,"Yup, that's how it works. I'm building some real muscle flinging my workstation around at each build.",1.0
g5facgr,it1dx5,"Take the following scenario:
    
        import { Component } from ‚Äújs-lib‚Äù

If you are using a build tool like Webpack, it will see that you‚Äôve only imported `Component` and not the rest of the lib. 

If the lib supports tree shaking, only that component and it‚Äôs dependencies will be included in your bundle. This dramatically reduces your bundle size, especially when your project has many dependencies. 

Moment has a famously large size and the entire module had to be imported. Most devs simply accepted its cost since rolling your own date math implementation would drive you toward insanity.",2.0
g5c1hlp,it1dx5,moment() is a sad day,100.0
g5daamx,it1dx5,"Why? I would say this is a good day.

Moment is no longer necessary for many new projects, and the Moment devs are now explicitly telling devs that \`Date\` is fine, and for specific issues (i.e. parsing dates in localtime) more specialized libraries exist.",20.0
g5fb3ux,it1dx5,Do some non-trivial date math with the native Date obj and get back to me if you haven‚Äôt killed yourself.,15.0
g5fk2c5,it1dx5,"I usually convert to Unix timestamps if I have to do date math. Also make sure your server's date time is in UTC. Stuff like that helps. Let me know what kind of Date math is hard and I will either agree or I might feel like writing a blog post about it or just comment here with an explanation (I'd be glad to be of any help if you're interested in reading it). I'll agree with you if you're saying the API is a little wonky for example every time I use any part of the Date object I almost always read MDN, because it's just that complicated for example months getMonth is 0 indexed which is unexpected, getDay (day of week) is 0 indexed, getDate is like the only one that happens to be 1 indexed which actually makes sense in it's case, but is confusing since almost everything else is 0 indexed haha. Even to write even this I had to look up each of those API's on MDN. Unix Timestamps in JS are in milliseconds and not seconds which may be unexpected for some people. This is why I always try to read the manual, because everything on the Date object is possibly confusing.",0.0
g5e7shv,it1dx5,Why. It‚Äôs feature complete. Doesn‚Äôt mean you have to exchange it for the next best 0.0.1lib you can find,5.0
g82w6kd,it1dx5,Dude I'm pretty sure its a joke,1.0
g5dbkxh,it1dx5,"It is not. Moment will still be alive and kicking but will not get new features which is actually something appreciated by many people.

Having a stable library is much different than having a stale one. I don‚Äôt know why ‚Äúwebdevs‚Äù are so fixated in the and shiny things, many other areas of software development actually encourage using stable software... web devs get nervous unless using &lt; 1.0 versions because they aren‚Äôt using the newest trends...

Moment will give way to active development on newer libraries that haven‚Äôt reached yet the stable version but moment will continue on",10.0
g5d0orz,it1dx5,"For those looking for replacements, here's the list of recommendations from the Moment devs themselves:

* [Luxon](https://moment.github.io/luxon/) - can be thought of as the evolution of Moment
  * Locales: Intl provided
  * Time Zones: Intl provided

* [Day.js](https://day.js.org/) - is designed to be a minimalist replacement for Moment.js, using a similar API. It is not a drop-in replacement, but if you are used to using Moment's API and want to get moving quickly, consider using Day.js.
  * Locales: Custom data files that can be individually imported
  * Time Zones: Intl provided, via a plugin

* [date-fns](https://date-fns.org/) - offers a series of functions for manipulating JavaScript Date objects. For more details, scroll to ""Why date-fns?"" on the date-fns home page.
  * Locales: Custom data files that can be individually imported
  * Time Zones: Intl provided, via a separate companion library

* [js-Joda](https://js-joda.github.io/js-joda/) - is a JavaScript port of Java's Three-Ten Backport, which is the base for JSR-310 implementation of the Java SE 8 java.time package. If you are familiar with java.time, Joda-Time, or Noda Time, you will find js-Joda comparable.
  * Locales: Custom data files via add-on module
  * Time Zones: Custom data files via add-on module

* No library - a more viable option, hopefully, [in the future](https://github.com/tc39/proposal-temporal)",27.0
g5ccqqd,it1dx5,I don't blame them. Programming around timezones is an epic pain in the ass.,22.0
g5err4t,it1dx5,Well one should jump to epoch time ASAP,2.0
g5ctrqc,it1dx5,I can imagine. Did they program on the moon or on the ISS?,-5.0
g5c13dd,it1dx5,"So if they‚Äôre not updating it with a v3, and I don‚Äôt need to have an immutable date package... can‚Äôt we just keep using it?",14.0
g5cmj50,it1dx5,"You can, but treeshaking is still a problem and maybe you should consider slowly moving to one of the mentioned alternatives (or at least use them for new projects).

Otherwise your dependency on it will only increase and if proper treeshaking becomes a requirement you're in a bad position.",15.0
g5giys2,it1dx5,Not everyone develop for web. For node backend is perfect,2.0
g5dqxsb,it1dx5,"Yeah.  I'm using it in several projects for various clients, and have no plans to change that.  For new projects, however, I'll investigate alternatives.",6.0
g5czfo3,it1dx5,"It's not that you *can't* ... it's that there are better (eg. *much* lighter-weight) libraries out there that can do the same thing ... and both Lighthouse, and even the Moment people themselves, now recommend using one of those alternatives.

But (as they note), if you still want Moment for some reason (eg. you need ancient browser support), it will keep working.",7.0
g5br8ku,it1dx5,"It had a good run, but this makes complete sense. The landscape has changed.

RIP moment.",39.0
g5bx3cn,it1dx5,I guess this calls for a *moment* of silence.... I'm funnier when I'm not sad.,39.0
g5ckpj3,it1dx5,Yeah I'm oddly sad for a library that I've used and like but I'm not attached to. Maybe seeing things that have been staples of my relatively short career be deprecated makes me feel old and think of death,8.0
g5cwqw1,it1dx5,I suppose we are all one deprecation closer to death,2.0
g5bq7lw,it1dx5,F,57.0
g5bs0ei,it1dx5,F,-2.0
g5bted1,it1dx5,F,5.0
g5buev3,it1dx5,F,-6.0
g5buyvz,it1dx5,F,5.0
g5buzzb,it1dx5,F,-7.0
g5bwdxa,it1dx5,F,3.0
g5bwkuj,it1dx5,F,-8.0
g5c1jog,it1dx5,F,4.0
g5c1ue3,it1dx5,F,-4.0
_,it1dx5,,
g5brq5b,it1dx5,Hrm so what is the heir apparent?,31.0
g5bt5qu,it1dx5,date-fns,75.0
g5bwv6b,it1dx5,Using plain js dates is a nonstarter when manipulating non browser zoned local times,31.0
g5c66o0,it1dx5,Isn‚Äôt that what date-fns-tz is for?,11.0
g5c6gln,it1dx5,"That will handle most cases, but imagine like this,

Zone A has dst
Zone B doesn't
Both have same offset when dst not in effect
Browser is zone A


For every wall time range that is missing in browser zone, the equivalent date times in zone B will get moved as though they were in zone A

different example: spring forward moves 2ams on one day to 3ams, in browser zone, if you're manipulating a ""date-fns-tz"" in a zone 6 hours behind browser zone it will move 8ams to 9ams, as it's ""correct"" conversion to 2am browser time is then moved by the native object to 3am

Edit: the data of a zoned date time is
Year month day hrs min sec ms zone offset
The data of a native js date is year month day hrs min sec ms 
This is a lossy representation unless you are in browser zone

Edit edit
Basically all the issues on date-fns-tz are related to this https://github.com/marnusw/date-fns-tz/issues",5.0
g5criba,it1dx5,"Yeah, if your app has never had to look at cross timezone scheduling with the potential to cross DST borders, then it's hard to see why all the complexity is justified, but if it does, it gets annoying when people are like ""just use date-fns"" when it's not up to the task.",11.0
g5fl0b8,it1dx5,exactly,2.0
g5c0nsn,it1dx5,Is there a GitHub issue or blog post that I can read which describes this issue further?,3.0
g5c1ujn,it1dx5,"https://github.com/date-fns/date-fns/issues?q=is%3Aissue+is%3Aopen+dst

But as a library agnostic demo
https://jsfiddle.net/z3voL0n7/
2:30 becomes 3:30.
If the library is relying on the browser zone as a proxy for arbitrary local zones there are ambiguous and missing time ranges.

You can instead keep arrays/objects of local date params, but if you need perfect accuracy in your date manipulations in a ui for times that weren't generated by now() or equivalent that becomes really weird very fast, i.e. populating the valid hours in a time picker needs to handle ambiguous hour disambiguation and missing hour exclusion.

Edit: crank is dank yo, way to eat facebook's lunch",4.0
g5ch8xx,it1dx5,"Hehe was really only planning on eating my own lunch. Thanks for the info, the Date object is so unfortunate to think about sometimes.",3.0
g5ctdrv,it1dx5,Tc 39 temporal might fix it!,3.0
g5bxe8i,it1dx5,Who downvoted this user? Shame on you,-1.0
g5bxo5k,it1dx5,"Updoots are trivial ephemera to a time wizard council member.

May your weekends begin in United States minor outlying islands baker or howland standard time and end in the time zone of kiribati's line islands.

May your enemies do business in federal buildings on indian reservations in Arizona.",15.0
g5cdqlf,it1dx5,"You can always tell when someone has really been burned by time zone shenanigans.

Arizona is so weird and Daylight Savings Time is absolutely crazy.",9.0
g5crgha,it1dx5,"I don't know what that all is, but the way you say it really makes me not want to know",3.0
g5bzbsk,it1dx5,,
g5c8cb2,it1dx5,,
g5btcmy,it1dx5,"They have helpfully provided a list at the bottom of the post. I can't wait to drop this on my project manager, who's still debating whether he needs to abandon Flash for our web front-end.",88.0
g5bx1v9,it1dx5,A project manager making technical decisions? Wat?,64.0
g5bxl73,it1dx5,Yeah that dude's whole sentence sucked.,61.0
g5c61i9,it1dx5,"Definetly worked for a couple of people like this in the past. One in particular ranted for about an hour about why TS sucks because ""the types aren't real"" but then went on to praise flash and actionscript.

Types aren't real in assembly either, moron.",33.0
g5c6i3h,it1dx5,This comment is painful,9.0
g5c8nwf,it1dx5,"The same guy also refused to update the job description posting when they was looking for new devs. We was using Vue, but he refused to add it to the job description and was happy with the boring typical ""asp.net mvc and jquery"" that only described part of the system.

When I pointed out that if we want devs using modern tools for the Vue part of it, that we should obviously point this out, he had a major hissy fit at me in front of other people and said that anyone choosing jobs based on their tech preferences ""was an idiot"" (?????), and then stormed out of the room angry.

A few MONTHS later of not finding anyone, a new guy started and he happened to mention that Vue was mentioned on the job advert. Of course, I got no apology or acknowledgment that it turned out to be a good idea.

As you can imagine the whole dev team was dysfunctional as a result of this guy.",14.0
g5cghgk,it1dx5,Completely missing the point of types,6.0
g5cjatj,it1dx5,Yep he was,7.0
g5cfte4,it1dx5,"I once had a project manager that took all our suggestions and threw them out, dictated the entire stack to us and shortened the timeline from 6 months to 6 weeks to ‚Äúmake it to market‚Äù. I‚Äôm surprised I‚Äôm not dead.",10.0
g5d4qxb,it1dx5,[deleted],3.0
g5f3liq,it1dx5,I did quit that place. I was just desperate at the time.,2.0
g5cdcs9,it1dx5,That's... every place I've ever worked and every project I've ever worked on 40 years in the industry.,3.0
g5c16xh,it1dx5,That has to be a joke. Unless it‚Äôs some highly specialized back office tool that needs a big budget to be migrated,12.0
g5c76nn,it1dx5,"It began as a highly specialized visualization tool in 2005, that eventually metamorphosed into a full-blown editor with CRUD capabilities. It's got 100s of thousands of developer hours invested in it, and is basically feature complete while still having years of revenue potential.

There's no business benefit to switch unless the Flash runtime is outright made illegal.",15.0
g5c7k11,it1dx5,"Then it makes sense. We have had a similar situation at work with a highly specialized product on a legacy stack (inhouse framework in CoffeeScript, pre React, Vue etc). It didn't make sense from a business perspective to migrate, but after a while developers voiced concern about falling behind in their career and contemplated switching jobs because of it. There is a high cost in replacing developers too, so the alternative cost in migrating and keeping happy devs might be worth it for you. If the product is in maintenance mode in a slow sunset, that might be harder to convince them to do.",11.0
g5cls35,it1dx5,That‚Äôs the downside of the web ecosystem replacing the full stack every two years with something new and shiny.,6.0
g5c1pcc,it1dx5,"If this were even true, why would you continue to work at a place like that",1.0
g5c6yox,it1dx5,It's a business critical product and they are paying through their nose to maintain the Flash code.,5.0
g5c716t,it1dx5,No I'm asking why you specifically would continue to work at that company if that is the way they run things,2.0
g5c79a0,it1dx5,Because they pay much better than what anybody else offers around here. ActionScript is a very rare skill to find these days.,10.0
g5clu6m,it1dx5,Might be the next COBOL.,2.0
g5c8bwr,it1dx5,"It's interesting that he wouldn't just think, hey we are paying these guys a fortune for something which is Legacy and they are only going to get more and more expensive, let's change over, and save on wages.",2.0
g5c5n6s,it1dx5,"Maybe it pays well?

Or moving isn't an option for personal or practical reasons, and there isn't a better gig in town?",4.0
g5bzer0,it1dx5,"Hopefully the `temporal` proposal, though I don't know when/if we can expect to see it land: https://github.com/tc39/proposal-temporal",16.0
g5cfdzo,it1dx5,Dayjs,4.0
g5ca5xo,it1dx5,https://github.com/tc39/proposal-temporal,3.0
g5bxooe,it1dx5,Luxon,0.0
g5bycpy,it1dx5,It‚Äôs not luxon?,-1.0
g5bzedb,it1dx5,[deleted],12.0
g5cztpd,it1dx5,"FWIW Luxon *is* the recommended ""spiritual successor"" to Moment. 

But I haven't personally compared the libraries, so I'm not arguing with you; I'm just saying that *the Moment devs are arguing with you* ;-)",4.0
g5c0kja,it1dx5,,
g5bqs0c,it1dx5,Today is a day when men cry üò≠,34.0
g5br3rg,it1dx5,‚ÄúAre you surprised at my tears sir?... Strong men also cry.‚Äù üò≠,11.0
g5brhz6,it1dx5,Are you employed sir,9.0
g5do7nj,it1dx5,Is this a... what day is this?,1.0
g5bs9aj,it1dx5,Today has just become more difficult to format in different time zones.,9.0
g5dqwh7,it1dx5,Someone clearly didn't read the article.,2.0
g5dtl2u,it1dx5,"This is what it sounds like

When devs cry",1.0
g5ceke0,it1dx5,"for anyone looking for a maintained (and lightweight, tree-shakeable) alternative, check out [date-fns](https://github.com/date-fns/date-fns).",8.0
g5br9el,it1dx5,Dayjs,17.0
g5cglqw,it1dx5,There's a few alternatives. I went date-fns a couple years ago and have been very happy.,3.0
g5czu7v,it1dx5,"I've been using Luxon for about 2yrs because it was the most feature complete modern alternative to Moment at the time and I honestly haven't had any reason to look at any other libraries. I evaluated a bunch at the time when I ended up choosing Luxon on another project, but haven't looked at any since.

The app I've been building at my full time job for the last year and a half is heavily based on Dates, Times, and Durations. I bet Luxon is included in over a 3rd of our hundreds of TSX components, and I just love it.",3.0
g5erjum,it1dx5,"I described moment as jquery for dates.

Now its going the same way... thankfully :D",3.0
g5bpyit,it1dx5,üò¢,9.0
g5bs670,it1dx5,RIP sorta,2.0
g5c0wmm,it1dx5,"A moment of silence for moment.js. You served us well. Thank you for everything. RIP, I guess.",2.0
g5crxik,it1dx5,"This is an amazing decision. It's so well put together and reasoned through. I love that they suggest alternatives with justifications.

I can't stop thinking that if this were a for-profit company how much they would be fighting trying to use their popularity to claw back users and push away competitors. Instead we get this awesome and completely reasonable response. I'm impressed.

Good on you, moment maintainers!",2.0
g5csw1s,it1dx5,üò≠üò≠üò≠ RIP,2.0
g5e3m6u,it1dx5,R.I.P momentjs... Date-fns is really great if you're looking for a replacement,2.0
g5e5fex,it1dx5,"Love moment, what are some good modern alternatives?",2.0
g5f5548,it1dx5,You could say.... Their moment has passed,2.0
g5f78hq,it1dx5,moment.of.silence(),2.0
g5g0nme,it1dx5,"Yo! I am using `react-datepicker` in a project, which at the time actually recommended using monmentjs as a dependency. 
I think react-datepicker have a new version out now, which uses the plain JS Date object, but i can't be bothered re-writing all my code, ""if it ain't broke, don't fix it"". 
Am i going to burn in hell for NOT using the latest shiny new object, with tree-shaking and bells and whistles, that the user base DO NOT really care about?",2.0
g5bqfd1,it1dx5,"Its a datetime util library, why is there a need to be constantly maintained?",7.0
g5bqlz0,it1dx5,"bugs. it's a hard problem space.

date-fns has been the safer option for quite some time.",72.0
g5br8eu,it1dx5,"Why is it so hard? Its date time, not exclusive to js, its a 40yr old domain.",-58.0
g5brkk8,it1dx5,"Datetime is extremely complicated and annoying to understand and maintain.

I really this list here, it illustrates how complex this is:

https://gist.github.com/timvisee/fcda9bbdff88d45cc9061606b4b923ca",63.0
g5bw9tq,it1dx5,,
g5brqod,it1dx5,"Just internationalization of dates alone is a monster. Different languages, calendars, date formats, etc., it gets very complex. 

US centric dates may be a 40yr old domain but accessibility to other countries was largely ignored back in the day. The rise of internet accessibility and expansion of web apps has changed the requirements",17.0
g5bw4sz,it1dx5,Can't decide if this falls under naivete or ignorance is bliss,15.0
g5cqq89,it1dx5,,
g5bsn36,it1dx5,,
g5bs955,it1dx5,"Besides my other comment to you, thats basically what they are saying is that they are not going to update it to newer standards because so many older applications use it. Things have changed in the last decade or so they've been around and they are deciding to keep things as-is to maintain functionality rather than conform to the new standards, thats all really.",5.0
g5cfarb,it1dx5,This here is just lack of experience. Oh how naive.,3.0
g5bxn9z,it1dx5,Switched to Luxon a while ago. Much better anyways. Writing was on the wall for Moment since Luxon was released.,3.0
g5c3qgb,it1dx5,Luxon suffers from the same issues as moment. Bloated and not tree-shakable. Avoid!,7.0
g5c3zgm,it1dx5,What would you recommend?,2.0
g5c5q1q,it1dx5,Date-fns,8.0
g5cojh5,it1dx5,"It's funny how React-Router guys did the opposite thing: released the new thing as a new version of an old one. They do still keep support, in the same way tho, as they still support v3",2.0
g5d06cc,it1dx5,"The React-Router project is like a textbook case on how *not* to run an OSS project.

At the same time, it's also a testament to how, if you get the package name `react-whatever`, you *truly* have to screw up, monumentally, in order for another library to ""steal your lunch"".  As long as you keep providing a package that does a good `-whatever`, people will put up with jumping through insane hoops to keep using your package.",8.0
g5h1t1z,it1dx5,"sounds like angular.js as they moved onto angular-whatever. Not that i cared that much about angular anyway, an over-engineered piece of ... whatever.",1.0
g5c1gl5,it1dx5,This helped me move away from moment.js https://github.com/you-dont-need/You-Dont-Need-Momentjs,2.0
g5el0xk,it1dx5,That exact link is in the article,1.0
g5bx1u3,it1dx5,Farewell sweet prince.,1.0
g5c4ohw,it1dx5,"Well, F",1.0
g5c9h9z,it1dx5,"I understand most of the issues they've spoke about, and I generally agree with their choice to close the project. However, I'd like to know what the problem is with moment objects being mutable. Would there be huge benefits to making them immutable?",1.0
g5c9x3u,it1dx5,"We use moment A LOT and yes mutability is a problem but we just work around it, it would be great if it was indeed immutable. Imagine scenarios where you are passing around the date as a moment object deep into the backend and some jr engineer forgets that moment is mutable, does date.add(1,day) and a bug starts happening somewhere else in your code because the day is off by 1 day, issues like these are very hard to track and that is why immutability is preferred.",10.0
g5cbdg4,it1dx5,"Thanks. I've heard the concept before, but your example really made it sink in.",2.0
g5ce7fv,it1dx5,"Yea exactly this has happened to me. The power of moment is the date manipulations, but it sucks having to keep doing clone().add() etc.",2.0
g5cs9yw,it1dx5,How terrible is the overhead of just passing strings as timestamps? Instead of moment objects,1.0
g5d0nxa,it1dx5,"When we need to serialize we pass epoch, the problem is that it has no information about the time zone so that is our alternative but we need to know the context of the call to know the zone if needed, passing utc string is an option for sure as long as everyone understands that you have to pass it in the correct format. Moment is great for what we use it though with its caveats.",1.0
g5cba0s,it1dx5,F,1.0
g5chu5g,it1dx5,I use momentjs for every NodeJS project I have. Might need to start changing then.,1.0
g5d0q5u,it1dx5,"As someone who uses NodeJS to build non internet connected lighting control software, is there a reason to stop using it?",1.0
g5d1e1f,it1dx5,"Not really.  The major issue with it is ""it has too much code"" ... which is a non-issue for you.

The only real downside to continued use is that you won't get any new and shiny features that other date libraries get ... but it's not like the ""JS date library"" space is exactly *super active* right now anyway ... so again, I can't imagine you'd miss out on much.

I think it's people like you (and others with non-standard concerns) that made the Moment devs decide to continue to maintain the library (ie. y'all are the reason it's not ""dead"", just ""done"").",2.0
g5do5ez,it1dx5,It's God damn time,1.0
g5e7o7m,it1dx5,"Yeah, very wise decision!",1.0
g5eplts,it1dx5,Throws in the towel?,1.0
g5esgt9,it1dx5,"It's an expression which means ""to give up"":

&gt;This phrase comes from boxing. When a boxer is too beat up to continue, his coach throws a towel into the ring to signal that the fight is over.

- https://www.urbandictionary.com/define.php?term=throw%20in%20the%20towel",1.0
g5fdzx4,it1dx5,[Luxon](https://moment.github.io/luxon/) is way better anyway =\],1.0
g5fpnkb,it1dx5,It's like the end of an era,1.0
g5cda71,it1dx5,So what libraries should be used now instead of moment?,1.0
g5chz1f,it1dx5,"Like most have said, date-fns",2.0
g5d174p,it1dx5,See my post above (below?); I recapped all the options the Moment.js devs gave.,1.0
g5brvue,it1dx5,"Nooooooooooooooooo.......... üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠üò≠

Edit:
What‚Äôs with the downvotes?!?! I‚Äôm genuinely sad as I used moment.js a lot",-6.0
g5e4r7n,it1dx5,"No way! Oh looks like continue over Luxon Library.

Thanks guys",0.0
g5kdfw0,iszsiq,"Thanks, really great.

Angular reactive forms are absolutely amazing.",1.0
g5bldha,isvgri,"This looks noice, just what I need. I'm creating something and it'll be presentation ready by the month end.

Do we have any free slots at that time? I'd love to share my work, connect with people and take feedback.

Thanks.",1.0
g5bmnwn,isvgri,Can you send me an email with what you‚Äôd like to present? My username at my username dot org.,1.0
g5bqmbj,isvgri,"Hey, I've sent you a mail, can you check it? Thanks.",1.0
g5g5lql,isvgri,Are these just an hour long? I hope to have a chance to join while I wrap up work.,1.0
g5g6moa,isvgri,"Yep, around 40 minutes of talks and then we do a social happy hour afterwards :)",1.0
g59oyq2,isproz,"This feels awfully pedantic to me. \`reduce\` is doing the same accumulation, just wrapped inside a function. Sure, you should strive to use immutability when you can, but when you're using local variables wrapped inside a module that other people can't access, it's not that big of a deal. For the object reduction example, by intentionally using immutable code, you're forcing the function to iterate through all of the object's values each accumulation step rather than just updating the object with a new key, changing it from Œò(n) to Œò(n¬≤)",7.0
g5a4pdo,isproz,"I don‚Äôt know why you would necessarily use object key reduction to handle immutable updates when there are perfectly good alternatives. Aside from the ‚Äúobject spread‚Äù pattern, there is also the `Object.assign` pattern, where the first argument is always an empty object literal. Immutable code has very little to do with altering the time complexity of your algorithms. You just need to know the right way to do it.",2.0
g5ai01u,isproz,"Okay, so it's just a bad example then. That being said, enforcing immutability in systems not designed for functional programming often does lead to performance reductions. It's often easier and faster to implement algorithms imperatively rather than functionally. ""Functional"" libraries often use mutability and imperative code under the hood, and then just expose the functional API. So really I'm just not seeing the point to the article.",3.0
g5aoebl,isproz,"I don‚Äôt disagree with you. Having immutable code is great for making the codebase easy to understand and refactor, especially for a medium/large codebase. But sure, mutating your data is fine if you know what you‚Äôre doing. And by that, I mean *fully understanding the abstraction boundaries of your code*.

As long as the function caller cannot observe the mutation in any way, then you know it‚Äôs ‚Äúsafe‚Äù to perform the mutation, at least to the extent that the caller won‚Äôt have to deal with the consequences of incorrect coordination of mutable state. Most FP purists would agree on that point.

This isn‚Äôt Haskell, where pure immutable code actually helps the compiler understand how to eliminate unnecessary work and make your code run faster. In JS, performance is up to the developer and the runtime implementers.

But I do want to say that you **can** write fast immutable code if you want to. You can inline all of your function calls (with tooling like Google Closure Compiler), avoid mutating any identifiers in scope (by only declaring new ones), and use immutable persistent data structures wherever you need to update state a lot. If you do that, I promise your code will run fast, but it might not be easy in many scenarios.

There is a reason why Haskell or OCaml can often run about as fast as C... all that functional code gets compiled to imperative assembly/machine code at the end. Which means that for every ‚Äúpure functional‚Äù program, there is an equivalent imperative version of it with precisely the same semantics. But the imperative version is usually harder to write/understand.",2.0
g5bigoo,isproz,"I fully agree. For what it‚Äôs worth, I‚Äôm a strong proponent of immutability and functional code. We use elixir to power our band end and it works great. I just think it‚Äôs missing the boat to force these patterns in language that don‚Äôt benefit from being designed with immutability and structure sharing assumptions as core parts of the programming model.",2.0
g59nebh,isproz,Saved you a click: Use `reduce` instead of writing your own code.,5.0
g5bvrtp,isproz,"This entire article is predicated on the assumption that immutable, functional code is automatically superior to procedural code that accomplishes the same results - while actively declining to defend this stance. We can all agree that there are many strong arguments for preferring immutability and functional patterns, and that modifying out-of-scope variables is code smell at best or a dangerous bug at worst, but I don't see how these apply here. If you are declaring a variable in the same scope that you manipulate it - after which you presumably return it or pass to another function - what possible benefit is there in bundling that into a single assignment?

If the point here is to simply illustrate how one pattern can be replaced by another, which could be beneficial in a situation where the variable *is* out of scope, then:

1. Why not demonstrate in the procedural examples how the side effects could be problematic by declaring the accumulator in a higher scope, instead of using an example that shows the exact situation in which the functional equivalent provides no benefit?
2. Wouldn't the same benefits be achieved by declaring a new accumulator instead of reusing the out-of-scope variable, given that you will be declaring a variable to hold the return value of `.reduce()` anyway?",2.0
g59ghim,iso9u8,"This was a delightful article - I‚Äôd love to see a native `PromisePool` in ECMAScript, tbh.

Thank you for sharing.",26.0
g5a2jmn,iso9u8,Thanks!,2.0
g59zafa,iso9u8,"Shamless plug -- [Cockatiel supports bulkheads](https://github.com/connor4312/cockatiel#policybulkheadlimit-queue), and also allows limiting the number of queued promises if you'd like. You can pass \`Infinity\` to allow an infinite number of queued requests.

Also, in a scenario where you have a stream of incoming requests, you can check out RxJS' [mergeMap operator](https://www.learnrxjs.io/learn-rxjs/operators/transformation/mergemap), whose second parameter allows you to limit requests. I find that in cases where I want limited concurrency, I also tend to have streaming input.",10.0
g5b12vi,iso9u8,"Agree with others, this is more concurrency than parallelism. What other parts of the system besides your program do (even if parallel) doesn't have any bearing on if *your program* is parallel or not. In this case, the JS program itself is concurrent (via event loop asynchrony).

But Map() is only one of the iterators that you may want to be able to run concurrently... Filter, FlatMap, and ForEach are others that can run concurrently, and also benefit from batch-limits. And sometimes you also want serial asynchrony, such as as async Reduce (or Compose/Pipe).

Self-plug: fasy is a library that supports serial and concurrent forms of these various iterators (including transducing): https://github.com/getify/fasy",8.0
g5cwzw6,iso9u8,"Thanks for the comment, I'll definitely check your library out!",2.0
g59ibg2,iso9u8,"While a great technique, FWIW that's not computing in parallel. Javascript is still single threaded, even if your functions are async. To be parallel you'd have to process the data in a web/service worker.",23.0
g59kq1l,iso9u8,"Yes and no. User code is single threaded, but the engine running JavaScript is not. That is, you can fire multiple HTTP requests in parallel (the browser or whatever runtime will do those in parallel), you just cannot process the responses at once (that happens in user code).",35.0
g5a4o0y,iso9u8,"Can you really really fire them in parallel though? 
You fire them in a sequence and then some other machine(s) will handle them and respond. Then it reacts to those responses in a non parallel way.
Parallel is not the same as concurrent.",10.0
g5a84lu,iso9u8,"I agree, but it's a bit of both. User code can only inform the engine to send those requests in one thread, but bulk of time will be spent by the engine doing work in parallel (low level work like opening the connection, sending packets, waiting). Then when a response comes in, user code can again only handle one of those at once. The remote machines are not relevant here.",2.0
g5fm6oe,iso9u8,"Yes, multiple fetch() at the same time will download all the files at the same time. 

Once it finishes downloading, JavaScript will keep executing whatever function its currently executing until it ends (or until it finds an ""await"" inside an async function) then it will go back to the .json() or .text() of the file that has finished downloading and execute its .then() (or if it's inside an async, everything after the ""await"")",0.0
g59o7md,iso9u8,"yep, every browser implements its own WEB API and the JS engine can send it parallel tasks",4.0
g59kboq,iso9u8,"yeah, concurrent !== parallel",21.0
g59xfs4,iso9u8,"&gt; yeah, concurrent !== parallel

Why are they down voting you?  

You're right.",10.0
g59y5df,iso9u8,"""They hated Jesus because he told them the truth""",14.0
g5awm3j,iso9u8,You're not him,2.0
g5azwfh,iso9u8,are you sure ?,3.0
g5b1qle,iso9u8,It's from a Bob Dylan song,6.0
g5bcbkv,iso9u8,oooh i'm dumb I love Bob Dylan,2.0
g59ydzk,iso9u8,"In fluenty python book it make clear that a  truly parallel can only occur in a multi Core system using it. Otherwise, threads and coroutines isnt real parallelism although but they can work really well in IO bound systems.",6.0
g5a5zy2,iso9u8,"yep. well, the requests can happen in parallel, each request is started and each response is handled concurrently.",2.0
g5awi4t,iso9u8,I have a hard time understanding this could someone explain please?,2.0
g5b0awt,iso9u8,"https://i.imgur.com/cjObgqm.jpg

node.js is built on a single threaded model, which means it can only do one thing at a time. it can wait for multiple things (disk IO, network requests) at the same time but you can only execute a single line at a time.",5.0
g5at2ng,iso9u8,"It's unfortunate that actual web workers usage is so rare. Browser support goes as far back as IE10. That even supports using `Transferable`. You can even generate a blob URL and run a function on another thread, instead of requiring a specific file.

It's just people are really used to single-threaded operations and aren't well experienced with data separation (semaphores/mutex/locks). Heck, people rarely decouple their model data from their UI structure. Asking them to put it on a threading layer in front of that may be too much.

Perhaps as software development keeps migrating more to web (PWA), I expect  within the next few years a framework to arise (or tack-on) true mulithreading.",4.0
g5cwxw4,iso9u8,Very true! I should be more precise with my wording next time. Thanks a lot.,2.0
g59yevq,iso9u8,Is this effectively the same as using Bluebird's `Promise.map()` with the `concurrency` option set?,3.0
g5a2iol,iso9u8,"Yes, it is.",1.0
g5a8av8,iso9u8,Cool. It's nice to have an alternative to having to import all of Bluebird just for one or two functions. Thanks for sharing this.,1.0
g59ovs6,iso9u8,"&gt; ~~parallel~~

Concurrent.",1.0
g5a0zo3,iso9u8,In ES6 is threading native? Or still kinda a clue from ES5?,0.0
g5e8eba,iso9u8,"Basically this
```
function delay(ms) {
    return new Promise(resolve =&gt; {
        setTimeout(resolve, ms, ms);
    })
}

function process(
    msArray = [2000, 4000, 1000, 3000, 6000, 3000, 1000, 1000],
    limit = 3,
    cbWhenDone = (res) =&gt; console.log(res, Date.now() - start),
) {
    const result = [];

    let index = 0;
    let total = msArray.length;

    function foo(ind) {
        delay(msArray[ind])
            .then((res) =&gt; {
                result[ind] = res;
                total--;
                if (index &lt; msArray.length) {
                    foo(index);
                } else if (total === 0) {
                    cbWhenDone(result);
                }
            })
        index++;
    }

    while (index &lt; limit) {
        foo(index);
    }
}
```",0.0
g5ihsp5,iso9u8,"I posted [about this before](https://old.reddit.com/r/javascript/comments/iab7zb/limiting_asynchronous_operations_concurrency_in/g1mu4oj/).

I don't know why that library needs 3 classes to achieve the same thing.

Just use functions, man.",0.0
g58633k,iskhks,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g586zcr,iskhks,I should probably add a license file to the root of the repo too. Good bot!,2.0
g58qv97,iskhks,This sounds awesome thank you for sharing :heart: :heart:,2.0
g58vzqm,iskhks,happy to hear you liked it :),1.0
g57tj7z,ishwaq,"Why does it need to do two different things, decorating routes and orm?

If it would only do the first I would use it in a heart beat.",2.0
g57umn5,ishwaq,"Thanks for your feedback! An ecommerce store was the original project. First I wrote those queries/repositories one by one. Also found some great tools out there (orms), but I wanted to keep the app as compact as possible. But also wanted to have all the features what needs to develop the store more easily. Finally, I extracted the core functionality into a separate module. There are many good module for Orm (typeorm), routeing (typestack/routing-controllers) and DI (tysringe), but these are separated...

Actually its not an orm, just a query helper/wrapper around knex. You don't need to use it at all. Anyway its a good point, knex only supports relational dbs, maybe better to move this out to a separate module.",1.0
g57sv0n,ishwaq,"Author here. This project is still under development before reaching a beta, but interested in your thoughts :)",1.0
g5hagwf,ishwaq,Where exactly do you wish to take the direction of projects? Do you have anything specific in mind? lik say making it good for JAMSTACK projects etc?,1.0
g5ken68,ishwaq,"First, I'm going to breakdown into smaller modules. Database, mailing, image manipulation, authentication will go into separate modules. Also introduce some new modules. This way you can combine what you only need.

The goal is a collection of modules, what you can use to compose applications or websites easily. Modules are going to provide similar api and usage style, what you can implement into the ""framework"". (Using DI, OOP, typescript)",1.0
g57qiss,ishet8,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g56ko48,is9aw4,"The tutorial really needs work. (I wasn't able to get past it so I can't comment on the rest of the game.)

First of all, the tutorial just starts with no explanation of what the game is even about. I don't even know what a ""colony game"" is. It throws an awful lot of text at you, none of which is highlighted as more important than anything else. (Don't expect the average player to have the patience to read all the text slowly and carefully and remember everything.) I missed that I had to click on a bug to continue, and only ended up clicking on one by accident after clicking everything else. BTW, these tiny fast-moving bugs are terrible click targets. Now you want me to meet the tutorial NPC in some field somewhere? What? I don't know how to go there. Nothing else reacts to my clicks, and I haven't been taught any other controls. Since there's no way to rewind the tutorial, I had to delete data to start over to re-read things I missed.

Also, it may be nice to make the currently white border around the game black when not in fullscreen. The fullscreen button is able to put the game in fullscreen, but doesn't take it out of fullscreen (it's not a toggle).",3.0
g56mh7v,is9aw4,Do you happen to be on IOS? Full screen should be set to toggle.,1.0
g56n1nx,is9aw4,"I viewed your game on desktop (Chrome). The fullscreen button says ""on"" regardless if the game is fullscreen or not.",1.0
g56nd8x,is9aw4,Also is the black border not showing up on your desktop? The css has a black border as well.,1.0
g56o539,is9aw4,"In your CSS, you should give your body element

    background-color: #000;",1.0
g56p1v5,is9aw4,I don't know how I feel about a black background. It clashes with the dark colors of the game although it should look okay in daytime. Would a light gray background help?,0.0
g56q0q1,is9aw4,"If you have dark colors, wouldn't that be all the more reason to have a black background, so that those dark colors aren't washed out by a bright white background?

I wouldn't watch a movie with white letterboxing.",2.0
g56qkz8,is9aw4,"It only gets that dark at midnight in-game. For most of the day its a light blue or dark blue which are still bright colors. Alternatively, the background could match the time, but i don't know how I feel about it.",1.0
g56fttf,is9aw4,"Project Page (?): https://github.com/actualmrinja/Nectarne

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g56vd6e,is9aw4,"Those bugs move way too fast for me to click on them, so I didn't know what to do when they disappeared off the screen.

I went into options and fullscreen was ""on"" even though it wasn't on. Clicked on it and it just zoomed in the viewport until the game was just a little blue box in the middle of my screen.

Latest Firefox",1.0
g56w7hg,is9aw4,"You can put your mouse to the right/left to move the screen (also keys). If you're having trouble ants move slower. Once you get through this step the other options are unlocked so you can just use the full bug list if you're having trouble clicking them for stats.

Changed part of the code. Is it at least off now?

Edit: I'll look into it.",1.0
g56zkcs,is9aw4,"Yup the toggle is off, the behaviour is the same but I assume you haven't had time to address that yet",1.0
g570ns9,is9aw4,By zoom in you mean the viewport increases/it crashes? The only explanation is I'm using the wrong syntax for firefox but I'm not so sure. If firefox has developer tools can you quickly check if the console spits out an error?,1.0
g5718jf,is9aw4,"When I open the game:

[http://iforce.co.nz/i/2abb30jx.xsk.png](http://iforce.co.nz/i/2abb30jx.xsk.png)

After I click fullscreen it zooms into the top left corner:

[http://iforce.co.nz/i/rwuhdb55.ody.png](http://iforce.co.nz/i/rwuhdb55.ody.png)

PS: I believe the errors are just from you trying to play music. Firefox did not prompt me for permission for you to play audio or anything",1.0
g571vok,is9aw4,Is it still promising?,1.0
g56gbot,is9aw4,"I haven't done something on this scale with HTML5 but I'm interested in what you guys here have to say about it. It was really made to be an extension, but I'm happy how it turned out.

It's unlikely that i'll release it, but tips would be valuable aha.",0.0
g56lmt9,is9aw4,"I think the interface looks great and seems to run smoothly. I'm not a javascript dev so others can give better advice. 

I was skimming your code and noticed that your functions tend to be quite long with a number of switch statements or if else branches to handle conditions that might arise. I think the code could be more clear if you moved these sections into separate more atomic functions so that higher code calling them wouldn't need to mess with specific details.

I noticed that you are using object oriented principles in general but sometimes there seems to be code that I would expect to be handled by subclasses being handled by if else statements in a parent class. Specifically I'm thinking of bugBuild.prototype.combat where you have have skill effects take place by checking the skill name rather than something like

    this.combat()

where a bugs combat function would dictate which skills (also implemented as objects) it would use:

    this.skills(""Stridulating Retreat"")()

Maybe you would need to pass in some game state datastructure and/or enemy for a bug to know how to react. Though I may be misunderstanding your intentions with the code. Making these design changes would likely require more effort than it's worth if you just want this as a visual demo, but for future projects you should keep it in mind. Look at this [blogpost](https://gameprogrammingpatterns.com/component.html), this [reddit post](https://www.reddit.com/r/gamedev/comments/4s0xxr/design_patterns_for_games/), and an [youtube explanation](https://www.youtube.com/watch?v=2rW7ALyHaas) of the entity component system, a common design pattern in games.

I would also suggest naming your constant numbers and moving them to the top of the file. Reading over the code there are many places where I see animation timings being modified by some value or age being divided by some other value and it's not clear why. This will make your code easier to understand to a newcomer or yourself after you've forgotten how it works in a few months, it will also make it easier to modify these values without the worry that you forgot to update one specific usage of it.",1.0
g56n7sa,is9aw4,"The combat class sets up a bug for combat until they finish their animation which is where they use skills or reset. I could've mixed them together possibly into a subclass, but the skill class is already large by itself it might've been hard to read personally.

What exactly do you mean by moving my constants/naming. Do you mean renaming them to fit what they are intended for such as animationFrame instead of Animation?",1.0
g56oy2c,is9aw4,"Well take this snippet of code (part of a longer line) `... (8 * (this.Age / 150 + 0.5) ...` I don't understand what the 8, 150, or 0.5 numbers are for, so instead you might define these values at the top of the file

    ageMulti = 8
    ageDiv = 150
    ageModifier = 0.5

and then use them later `... (ageMult * (this.Age / ageDiv + ageModifier) ...`

Of course don't actually use those names (ageMult, etc) try to use short meaningful names that express why that constant exists.

If you find yourself writing this code many times move it into its own well named function

    // again use a more meaningful name than ""trueAge"" that describes what you're trying to do
    function trueAge(bug){
        return (ageMult * (bug.Age / ageDiv + ageModifier)
    }",1.0
g56q9fy,is9aw4,"I see, I use `(this.Age / 150 + 0.5)` more than with 8 since that's the offset only for the venom spray attack. The code is suppose to be the age scale factor where 150 is the ageDivider and 0.5 the minimum. I use it a lot (\~120 times) so it might warrant its own function.

About the combat, what exactly do you mean by this? Isn't there already a skill system?",1.0
g54yz15,is2uxn,That‚Äôs awesome.,3.0
g54zpg3,is2uxn,Thanks!,4.0
g57cp6k,is2uxn,I dig it! Great work mate.,2.0
g57dqwm,is2uxn,Thank you!,2.0
g5fv6bs,is2g4a,Or you know you could just use SWR or React Query instead,1.0
g5ggwmv,is2g4a,Yes. SWR is quite good.,2.0
g5n0o2j,is2g4a,React query is life!,2.0
g55czax,is2ct7,why do you hash the log message? It seems that your code would be easier if you simply used a set of message strings,4.0
g583cqq,is2ct7,Thanks for the question. Yes using the messages in the set would probably work fine as well as it's probably rare that you will have a huge amount of deprecations at once an the messages are probably not that long. The reason I hashed them was however to keep the memory footprint as low as possible.,1.0
g56bol3,is1t56,"I never realized you could initialize empty Array elements with `Array.from`, that's pretty neat. I've done it with `Array.fill` here and there, just filling an Array with some dummy value when I needed to iterate a certain number of times, but hey, guess I won't do that any more. I suppose that means the spread operator will do the same thing? Why yes, yes it does",2.0
g576cqj,is1t56,I prefer using `Array.from({length: 10})` than the dummy Array.,2.0
g57ir9w,is1t56,"I think I'm just gonna be super cool and start iterating the numbers directly. Like,

    Number.prototype[Symbol.iterator] = function * (start = 0) {
      while (start &lt; this) {
        yield start++;
      }
    };

    // usage
    console.log(...10);  // &gt; 0 1 2 3 4 5 6 7 8 9",2.0
g5666hc,is1f4d,"Comments are such a weird thing. Most of the time they just explain what the code already does, but in a shorter form.

From your article:

```
// assign today's date to variable d
let d = new Date(); 
```

This pattern is often repeated for larger blocks of code, and looks slightly less ridiculous only because we have a short comment vs. lots of code, instead of the other way around:

```
// Generate a time-stamp from extracted parts
// of a date-object
let today = new Date();
let hours = today.getHours();
let minutes = today.getMinutes();
let seconds = today.getSeconds();
let timeString = [hours, minutes, seconds]
  .map(padZeros)
  .join(':')
```

This comment says absolutely nothing that can't be learned by reading the code, exactly like your `d = new Date()` example.

The code could have been written a dozen different ways, but a decision was made about doing it THIS way that the developer could have revealed in the comment, but didn't.

And this is the eternal problem.

Comments should explain the *why* of code, not the *what*:

```
// Just building a time-string for logging here,
// but the excess variables are reused later on
// for a differently formatted database query.
// We're also avoiding utilities like moment or
// date-fns since we're in a bandwidth constrained
// environment
let today = new Date();
...etc...
```

Now, the scope of this comment goes a little too far, but I think it illustrates well what the job of a comment is supposed to be. A decision explainer.

Incidentally, JSDoc comments are not comments. They're inline documentation that happen to use comment-syntax. The job of documentation is to describe the *what* and the *how* of an API surface, not *why* code was written a certain way.

From your article:

```
/**
 * Registers the text to display in a tool tip.   The text
 * displays when the cursor lingers over the component.
 *
 * @param text  the string to display.  If the text is null,
 *              the tool tip is turned off for this component.
 */
function setToolTipText(text) {}
```

Tool-tips are so common and useful that even users can be trusted to know what they are and how they work. Certainly a programmer would be aware of what a tool-tip is, and therefore learn nothing they didn't already know from the above comment and the name of the function that sets it.

But why is a *function* being used anyway? Why not a constant, or a variable rigged-up to a getter/setter? Does the function work for initialising, updating, or both? It's fine as documentation, but it's not a comment, and I guess I feel your article is more about the former than the latter, even if the title promises differently.

I do like the language of the article and it's very nicely structured, so apologies if this is overly critical. It's a problem we all battle with, and we're all trying to write better code and leave breadcrumbs of understanding in our wake.",2.0
g57a4py,is1f4d,"Yes, you are right, it's already mentioned in the article about date:

"" Not every time it is required to write a comment. For example, take a look at below:

let d = new Date(); // assign today's date to variable d 

Now, above comment would be suitable if you're teaching a beginner level developer. However, this would not be appropriate in the context of production code, or other situations involving experienced developers. Instead, you could write above code in below manner:

let today = new Date(); ""

And regarding tooltip, it was given as example to have comments more than what is there in name. If only self-documenting code is enough, I don't think we need comments. It's always combination of both, self-documenting code and comments.",1.0
g552ojd,is1f4d,"My personal rule is to always use good variable/function names instead of comments.  In fact, *never* use comments, *if* you can at all help it ...

... but always use them when you have something meaningful to convey to the next programmer (or yourself), beyond what the code itself can describe.

**EDIT:** Wow, two downvotes for (what I thought was) an incredibly basic statement!  What did I say?  Does someone out there actually think comments are preferable to good names, or that you *shouldn't* leave them to communicate meaningful info to others?",1.0
g552v93,is1f4d,"But comments really help to generate documentation, with help of tools like JSDoc and they are always helpful for other developers even future yourself to understand code.",1.0
g553ofe,is1f4d,"Maybe, for some orgs, or for public-facing APIs?

Personally I've never once found anyone who actually uses generated documentation.  Why? Because it's usually a lot more convenient to open the relevant file in your editor, and look at both the comment and the code in context, than to switch to your browser and open up a page, then navigate to the documentation of the thing you want to know more about.

In fact, in many IDEs you can literally `CTRL + click` on the function/variable/type to have it take you directly to its definition.",1.0
g554ps3,is1f4d,"Maybe you can check lodash, Bootstrap or Angular, those guys are generating docs from comments.

And it's not just about reading or jumping to the code, it's also about understanding it.",2.0
g55gjdw,is1f4d,"As I said originally:

&gt;  or for public-facing APIs?

The documentation needs of Bootstrap or Angular are *very* different from the needs of an ordinary software team to document their in-house code.",1.0
g55uydx,is1f4d,"Yes, I understand that comments in open-source vs other are very different.

Document generation is one of benefits of comments, not only. It definitely helps to understand code better, whether you see it in editor or browser.",1.0
g566kx3,is1f4d,"As I started this out by saying, I've never met a private company who *used* generated documentation.  I did see a few that *generated* it ... and after the initial hype wore off, that was the end: no one *read* it.

But that aside, *of course* JSDoc-style comments have benefits, even if you don't generate HTML files from them!  Both benefits from other tooling (eg. inferring Typescript types) and just from having a structure which makes them easier to understand.

But what I think is so important to understand is: `moreComments != good`. Comments inherently have a signal-to-noise ratio problem, where you *want* the ""signal"" of good comments ... but any comments beyond those are just ""noise"".

Noise makes it harder to hear the signal (ie. understand your code), so adding unnecessary comments is doing the opposite of achieving your goal (to get the important messages through).  To reduce things, if code has tons of comments, no one bothers to read the comments, and they no longer serve their function.

As much as possible you want to use your code itself to express intent, and *only* use comments when that's not possible.",2.0
g579p05,is1f4d,"Yes, we shouldn't have more and unnecessary comments, at most of the places self-documenting code is just enough.

It's already mentioned in the article:

"" Not every time it is required to write a comment. For example, take a look at below:

let d = new Date(); // assign today's date to variable d 

Now, above comment would be suitable if you're teaching a beginner level developer. However, this would not be appropriate in the context of production code, or other situations involving experienced developers. Instead, you could write above code in below manner:

let today = new Date(); """,1.0
g55cvhp,is1f4d,"Unless the person who wants to understand it wants to use it for nefarious purposes (ie: potentially anyone who eels the need to open it is doing so from outside your network. You want your teams to understand it, not anyone else. Either  keep a development version and a production version or find another way to keep your notes out of the file when you  deploy it to production.",0.0
g55hj75,is1f4d,You can also use typescript to not have to add @param &amp; @returns annotations when documenting public APIs.,1.0
g55kee1,is1f4d,"In fact, it's actually also possible to do the reverse, and infer types from JS Doc documentation :)

I'm not actually *advocating* that though: if you want typing, using Typescript itself is clearly the best way to do it.

I'm just mentioning that *if* anyone has been using JSDoc to type things already, this feature might be handy.",1.0
g54ak3p,irzj9w,"For me, the first one is- Update your dependencies",54.0
g551xfp,irzj9w,"And monitor your dependencies. 

Have any of them fallen out of maintenance? If so look to replace them ASAP otherwise you could miss out on security updates that may be needed.",21.0
g57zyqu,irzj9w,"The problem with this and the comment your reply is to is that 99% of the dependency warnings we get are things so far removed from our code that no one knows how to fix. Module A relies on modules B C D from NPM, D relies on Q, Q relies on XYZ, X and Y both have severe warnings, but trying to fix it yourself breaks Z.

So the only thing you can do is wait for Z to update.",3.0
g586xco,irzj9w,"In that situation you are at least aware of the problem and any potential security issues that are caused by a sub-dependency being out of date or completely unmaintained.

&amp;#x200B;

&gt; So the only thing you can do is wait for Z to update. 

If it is a security matter then sitting on your hands is not a safe option. 

The other two choices you have are:

* Move to another library that offers the same, or sufficiently similar, functionality.
* Fix it yourself (and submit a pull request upstream) and use your version until the main project has verified and integrated the change.",1.0
g58e1s4,irzj9w,"&gt; Move to another library that offers the same, or sufficiently similar, functionality.

No, I won't move from for example Vue CLI because there are no alternatives.

&gt; Fix it yourself (and submit a pull request upstream) and use your version until the main project has verified and integrated the change.

Am I a security expert? No I am not, and getting randoms to just go fix every repo out there is definitely not a viable or sane option.

Don't be so naive.",3.0
g5i37yn,irzj9w,"&gt;Don't be so naive.

Naive would be waiting for upstream to update if you have no good indication of what the timeframe for that is. During the delay you are knowingly running with potentially compromised software. If you know about the problem, many a black-hat knows about it too.

Don't be so lackadaisical about security.

Though obviously there may be mitigations you can implement to reduce/remove your susceptibility to whatever the problem is (for instance: turning off a specific feature, or rolling back to a previous version and pinning if the issue is a regression that only affects a recent release) or your use case may not be affected at all.

&amp;#x200B;

&gt;and getting randoms to just go fix every repo out there

Accepting random patches into upstream (and therefore every connected repo) *unchecked* is obviously not what I'm suggesting.",1.0
g57l56x,irzj9w,Great point that is often overlooked,1.0
g55hcyy,irzj9w,Right but that's not a js vulnerability. What are the issues that your deps are dealing with? Those should be in the article.,9.0
g57l4dj,irzj9w,[https://snyk.io/](https://snyk.io/) ;-),2.0
g57mlbu,irzj9w,"We use snyk, and have added it as a part of our CI/CD, also before releasing the product/service the security team looks into any vulnerabilities with the packages and with the help of snyk we‚Äôve been able to update everything pretty fast and get clear visibility into the problems.

We also use greenkeeper bot on GH, which automatically raises PRs whenever updates for dependencies are released, pretty much helpful in case there are no breaking changes etc.",4.0
g6irjgx,irzj9w,"Sounds amazing ‚ú®

FYI that Greenkeeper merged with Snyk so you can now get all of that magic with one tool :-)   
More here about it: [https://snyk.io/blog/keep-your-dependencies-up-to-date-enable-auto-upgrades-with-snyk/](https://snyk.io/blog/keep-your-dependencies-up-to-date-enable-auto-upgrades-with-snyk/)",2.0
g6jwn30,irzj9w,"Yup, already using this feature of snyk.",2.0
g7u6ftd,irzj9w,Slick!,1.0
g57317x,irzj9w,Same here,1.0
g551png,irzj9w,"Those pretty much apply to any web app, even XSS (this can happen with server-side content manipulation too so JS is not a prerequisite for the vulnerability).

Also an extra detail on that: don't just be careful with immediate user input in that regard. Information from your DB could be malicious too if not properly checked on the way in or due to corruption or due to data getting in from other channels (direct access rather the application access, by a disgruntled admin or another party via a successful attack on another part of your infrastructure). Same goes for settings and other data read from the server's local filesystem.",13.0
g574kk1,irzj9w,"&gt; (direct access rather the application access, by a disgruntled admin or another party via a successful attack on another part of your infrastructure).

Not saying it's wrong to at least sanity check your dB data to prevent crashes, but if you have this problem you're pretty much fucked.

If someone can write uncontrolled data to your database, your application is owned and there's pretty much nothing you can do about most attacks.

Only example I can think of that you can actually do something is if you're rendering raw HTML straight from the DB, but if you're doing that, please don't.",5.0
g57z31h,irzj9w,"Accepted practice is to not sanitize anything going into the database. Escape it of course (using parameterized queries) but if a user comments ‚Äò&lt;b&gt;hello&lt;/b&gt;‚Äô that should be stored like that in the db.

You escape and/or sanitize everything on *output*. So you would display that comment as literally those characters (using `&amp;lt;` etc). Or if you‚Äôre allowing HTML, sanitize it so that scripts or any tags you don‚Äôt want are removed.",2.0
g5826fa,irzj9w,"As I said, any place you're displaying raw (unescaped) HTML you've got a database access vulnerability you could actually defend against, but you shouldn't print raw HTML from the database anyway.

That said I don't know if I agree that I agree we with writing unsanitised data either, if you're not going to allow it back out, you probably shouldn't let it go in.",1.0
g5c86ml,irzj9w,"You can‚Äôt encode the HTML when you put it in because you‚Äôll end up double-encoding it when you display it.

Sanitising on the way in isn‚Äôt the worst idea, but you can lose data that way. For example if it‚Äôs just plain text you might strip all HTML tags, and now your users cannot post code samples any more. And even if it‚Äôs a HTML field you may later decide to change what tags you allow and which you don‚Äôt.",3.0
g5cwq9z,irzj9w,"&gt; Sanitising on the way in isn‚Äôt the worst idea, but you can lose data that way. For example if it‚Äôs just plain text you might strip all HTML tags, and now your users cannot post code samples any more. And even if it‚Äôs a HTML field you may later decide to change what tags you allow and which you don‚Äôt.

You realise that the overwhelming majority of inputs should never, under any circumstances, have any HTML at all right?

And even if you need formatted text, that's what markdown I'd for.",1.0
g5d0n2o,irzj9w,"&gt; You realise that the overwhelming majority of inputs should never, under any circumstances, have any HTML at all right?

Not sure exactly what kind of things you‚Äôre referring to, but maybe you‚Äôre confusing sanitization with validation? i.e. if it‚Äôs a numeric input, you don‚Äôt sanitize what the user enters, you validate it‚Äôs the correct format and return an error if not. It never goes in the database at all.

For general text fields (let‚Äôs say a post title) then no you wouldn‚Äôt normally have HTML. But you still shouldn‚Äôt strip HTML tags, &lt; and &gt; are valid characters to use. 

&gt; And even if you need formatted text, that's what markdown I'd for.

Markdown accepts HTML too. You still have to sanitize it on output.",1.0
g5d7cg7,irzj9w,"Raw HTML from an external source is probably the biggest security hole you can have.

Which is why you shouldn't do it.

Don't let that shit into your database in the first place and don't render content from the DB in a raw state.

Markdown can accept HTML, but that doesn't mean you have to or that you should.


My issue was never with escaping HTML on the way out, you absolutely should do that, not doing that is raw HTML and that's not OK.

My issue was with the idea of letting users write crap to the DB you don't need to accept.",1.0
g5cf0wz,irzj9w,"Where that's a problem is when someone decides to implement a JSON api to complement the existing HTML rendering, and suddenly that's HTML escaped content that's double escaped by the time whatever client library renders it. fetch() some content and pump &amp;lt; into React and it won't display a &lt; like the original library would.

It has to be up to the render layer to escape because it's context sensitive.",1.0
g5d4jqa,irzj9w,"Rendering HTML content directly from an external source is a **massive** security problem.

Because HTML can contain executable code.

That's why raw HTML is a vulnerability above and beyond even losing control of your database, because raw HTML can make your users vulnerable.

Which is why it's a bad idea.",1.0
g587s4d,irzj9w,"Agreed for marked-up text and similar. If it goes in, it goes in pure and any reformatting is applied on the way out. Otherwise there are ways you could end up with multi-un-escape bugs &amp; similar, which themselves can open XSS or DoS holes.

Obviously if markup is not wanted (generally, or if you have a whitelist of options the input is outside of) then you might ""sanitise"" by simply refusing to store it, asking the user to edit appropriately first.",1.0
g587czh,irzj9w,"Correct in many cases, but in larger systems bad data in your DB/files/other may not mean the entire app is compromised or if it was that it still is. You could be seeing data that was miss in a post-hack clean.

Also, the bad data could be due to corruption, or a bug, not just malicious action.

Furthermore, your validation rules could have changed since the data was entered, perhaps to block a directive that was previously considered safe, and the data not all appropriately cleaned at the same time.

Security in depth often requires you to be a bit anal in this way.",1.0
g5bfva1,irzj9w,"The point I'm trying to make is that if someone has access to your data, they have access to all of it. From a security point of view it's basically game over, you're owned it's done.

There are reasons to validate against bad data, both to avoid crashes and in some cases to avoid malicious user actions, but if someone has uncontrolled access to your database your security is done.

If you've got remnants of a hack in your database your security is **still** done, because you don't know what they did.

The only exception is when you're rendering HTML straight from the database to the screen, because that allows access to the user's system which is not owned. But again taking raw HTML straight from the DB to the screen is bad practice no matter what you do.

But for the umpteenth time, if someone has your database they have your app. There's nothing you can do about it in code.",1.0
g550opd,irzj9w,"In the context of Electron, if your app allows custom JavaScript to be embedded by the user, there is no way to ensure that the custom JS is not dangerous, right?",15.0
g55kwtk,irzj9w,"There *are* code sanitization libraries, or you *could* always sanitize it yourself, but all it takes is one mistake and ... :(",9.0
g55s1wb,irzj9w,"I believe if you don't enable node integration and IPC, it's just like running it in Chrome, which should be safe, dependening on what the embedded JS is for. I may be wrong.",5.0
g55e8j8,irzj9w,"These aren't JS vulnerabilities per se, these are issues in interop. An example of JS vuln is prototype pollution.

```
anyObject[userInput1][userInput2] = userInput3;
```

Now the user can write to the proto of all objects now and future.",10.0
g55q6r3,irzj9w,Would you be able to explain a little more? I don't think I get how this works security wise,5.0
g55ziki,irzj9w,"    const http = require('http');
    const url = require('url');
    
    // expand dot delimited keys in obj
    // ?foo.bar=baz =&gt; {foo:{bar:""baz""}}
    const expand = (obj) =&gt; {
    	const result = {};
    	for (const [key, value] of Object.entries(obj)) {
    		const parts = key.split('.');
    		let part;
    		let ref = result;
    
    		while (parts.length &gt; 1) {
    			part = parts.shift();
    			if (!ref[part]) {
    				ref[part] = {};
    			}
    			ref = ref[part];
    		}
    
    		part = parts.shift();
    		ref[part] = value;
    	}
    	return result;
    }
    
    const server = http.createServer((req, res) =&gt; {
        const raw = url.parse(req.url, true).query;
        const query = expand(raw);
    	console.log(query); // do something with the query
    
    	const user = {};
    	if (user.isAdmin) {
    		res.writeHead(200);
    	} else {
    		res.writeHead(403);
    	}
    
    	res.end();
    });
    
    server.listen(3000);

Run this simple code with a seemingly innocent `expand` function and try with

`http://localhost:3000/?foo.bar=baz`

and then

`http://localhost:3000/?__proto__.isAdmin=1`

The worst part about this is that you've poisoned the object prototype so that it's forever unclean.

When `const user = {};` is created using the same polluted object prototype, it inherits `isAdmin` - not what you would expect!

The real problem with this is that `expand` may not even be your own code. It may be something that you lean on an npm package for and even if you initially vetted the function it could change in any future update.",10.0
g56ttsj,irzj9w,"Curious: how filthy does it feel intentionally writing vulnerable code for others to see? 

I've done it for juniors (internally), and me... 9/10 filthy.",1.0
g56wnu1,irzj9w,"Ha, yeah we spent a lot of time going over vulnerabilities, explaining their mechanisms, and what devs should be on the look out for.

At the end of the day though, we have had to write our own defensiveness around this and protect against bad input that _could_ modify the prototype chain.

There's also rules such as https://eslint.org/docs/rules/guard-for-in which help, but often people `// eslint-ignore` them without thinking twice.",1.0
g56f6zv,irzj9w,"*122 dependencies, 60 vulnerabilities detected, 10 high priority*

...

""This is fine...""",7.0
g5c8055,irzj9w,"    router.get('/email', (req, res) =&gt; {
      db.query('SELECT email FROM users WHERE id = ' + req.query.id);
        .then((record) =&gt; { // &lt;- Uncaught SyntaxError: Unexpected token '.'
          // logical flow
          res.send(record[0]);
        })
    });",1.0
g54f4tp,irzj9w,[deleted],-36.0
g54gxz5,irzj9w,"Fairly obvious but yes. Even if your backend is not JS, basically every site on the internet uses it on the front end.",36.0
g54sh49,irzj9w,"Yea i took the response as ""no shit, why does that even need to be said.""",6.0
g555b6a,irzj9w,That's not popularity so much as not having choice to be fair.,-6.0
g54k5it,irzj9w,yes because every website uses it on the front end and some do use it also in backend,7.0
g57jgby,irzj9w,What kind of web dev are you doing? Lmao.,1.0
g547njv,irwb64,I believe the recommended practice is a single process per container.,3.0
g56zfa0,irwb64,"I have just spent 3 weeks separating code that was trying to run multiple processes via pm2 in a container. It is not a good idea.

1) you remove the visibility from the docker orchestrator about your processes and resources. For example we had some processes crash looping but because pm2 would swallow it can restart the process it wasn't picked up until it had filled the hdd with coredumps and killed the entire server (over 40 containers, yay)

2) it is much easier to scale from the docker orchestrator if you are using docker, especially for things like ECS or I assume k8s. If you scale via config inside the container that requires a rebuild to change it and therefore downtime

3) it goes against the core tenet of docker of one process, one container. There are reasons for this, and docker behaves assuming such things. I'm not sure if zombie processes are still an issue but it's just easier overall to not jump off the beaten path",3.0
g570dmb,irwb64,"For clarification, does one process per container strictly mean one thread, or would a node process that makes use of ""child\_process.fork()"" still hold to that phrase?",1.0
g570xeo,irwb64,As long as Node properly handles cleaning up the child processes it's fine (and I believe it does),2.0
g572ooi,irwb64,"Got it, thank you",1.0
g54dk0f,irwb64,"Having them in separate containers is technically possible but could get messy. I'd use a single container for both, assuming the processes are actually related to the same project (yet still independent of each other).",2.0
g53r8wx,irvu03,"Huge fan of both prisma and nest, first time I‚Äôve seen them intertwined and it‚Äôs all lovely",1.0
g56gdvh,irvu03,"Awesome, can't wait for part 2!",1.0
g56iq5k,irvu03,"thank you, part 2 is coming very soon!

edit: part 2 is out!",1.0
g532ott,irrez7,"Fantastic project. Really hate to save someone‚Äôs number just to text them on WhatsApp. Love the source code too, very easy to read. I starred also",5.0
g533fbt,irrez7,"Means a lot, thank you!  
Feel free to raise PR or open an issue on GitHub ;)",1.0
g52l17b,irrez7,"Great work, thank you for sharing!

I added the shortcut to my home screen so it is easy to use whenever. Thanks a lot!",4.0
g52m9kq,irrez7,"If something needs to be improved/fixes, do let me know. I will definitely resolve it :)",2.0
g52qyxa,irrez7,Thank you!,1.0
g53cr50,irrez7,"Quick tip. You can type in any browser:

&gt; wa.me/&lt;number&gt;",2.0
g53em9u,irrez7,don't forget to append country code in number :),2.0
g53qgvd,irrez7,"Yes, it's not always required, although I can't tell what is the logic on WhatsApp side. Maybe if they have a unique number worldwide it works otherwise you need the country code. ü§∑‚Äç‚ôÇÔ∏è",1.0
g53runo,irrez7,I don't think it works any time. Country code is compulsory...,2.0
g52x5pb,irrez7,P cool! I wrote an iOS Shortcut for myself that copies the number from the clipboard and it‚Äôs a breeze.,2.0
g530cax,irrez7,Yes! Thank you! I so need this,2.0
g51du5p,irrez7,"WhatsApp Anyone is a PWA\* to start WhatsApp chat with an unknown number, without need to save their contact.

**Framework / library used**
* next.js - for server side rendering
* next-offline - for PWA

*Find [code on github](https://github.com/cTxplorer/whatsapp-anyone/)*

___

\* PWA = Progressive Web App (you can add the website to your home screen without having to natively install it from play store/app store)",2.0
g5aai80,irrez7,"Hey man... I was inspired by your app to deploy my own tiny app on Netlify! I used it first time. 

My url is this: https://persianalphabet.netlify.app/ (https://github.com/XtremePwnership/Persia)

Very simple app which displays different images based on which alphabet you tap. I added both your app and my app to homescreen by tapping on ""Add to Home Screen"" inside the Chrome browser on my Android. 

But I see 3 main differences:

1 - your app works offline. How can I make mine work offline?

2 - your app opens in full screen. 

3 - your app has nice icon while mine gets a default Chrome icon. 

Would highly appreciate if you can guide me on the above 3 points. Thanks!",2.0
g5cck7h,irrez7,"Hey, it's ok. i learnt how to do all the 3 tasks i asked by watching this tutorial: [https://www.youtube.com/watch?v=WbbAPfDVqfY](https://www.youtube.com/watch?v=WbbAPfDVqfY)

Thanks for your inspiration!",1.0
g5cdpgt,irrez7,"u/CotoCoutanSorry I was busy at work..

Congrats on building the app :)  


The app link is not working for me. Are you sure of link?",2.0
g5cf7sn,irrez7,I brought down Netlify with my push! :D Thankfully your website is still up.,1.0
g51y3m8,irrez7,This is sweet,2.0
g52anhr,irrez7,What if this page saves my contacts? How do you assure your user that you dont?,1.0
g52g3mg,irrez7,"Thanks for asking. While there is no perfect way for any creator to assure their users that their service is 100% secure, I will try my best to answer your concern..


**Do I save contacts?**

No, the web app does not save any contact details.

The only thing that the web app collects is analytics data (page visits and button click)

* Since contact number is not appended to URL before redirecting, analytics wouldn't collect number with url
* On button click, analytics internally fire the click event. Can check the browser network tab for what all data is sent (no personally identifiable, private data shared)  


**How do you assure your user that you don't save contacts?**

Again, I wish there was a way I could give full assurance that I don't collect private data. Except for checking the web app security by yourself, every time before entering the contact number, you will have to take my word on this and trust me.

As a step towards being open, I have open-sourced [code on github](https://github.com/cTxplorer/whatsapp-anyone)

Again, the code deployed on the website can be something else.   


You will either have to trust this web app (or any website on the internet for this matter) or build yourself from scratch.

____

At last, I can hire a cybersecurity agency to audit the website, but then you will have to trust the agency :D 

TLDR; I don't and I will not collect contacts through this web app. It doesn't serve my life's purpose to help others :)",10.0
g538r16,irrez7,"You can use this bookmarklet if you want a local version:

    javascript:window.location.href=""https://web.whatsapp.com/send?phone=""+window.prompt('Enter number');void(0);",1.0
g52zn4o,irrez7,"I mostly use this WhatsApp chat link. 
[use whatsapp chat link](https://faq.whatsapp.com/general/chats/how-to-use-click-to-chat?lang=kk)",1.0
g530mrl,irrez7,"I used to do the same, but opening a browser to this was overkill. And there are whatsapp users who don't know what is chrome/browser.   


The webapp internally uses the chat link mechanism itself :)",1.0
g5cj5lh,irrez7,Fair enough.,1.0
g5ceaig,irrez7,"I need to send message to someone before I can click the link, right?",1.0
g51uykw,irrez7,Not true really. You don't have to add contact to text someone on WhatsApp.,0.0
g51zjvb,irrez7,"you would then have to open a browser, create wa(dot)me link  
or do you know something else?",8.0
g53x1yi,irrez7,Yes this only way,1.0
g5cdztv,irrez7,"No. Just open any WhatsApp msg paste number. When you click on it, it will take you to their chat page directly.",1.0
g4ztvyp,irly2m,"[Lodash](https://github.com/lodash/lodash) comes to mind.  It's a huge library but broken into small, manageable pieces, with plenty of test cases.",32.0
g50lpre,irly2m,"When lodash was underscore and all I knew was jquery... they looked like what I wanted to become as a developer to be honest, so clean.",13.0
g548hzz,irly2m,Underscore is still around,1.0
g51p9jx,irly2m,"huge agree - you can literally find exactly how a function was implemented by going into the file, super easy",3.0
g53acvm,irly2m,"This is a good answer, but I'm not sure it's useful for OP if they want something help them decide between FP and OOP. Since it's a library of small helper functions, even an OOP supporter would still probably write lodash mostly in FP style. In other words, it's a natural fit for FP. A better answer would be a library that _could_ easily be written in OOP but FP was chosen instead.",1.0
g4zw8ir,irly2m,"Try redux. It is a simple library that focuses on classic FP techniques and is heavily used. There are egghead videos where the author (the great Dan Abramov) walks you through building it, and the reasoning behind it.

https://github.com/reduxjs/redux

https://egghead.io/courses/getting-started-with-redux",34.0
g51qwgw,irly2m,"I always find people look at classes the wrong way. They instantly go to OOP and think about a class modelling a thing like a car our person etc. 

Instead I look at them as little runtime containers for my code/functions.  I use dependency injection to provide decoupling of my deps so my code in the functions is not tightly bound etc. 

You can do similar in FP with currying or reader monads or closures but they are never as good imho. Creating a specialized little runtime context with classes is easier to reason about and also I believe test.",29.0
g53c012,irly2m,"See also ""composition over inheritance"". Instead of a big brittle hierarchy: animal -&gt; mammal -&gt; dog -&gt; chihuahua, you create reusable parts, then, when you need a chihuahua, you say it _has_ legs, _has_ teeth, _has_ tiny rage filled eyes, etc. A big part of the hate for OOP comes from overuse of extending classes IMO. That and Java. OOP in JavaScript is much easier to deal with.

Dependency injection is related to composition, since it covers one way the composed parts can be acquired by a class.",7.0
g55d05n,irly2m,"&gt; Instead I look at them as little runtime containers for my code/functions.

I think closures work better in pretty much every way. Factory functions can be used as normal functions, unlike `new`. And there's never any ambiguity about what `this` points to. eslint is more likely to point out an error (detecting an undeclared closure variable rather than not detecting a non-existent object property.) Also, if you like Typescript, you get better type inference.",1.0
g55ntsh,irly2m,I'm inclined to agree but i think it doesn't really make too much difference by this point. The key point it's that classes used the right way can be fine.,1.0
g56m5vo,irly2m,"Well, they can be fine, but if you can have the same thing without any of the downsides of classes, why use them?",1.0
g57ed5y,irly2m,"Well this is where in our case where other technologies make the difference. We use TypeScript everywhere and leverage class decorators which capture the dependencies for runtime introspection.

This makes universal dependency injection very simple and clean..  Function and Param decoration is not nearly as good. 

I do not need a file to import dependencies and wire up to a closure.  The DI container can use the global registry to do this when constructing the class. Classes are  just much better for this.",1.0
g52hduq,irly2m,"```
interface IChairFactoryManager : IFourLeggedPieceOfFurnitureFactoryManager
```",4.0
g53rp90,irly2m,You gotta love Java,2.0
g53th8a,irly2m,"No, I was just making fun of oop lol",0.0
g527a8d,irly2m,"I‚Äôve also been thinking about this and tried to implement something with the right balance between OOP and FP when building my carousel lib. 

Check it out and see if you find it interesting:

https://github.com/davidcetinkaya/embla-carousel",2.0
g53cmvj,irly2m,"While you are researching this, keep in mind that FP and OOP are not mutually exclusive. While the battle about which is best rages ever on, most developers use a mix that best suits whatever they are working on. Write any utility functions in FP style, write the bulk of the library in OOP style, for example.",2.0
g52kpxt,irly2m,"I have been doing this style professionally for more than a year now and never found the need to use class at all (maybe in the future if I need to interop with some kind of external library - but even in that case I would probably isolate that style in a wrapper module).

React with Hooks particularly makes this a lot easier. Unfortunately I cannot share the code base - however I think learning Clojure language can make this particular style easier to imagine and grasp.

In basic principles, use plain Javascript objects and arrays as much as possible, use closure if you need some kind of information hiding (achievable using immediately-invoked functions and revealing module pattern). If you need some kind of 'type' and pattern-matching, it's achievable by turning plain objects into some kind of type information like so

    {type: 'REIFIED_TYPE', payload: {...}}

and then you can pattern-match \`type\` property Redux-style.

\----

Watch Simple Made Easy by Rich Hickey

[https://www.youtube.com/watch?v=kGlVcSMgtV4](https://www.youtube.com/watch?v=kGlVcSMgtV4)",1.0
g52nk9f,irly2m,"Yeah if you‚Äôre using a framework, especially react, there is no need to use class components, since any benefit you‚Äôd get from them is baked into reacts custom methods.",1.0
g5340sj,irly2m,"I agree - at the end of the day all the nice purities sit on top of some kind of abstraction, be it baked into a framework or exists as a form of a language feature. So when not using a framework, some part of the code base will contain more impure code, therefore the task is to manage and isolate them so that most of the other code can be pure and clean",1.0
g547wui,irly2m,Pretty much!,1.0
g515yci,irly2m,"This is good question, that I also have some trouble answering. I would say to go to sindresorhus on github and try to find some there, he wrote a lot of js.

There are couple of chrome extensions that you might find interesting, I certainly did. Trouble is he switched to ts a lot of his stuff, but you can go back in history to find the states in vanilla js.

Interested observation I found is all the good Javascript people are not originally js programmers and they pull from  other programing languages which you might find to learn from.

EDIT: I also hate classes, even more so now since I saw what Java people do when write React code in Java way.",1.0
g5221b6,irly2m,"You should look into web components and custom elements, it‚Äôs basically JS‚Äôs answer to react, and basically act as a ‚Äúbrowser within a browser‚Äù when you‚Äôre using shadow root.  This lets you segment parts of your code, very easily. 

This plus web workers, indexDB and SSE, and you have a native app that can handle absurd amounts of data, without effecting the performance of your ui.  

The catch is that you use classes

ü§∑",-1.0
g52atry,irly2m,"Web Components and custom elements generally rely on OOP syntax, like `class MyComponent extends HTMLElement`.",1.0
g52fpn8,irly2m,"‚ÄòDesigned in an OOP way‚Äô is a very broad statement, considering that you could say the same thing about 99.5% of javascript.",0.0
g52i1gi,irly2m,"Yeah, I meant the recommended syntax relies on class extensions, hence the example.

From the [MDN docs on custom elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#High-level_view):
```javascript
class WordCount extends HTMLParagraphElement {
  constructor() {
    // Always call super first in constructor
    super();

    // Element functionality written in here

    ...
  }
}
```

And then you can see in [Google's docs](https://developers.google.com/web/fundamentals/web-components/customelements) that they also advise ES6 classes.

So yeah, that's what I meant, obviously.",0.0
g52mkyd,irly2m,"You‚Äôre repeating what I stated in my initial comment,  I‚Äôm not too sure what you‚Äôre trying to say?",-1.0
g52r9k7,irly2m,"I'm pointing out that OP is asking for ""classless libraries,"" yet you are suggesting Web Components / Custom Elements, which rely on class syntax. It's extremely simple.",0.0
g54a4z0,irly2m,"Right and since this is the internet and people have conversations,I was providing insight into the benefit of web components, but making sure to let OP know that you‚Äôre using classes. 

If you read OP‚Äôs comment you would see that they also stated that they‚Äôre trying to find the right balance between FP+OOP, and so by providing an alternate solution that makes this easier, Im adding to the conversation.

On the other hand you‚Äôre calling someone out for adding useful information that someone could potentially benefit from, which is weird and makes this whole thing about you, vs the topic at hand. 

If you‚Äôd like, next time I want to post a comment on reddit I‚Äôll make sure it‚Äôs okay with you first.",-1.0
g54j3j6,irly2m,I‚Äôm literally just telling you that your suggestion is the exact opposite of what OP requested.,0.0
g54pnud,irly2m,"Got it thanks.  Next time you could always just say something like:

‚ÄòYour suggestion is the exact opposite of what OP has requested‚Äô",1.0
g54qrpg,irly2m,"I tried man, and you made fun of my phrasing.",2.0
g52acgj,irly2m,"Any library that makes extensive use of the factory pattern and favors composition over inheritance.

An example of these patterns being used together (this is just my implementation, there are other ways):

```
const pipe = (...fns) =&gt; fns.reduceRight((fn1, fn2) =&gt; {
  return (...args) =&gt; fn1(fn2(...args));
});

const barks = (entity = {}) =&gt; ({
  ...entity,
  bark() {
    console.log(`${this.name}: Woof!`);
  }
});

const poops = (entity = {}) =&gt; ({
  ...entity,
  poop() {
    console.log(`${entity.name}: Made a mess`);
  }
});

const named = (name) =&gt; ({ name });

const makeDog = pipe(
  named,
  barks,
  poops
);

const fido = makeDog(""Fido"");

fido.bark(); // ""Fido: Woof!""
fido.poop(); // ""Fido: Made a mess""
```",-1.0
g53r8ny,irly2m,Any library that uses SOLID principles,1.0
g507be3,irgcsu,"Encapsulate as what? If it's just going to be a nearly 1-to-1 facade in terms of scope of functionality, don't bother, as it'll eventually become annoying boilerplate festering with random params. Chances are that the author of the driver has already put far more thought into its API than you, and that your usage pattern of said driver is not a unique snowflake.

As someone who has gone through the exercise of changing a driver behind a thin encapsulation layer a few times, I can guarantee at least one breaking change will bleed through your facade API, necessitating code changes in consumer-land anyway, so if the rationale for a facade is ""flexibility"", I recommend considering YAGNI instead

The cleanest code is code that isn't there.",3.0
g4ya4zt,irgcsu,"I would say encapsulation is the cleanest solution. This will allow all of your other packages to agree on the API that you want/require. This will also open up your testing possibilities. This will also keep deployable application dependencies cleaner. You get the added bonus of changing the implementation in a single place, should you decide to use a different driver.",2.0
g52dnwc,irgcsu,"If you do end up with multiple packages having the same dependency, you can make sure they use the same version with syncpack https://github.com/JamieMason/syncpack",2.0
g4zj72k,irg78z,Now *this* is fucking creative. Absolutely outstanding.,13.0
g51vax0,irg78z,thanks :)),1.0
g4zy65g,irg78z,I¬¥ll test it. On Monday!,10.0
g51vbuc,irg78z,it is meant for Mondays hehehe,1.0
g50py0m,irg78z,What exactly is this? I don't feel comfortable making an account just to see what this is.,9.0
g50wczi,irg78z,I put in a fake email. It is a text-based RPG but all the text looks like Javascript code.,3.0
g50w6r8,irg78z,^ same,2.0
g51vgi6,irg78z,"dont worry, I am just a dev, dont do bad things with your mail haha

and login info is handled by firebase, not me :)",1.0
g4y9hil,irg78z,Neat!,3.0
g4ylcyz,irg78z,Thanks üôÇ,1.0
g4ykyv3,irg78z,this is really neat! great work! any plans to open source this?,2.0
g4ylat3,irg78z,Thanks :) currently I can't open source it as it will make bot issue too big for my server to handle üò¢,2.0
g4zs3ep,irg78z,Very cool!!,2.0
g51vj45,irg78z,thanks :),1.0
g50nfc5,irg78z,This is awesome! What's your stack?,1.0
g51vima,irg78z,thanks :) this is typescript react + firebase,1.0
g52hucj,irg78z,"So far I'm rocking a flat cap, sweater, miniskirt and high heels.

Gotta stay warm when you're cruizin' for the D.",1.0
g53hzxh,irg78z,Hahhaah,1.0
g4zp9ew,irf9vv,"Never knew this was a thing. Works wellüëç

Edit: maybe consider adding a button for mobile users",1.0
g4xoo4n,ire5x4,"I‚Äôve used this api abstraction layer a number of times on projects so I thought I would formalize and release it for the community.  It‚Äôs a simple, no dependency abstraction layer for your API calls that allows for dependency injection and api caching.   Hope people find it useful.",1.0
g50syrv,ire5x4,"I like the idea of taking endpoint ‚Äúdescriptors‚Äù out an application into a separate layer and putting them into their own folder so that external people could update them without having to waddle through the entire application. I think that‚Äôs quite powerful. I also like the requirement of defining mock responses when defining an endpoint. However, I am not entirely convinced that putting them together in a single call is practical. Won‚Äôt mock responses be bundled with the application and served to production users? I don‚Äôt see how tree-shaking could work here. 

Another nitpick I have is the word ‚Äúmanaging‚Äù that you used to describe the library. In my opinion a better word would be ‚Äúorganizing‚Äù, because the library doesn‚Äôt seem to provide any means of *managing* my API calls, eg cancelling, or queueing them. What do you think?",1.0
g50xvmq,ire5x4,Excellent points.  You are totally correct on the mock data.   This would not work.  I‚Äôll have to think about that.   I also agree with your comment on the word managing.  I think organizing is a better term.,1.0
g4y3t88,ire5x4,Interesting I will try it out later.,1.0
g4yc8z7,ire5x4,very cool; and useful.  thanks for sharing üôè,1.0
g4ycxp9,ire5x4,Can you explain to me a bit about API caching? Why wouldn't I use something like Redis?,1.0
g4yhliv,ire5x4,"Ya sure.  The example provided is a simplistic client-side only cache with no communication with the server for cache invalidation.  It uses function memoization with a cache timeout.  It‚Äôs super simple, but I‚Äôve found it works great on my projects, both small and large enterprise, primarily because it‚Äôs so simple.  Redis is primarily a server side caching mechanism, and is much more involved to setup.",1.0
g4zvqfz,ircwoy,Top 100+ New Carrot Farmer Interview Questions.,5.0
g5muvj5,ircwoy,"I've heard this phrase before, but i don't really know that much about angular.

Why are agular devs carrot farmers?",1.0
g5n6576,ircwoy,I don‚Äôt really know why. I watch Ben Awad and he uses the phrase. Maybe the logic was that it will be hard to become employed being an Angular dev so you will likely end up being a carrot farmer.,1.0
g4xe7pg,irb676,"üéÆ üìì I made a game controller using tensorflow.js webcam transfer learning.

üìπ [https://github.com/mburakerman/tensorflowjs-webcam-transfer-learning#--preview](https://github.com/mburakerman/tensorflowjs-webcam-transfer-learning#--preview)

üêô [https://github.com/mburakerman/tensorflowjs-webcam-transfer-learning](https://github.com/mburakerman/tensorflowjs-webcam-transfer-learning)

üöÄ[https://mburakerman.github.io/tensorflowjs-webcam-transfer-learning/](https://mburakerman.github.io/tensorflowjs-webcam-transfer-learning/)",7.0
g4xxv26,irb676,"Zelta : A secure and feature rich messaging service for the terminal

[https://www.zelta.gq](https://www.zelta.gq)",4.0
g4ya4y7,irb676,"I have been working on an open source markdown based writing app for developers.

https://github.com/voraciousdev/octo

Its features: client-side encryption, offline-first, PWA, syntax highlighting, regex search, tag based organization, and more!

I recently added a CodeSandbox integration (click a button to convert all code blocks to runnable code), and I'm working on another one-click integration to publish your document to dev.to.",4.0
g4xl97e,irb676,"I made a very feature rich keyboard shortcut/focus library! It's written in a chainable/human readable style that makes really complex multi-key shortcuts easy one-liners.

Source is typescript and type defs are included for intellisense!

https://www.npmjs.com/package/when-key-events",3.0
g4zmoe8,irb676,I‚Äôm on mobile so I might have missed this in the docs but is there an easy way to make one key shortcut work for Mac and windows (e.g. Cmd or Ctrl automatically based on the browsers OS)?,2.0
g51m623,irb676,"There is not, but I'll add it to the todo list!",2.0
g523elu,irb676,"Maybe something like `When('mod+s').Execute('save_command');` or something. or `os_mod`. I'm not sure what the best naming scheme would be. You know what they say about programming.

&gt; The two hardest things in computer science are cache invalidation, naming, and off-by-one errors",2.0
g54erlm,irb676,"This feature would definitely be useful. `mod` is what Mousetrap uses for this purpose, fyi.",2.0
g4ycefx,irb676,"This is neat! I am currently using Mousetrap for keyboard shortcuts, but I have been thinking about moving to something a little more comprehensive. I've been eyeing hotshot, but I'll keep an eye on this too!

Edit: typo",1.0
g4yvenq,irb676,"Thanks for checking it out! If you have any feature requests or bug reports, hit me up on here or GitHub :)

From your initial impression, did it feel like the library was missing anything?",2.0
g4xxgbh,irb676,"We've released new open source library to help you troubleshoot Puppeteer and Playwright end to end tests  
[https://dev.to/bnaya/root-cause-troubleshoot-puppeteer-playwright-tests-with-ease-c4k](https://dev.to/bnaya/root-cause-troubleshoot-puppeteer-playwright-tests-with-ease-c4k)

[https://github.com/testimio/root-cause](https://github.com/testimio/root-cause)  
You feedback is much appreciated! üöÄ",3.0
g5d8d44,irb676,"Nice job, Bnaya! The Puppeteer and Playwright communities need this!",1.0
g4z5sfy,irb676,"I made a little library called `microtype` (originally minitype) for argument checking. You can check for type, or filter arguments with a function. Here it is: [MicroType](https://www.npmjs.com/package/microtype)",3.0
g4xo7ew,irb676,"I made Disaster Check In API, an API serving natural disaster data through REST and webhooks (with exponential back off retries for failed receipt statuses). Documentation and usage are displayed in a dashboard product, developers can sign up in the link. After building disaster check in app I wanted to open up the API in case others would like to consume natural disaster data in an easy format. There is a paid tier which I am offering in hopes to fund the infrastructure and keep the project going.  All feedback highly appreciated, thanks.

Note: the dashboard is meant for desktop browsing only currently unfortunately, thanks. 

[Disaster Check In API](https://dashboard.disastercheckin.app/about)",1.0
g4xzqzu,irb676,"Data sandbox. API full of dummy data, posts, pictures, users, comments. 
Access via Rest or GraphQl
[Rest/graphql mock api ](https://dummyapi.io/documentation/graph-static-data-api?utm_source=reddit-1)",1.0
g4y7gdc,irb676,"I created this speech to text desktop application for Age of Empires 2 in electron.

[https://aoe2assistant.com/](https://aoe2assistant.com/)",1.0
g4y8lxc,irb676,"Made an interactive dashboard demo with cross-filtering support, using Apache Arrow data aggregation in-browser. Try to zoom in on timeline by selecting time interval, see all widgets on dashboard updated  

[https://dashblocks.io/demo/#/dynamicsankey](https://dashblocks.io/demo/#/dynamicsankey)",1.0
g4z3m2r,irb676,"I created and open sourced a web app for managing GitHub notifications ‚Äî it uses relevant heuristics over time to sort and prioritize your notifications to tell you things like why you‚Äôre getting the notifications, and to bring the more important and urgent ones to the top.

https://github.com/nickzuber/meteorite

It‚Äôs completely free too ‚Äî https://meteorite.dev/",1.0
g50enxk,irb676,"I'm picking up blogging about JavaScript, here is one of my first posts about the use of mixins in JavaScript [https://writingjavascript.com/how-to-create-and-use-mixins-in-javascript](https://writingjavascript.com/how-to-create-and-use-mixins-in-javascript)",1.0
g548p10,irb676,"Created 3 free high-quality AWS Associate exam simulators and [study tracks](https://devspot.org/mytrack/SAA-C02.html):

- [Solutions Architect](http://devspot.org/SAA-C02.html)

- [SysOps Admin](http://devspot.org/SOA-C01.html)¬† (Now with detailed explanations)

- [Developer](http://devspot.org/DVA-C01.html)

The platform dynamically creates practice tests and lets you track your performance after completion, give it a try, if you are interested in AWS.",1.0
g56lm3n,irb676,"üí¨ I am making a twitch chat client with electron, react, and node

website: [https://www.distreamchat.com](https://www.distreamchat.com)

github: [https://www.github.com/disstreamchat](https://www.github.com/disstreamchat)",1.0
g5c8srk,irb676,Jener: Bare simple static site generator ever. [https://github.com/eguneys/jener](https://github.com/eguneys/jener),1.0
g4x3fzu,ira5gz,"Exact. 

I am sick and tired of packages having a new minor release that breaks something - usually the build still works and you only notice it after deploy, and the devs never notice it because locally they are still on the previous version.",85.0
g4xpswy,ira5gz,"Use package-lock.json. Even if _you_ use exact dependency versions, the dependencies of your dependencies won't. That's why you use the package-lock file.",36.0
g4xu8vq,ira5gz,"That's right. However, using exact versions in combination package-lock.json is still the best approach imo. That way, you minimize the chances of things breaking.",8.0
g4y3m3k,ira5gz,"Exact versions makes the package-lock much more reliable. It's still not perfect since any dependency might use version ranges, but you're at least giving yourself one degree of certainty. In the event that you have to regenerate the package-lock (which, in my experience, can happen when troubleshooting big dependency upgrades where you have to update many packages at the same time), anything we can do to stabilize the output is worthwhile. You also _have_ to regenerate the lockfile if you want to switch between a range and an exact version.

Worth noting, though, that I've been stuck with using yarn for the last 2 years, which was already well behind npm when I started. It's possible some of my lockfile woes are specific to yarn.",4.0
g518t9a,ira5gz,"One problem with npm's package-lock, at least as of like a year ago when I last used it (now use yarn), is that the lockfile isn't idempotent, so it is basically meaningless. For some reason they decided that the package-lock is a mere suggestion and doing an install will check the package.json every time and update a package if there is a newer version that fits within the specified range.

There is a way around this; you can use `npm ci` instead of `npm install` but that means everyone on your team will also need to remember to use that command to not cause versions to update in the package-lock.

Edit: now I see the discussion that already happened about this below, oops",2.0
g4xjhbm,ira5gz,"it sound like you dont install for the build with 'npm ci', that installs from the lockfile. tbh i dont even know why installing from the lockfile isnt the norm for 'npm i'",20.0
g4xom5e,ira5gz,"There's a huge discussion on GitHub that covers why - it's not good reasoning imo but it's a decision.

The issue comes when a dev does a local install which updates the lockfile and includes it with other changes. Those subtle changes can leak through and not be caught then",10.0
g4yn74m,ira5gz,"`npm i` will update transient dependencies even with exact versions for your own dependencies, causing the exact same issues, only harder to discover. Using `ci` locally is the way to go.",3.0
g4xuw1y,ira5gz,"This is what yarn does by default, which is a better default imo",6.0
g4xd7lz,ira5gz,The amount of package owners who don‚Äôt know basic semver is staggering...,21.0
g4xz2v0,ira5gz,"I don't think is that, more like patches and minor releases might introduce new bugs.",12.0
g4y2crc,ira5gz,"Trust me, it‚Äôs that as well.

Source: I‚Äôm the guy responsible for reviewing the merge request from the renovate bot in a big project.",2.0
g4y6lem,ira5gz,Typescript is a good example of a well known package that doesn't understand semver,5.0
g4zq64f,ira5gz,"It's not that they don't understand semver, they explicitly state that they don't follow it for reasons they go into ( other commenters have linked below ).",8.0
g4y9xks,ira5gz,"Yup. Had a collegue who was about to go through our app, top to bottom, to make sure nothing broke with the 4.0 release. Then I informed him it was just release #40. (Thankfully got that info through reddit myself)",3.0
g4yyel0,ira5gz,"For typescript they would on version 5000 if they followed semver.

I will say the github issue about it is hilarious, if only for this comment:

&gt; I thought this was implicit, but now I have to say it explicitly: Comparisons to Hitler are neither necessary nor welcome here, and anyone unable to debate the merits of versioning schemes without relying on that as a rhetorical device should rethink whether their participation here is going to lead to a constructive conversation.



https://github.com/microsoft/TypeScript/issues/14116",4.0
g4z811j,ira5gz,"Semver doesn't make sense for all projects, for example Ubuntu where they use the year and month of the release. But the version numbers should have **some** meaning and not just randomly chuck a decimal point halfway through your release number and call it a version. Typescript versioning would make a lot more sense if they called 40 or 1.40 instead of 4.0.",5.0
g4zi799,ira5gz,"That's very fair, from what I understand on the github issue it only comes down to marketing decisions if you can believe that.",2.0
g4yrx7o,ira5gz,"As much as I like semver, you're wrong in believing it's a standard every package has to follow. It may or may not make sense depending on many factors.

Typescript, for instance, doesn't follow semver, and they seem to be doing ok.",4.0
g4z2zo3,ira5gz,"If they tag their versions with x.x.x, one would assume they follow semver, no? Yes, I know now that Typescript doesn‚Äôt.",2.0
g5159yx,ira5gz,"&gt; they seem to be doing ok

Indeed, they routinely have to close issues requesting them to follow semver and once even resorted to censoring comments and suspending an issue because it got ""too heated"" (someone compared the maintainers to nazis).

They invented their own versioning rules because they can and they will continue to use it because they are the ones who decide.

So yeah, aside from the people that take versioning seriously and complain, they are doing fantastic! I sure wish everyone can come up with their own novel versioning rules!",0.0
g4xmdks,ira5gz,"I see lots of people here saying exact, and if you're writing an app or a private project, do what you like.  But, if you're writing a library, never use exact.  If your library depends on the ""foof"" package, and foof finds some critical security vulnerability and releases a patch version, I don't want to wait for you to upgrade your library in order for me to get the security fix.",48.0
g4xo91k,ira5gz,This is absolutely right. The same point is echoed by this awesome article here [https://docs.renovatebot.com/dependency-pinning/](https://docs.renovatebot.com/dependency-pinning/),8.0
g4ygh6c,ira5gz,"That's a nice article but the writers don't fully understand lock files. Firstly it seems they've never heard of npm cleaninstall (npm ci) and assume you would run a normal npm install in deployed environments which is insane, secondly they go on at length about the lock file getting ""out of sync"" but that never happens because npm handles it automatically",3.0
g4yjq5g,ira5gz,"&gt; they've never heard of npm cleaninstall (npm ci)

It's actually just `npm ci`. If it stands for anything, it stands for continuous integration. I think of it as ""Do a CI build"".",8.0
g4z8r0w,ira5gz,"Oh wow you're right, I always assumed it was a shortcut for cleaninstall since that's what it does (while also pinning versions). So just npm ci then.",2.0
g4z7q0f,ira5gz,"correct me if I'm wrong but doesn't npm ci produce an error if the lock file and package.json are out of sync ? you'd have to run npm i instead to re-sync the lock file, changing it in the process.",3.0
g4z9qmc,ira5gz,"Yes that's right, if your package.json and package-lock.json don't match then obviously you've done something really wrong and the build should fail.

I don't see how you can get out of sync in the first place though unless you do it on purpose by editing one of those files to make it wrong.

You should never be setting or changeing versions of dependencies by directly editing package.json run npm i package@version instead, or npm upgrade or whatever and it will update both files as well as your Node modules. Doing it by hand is not only dangerous but also more work",5.0
g4zi0m4,ira5gz,"yea as you said, the article went on about getting out of sync but it it didn't really elaborate on how you can reach that state. Other than changing the dependencies manually, I don't see any other ways either.

Though i still think the point holds. yes the lock file locks your dependencies to a specific version, but it's not the source of truth. In case you have to regenerate it for whatever reason, a breaking change might slip thru one of your dependencies if you don't use exact versions.",2.0
g51xfl7,ira5gz,"Hmm I guess I consider the lock file to be more the source of truth than the package.json actually, because the lock file is what is tested in CI and what is used for installing in every environment. It's even what developers will get when running npm install as long as the package.json still agrees with the lock file.",1.0
g4y05on,ira5gz,"If you are the only dev managing the project or have a team that is willing to install extensions. A tool like ‚ÄúVersion Lens‚Äù can help with this. This is a Vscode extension but am sure there are other options available for other IDE‚Äôs.

Version Lens Extension:
https://marketplace.visualstudio.com/items?itemName=pflannery.vscode-versionlens

I manage two separate component libraries and am using exact versions in both. This extension helps me keep the packages up to date and test them before making new builds. Since it places the version above the package, you can easily see what type of version bump it is (i.e. major, minor, patch).",1.0
g4xebtb,ira5gz,"Our team recently got bit by range versions. We run `npm audit` every quarter and address anything that pops up. `npm audit fix` updated a minor version of a dependency automatically. Since the new version still satisfied the package's range, the `package.json` file did not reflect the update.

Since we didn't notice the update, we didn't test carefully the code paths where the package was used. Our QA team (which unfortunately where I work is a totally separate team that we have little visibility into) also didn't have good coverage around this issue. Needless to say, a customer-facing defect slipped into production.

Had we specified exact versions, we would have noticed the change in `package.json` and more thoroughly tested that feature.

Aside from specifing exact versions and shoring up or test coverage, we learned another valuable lesson... Don't skip reviewing changes to `package-lock.json`. We often don't look carefully at that file, since it is generated, and the GitHub pull request feature hides it by default. Had we taken a closer look at it, we would have noticed the update and tested the depending features.",10.0
g4xhxks,ira5gz,"I learned that most people start out using range versions until they get bit, then they switch to exact :D",4.0
g4yodjn,ira5gz,I'm surprised that `audit fix` doesn't update the version range. That doesn't seem like the correct behavior.,2.0
g4zi4uu,ira5gz,"I believe the issue is that not every parent dependency gets updated, but a sub dependency might be.",3.0
g4x8m0u,ira5gz,"range versions. And we use a bot that makes a PR as soon as the dependency gets a new version that satisfies our semver range. The PR contains every commit so we can choose to review and merge or just let it pass. Works very good for us and we have never had any problem with breaking dependencies.Usually everyone who has problem with breaking dependencies by using range versions are not using some sort of version lock system.  


I don't recommend exact versions because then it's easy to miss out on important bugfixes.",11.0
g4xbtqw,ira5gz,"That's a very valid point. I'd say missing on those bug fixes, some of which are security fixes as well, is the biggest down side to using exact versions.   


you ever run into a situation where a library broke because of a minor update?",2.0
g4xccrz,ira5gz,"Of course every minor version of a library is not fully compatible with our application and that is why we lock our versions, it mostly has to do with library authors not fully respecting semver.

The PR our bot creates for us with that new version are running our test suite to ensure we never let a dependency update cause failures in our app.  


We also have a policy of letting new version of a library hang a month or two depending on the size of a dependency before we update. This is to ensure others are facing the potential bugs before we do so that the dependency will have time to fix those. This is mostly for major version upgrades but we use it sometimes for minor versions as well(react/react-dom for example)",3.0
g4x3wni,ira5gz,"Always exact versions, i add save-exact=true to .npmrc file to make sure new dependencies are saved that way",21.0
g4x2lz2,ira5gz,Exact versions and every once in a while `yarn upgrade-interactive --latest` to review updates and TODO necessary code changes in case of something breaking.,12.0
g4xa1jo,ira5gz,"Both range and exact. 

Range in package.json and yarn.lock or package.lock set to an exact version. This ensures that builds and deployments are predictable. 

Setting exact in package.json is problematic and no longer necessary. 

Optionally use Dependabot or Snyk to manage feature and/or security updates.  Also you can choose whether they should update major or minor version changes or security only updates. Can also be set to do this automatically for you. 

Good test coverage will give you confidence in Dependabot and Snyk automated changes.",7.0
g4y213w,ira5gz,"There is a dependency update tool called Renovate which has a pretty nice deep dive they wrote about it. An extension to this question is to use dependency update tools like Dependabot and Renovate and have a good enough CI that will catch integration bugs.

https://docs.renovatebot.com/dependency-pinning/

We recommend:

1. Any apps (web or node.js) that aren't require()'d by other packages should pin all types of dependencies for greatest reliability/predictability.
2. Browser or dual browser/node.js libraries that are consumed/required()'d by others should keep using semver ranges for dependencies but can use pinned dependencies for devDependencies.
3. Node.js-only libraries can consider pinning all dependencies, because application size/duplicate dependencies are not as much a concern in node.js compared to the browser. Of course, don't do that if your library is a micro one likely to be consumed in disk-sensitive environments.
4. Use a lock file.",5.0
g4y3iua,ira5gz,"At ChromeDevTools we check in the node_modules folder in the repository (our continuous integration is not allowed to connect to the NPM registry). We use exact versions to make sure our updates are minimally changing to improve `git diff`s and to make sure we can cleanly roll back (which happens more often than we would like). It also allows us to perform automated security checks, as we always know which exact versions we are running.",4.0
g4xmngk,ira5gz,"I read this as ""Do you exact revenge from your dependencies?""

Yes. Yes I do.",3.0
g4zhoiw,ira5gz,"Using the command `npm ci` for deployment can help as it relies on `package-lock.json` existing, and from what I've seen runs faster.

[https://docs.npmjs.com/cli/ci.html](https://docs.npmjs.com/cli/ci.html)",2.0
g4x2kie,ira5gz,"I just keep my dependencies 100% updated...

hell I even fork them to update their dependencies (only when an `npm audit` or GitHub's Dependabot flags a dependency)

Although I like to ""move fast and break things""",1.0
g4xcizl,ira5gz,Cherish these moments when keeping them up to date is feasible,13.0
g4xjror,ira5gz,"Trust me, I do üôÇ",2.0
g52qnr0,ira5gz,"Keeping all dependencies at latest sounds like the complete opposite of moving fast. I once tried that, ended up having to do pointless changes all the time instead of actually developing the software. I guess it's feasible in small projects though.",1.0
g4xyvve,ira5gz,We use always exact versions in our projects and package-lock.json. Also we use the wonderful Snyk service which does security breach checks and auto pullrequests to our github projects.,1.0
g4yl8pq,ira5gz,"I use a workspace that compiles everything to a static output (Rollup + Closure a Compiler), and requires dependencies to be exact. With this setup, releases never require dependencies and cannot break from them being updated, and with exact versions for dev deps, even developing is not subject to dependency breakage.",1.0
g4ypd3v,ira5gz,"If anyone is interested, syncpack can let you enforce whichever version style you prefer. You could use it in a git hook: https://github.com/JamieMason/syncpack",1.0
g506hvz,ira5gz,"A mix. How strict I want to be depends on the package: its version history, how well it follows semver, whether it's still on a 0.x release, how well-vetted it is, and the purpose it serves.

It's fine to use exact for everything if you want/need to vet every single dependency update (which ideally you should) *and* can't rely on a lockfile for some reason - otherwise I don't see the point in applying a blanket policy. If you want to be a little more on the safe side than `^`, it's probably better to use use `~` as the default (rather than exact), so you're less likely to ignore security updates and bug fixes, but I guess it ultimately depends on your update workflow/process.",1.0
g52rsaw,ira5gz,"Exact, except for packages which explicitly have a SemVer policy and have demonstrated maturity. Those are few.",1.0
g4xsmsz,ira5gz,"In a large codebase, definitely always use exact. Hard to trust all package maintainers to always get semver right and all of a sudden a patch release is breaking. 

I highly recommend creating a .npmrc file with use-exact=true so that exact versions are always installed. 

This of course does not apply to package deps, but your lockfile is usually giving you some protection there.",1.0
g4xowo1,ira5gz,I‚Äôve been regularly bit by range versions but haven‚Äôt convinced my team yet that we should just use exacts.,1.0
g4zitrm,ira5gz,"brace yourself, it might get ugly.",1.0
g57nnvi,ira5gz,It actually just happened super easy! The thing is I guess time has really flown in the last year and many people who were against it don‚Äôt work here anymore now that I think about it...,1.0
g4x3eyz,ira5gz,"Exact versions for `dependencies` (because as you said, some libraries break things in minor versions) and mostly range operator for `devDependencies` (because it will usually only impact dev, so we find out early and don't break prod).

Dependabot + a good CI make managing all that very easy.",0.0
g4xi5s9,ira5gz,"You should use range version while you are developing and once you want to release a real version, you use the exact version. Then you will only use exact version, it‚Äôs easier if you take the project few months later because with a regular yarn install, the app can just not work with the updated dependencies and then that‚Äôs a nightmare!

Also check npm-check-updates, that‚Äôs a great tool, I run it every week to update my dependencies.",0.0
g4z3s9h,ira5gz,Always exact. Even for NPM released packages. I don‚Äôt care about node modules bloat. My sanity and program correctness beats a few extra megabytes on disk.,0.0
g4xr23f,ir9fl4,In depth - 3 minute read...,1.0
g4uvvpt,iqwjs3,"The initial page looks ok, but then it gets a bit wonky and not very user friendly. I clicked on the link and didn't waited for it to load and I think it messed it up. You could add a loading state and not allow for the user to click anywhere until the data is loaded. It gets confusing what to do when the data is loaded.  You also have a lot of information in the url.

Your code, on the js part it's difficult to understand what's going on there. Lots of magic numbers and your variables don't have a meaning that will allow anyone to follow it.  You could have done a CSS document and put all the styles there.",2.0
g4uwpmp,iqwjs3,"Clicking on nutrient's value while loading data shouldn't messed anything up. After data is loaded then follow next steps.

Most of the variables in JS file are the first letters from html tags. There is no enough CSS to put it into separate file",1.0
g4ux617,iqwjs3,"I would have to send you snips to show you. I use chrome.
You have CSS directly in the HTML. I just find it easier to separate my concerns. HTML on one side and styling on the other.",2.0
g4uya4x,iqwjs3,"I once had even JS in index.html. I decided to separate it to allow people to copy Plantiet to their own server without the need to clone everything, just index.html",1.0
g4uzeil,iqwjs3,Using git anyone can just clone your entire project with one command.,2.0
g4wn8qp,iqwjs3,"I meant that you don't need to host the whole repository of Plantiet on your own, you can just put index.html and script src to Plantiet's github. Besides that, can you help me improve Plantiet, especially its UX? :)",1.0
g4wszgz,iqwjs3,"Would it matter if someone has the all repo? It is a simple app. I checked devtools and all responses are extremely fast. Yeah I can help with the ux part. Just an idea, tell me what you think. Change the name to planti, I think that's a more appealing name. Unless you're Danish and plantiet makes sense for you.lol",1.0
g4xlovz,iqwjs3,plantiet - plan diet,1.0
g5gh932,iqwjs3,why not plandiet :D,1.0
g5guv2f,iqwjs3,plantiet sounds better and refers to plants - very healthy stuff,1.0
g4xuc3m,iqwjs3,[deleted],1.0
g4xyd8s,iqwjs3,I am,1.0
g4xym4v,iqwjs3,[deleted],1.0
g4xzml2,iqwjs3,"What do you mean by ""I did everything right""?",1.0
g4uqr4r,iqwjs3,Have you deployed it?,2.0
g4uqvj3,iqwjs3,[https://jedzoka.github.io/plantiet/](https://jedzoka.github.io/plantiet/),2.0
g4x662j,iqwjs3,Doesn't work on mobile Chrome (Android). At least for me the whole UI gets messed up,2.0
g4xlxxi,iqwjs3,what's your screen resolution?,1.0
g4yeq96,iqwjs3,"Broken for me - 491x1037
Chrome / Android",1.0
g4yg91j,iqwjs3,"specify what is broken, maybe share a screenshot",0.0
g51ak9d,iqwjs3,[https://developers.google.com/web/tools/chrome-devtools/device-mode](https://developers.google.com/web/tools/chrome-devtools/device-mode),1.0
g51avou,iqwjs3,"    +  
    1  
    set days

'+' increases counter  
'set days' negate the counter

How to move forward?",1.0
g51slpk,iqwjs3,"Click on some nutrient's name. I should maybe make 'set days' do the same

edit: I fixed that",1.0
g4urxgp,iqwjs3,"Nice brow,

 would be good if u could add a readme file to ur repository.",2.0
g4usxie,iqwjs3,"I don't know what to put there. Most readmes contain information on how to install and run specific program, in my case, there is no need for that",2.0
g4w90r5,iqwjs3,You could also just write a short description of what it is you‚Äôve built.,2.0
g52v0ls,iqwjs3,"Semi buzzed and checking this out. 

I have no clue what I‚Äôm supposed to do. 

It may be the best diet calculator/app ever, but if users don‚Äôt understand how to use it...",1.0
g52vko7,iqwjs3,have you read the description?,0.0
g52zphe,iqwjs3,"Yes - but it didn‚Äôt help. And you shouldn‚Äôt need to read directions to use an app like this - the UX should be enough to guide the user. 

It‚Äôs hard to tell - but I assume you have really good logic/calculations going on - but using the app itself is nearly impossible. 

Maybe look at how other websites are doing it and try to replicate that?

‚ÄúWait until it finishes loading‚Äù should never be a user requirement.",1.0
g5uuqh2,iqwjs3,"I ditched XMLHttpRequest for Fetch API and was finally able to download all default foods' data without reloading

[https://jedzoka.github.io/plantiet/](https://jedzoka.github.io/plantiet/)",1.0
g4v0ilk,iqwcbj,Wow that is *incredibly* impressive for two days of work (Hackathon or no)!  Really great work OP!,16.0
g4vd74r,iqwcbj,Thank you! I don't think I've coded so fast in my life LOL,7.0
g4v0edi,iqwcbj,amazing job! Thank you for sharing this.,8.0
g4vd7j4,iqwcbj,Thanks!,3.0
g4ul1l8,iqwcbj,"Hi everyone!  
I just finished a 48 hour hackathon from mintbean.io  
The task was to build an application that does not use the mouse in two days.

I built a small version of stardew valley.

The code is all vanilla Javascript with webpack and babel to keep the code in one js file after build.

You can play it [here](https://farming-sim.uzairashraf.dev/)  
Source code [here](https://github.com/uzair-ashraf/farming-sim-no-mouse-hackathon)",20.0
g4uv7b2,iqwcbj,"Nice and clean code. Couldn't check out the game since I'm on the phone but really liked ""veggieTable"" lol",20.0
g4voqr4,iqwcbj,Ooph. Good concise variable name that conveys the meaning *and* is a pun? That's fantastic.,4.0
g4uvk5b,iqwcbj,Thank you!,3.0
g4vhh0m,iqwcbj,"Nice work. You should do some Ludum Dare competitions.

Is the play link down?",1.0
g4vl2ae,iqwcbj,"I've always wanted to! But unity and I don't get along very well LOL.  
It was temporarily, I think the amount of visitors crashed my poorly maintained ec2 instance",3.0
g5roqy6,iqwcbj,"Unity isn't required. I've been doing Ludum Dare for years, all games made in js.",1.0
g5sayvp,iqwcbj,Can I see a github link?,1.0
g4x5vxz,iqwcbj,Ah man I was looking forward to this but on mobile. Bookmarked!,2.0
g4x6ial,iqwcbj,Hacaton is a cool things ),2.0
g4yheio,iqwcbj,Bruh...... DOM game,1.0
g4v2lur,iqwcbj,"Wow completely broken on mobile!

Haha good work

Edit: forgot this: /s",0.0
g4vdb95,iqwcbj,"I should have clarified for desktop only, I am planning to add a visible game pad on mobile later on",7.0
g4wf3nc,iqwcbj,I treated this game like I do with documentation.  I failed to read and thought it was an image for a while lol. I'm on mobile,1.0
g4vbk80,iqwcbj,It's for playing with a keyboard...,0.0
g4vbqqp,iqwcbj,Yes obviously. I was being sarcastic. A lot of people browse reddit via mobile.,3.0
g4uy47t,iqwcbj,Movement and controls are very wonky. Cool project otherwise :),1.0
g4vd9lx,iqwcbj,"It was kind of hard to squeeze in all the keys that need to be pressed, but agreed :3",1.0
g4vgih5,iqwcbj,Super impressive for 2 days! Congrats man!,1.0
g4vm04z,iqwcbj,Thank you!!,2.0
g4vmgiv,iqwcbj,"gj boi, pretty inspirational stuff:)",0.0
g4wz7d7,iqwcbj,"A great job in such a short time. If you are interested, i would pay you $250 to port this game to the Beads language as an example. It would take probably a few days to learn Beads, but obviously it won't be that hard because Beads JS. It is a competitor to typescript. Anyway if you are interested please let me know.",0.0
g4xqzhd,iqwcbj,"I appreciate the idea, but I‚Äôll have to pass, my work schedule makes it damn near impossible.  I‚Äôll keep in touch if change my mind tho",1.0
g50ct6e,iqwcbj,"Okay, maybe some other reader of this thread will take the offer then. I find that nobody, not even retirees have time to learn a new computer language! As my friend Paul says, we are too busy digging with dessert spoons to see the bulldozer demonstration! Ha ha.

Where are you from¬†by the way?",1.0
g50qvp5,iqwcbj,"I'm in southern california.  I do like to learn new languages in my downtime but its usually things that can help my career or at the very least spark my interest.  I've never heard of beads.js, but if it gains traction in the future I would love to give it a shot!",1.0
g56vsqy,iqwcbj,"Beads is brand new. THere is a website at [www.beadslang.com](https://www.beadslang.com). I just wrote the website in beads. It came out pretty well, but it doesn't work on mobile screens yet, gotta add logic for tiny viewports.",1.0
g4uv0ak,iqwcbj,Pretty neat. Maybe fix the character movement? Unless moonwalking is part of the game,-1.0
g4uvjax,iqwcbj,"It was 2 days to do it, once I got it working I moved to the next feature, but agreed, the walking is defintely buggy.",4.0
g4ugqyc,iqvmae,"View in your timezone:  
[today at 4pm PT][0]  

[0]: https://timee.io/20200911T2300?tl=Node.js%20developer%20Mathias%20Buus%20speaking%20at%20SpeakeasyJS%2C%20today%20at%204pm%20PT",0.0
g4uw80o,iqrzql,That is pretty neat.,2.0
g4toubu,iqpgqn,"""Any""-language ... looked for C, C++ and RUST noone there :/",7.0
g4tpo2s,iqpgqn,"Using the terminal you can install any language using `sudo apt install` command. All templates are based on ubuntu, so this method of installation will work.

I will be adding more languages soon.",12.0
g4ung4a,iqpgqn,God I certainly hope you sanitize those inputs...,3.0
g4ui8n5,iqpgqn,"FYI I think the blog might be down:  [https://www.anyfiddle.com/blog](https://www.anyfiddle.com/blog)  (getting the message ""upstream connect error or disconnect/reset before headers. reset reason: connection failure "")",1.0
g4tuuw4,iqpgqn,"This is very cool! If it‚Äôs open source, I would be happy to contribute",2.0
g4uk9i9,iqpgqn,On mobile the chat is a bit buggy but nice work OP !,1.0
g4uvnip,iqpgqn,"I for one was very impressed. Do you mind sharing the basic architecture?  


Something along the line of Docker + ngrok (when needing a browser like for React)?",1.0
g4w5c5x,iqpgqn,How did you create the URL mapping to the port on docker?,1.0
g4u8wi2,iqpbjx,Elijah Manor is the man üòé,8.0
g4u9m07,iqpbjx,"Nice try, Elijah.",8.0
g4ugj0s,iqpbjx,"Ha, that wasn't me :)",11.0
g4uotmi,iqpbjx,"Nice try, /u/bschaepper.",7.0
g4uahqp,iqpbjx,"Here's a tip: never use floating point numbers for currency, especially in javascript
 Use an integer to keep it in memory",12.0
g4x4bo8,iqpbjx,"Right; this is a common mistake!  If you are in doubt, try running alert(0.1 + 0.2 === 0.3).  (Caveat, I don't know that this fails on all systems, but it definitely fails on a lot of them).",3.0
g4uonz9,iqpbjx,All numbers in js are float64,5.0
g4uzzla,iqpbjx,"Yes, but due to how floating point values are kept internally, integers from -(2^53¬† - 1) to 2^53 + 1 are kept with exact precision, effectively the same as storing it in an integer.",5.0
g4uc75l,iqpbjx,"Are there currencies that often use more than 52 mantissa?

If you're interested in the max value you can store without floating point issues to a certain decimal point someone on stack overflow was nice enough to do the math

https://stackoverflow.com/questions/45929493/node-js-maximum-safe-floating-point-number",2.0
g4ubnp9,iqpbjx,"I wouldn‚Äôt state that as strongly as ‚Äùnever,‚Äù cause it kind of depends on if the user is on a 32 bit system. If they are, you‚Äôll have issues with amounts greater than $2B. Or down to about $20MM if you‚Äôre tracking pennies. An important caveat to keep in mind.",1.0
g4usa03,iqpbjx,"Pretty sure it also impacts some simple math at lesser values than that unless some errors have been corrected recently.  I'm not in a place where I can figure out what that case is unfortunately... But I almost exclusively work in cents/etc. if money is involved.

E: I think it was 0.10 + 0.20?",3.0
g4uvv4v,iqpbjx,Hmmm maybe we shouldn‚Äôt be using JavaScript for financial reporting ü§î,1.0
g512o7u,iqpbjx,Yeah I heard COBOL was a much better and modern option,1.0
g4uc3ye,iqpbjx,"Okay, fair. But it doesn't hurt to be able to meet standards if it can't control what numbers you'll be dealing with",2.0
g4v0pep,iqpbjx,"I believe all numbers are 64 bit in JS.

edit: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#:~:text=The%20JavaScript%20Number%20type%20is,arithmetic%20is%20subject%20to%20rounding.",2.0
g4uzbib,iqpbjx,"[https://formatjs.io/docs/polyfills](https://formatjs.io/docs/polyfills)

Neat. Probably my favorite take away from the article. Thanks for sharing.",3.0
g4v6e6z,iqlm0g,"Hi /u/J-Kob, this post has been restored.

Apologies for removing it, I missed the source code button on my initial review.",1.0
g4t1ndt,iqjwzw,"Great article, good solid read. I noticed the content overview at the start doesn't link through correctly, you might want to take a look at that.",6.0
g4td6v5,iqjwzw,"Great article. You must be one of the tutorials not to describe promises as 'An IOU for something that will happen later"". 

That's description doesn't explain what a promise is, it's very confusing to see it all over the internet.",4.0
g4t4zho,iqjwzw,Every day it seems someone writes the exact same article,29.0
g4t876g,iqjwzw,"While I agree, some articles are better than others.  And if you think you can improve on the ones you know about, there's certainly no harm in doing it again.

The same goes for frameworks, libraries, etc.  Your version might just be the one that really makes a difference.

Or at the very least, you might learn some things.  One of the best ways to reinforce your learning and even learn more is to put it in writing for others to learn from.  Or to write your own code with the same concepts, etc.",16.0
g4tfhv0,iqjwzw,"This is exactly why I write. And make any open source project, really. I‚Äôve almost never written on a topic that hasn‚Äôt been ‚Äúdone before‚Äù. I just know I can do it better and be more clear. Also, doing a lot of research will help me understand the topic better, so it‚Äôs win-win.",15.0
g4uogiz,iqjwzw,"Agreed there‚Äôs so many different ways to setup, integrate, build from scratch, etc. that it‚Äôs worth having lots of articles to help a practical at need even if it‚Äôs the same technology/concept",2.0
g4tf7rh,iqjwzw,"Most of those articles describe how to do a few things with callbacks and promises, but they‚Äôre missing large gaps and making assumptions, and often just wrong. Most of them miss the point that callbacks and promises and async functions themselves are not asynchronous, but rather the Web APIs (or C++ APIs in Node) in the host environment are asynchronous and the aforementioned three are just how you as a JavaScript developer can work with them and essentially ‚Äúsynchronize asynchronous behavior‚Äù.

My article is different and I went to great lengths to be extremely accurate and also explain _why_ setTimeout is being used for an example instead of just throwing you into it.

I know for a fact this resource can be invaluable to new developers wading through a sea of half-written, outdated tutorials.",12.0
g4tqiho,iqjwzw,Thanks! I‚Äôve read your articles in the past and they‚Äôre always helpful,2.0
g4t5h9p,iqjwzw,Great article. Thanks for sharing.,2.0
g4ulfdo,iqjwzw,"Question:
`const response = await fetch('https://api.github.com/users/octocat')
const data = await response.json()`

Is it necessary to also await the response.json()? Doesn‚Äôt the whole function wait for the fetch to resolve in this scenario before continuing to the next line? Or is the .json() function also async? How does that work?",1.0
g4us7aj,iqjwzw,"From mdn: The json() method of the Body mixin takes a Response stream and reads it to completion. It returns a promise that resolves with the result of parsing the body text as JSON. [https://developer.mozilla.org/en-US/docs/Web/API/Body/json](https://developer.mozilla.org/en-US/docs/Web/API/Body/json)

So, yeah, the response.json is an async process as well.

To expand a bit on this: fetch has to wait for a server to respond to our request. When the resource or service is available, the response.json needs to stream the resource so it will become available in the browser. Both processes take time.",3.0
g4wrvhb,iqjwzw,I like your color theme. What is that?,1.0
g4t679v,iqjwzw,Prints perfectly to pdf. This will make for some great in-flight reading thank you ü•∞,1.0
g4szztl,iqjwzw,"great article, thanks",-1.0
g4s7k3i,iqgz0z,"A. JavaScript is going in the right direction. However, JavaScript isn‚Äôt remotely a replacement for c#, Java, c++, or python. These languages all have very different uses in the same way a hammer is different from a saw and while you need both tools, you wouldn‚Äôt try to saw a nail or hammer a board into two pieces. 

B. I‚Äôd like wider adoption and support by browsers. It makes no sense that browsers, in 2020, don‚Äôt all properly execute es6 properly.",6.0
g4yqmyb,iqgz0z,"Amen to browser support at least it isn't as bad as the early days where Microsoft was purposely trying to make their APIs different than Netscape.

I pray for the death of IE... Every project I have been on wants to support IE 10.",2.0
g4yvha9,iqgz0z,"Totally agree. Microsoft should just get out of the browser business all together. They‚Äôve added nothing to the market and wasted god knows how many millions of hours of programmer‚Äôs lives all because their product sucks massive donkey balls.

I suspect that in another 5-10 years browsers will be mostly standardized as all of those old machines die. iPads and iPhones are durable and many of those older products can‚Äôt run modern versions of JS despite having the processing power. It‚Äôs a major flaw in the planned-obsolescence work flow. The tools outlast the software.",1.0
g4sbiiu,iqgz0z,I'm not sure I'd call 1995-2010 the good old days. I still get anxiety every time I see the word `prototype`.,6.0
g4tl0ur,iqgz0z,"If it gives you anxiety, maybe you don‚Äôt fully understand prototypical inheritance?",-1.0
g4tjrny,iqgz0z,"A) I like JS, but I don't prefer it over other languages, I just like building things on the frontend.  
B) ES6 was a good update.  More recent additions have been less amazing.  Unless you want to move on from prototypal inheritance, I think it's good.",2.0
g4tzrpc,iqgz0z,"**A)**  For many years I preferred Python over Javascript, and I also liked Java's tooling support much better.  But eventually ... and maybe this is a product of seeing all the improvements to JS over the years ... or maybe it's just ""Stockholm Syndrome"" ... I *honestly* came to feel like JS was my favorite language.

Thanks to TypeScript (even *if you don't actually use TypeScript*), VS Code's ability to infer types in JS code results in *almost* the same level of tooling that a fully typed language like Java has.  And while I will always miss some of the conveniences of Python, I've discovered conveniences JS has that Python doesn't (eg. better anon functions). Plus, I've come to realize that many of the conveniences it doesn't have are things I can live without.  For instance, Python's syntax for slicing arrays is undoubtedly superior ... but I don't slice arrays all *that* often, so I can live with the slightly kludgier `.slice()`.

**B)** Mostly I'd steal Python stuff ... but thanks to the failure of CoffeeScript, let's just say I'm not holding my breath waiting for:

* enforced indentation instead of curly braces
* better low-level syntax bits: eg. Python's superior array slicing syntax, it's superior array index syntax (it can understand an index of -1 as ""the last item in the array"", while JS can't), etc.
* an import/export system that ""just works"" (ie. that the freaking *Node Organization itself* doesn't just sit on, while twiddling their thumbs, for *years*) :-(",1.0
g4yu7h4,iqgz0z,"Some python syntax stuff would be neat, but a hard no to enforcing indentation instead of curly braces. ü§Æ",1.0
g51ap4a,iqgz0z,"**A) i)** I use it because it's a **very convenient language**--it allows you to visualize and distribute stuff very rapidly and safely. With Java or Python, I'd have to send a sketchy .exe which would often get flagged and removed by the antivirus or straight up not work on my friends computer. Updating and fixing issues would also be a hassle since I have to recompile and send him a new version each time and I've had times where the applet doesn't work because they have several versions on their desktop and don't know which is which.

JavaScript is just entirely more convenient to work with. You only have to test for browser compatibility and not OS compatibility, and even testing between browsers/different devices is very easy with dev tools. There's no issue with security or getting flagged by the antivirus since your browser is a secure sandbox. Distribution and updates are trivial since you just have to send them a link and they can see updates to the web app/webpage by just refreshing. For production, you also don't have to worry that someone is not using X dependency/library or that they're using the wrong version of the language (e.g. Python 2 vs 3) because the browser manages that for you. If you use an online IDE, you can directly share and work on the code at the same time and run it natively on our own computers which is honestly insane (with something like VS Code Live Share I'd have to run it using my colleague's terminal and if it's a graphic application, it will only launch on his computer making it impossible for me to see what's going on). As for more of the back-end, the fact that you can write one piece of code and use it for a website, desktop app, and a mobile app without having to change it is kind of insane.

**A) ii)** I'd say the language has matured a lot from the past. I don't know if I'd call 1995-2010 the good old days since the language was kind of a mess for most of its lifetime (JavaScript vs JScript lmao) and it really started getting good with ES5 and ES6 features and the huge performance increases from the browser wars. In any case, yeah the language is going the right direction. With web workers we're going to see better performance from multi-threaded applications and web assembly there's enough syntactic sugar that it feels good to write in. Frameworks are making it even easier to write in too.

**B)** More performant DOM manipulation. With web workers, pretty much the only thing we're not supposed to multithread is DOM manipulation but it'd be nice if we could have certain content get loaded by certain threads without stuff breaking.",2.0
g4srllu,iqgz0z,"A) I don‚Äôt prefer it. I‚Äôm paid to write it. 

B) Take anything else and call it JavaScript.",2.0
g4sqi3o,iqgz0z,"Definitely all the frameworks and it‚Äôs expanding role past just front end web stuff. It‚Äôs awesome to learn one language that you can do front end, back end, mobile apps etc in all without having to put time into learning a new languages syntax",1.0
g4s3c3h,iqgz0z,"a) The other ones aren't easy to make into websites

b)Try to reduce complexity in syntax, keep it simple and stop repeating syntax with a cool new 'feel' to it because that's just clutter.  The idea is that everyone on earth can use it as easily as possible, not that some autistics get their rocks off, that is why there isn't strong typing to begin with.",-3.0
g4sgofs,iqfudu,Someone spelt 'spec' wrong (in the article).,1.0
g4shumq,iqfudu,Dyslexic!,1.0
g4spv8f,iqfudu,"    const foo = { bar: 'baz' };
    console.log('bar' in foo); // true

I never knew about this.  Howcome I haven't ever seen it in real code?",1.0
g4sywuc,iqfudu,"Because it also checks the prototype which isn‚Äôt generally what you want, it‚Äôs more specific to use hasOwnProperty or another alternative.

The risk is low, but the syntax has a bunch of alternatives which are better for their use cases.",5.0
g4rev55,iqa30z,Given the negativity of other commenters in  this thread I‚Äôll just say I enjoy using VS Code every day and very much appreciate the effort all the contributors make.,141.0
g4rpoln,iqa30z,"Seconded, I love VS Code and always look forward to new releases.",24.0
g4t5c92,iqa30z,"i agree too, i use sublime and vs code, and i love using both, they all have strengths and weaknesses",1.0
g4rar4e,iqa30z,"Hey all, I work on the TypeScript team and can answer a few questions about TS or the new JavaScript/TypeScript features this release has.",41.0
g4rugrh,iqa30z,What does the optional chaining refactor refer to?,3.0
g4s6b15,iqa30z,"Not OP, but if you are checking for existence of each property in a nested object, VS Code will offer to refactor it to optional chaining for you. 

`if (person != null &amp;&amp; person.address != null &amp;&amp; person.address.street_2) {
// some code here
}`

becomes

`if (person?.address?.street_2) {
// some code here
}`",15.0
g4scikg,iqa30z,Thanks,2.0
g4t0iqq,iqa30z,"wow that's really useful, i didn't know you could do this in javascript. thanks!",1.0
g4ua0u2,iqa30z,"It's a TypeScript feature actually, not JavaScript (yet)",1.0
g4ucaow,iqa30z,Oh :(,1.0
g4t54st,iqa30z,"Basically, writing an ""optional chain"" like `a?.b?.c` is like writing `a.b.c`. The key difference is that that with each of those `?.`s, you're saying ""don't go any fetching any more properties in this object if the left side is `undefined` or `null`. This is kind of like saying ""if `a` is there, try to get `a.b`, and if `a.b` is there, give me `a.b.c`.

_____

A common way to write something like this in JavaScript before optional chaining was `a &amp;&amp; a.b &amp;&amp; a.b.c`. So we added an automated refactoring to rewrite it using the newer, less repetitive form `a?.b?.c`. Any editor with support for TypeScript can leverage this now.

_____

[I honestly think the GIF in the post does a good job of demonstrating the feature](https://code.visualstudio.com/updates/v1_49#_convert-to-optional-chain-refactoring), but hope this helped!",3.0
g4sw67k,iqa30z,Just saying thank you :) typescript releases are always a delight and I enjoy reading the changelogs and appreciating the detail that went into all the features!,5.0
g4tqvj0,iqa30z,I have seen both baseUrl and node resolution in module resolution section. Do they both work together? Or are we supposed to use one at a time?,1.0
g4uvewk,iqa30z,"Yes, they can work together, but keep in mind that they're supposed to model what your loader/runtime actually does. That means they won't model a runtime like vanilla Node.js. Typically this means that your bundler (which uses Node-style resolution) has to be aware of the `baseUrl` and any `paths` you set (which I believe in Webpack you can set with the `aliases` option).",3.0
g4rc98j,iqa30z,Will the company you work for ever pay American taxes or will they remain an irish offshort tax haven sheltering billions of dollars during a pandemic that affects americans more than any other country on earth?,-99.0
g4rmbuf,iqa30z,He meant technical questions.,23.0
g4s0eqa,iqa30z,"&gt;Will the company you work for ever pay American taxes or will they  remain an irish offshort tax haven sheltering billions of dollars during  a pandemic that affects americans more than any other country on earth?

Not until they're forced to, and since Corporate America owns our politicians I don't see that happening. So no, probably not. At least not until there is systemic change.",8.0
g4t2yg1,iqa30z,"Are you a professional cunt, or just in your spare time?",2.0
g4rwmkg,iqa30z,Gonna need some sources there fella.,0.0
g4s305v,iqa30z,"Format Changed Lines is amazing sounding.

How can I start using it with linters and formatters though? Do we need to wait for support? I tried mapping it to my own custom hotkey, but none of my formatters seem to work for lines changed only.",10.0
g4s5fgs,iqa30z,".vscode/settings.json

    {
      ""editor.formatOnSaveMode"": ""modifications"",
      ""editor.formatOnSave"": true
    }",7.0
g4s802y,iqa30z,"Thanks I should have specified: I *only* wanted to use it via hotkey, but doesn't seem to be functioning for me even after binding it. For instance I tried Shift + Alt + M  


Do I still need to make that change even if I don't' want it to do something ""on save"" ?",2.0
g4s9xlj,iqa30z,"Hmm. I had success with it.

Mapped `Format modified lines` from Keyboard shortcuts to a ridiculous `command + shift + 8`. Do you have an `.editorconfig` or `.prettierrc`?

I think I'll keep that hotkey.

Edit:

&gt;Do I still need to make that change even if I don't' want it to do something ""on save"" ?

I think that's the feature. It doesn't format and *not* save.",1.0
g4t9n7r,iqa30z,"Well if you see the key bind it reads as ""format modified lines"" . so I would think you could trigger it manually whenever desired. But maybe not? I would think it would work just like you can manually trigger formatting a selection range.",1.0
g4su7co,iqa30z,"I retired before some of you were in 3rd grade. Yesterday I taught myself git using vs code. I don't care what anyone says, it's fucking magic. (For context, my first programming editor was edlin)",14.0
g4r1s9k,iqa30z,"some people like it very much, but microsoft are criminals so it is not for me",-136.0
g4rpz8c,iqa30z,Because this will probably be the shorter list... who do you *not* consider criminals? And is it even possible to build and operate a computer without crossing a company that meets your criteria for criminal?,22.0
g4rkgeu,iqa30z,I‚Äôm r/outoftheloop,6.0
g4rmfj6,iqa30z,Probably because of the recent release of win95.,43.0
g4t1284,iqa30z,https://www.youtube.com/watch?v=YL3zuCYdGLk,2.0
g4r5mvl,iqa30z,[removed],1.0
g4r5my9,iqa30z,"Hi u/keb___, this comment was removed because you used a URL shortener.

Feel free to resubmit with the real link.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g4tjnzo,iqa30z,"Hey, check out [VSCodium](https://github.com/VSCodium/vscodium).",1.0
g4p4ahs,iq5p06,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",98.0
g4pshqo,iq5p06,Good bot. Done.,73.0
g4pkcwb,iq5p06,"I appreciate that the return of \`css\` is a string containing class names, instead of some \`Interpolation\` like \`@emotion/core\` returns, thus requiring you to use some additional pragma to use their library.",36.0
g4pr9mi,iq5p06,"It's not even a return, it just replaces the entire function call with the strings, the library doesn't make it in your final bundle.",34.0
g4prcax,iq5p06,Even better!,12.0
g4s2hof,iq5p06,How this different from [Linaria](https://github.com/callstack/linaria)?,5.0
g4spayp,iq5p06,"copy pasting from a previous comment

It's very similar, I found out about linaria while I was working on this. But the key difference( if I'm not wrong, please correct me if I am) with linaria is the generated CSS is exactly how you write it, while catom is more focused on one-class-per-rule idea.

  


example: If you have 15 components with a

  


border-radius:10px 

  


linaria will generate the rule 15 times, however catom will only generate it once",14.0
g4wygm2,iq5p06,"Maybe worth mentioning in case anyone's not familiar, but you don't have to use a pragma with `@emotion/core` if you just use their babel preset.",2.0
g4pvn8s,iq5p06,This is really cool! I was just talking about the upsides and downsides of css in js with some co-workers and I was wondering why something like this wasn't super popular already. Nicely done.,18.0
g4pwrc8,iq5p06,Thanks!,4.0
g4r97ap,iq5p06,"cool! a lot of innovation in the space right now. what was some of the more challenging things you found when working on this?

there's a few others who are innovating in this area, linaria the obvious one (which has been mentioned)

\- [https://github.com/callstack/linaria](https://github.com/callstack/linaria)\- [https://github.com/giuseppeg/style-sheet](https://github.com/giuseppeg/style-sheet)\- [https://github.com/seek-oss/treat](https://github.com/seek-oss/treat)\- [https://github.com/4Catalyzer/astroturf](https://github.com/4Catalyzer/astroturf)\- [https://github.com/johanholmerin/style9](https://github.com/johanholmerin/style9)\- [https://github.com/CraigCav/css-zero](https://github.com/CraigCav/css-zero)

P.s - i'm also working on this problem at work ([https://github.com/atlassian-labs/compiled](https://github.com/atlassian-labs/compiled))

want to compare notes? we could collab too :)",17.0
g4rgyre,iq5p06,"I knew I had something saved somewhere that targeted this same issue, but this was it! I‚Äôve been tracking `compiled` for a bit now for stability and stuff to possibly use in a next project and it seems like a possible game changer",3.0
g4rhdbf,iq5p06,thanks! yeah it's been fun to work on. we're only getting started!,2.0
g4t8r43,iq5p06,Goober is pretty neat as well: [https://github.com/cristianbote/goober](https://github.com/cristianbote/goober). It's not 0-runtime but 1kB is pretty manageable imo.,3.0
g4spgt6,iq5p06,"One of the challenging things has been the allowing the hser to use javascript features (such as variables, complex math operations, or getting values from a function call).

since every thing happens at build time, it's hard to figure out how to evaluate the javascript and emit plain css.

And I'll check your project out. Thanks!",2.0
g4st1v2,iq5p06,"cool!

yeah that's one of the challenges. with compiled since it targets components (atm react) it can utilise inline styles and css variables to enable dynamic experiences - however it also means we don't supply any vanilla JS apis",3.0
g4std69,iq5p06,"Yep. I wanted it to be completely framework agnostic. Which means supporting dynamic styles and expressions has been a massive challenge.

Also, compiled looks really interesting and much better than what I've come up with",2.0
g4stmr7,iq5p06,if you're interested in collabing come chime in some time :) we've got big goals for this project,2.0
g4su850,iq5p06,Lol I'd love to but I'm not sure a high schooler is what you guys are looking for,2.0
g4suc8y,iq5p06,OSS has no mandate for how old you need to be ;),3.0
g4suh4r,iq5p06,sounds great!,5.0
g5cejqb,iq5p06,"Cool, didn't know this one!

Do you mind adding a PR to the list I maintain to add compiled?
https://sebastienlorber.com/atomic-css-in-js

Otherwise I'l' do it when I'll come back from holidays üòâ",1.0
g4rhdiv,iq5p06,"Nicely done! 

I have just a small feature request: Given that you already detect how many unique styles there are (four in the example), why not use that information to determine how long the hash/class names needs to be? If you only have four classes, a single character is enough to differentiate them.

If you really want to squeeze the last bytes out of it, you can assign single character classes to the 63 (assuming [a-zA-Z0-9_]) most-used classes, then assign two-letter classes to the next 63*63 classes, etc..",7.0
g4si9gn,iq5p06,"Take it a step further and use unique emoji for each class, then  compound emoji characters (skin tones and other variants), etc.",3.0
g4sj0ql,iq5p06,I... don't know if this is serious or not.,6.0
g4spruf,iq5p06,"I actually have tried it out in a previous [project](https://github.com/Hydrophobefireman/dss-js) of mine, I'll experiment with it a bit. Thanks",3.0
g4p8g0h,iq5p06,Noice,6.0
g4q31zo,iq5p06,"I'm pretty old school and still do SSR with progressive enhancement, but looking at the output, this just seems like a nightmare and a half to debug",6.0
g4q9luf,iq5p06,"you're not wrong and that's something I'm trying to work on rn, maybe a different generation of classes in dev mode vs optimized build in prod",6.0
g4pabz6,iq5p06,Any benefits to not just using css-modules?,3.0
g4pfevr,iq5p06,"they're different

css modules is more concerned with scoping issues

  


catom just generates an optimised bundle of your css where each rule creates a new css class, this removes any duplication of properties by default. if a property is used twice, it will only generate a single CSS rule.

your css file size depends on the number of unique css rules and not number of rules in total",13.0
g4pncfh,iq5p06,"I see, thanks!",3.0
g4qybmu,iq5p06,"Could this cause many components to have long classNames, increasing the JS bundle size?",1.0
g4qyt8r,iq5p06,"long classnames will always be smaller than multiple, repeated css props, however I'll port a medium sized alp to see the difference in bundle size &amp; css size.",2.0
g4ruusn,iq5p06,Doubtful. Gzip compression takes great care of repeated lines of CSS. Hashed randomly generated and unique classname strings? By definition impossible.,1.0
g4sptec,iq5p06,but those hashed names are likely to be repeated themselves.,1.0
g4qx6ux,iq5p06,"Firstly I just wanted to say you undertook a fun looking project, and I can see a lot of effort went into it. 

Now practically I'm a bit curious... Won't this result in the html being significantly larger since each property has its class?
To me this almost feels on the same level as inlining all of your styles.

I understand that it will reduce the size of a CSS file for many larger projects with heavy repetition, but it feels like it moves the savings into the markup (via the class property).

Or maybe I am missing something, and you could help me understand it better? üòÅ",3.0
g4qzvdr,iq5p06,"you're correct. However, from what I've seen, multiple classnames that made out of strings are smaller than inlined css props repeated multiple times or raw css in js (not to mention the library footprint?

Fron what I've tested, there's almost always a reduction in the total app size. SSR seems to be untested for now and I'll try it out and record my observations",1.0
g4ruzx6,iq5p06,Repeated CSS is caught by Gzip compression because the same string being repeated is easily compressed. Randomly generated strings being added to classnames doesn't compress at all.,1.0
g4t455k,iq5p06,"You might lose some compressability, but 50 repetitions of `_6da32 quva1q _2rlxtj` will still be compressed. You can probably compress it less, but it'll also be smaller to begin with. I'd be curious to see some actual numbers from a larger app.",2.0
g4rl1el,iq5p06,"I don‚Äôt get it. If I use this library aka css in js, I would lose all concept of css inheritance, right?  
  
Eg a CustomDialog component inheriting a Dialog component and all its css, I don‚Äôt see how this would be possible with this library.",3.0
g4spz2v,iq5p06,"Yes that's somewhat true, however you can reuse the classnames on different components but inheritance remains a problem.

I've been looking into adding a \`inherits\` function call but it's not as easy as i thought lol",1.0
g4t4214,iq5p06,I guess the variables containing css like styledDiv could be passed down to the component that inherits the parent,1.0
g4t4et1,iq5p06,"yeah that's what i was thinking, but working with AST means I'll have to track the variables",1.0
g4rw41m,iq5p06,"Unpopular opinion incoming!

I really dislike CSS-in-JS in general. It creates lazy developers who don't understand (and by using this, will never understand) proper CSS usage. And it's not that complicated to begin with. If you just don't understand CSS and don't want to learn how to get things done without splashing `!important` all over the place, then get yourself some free courses online.

CSS modules serve the purpose really, really well to compartmentalize your code into pieces that will not bump into each other's styles.

A solution like this invites uncritical satisfaction and will quickly see your class names creep up with tens, if not more, randomly generated class names. Random strings don't compress over Gzip, whereas repeated lines of CSS very much do.

Then there's the annoying part where CSS-in-JS simply isn't very widely supported in IDEs just yet. And, honestly, having to write the values of CSS properties with quotation-marks around the pisses me off.

I for one really like CSS, add some SASS to it to make it more feature-rich, and stick to native CSS features (like `var(--something)`) where you can.

Congrats on your open source project though, and I'll keep a close eye on developments like this. Hopefully, I'll be proven wrong one day and I'll make the switch.",13.0
g4s00bw,iq5p06,"I‚Äôm with you on this opinion. I actually started with CSS-in-JS from the ground up on a work project, experienced pain, then migrated over to using SCSS Modules and I‚Äôve never looked back. Learned the more native you can be, then the better off you‚Äôll be. Speaking of native ‚Äî CSS custom properties are incredible.",7.0
g4sl144,iq5p06,By SCSS modules do you mean the new-ish `@use` for sass instead of `@import`? If so how are you finding it in comparison to the old import way?,1.0
g4sudu2,iq5p06,Haven‚Äôt staring using the `@use` annotation yet. What I have in my project is CSS Modules + SCSS as all my stylesheets are modules written in SCSS ‚Äî it‚Äôll be super easy for me to start incorporating `@use`.,2.0
g4s6s72,iq5p06,Can i have functionality like react styled-components using the above stuff you have mentioned? I'm new to writing css in js so sorry if it's not a relevant question.,2.0
g4sq70z,iq5p06,"I'm with you on this, every previous project of mine has been me writing .css files by hand

I was just really interested by the stylex library that Facebook announced a year ago so i went out to create a small prototype.

catom does decrease the amount of css created but I've yet to figure out if it's worth it.

and as for editor support, a long list of css typings has been provided.",2.0
g4s6era,iq5p06,"Me too, but I don't think lazy has much to do with it. I think separations of concerns is one of the cornerstones in any dev work. The only reason I can see that css should be sprinkled in code is if you actually do something with the values; animation or whatnot.",2.0
g4srpbf,iq5p06,I agree. Had to work with a large corporate project that used styled-components and it was a mess,1.0
g4r4g7p,iq5p06,"This looks pretty simple and great.

I've also been working on an atomic CSS-in-JS library (https://aestheticsuite.dev/docs/integrations/react/styles), but it's a bit more complex as it's powered by a design system layer. It's currently low-runtime, but would love to make it zero-runtime if possible (would be rather difficult). Maybe we can collaborate in the future.",2.0
g4sq9jl,iq5p06,Hey thanks. I'll check it out,1.0
g5cdpqk,iq5p06,"Looks nice.
What about adding it to the list of atomic css in js lib I maintain here?
https://sebastienlorber.com/atomic-css-in-js

Otherwise I'll do when I come back from holidays üòâ",2.0
g5cectz,iq5p06,Thanks! Will do.,2.0
g4pfkid,iq5p06,This is very cool,3.0
g4pgvzk,iq5p06,Thanks!,3.0
g4pmoax,iq5p06,How it differs from linaria?,3.0
g4pnlk6,iq5p06,"It's very similar, I found out about linaria while I was working on this. But the key difference( if I'm not wrong, please correct me if I am)  with linaria is the generated CSS is exactly how you write it, while catom is more focused on one-class-per-rule idea.

example: If you have 15 components with a

    border-radius:10px

linaria will generate the rule 15 times, however catom will only generate it once",12.0
g4s8rq8,iq5p06,"In case you didn't know, that's called ""atomic css"".

And it's the major reason we went with nano-css with a plug-in to pull out the nano runtime",1.0
g4q6h5x,iq5p06,[deleted],-67.0
g4qrtel,iq5p06,"You should. That reduces bundle size which in turn reduces page load speed, and page load speed is a major factor in search engine optimization as well as customer dropoff rate.",5.0
g4rbc7f,iq5p06,"Neat. Was thinking about something like this but with tailwindcss.

Basically this code:

    .className {
    display: flex;
    flex-direction: column;
    background-color: #000;
    color: #fefefe;
    }
    &lt;div class=""className""&gt;&lt;/div&gt;

would convert to this

    .className {
    color: #fefefe; /* only attribute not in tailwind */
    }
    &lt;div class=""flex flex-col bg-black className""&gt;&lt;/div&gt;

Will take a look at your code and see if it's doable later...",3.0
g4p7ysi,iq5p06,"Sweet lib, good job!",2.0
g4qin2i,iq5p06,Is this different from Uber's styletron?,1.0
g4qjl8n,iq5p06,"styletron adds 8kb to your bundle

catom is experimental and is absolutely 0 runtime, no function calls left",7.0
g4pmxj4,iq5p06,Great work,1.0
g4p6xzk,iq5p06,Nice,0.0
g4reijj,iq5p06,"SyntaxError: Unexpected token '&lt;'

Seems like YOUR 'javascript file"" has an unexpected token.",-4.0
g4sqadx,iq5p06,it's typescript...did you build it?,2.0
g4ow2f4,iq4f0k,"The author has no idea what he is talking about with the title. React virtual Dom is not dead. This is an article about class components which are on the way out due to hooks, but that has NOTHING to do with the virtual Dom. Also, the article contains just a basic overview of class components, nothing that can't be learned from tons of react docs out there. 

Don't bother giving this piece any clicks. I regret that I did.",10.0
g4qwpmb,iq4f0k,Thanks for the heads up.,0.0
g4of2fu,iq39ev,dat.GUI is super handy but it's nice to have some alternatives. cheers for the list.,2.0
g4ogm0x,iq39ev,Used Tweakpane and it's is just as simple,3.0
g4os2i0,iq2ib5,"These aren't what fractals are, though. It's just a variant on Conway's game of Life.",10.0
g4p6lqn,iq2ib5,"Thats true, i'll think about a more fitting name, suggestions appreciated :)",1.0
g4pjz9h,iq2ib5,The proper term is Cellular Automata.,4.0
g4p9mf6,iq2ib5,"Looks like you're generating your ""fractals"" on the main ui thread. Move it into a webworker.",5.0
g4qdu4q,iq2ib5,What do you mean? What would be wrong with using setTimeout or requestAnimationFrame for this? How would one use a web worker here and what would the pros / cons be?,1.0
g4qgkz1,iq2ib5,"When you make the thing really big, it takes a while to calculate each iteration. While it's calculating, the ui is blocked, meaning you can't click on anything for that time, or do anything else in the apl. By moving that expensive calculation to a webworker, the work is done on another thread, so the ui stays fast and fluid even during the expensive processes. The webworker just calls back when it's got a new iteration. I did something really similar, I'll DM you my portfolio site.",5.0
g4sz27x,iq2ib5,"I put the calculations in a worker but it still gets very slow on bigger fields. I think its  the draw loop , investigating further.",1.0
g4of6dq,iq2ib5,That is really cool. Awesome.,0.0
g4niv7x,iq0sch,"What these workspaces posts always miss out is strategies for building your code. Workspace setup is only one part of a fairly complex puzzle for a production application.

If you want to use a webpack built application, with jest testing and also support intellisense and sourcemaps, you need to really know the tooling well, and the configuration of one thing often steps on the toes of other tools.

I‚Äôd love to see someone write the whole process up.",3.0
g4of11c,iq0sch,I'm kinda confused. You'd prefer to see how to set development tools and environment in an article that describes monorepo configuration?,1.0
g4mqccw,ipwtxr,Sadly without pattern matching this is much less useful :/,19.0
g4mqv1s,ipwtxr,"Oh, thanks a lot for bringing the point. It's not possible to implement proper pattern matching since JS/TS does not support it. ;) However, then() tries to resolve it by an ability to handle two callbacks. It seems to work nicely for Promise. 

Other libraries try to emulate pattern matching with objects, like maybe.match({ just: clbk1, none: clbk2 }). I also wanted to introduce it as an alternative API later. Do you think that it will be useful?",6.0
g4nkzd0,ipwtxr,"Honestly probably not. I don't think I'm willing to drop 'native' solutions (`something?: string` for optionals, `try catch throw` for error handling) for a hacky solution. I believe proper pattern matching is what matters the most (it's worth mentioning that personally I prefer the error-as-value approach that you presented, just not in a language that took a different design path). Hope you understand.",6.0
g4o5f6t,ipwtxr,"Sure, unfortunately, I don't think that will have the pattern-matching syntax in ECMAScript in the nearest future. 

But I will be happy;)",1.0
g4ohbzo,ipwtxr,Stage 1 last time i checked - so yeah maybe a decade or so :D,1.0
g4q6xi6,ipwtxr,"I understand the Maybe monad point because that it is supported by the type system in other ways as you mention, but typed exceptions are just not supported by the type system and so I monadic error handling in TS is almost a no brainer.",1.0
g4qd3m9,ipwtxr,"In my point of the coolest aspect of monadic error handling is the fact that the error is expressed via type signature of the method/function, so the consumer of the  API aware that the issue should be handled.",3.0
g5a5ben,ipwtxr,This is also the way people tend to implement monadic interfaces in C#. Just have a `match` method that accepts multiple callbacks. Although now they actually have some limited pattern matching.,2.0
g66yo0h,ipwtxr,"thank you, this is exactly the way I wanted to go.",1.0
g4nm1uu,ipwtxr,What does this offer over [fp-ts](https://gcanti.github.io/fp-ts/modules/)?,6.0
g4nxcz1,ipwtxr,"fp-ts is fantastic, but it is also large. The learning curve is too steep. It comes with a lot of concepts which I would necessarily bring to every codebase. 

On another hand amonad is PromiseLike. 

So, it can do the following:

const maybeRadius= Just(5)
const cirLen = 2 * Math.PI * (await maybeRadius)

I don't think that it is the right approach, but some of my colleagues were happy üòÅ",2.0
g4o1f7c,ipwtxr,[deleted],1.0
g4o5556,ipwtxr,"No, `await` is similar to Rust's `.await`.",1.0
g4o5ob3,ipwtxr,"unwrap() ~= getOrThrow(), I think",1.0
g4okxfj,ipwtxr,"You can do this with Tasks, which are just thunked promises:

    declare const getRadius: Task&lt;Option&lt;number&gt;&gt;;

    const getRadiusWithFallback = pipe(getRadius, T.map(O.getOrElse(constant(0))));

    const radius = await getRadiusWithFallback();

It looks like your example will throw if your async maybe is `Nothing`? That's a really unpleasant pattern IMO, throwing exceptions should be reserved only for truly exceptional circumstances, not used liberally to represent any predictable failure. They're bad for control flow and unsafe at the type-level.",1.0
g4osc8b,ipwtxr,"I do not throw any exceptions here. An async function will turn it into rejected Promise in the case you presented. Nowadays, a significant part of our code leaves inside of Promises. I wouldn't say that rejected Promise is equal to throwing an error, but I don't really what to argue about it. 

If you have a fallback value amonad has Maybe.prototype.getOrElse() which just works without any awaits;)",1.0
g4p8j1q,ipwtxr,"Promise rejections aren't type-safe, and pin you back into promises which are not monadic (though they do resemble monads). For this reason I consider their usage here more like throwing exceptions than adhering to a monadic interface.",3.0
g4p3a48,ipwtxr,"One of the benefits of using monads that have an fp-ts `Monad` instance is being able to use `Do`, which is essentially async await, except it works for _all_ monads, and doesn't introduce asynchronous semantics to what otherwise would be a synchronous operation.

The 'failure's you speak of are usually represented as `Either`s, where you can either have a successful value, or an error, but not both.

For example, suppose you've got:

```
declare function getLCD: (number, number): Either&lt;{type: 'lcdNotFound'}, number&gt;
declare function divide: (number, number): Either&lt;{type: 'divideByZero'}, number&gt;

const someStrangeMeaninglessComputations = (num1: number, num2: number, num3: number) =&gt;
  Do(E.either)
    .bind(""lcd"", getLCD(num1, num2)) // would return Left({type: 'lcdNotFound'})  if failed
    .bind('quotient', ({lcd}) =&gt; divide(lcd, num3)) // would return Left({type: 'divideByZero'}) if failed
    .return(({quotient}) =&gt; quotient)

```

`someStrangeMeaninglessComputations`'s type becomes: 
```
(number, number, number) =&gt; Either&lt;{type: 'lcdNotFound'} | {type: 'divideByZero'}, number&gt;
```

Which is nice, because:
1. It does require you to interact with the value asynchronously
2. The kinds of errors it can fail with are explicit",1.0
g4pdeqj,ipwtxr,"I think, I can do exactly the same thing with `amonad` via `Result.prototype.then()`. I previously had `bind()`, but a lot of people had confusion with due to Function.prototype.bind(), so I removed it. ;) 

```
declare function getLCD: (number, number): Result&lt;number, CustomError2 &gt;
declare function divide: (number, number): Result&lt;number, CustomError1&gt;

const someStrangeMeaninglessComputations = (num1: number, num2: number, num3: number): Result&lt;number, CustomError1 | CustomError2&gt; =&gt;
  getLCD(num1, num2)
    .then((lcd) =&gt; divide(lcd, num3))
    .then( val =&gt; /* some other meaningless computations with val*/)
```

Did I get your point correctly?

I guess I will add `Either` to the next version. Thanks!",1.0
g4q07vo,ipwtxr,"The point was mainly that you get something similar to the nice async await syntax, but it's not wrapped up in a promise, so the result is provided synchronously",1.0
g4oiazo,ipwtxr,Curious why you chose Maybe instead of Either for the error handling?,1.0
g4p5vn6,ipwtxr,"I am not a big fan of Either. It is not explicit enough in my mind. amonad has Result, which is Success or Failure.

I think that Result and Maybe carry a different meaning. Result expresses a potential error, while Maybe signify value which might be absent for an apparent reason.",2.0
g4pxtan,ipwtxr,"Sorry, I must've misread, I though you were using `Maybe` for the error handling portion of this.

So, `Result` here is taking the place of `Either`... other than names `Success` and `Failure` (instead of `Right` and `Left`), is there a behavioral difference?

Just curious here, because as people learn monads they may be told things like ""Use Either for exception handling"" and wondering if there's more value in renaming it (or maybe aliasing it!?) instead of giving them a different name they may not be as familiar with.",1.0
g4qdx02,ipwtxr,"A similar concept exists in most of the modern implementations of this ""pattern"". `Rust` and `Elm` have `Result` while `Scala` has `Try`. Implementation was mainly inspired by them.",1.0
g4nc8ao,ipwtxr,"That is great, make me code more type safe",1.0
g4n4zyv,ipwtxr,How's about no?,-19.0
g4n9xei,ipwtxr,Can you clarify your concerns?,4.0
g4o0yk6,ipwtxr,I think the concern is an enthusiastic lack of concern.  I could be wrong.,4.0
g4l0kx8,ipokot,"Disclaimer: I work on this project. My goal with working on Ketting for last few years is to make integrating with REST APIs better in Javascript. The last year the focus was entirely on better React integration.

This was a big personal milestone for me, and I hope people like it!",9.0
g4ujpfg,ipokot,"I don't think I'll be using this library any time soon as none of my current projects consume a hypermedia API. 

However I looked at the code and I think it's great - it's consistently structured, tested, well commented and a good resource for anybody looking to learn how to make their own library.

I found your build/test setup a little non-standard though and didn't see any documentation on how I could run the tests etc...",1.0
g4unyua,ipokot,"&gt; I found your build/test setup a little non-standard though and didn't see any documentation on how I could run the tests etc...

Ack. Working on projects with mixed languages caused me to default to `make` as the universal build tool. Might be worth duplicating some of that stuff to the package.json scripts as well to not surprise people",2.0
g4kxvx9,ipo8fn,"Project Page (?): https://github.com/bernhardfritz/falldown

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g4mruy0,ipo8fn,"This is super cool!! Game rendered in web console is something I never heard of and it's kind of addictive to beat my own score every time (My highest is 57 now lol)

Kudos to the developer :D",2.0
g4ohi19,ipo8fn,awesome! thanks appreciated :),1.0
g5q1jfj,ipo8fn,You might be interested in this project:  [https://github.com/sinclairzx81/zero](https://github.com/sinclairzx81/zero),2.0
g5sycxl,ipo8fn,very interesting! thx for sharing,1.0
g4nb3l0,ipo8fn,"This is really cool! 
Thanks for sharing this.",1.0
g4o1dmo,ipo8fn,"Really cool, shared on Twitter [https://twitter.com/utopiah/status/1304035956480237569](https://twitter.com/utopiah/status/1304035956480237569)",1.0
g4km6l0,ipm8ge,"Project Page (?): https://github.com/josellorensripolles/hold-the-singularity

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g4kliuo,ipm3ve,"Hey all,

We converted the React JS documentation to use functional components and hooks first in all the examples! This is specifically for folks who are learning to use React JS for the first time, but using the functional and hooks syntax. Hope it's useful!

This post describes the process we used to convert it, what we learned along the way, and how to go about making modifications in general. Let me know any feedback, or if you found anything about our project useful. Also, we always welcome contributors!

(Also, since this question came up last time: [Dan Abramov and Rachel Nabors](https://twitter.com/rachelnabors/status/1301509897633308678?s=20) replied to our announcement saying they're working on the same thing, but suggested until they're done folks can just use our version.)",1.0
g4oa47k,iplsyd,"Great read, thanks for the share. Rewrites and technical debt estimations are no joke. Anytime you think something is ‚Äúsimple‚Äù in a medium-large project, like being a few weeks, is usually overestimated in the long run.",1.0
g4lqcbv,ipis9s,"https://github.com/cheesits456/Number-Guesser

I've been using JavaScript for many years, but typescript is new territory for me. I recently decided to finally look into what all the hype is about, and after messing around with it a bit I'm very eager to learn as much as I can about it and use it to it's full capability. Looking for any tips, pointers, etc about things I could do better or even just _differently_ from how I did it.",3.0
g4vxr5t,ipis9s,"This youtube playlist is a great way to get started, it covers pretty much every major concept of typescript and is a really good setup for using more advanced features.

[https://www.youtube.com/playlist?list=PL4cUxeGkcC9gUgr39Q\_yD6v-bSyMwKPUI](https://www.youtube.com/playlist?list=PL4cUxeGkcC9gUgr39Q_yD6v-bSyMwKPUI)",1.0
g4pmhjh,ipis9s,\[WIP\] [https://github.com/figmatools/figma2css-app](https://github.com/figmatools/figma2css-app),1.0
g4l4k1w,ipis9s,https://github.com/mrbing47/Stream-Video,1.0
g4lle7u,ipis9s,https://github.com/philmirez/comparing-screenshots,1.0
g4kod0l,ipi4la,"Great advice in here. Picking the right props is always a tricky thing for folks learning React and ""component thinking"".",5.0
g4jnjv9,ipg6o3,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g4k453n,ipg1cp,Had not heard of recoil before. Thanks!!,14.0
g4mbojv,ipg1cp,This existed before Recoil and does the same thing. Just more used and tested. https://hookstate.js.org/,6.0
g4mq6rd,ipg1cp,"Nice one, I'll have to check it out.",2.0
g4l2bfo,ipg1cp,"just used Recoil for a very small app at work, pretty neat!",6.0
g4m4zar,ipg1cp,"Does it seem good for production ? I‚Äôm making a new UI from scratch at work with Redux Toolkit and loving it , but of course like any JS dev always look for the cool new thing.",0.0
g4m5wdr,ipg1cp,"I suppose it depends on your use case, I ended up using it because the scope of the app is quite small and is more of an internal tool with a handful pieces of state to subscribe to. If this is something more customer facing where scaleability/maturity is in question and you‚Äôre building with a large team, then probably want to stick to redux. But if it‚Äôs something small and you have the green light I don‚Äôt see the harm in it",1.0
g4o9wck,ipg1cp,"Ah interesting. Yeah I mean I‚Äôd say this is a fairly complex UI. Honestly I‚Äôve only really worked at one other place and that was for a few months so it‚Äôs hard for me to gauge. I may play around with it if I have some free time , definitely intrigued.",1.0
g4mkh39,ipg1cp,It‚Äôs a little early for production maybe. Patterns are still emerging and still some gaps. Super fun for projects though.,1.0
g4mcd1j,ipg1cp,So why is rewrite only 100 lines but real Recoil a lot lot more? Is it really the same public API or a simplification of it?,3.0
g4ml9gs,ipg1cp,"Two options:

1) the op is a much better engineer than the folks at Facebook

2) recoil is solving more edge cases, more robust in general and solves bugs the op hasn't encountered.


Oh I guess the third option is that recoil is also about 100 lines


I dunno tho I don't know shit about any of this",21.0
g4mrgay,ipg1cp,"&gt;recoil is solving more edge cases, more robust in general and solves bugs the op hasn't encountered.

This 100x.  
I listed a few things that I didn't think about in the article, here are a few more:

* error handling, especially where can errors be caught
* async, especially working with suspense
* global snapshots

I think there's a lot of people that don't need those things though - so 90% could probably get by with rolling their own.",8.0
g4ml9jb,ipg1cp,"Answer is in the article, OP wrote the clone using completely different approach. 

Also, Recoil wasn‚Äôt optimized for size as that wasn‚Äôt needed for the project it was designed for. The author said there is a lot of low hanging fruit for cutting it down in size if that were a priority.",4.0
g4mqq1e,ipg1cp,"Exactly. I only really implemented the core idea of atoms and selectors, and purposefully excluded stuff like async / app-wide observation / server-client state synchronisation and all that stuff that 90% of devs won't use.",2.0
g4mq208,ipg1cp,"Recoil doesn't seem to support class-components. Won't that be an issue when considering something like React ErrorBoundaries?

Otherwise Recoil seems like a step forwards. I've always disliked how over-engineered Redux is. All we want to do is to save, read and listen.",2.0
g4mqe32,ipg1cp,"&gt;Recoil doesn't seem to support class-components. Won't that be an issue when considering something like React ErrorBoundaries?

I'm not a Recoil expert, but as far as I'm aware it's all scoped to a single React context. So if there are any errors in the selectors themselves, you can probably catch them with an error boundary at the top-level context provider. I haven't actually tested this though - would be good to know!",1.0
g4kjz7f,ipg1cp,But isn't store (e.g. Redux) for exactly this - sharing state between unrelated (parent-child) components?,4.0
g4ku1cs,ipg1cp,"As I understand it, recoil allows for direct communication from child to child without the need for a parent component. [https://www.youtube.com/watch?v=\_ISAA\_Jt9kI](https://www.youtube.com/watch?v=_ISAA_Jt9kI) It's pretty cool but there are a lot of benefits to top down data flow. This could really let you write some brutal code spaghetti easily",20.0
g4kvm8o,ipg1cp,Same goes for iOS dev. Throwing around data between child view controllers can get super messy. Outside of spaghetti code and the indirect negatives (hard to track bugs) what do you see as direct benefits of top down data flow?,9.0
g4lyxon,ipg1cp,"It's just easier to reason about. This is because you can always count on the fact that a component is receiving it's state from a component above it, so you can usually very easily track the ways that data is moving through your application. The state might be coming in as a prop or as a context or whatever, but it's up there somewhere. This makes it easier to debug, easier to add features, easier to onboard new developers etc etc.

Otherwise, data is just magically appearing and it can be extremely difficult to track where it's coming from.

Ease of setup is not really the reason, in fact it can usually take more setup (see redux boilerplate). The only reason it might be easier to set up is because React is basically designed to encourage developers to use that method.",6.0
g4ptspy,ipg1cp,Makes perfect sense.,1.0
g4kz40l,ipg1cp,"Easier to setup, if you use a single store requires changing multiple files or modifying a huge object just to add even the simplest state.
No single point of failure, if you use a single store and it goes down, all ur components will go down.

Libraries like redux try to fix these issues by decoupling state as much as possible but if u don't have much state, it's a pain.
Check out this awesome article by Dan Abramov
https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367

Someone correct me if I'm wrong",3.0
g4l95qn,ipg1cp,"What do you mean by a store ""going down""? I've used Redux for quite some years, but I don't think I've ever experienced something like that...",7.0
g4m03a5,ipg1cp,"Yeah, I'm not talking about redux there. Redux is really well designed,it tries to solve those issues, using functional programming to mange your state is brilliant. I meant, other types of store, e.g if u directly get and store state from a local object or database, you could open yourself up to state failure
Edit: removed xss, idk why I mentioned it",2.0
g4lsnlb,ipg1cp,"I mean, if anything, it's the other way around.  If an error occurs while rendering your React components, React will tear down the entire component tree (unless you catch it with an error boundary).

On the other hand, the Redux store will still be there with all its state.  In fact, you could take the current state and whatever actions the user recently dispatched, and send a bug report to the server if you wanted to.",1.0
g4kl6cd,ipg1cp,Yes but there's no reason to not have other options to achieve that.,21.0
g4lobnw,ipg1cp,"Recoil is more performant due to the atomic nature of the store (updates are sent only to components that have subscribed to specific parts of the state, whereas Redux sends everything to all connected components, only it blocks the update at the component level).",2.0
g4lb2xw,ipg1cp,"Redux/Context + Reducer model re-renders everything in the context tree when state changes. The Recoil model re-renders only the components which directly use an ""atom"" (data property), so it's much more perfomant.

Seems like a simpler, more natural model overall. Very new still, though, so be warned.",1.0
g4lst6r,ipg1cp,"&gt; Redux/Context + Reducer model re-renders everything in the context tree when state changes

This is _not_ true for React-Redux, at all, because React-Redux doesn't use context to pass down new state values - it uses store subscriptions instead.  It goes to great lengths to make sure that only components whose data has actually changed are re-rendered.

For more details, see my posts [Redux - Not Dead Yet!](https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/), [The History and Implementation of React-Redux](https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/), and [React, Redux, and Context Behavior](https://blog.isquaredsoftware.com/2020/01/blogged-answers-react-redux-and-context-behavior/).",8.0
g4ljb6c,ipg1cp,"Great explanation!  


&gt;Very new still, though, so be warned.

Agreed. Although the fact that its core idea can be implemented so easily has made me a lot less cautious of it. I still haven't used it at work though.",3.0
g4sy7qh,ipeprz,Doesn't have database?,1.0
g4k53sb,ipcxea,Pretty good article. I recommend you cover using the performance API instead of console.time,20.0
g4kdsss,ipcxea,"Hey Glinkis2, thanks üí™‚úå! The performance API was initially a part. But it got too big so it'll be a separate post. I'll put the link in the comment as soon as it is published.",14.0
g4keu3f,ipcxea,"Alright, cool. You may want to include a small note about it in your article as well.",9.0
g4kgxwi,ipcxea,üëçüëå I'll forward that.,6.0
g4lddca,ipcxea,üëâüëåüòâ,9.0
g6b45gu,ipcxea,"Hey Glinkis2, we've updated the post and added performance API. We've shortened some parts, but I wanted to let you know that the performance API is now part of that initial post.",1.0
g6bjg1n,ipcxea,"All right, thanks for the heads up!",1.0
g4mqbo0,ipcxea,Maybe twitch.tv devs should read this.,6.0
g4mrddq,ipcxea,"IMO you're way underselling requestAnimationFrame. It's not just useful for animations, it's useful for anything that may cause a repaint. All it does is start executing your code at the start of the next frame, to ensure a stable fps. you can even use it for expensive code that needs to be done (near-)immediately  that doesn't affect layout at all, if you're worried it might make the browser lag, that way the lag is at least right after a frame was drawn, minimizing its visibility",3.0
g4ms2o1,ipcxea,"Hey ashe34h, you are right!`requestAnimationFrame` is an awesome API function that does help us more than only animations. What I recognize in my projects is that `requestAnimationFrame` isn't widely used. Often this pops up when there already is a performance issue with animations. Therefore I choose animation as a good example. Nevertheless, you are right that `requestAnimationFrame` can help much more! Like the performance API that might be a topic for an own post. I would also add `requestIdleCallback` to that post.",1.0
g4mny50,ipcxea,"One thing about the micro optimization mentioned, and one of the main reasons you should avoid that sort of optimization, is that it isn't actually always faster one way or the other. I ran that test on Firefox, and _not_ using `.length` in the array condition was 10% slower. When the margin of error is so large and the performance difference is so small, any actual gain is likely just noise.",2.0
g4npg3k,ipcxea,"Also when tweaking things at that level, browser differences come into play. What may speed up on V8 based browsers (or server-side) may be the slower option in a different environment, and may even be slower in future versions of the same engine as it is taught to optimise differently automatically.

When you start hand optimising anything, you need to add performance tests to your regular regression testing to catch when an update in one of your dependencies or elsewhere in your own code starts causing the optimisation to back-fire.

^((the same with clever workarounds for CSS bugs: when the actual layout bug is fixed you workaround may cause a worse break))",2.0
g4muwf9,ipcxea,RemindMe!,1.0
g4muzyv,ipcxea,"**Defaulted to one day.**

I will be messaging you on [**2020-09-11 07:32:13 UTC**](http://www.wolframalpha.com/input/?i=2020-09-11%2007:32:13%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/ipcxea/learn_about_common_performance_issues_with/g4muwf9/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fipcxea%2Flearn_about_common_performance_issues_with%2Fg4muwf9%2F%5D%0A%0ARemindMe%21%202020-09-11%2007%3A32%3A13%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20ipcxea)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=RemindMeBot%20Feedback)|
|-|-|-|-|",1.0
g4jgfzx,ipcdw0,"Just an ad for ably paid service, move along",21.0
g4jt0db,ipcdw0,It looks like they have a free tier?,1.0
g4njzqz,ipcdw0,They have free sign up...,0.0
g4jfenu,ipcdw0,Looks promising. You mention scalability in your article. I'm curious how you manage that? Websockets are persistent connections and while skimming your source code I haven't found anything which would indicate cross server communication or distributed cache in order for your server to scale horizontally.,4.0
g4tmf9z,ipcdw0,The framework is built on top of Ably which is a distributed realtime messaging infrastructure. Ably by itself deals with scale as described here [https://www.ably.io/resources/datasheets/using-ably-at-scale](https://www.ably.io/resources/datasheets/using-ably-at-scale) which is why you don't see any distributed systems in the code of this project itself.,2.0
g4uw1yr,ipcdw0,That makes sense now. Thanks for explaining.,1.0
g4jujxn,ipcdw0,Why not socket io wtf,4.0
g4k6em1,ipcdw0,No interpolation.,1.0
g4laba0,ipcdw0,nice.,1.0
g4gzo5i,iozfw8,"I think in theory it should be possible, but you would still need something that will load initial HTML file with all JS required to get resorces from WebRTC. For example, this could be some browser extension, single-file web server or maybe data URL (it is won't be too big).",1.0
g4h2k0n,iozfw8,"My idea was to have a service that allows hosting/visiting pages.  
It takes care of doing WebRTC signaling between Host/Clients.  
  
E.g: 
 
*- peerhost.io/host/my-cool-website*  
  
This opens a ""host view"" where you can setup your project.  
Block ips, edit virtual files, add bigger files using input element (to get blob)  
And this page runs javascript code which listens for WebRTC connections.  
  
  
*- peerhost.io/my-cool-website / my-cool-website.peerhost.io*  
  
This opens a ""client view"" which does the following:  
1. Destroy the current document. (remove head, body ect.)  
2. Ask the server for the Host's peer id  
3. Connect to the WebRTC host using the peer id  
4. Ask the host for the file of current accessed route. (e.g /)  
5. If the file is html, manipulate it and inject js code)  
6. Load the file using document.open(mimeType), document.write()",1.0
g4ilk5i,iozfw8,"Interesting idea! I haven't done anything with WebRTC in years, but from what I remember of the protocol, the way I'd approach this is implementing a HTTP &lt;-&gt; WebRTC proxy tunnel. So you run something on your computer that will proxy a custom protocol on WebRTC into HTTP for the local server. I'd have to think more about security here, but conceivably the ""custom protocol"" could also just be HTTP so WebRTC would just hook directly into TCP, at `127.0.0.1:80`",1.0
g4j841o,iozfw8,"Yea that would be another approach!
My initial tought was to use it in combination with a virtual file system.
So you dont actually tunnel traffic but rather edit your files directly in host mode.
But translating HTTP into WebRTC is either way needed.",1.0
g4ky1rm,iozfw8,"Gotcha. For me at least, I think the most useful thing would be treating this as just a kind of tunnel, so it doesn't matter what you are using on your backend. This would be helpful during development as a way to share a dev environments!

Edit: Just wanted to mention that if I had more time I would actually be interested in working on something like this. I love building weird hacks with JS, for eaxmple was working on this  ""backend VDOM proxy"" idea a few months ago but ran out of time... I am like 150% booked right now hahah",1.0
g4lamwf,iozfw8,"I feel you :) If i made progress i will post it.
Probably i will split that project into smaller ones.
But somehow motivation raises and falls very quickly somehow for me :/",1.0
g4lanwd,iozfw8,"&gt;:)

:)",1.0
g4j89l3,iozfw8,"Yesterday i played around a bit more and i came to an issue.  
Mocking window.  
  
If i want to virtually host a website, i need a way to have my own window.location and so on.  
  
My idea is to wrap ANY javascript code into an ""with({ window } = { window: mockWindow }) { ... }""  
  
But i will have to play around a bit more :)",1.0
g4kycr9,iozfw8,"Ah, I think you might want to look into sandboxed JS execution. Also if there was a way to use iframes",1.0
g4jezfn,iozfw8,"MIT released a project exactly like this 6-7 or so years ago I think. My quick googling failed to find it, but you. may be able to dig a bit and find info about it, including perhaps why it failed to ever take off.",1.0
g4k03rb,iozfw8,"&gt; I know about dweb but as far as i know they do such things with a custom browser and using blockchain.

There are other areas in dweb that don't use a customer browser. The archive.org folks have https://dweb.archive.org/ which pieces together a bunch of the concepts (ipfs, gun, webtorrent) into a usable site. Interesting [talk](https://archive.org/details/DWebMeetUp) starting at 1h02m.

Seems like the idea is conventional http static site in a normal browser that starts up the dweb protocols to pull in more data.

&gt; The idea is that you can host a website to show your friends or just to play around with no cost.

For the example given there are tunneling services like [localtunnel](https://github.com/localtunnel/localtunnel) and [ngrok](https://ngrok.com/) to make it easy to quickly expose a local service on the web with free tiers.",1.0
g4lb09i,iozfw8,"Yea i know there are ways to do so. But i like the idea of giving the browser power that it usually does not have to do all sorts of crazy things.  
E.g. add TCP/UDP support via flash tunnel to create game clients in web.",1.0
g4guqdn,ioxjte,"The size of the anti-class crowd sounds a bit exaggerated to me. But if you're interested, [I sometimes like to share some wisdom I found in the C++ community](https://www.reddit.com/r/learnjavascript/comments/gkxe9k/why_does_javascript_need_private_variables_with/fqv1r57/) about when and when not to use classes.",2.0
g4gzobr,ioxjte,"Where does addTwoDays live here? I'd assume it's in a function because there's multiple callsites. Wouldn't you want it in the class so that it could be found easier? What if the function was add1000Days?

And eventually this function of composed methods may be one that we want to override / have polymorphic behavior.

What is the core benefit of favoring functions here? Just so the class is smaller?",1.0
g4h2mce,ioxjte,"&gt; Where does addTwoDays live here? I'd assume it's in a function because there's multiple callsites.

Yes it's a function, and it would live in the same module/namespace as the class.

&gt; Wouldn't you want it in the class so that it could be found easier?

I think that leads to classes being little more than a namespaced bag of functions. If namespacing is what you need, then modules are the solution for that.

&gt; And eventually this function of composed methods may be one that we want to override / have polymorphic behavior.

Yes, if an instance's behavior needs to be polymorphic, then it needs to be a method.

&gt; What is the core benefit of favoring functions here? Just so the class is smaller?

Actually yes. :-)",1.0
g4i915n,ioxjte,Thanks for your insights!,1.0
g4geij2,iowc6o,[deleted],2.0
g4gsjgd,iowc6o,Your answer demystified a lot of things for me. Thank you.,1.0
g4gopvy,iowc6o,"React uses actual JS objects, not JSON.  JSON is an object serialized to a string.  Access to an objects properties is quite fast, especially when it comes to small objects with uniform shape, since such objects are often stored as a contiguous chunk of bytes.",1.0
g4gxcxa,iow8w4,Third time's the charm!,15.0
g4j4i2v,iow8w4,Fourth*,3.0
g4ggurz,iow8w4,Everyone in the comments has never used nestjs or angular,51.0
g4gkclj,iow8w4,[deleted],40.0
g4hyojl,iow8w4,"To contrast your experience, I almost exclusively work with angular because that's what my work went with. I don't have a huge amount of commercial experience with any other front end framework, and believe me, I'm by no means saying angular is perfect or that I have no complaints.

That being said, I've never been working in an angular project and thought that their (angular core team) decision to use the decorator pattern was a limitation or hindered me in any fashion. In fact, I *really* wish we could get a decorator based approach for setting up their animations. I don't know much about much, but I'm hoping I'm not alone when I say angulars animation api is a little... Convoluted. Maybe decorators aren't the right approach to cleaning that up, but in my minds eye it works a lot better.",12.0
g4gkroi,iow8w4,"I haven't used angular so I don't know about that but I actually think it makes my server routes more readable. I get swagger documentation/route or controller based authentication on the controller class/validation/transforms, DB model validation/table structure all in one file. 

If you think of it like functional programming on top of oop it's not that bad. It reduces boiler plate in a structured way",23.0
g4ji5e5,iow8w4,"Decorators are AOP.

So for cross cutting concerns that are truly orthogonal to the code they're decorating they work well.

Adding authentication, adding logging, adding routing, decorators can be great for that, because you want to do the same thing over and over again and repeating the code is a real problem. 

The problem is that they tend to be used not for AOP, but for magicing away significant parts of the specific concerns of the code you're writing.

That's a bad use of decorators.",1.0
g4iudne,iow8w4,"Professional nestjs angular dev here, they're fine.

Just because you don't know something doesn't mean it's bad practice",17.0
g5cew8r,iow8w4,I agree with you. there are many places in other languages where decorators are Extremely helpful.,1.0
g4i5l20,iow8w4,"They are awesome, and there is nothing about decorators and/or AOP that is ‚Äúpoor practice‚Äù. Just because something looks unfamiliar doesn‚Äôt mean that it‚Äôs bad.",11.0
g4i5slf,iow8w4,[deleted],-11.0
g4jmjo7,iow8w4,"Uhh, good for you, I guess?

I think that they are awesome because they let me program declaratively ‚Äî I can just say what something is, and then decide what to do with that information somewhere that makes sense.

For example, I can make a class for a particular model and then just decorate properties with different metadata ‚Äî I can denote that a field is a phone number, a password, someone‚Äôs last name, etc. Then, if I am using Nest for example, I can add interceptors to API methods that will do things like sanitize inputs and outputs, and do validation. By adding that type to the method, I can then read that metadata and decide in the particular interceptor what to do about it ‚Äî the model class only says that that field is a phone number, so it gets to decide what it does with that information (like validate that it‚Äôs in the correct range and strip out any non-digit characters). If that field is a password, my application will know to validate it according to my password rules, then just hash and salt it before storing it anywhere, and it will not allow that field to be returned from the API.

I could then take that same class and use it in an Angular app on the front end and use that same metadata for my forms ‚Äî an input for a phone number field will look different than one for an email, for example.

Also, metadata driven DI/IOC is fucking *awesome*. There‚Äôs a reason that this is a staple of pretty every major web framework that isn‚Äôt JS ‚Äî it just allows an insanely awesome amount of modularity between chunks of the application. And no, JS modules are *not* the same thing ‚Äî they are more akin to having public static methods on a Java class than using real hierarchical DI, as you can have different instances of that thing in different contexts just by supplying different providers to it. There aren‚Äôt many patterns that I would say are universally applicable, but this is one ‚Äî I have never seen a medium-large project that didn‚Äôt use some variation of this pattern that wouldn‚Äôt be better and more coherent with it.

This also doesn‚Äôt prevent you from using primarily FP for the functionality of your application (which is what I generally prefer). I like to use OOP to define the structure of the application, because it is *way* fucking better than FP for this, I don‚Äôt care what anybody says. But to get most of the benefits of this, you don‚Äôt need to even use instances of those models ‚Äî the metadata dictates how cross cutting concerns and functionality deals with the data, but beyond that, the objects don‚Äôt need to actually be instances of that class, and you can still deal with the data in an FP friendly way.

It just allows for a super clear, clean separation of concerns, and it‚Äôs awesome. I have seen a ton of developers argue against Nest (as well as TS, decorators, and IOC), but I have never heard an argument against it that didn‚Äôt boil down to ‚ÄúI don‚Äôt understand it and am too fragile to admit that so I‚Äôm just going to shit on it instead‚Äù. 

I have had this same conversation with dozens of different developers. Literally 100% of the devs that I have seen actually figure out how it works instead of just bitching and moaning because they are threatened by having to admit they don‚Äôt understand it were not only on board, but they couldn‚Äôt imagine *not* using these things.",1.0
g4hm4yo,iow8w4,"Ember has good decorators. Solves all the problems people generally have with classes in JS, too",7.0
g4j8vj5,iow8w4,"I work with Angular (And sometimes Nestjs) and worked with Java EE before and one of the best reasons to use decorators is to provide metadata without changing the actual class. Thats what they are for. Of course they can change it, but the metadata part is the important.

For example their usage in ORM's. All ORMs that could be traced back to Hibernate (Doctrine, TypeORM, MikroORM) are Annotation/Decorator based. Why? Because when working with models you just want that, nothing else. No fancy model objects that would make you do describe your real model twice. If I have a model with 2 fiels, lets say ""id"" and ""name"", and I create one I want only 2 fields there, that two. Not an unnecessary prototype, I want it to be serializable on the spot.

Then there is Django. That ORM layer in Django is so damn bad, because it uses these Model relation/property fields instead of just plain fields. It's hard to work with nested data, they cant be immediately serialized unless with a separate serializer.

And then there are the routers, its more subjective here, there are no real best, just preferences. in Nest (And predecessors) you define the endpoints on the spot with a decorator. In Django you define it in a common file, you can see them in one place. Then there is the folder based routing in Next and Sapper but thats an SSR frontend framework.",1.0
g4h73xr,iow8w4,"yup, non standard anti pattern",-6.0
g4ivsoi,iow8w4,"thats an odd reason to avoid those two tbh... Many other better reasons to avoid them, but to each their own.",-1.0
g4jc4qf,iow8w4,Or StencilJS,1.0
g4iul4z,iow8w4,or vue,1.0
g4h74se,iow8w4,exactly because of that,-2.0
g6ikojh,iow8w4,"Yes, which is why those frameworks are wrong",0.0
g4i5621,iow8w4,And MobX 6 is going away from them now.,5.0
g4iihbz,iow8w4,"I don't really like decorators most of the time. I work on both TypeScript and Python in my job. Python programmers often overuse decorators. There are a few good use cases though i my opinion. 

It's hard to articulate but if there's some reusable thing that can be added to function without changing the internal workings of a function, decorators can be nice. 

For example, a decorator to time how long a function takes to run. The innards of the function don't have to change, you just slap a decorator on it when you need timing and easily remove later if necessary. Another might be caching or throttling a function. Again, the internal logic of the function itself kind of doesn't necessarily need to know about that. 

But apart from a few use cases like that I'd prefer that they were avoided.",5.0
g4oyq15,iow8w4,"What are some places where you've seen them misused?

Another place where I think they make sense is in registering framework views, like how Flask and similar apps do it. View validation is another usage I quite like.",1.0
g4p9ptk,iow8w4,Hard to give lots of examples but I've just seen people use them when a function would be fine. One example is in tests where people do [this kind of thing](https://docs.python.org/3/library/unittest.mock.html#nesting-patch-decorators) with `unittest`. There's no good reason for using fixtures there in my opinion.,1.0
g4gb8kr,iow8w4,"Great news ... for the five people who still think complex class stuff is the best way to write good JS code ;-)

Yes, *of course* I'm being hyperbolic: *of course* it's a heck of a lot more than five people.  What I really mean is, a *very* sizable percentage of the JS community has switched to non-OOP paradigms.  It's hard to measure exactly how big this group is, but again it's pretty sizable, and for them this news is nothing more than a new way to write confusing code.",89.0
g4gdivw,iow8w4,"I assume, the main drivers here are Typescript frameworks for Node, some of which literally wouldn't be able to pull off many of their key features without TS decorators and the introspection possibilities that come with using them. TypeORM and NestJS come to mind. I also vaguely remember a couple of libraries that address server-side GraphQL that rely heavily on those decorators.

Edit: Oh and there's Angular of course. How very freudian of me. 

One good thing about the new proposal imho is, that it greatly narrows the scope of what you can do with decorators. It's basically just functions. I can see some handy patterns for FP JS people. Like function composition without having to use a helper function (or doom your code to eternal unreadability).",54.0
g4gfmum,iow8w4,I'm looking forward to one day being able to slap a couple of decorators on my function instead of having to wrap(wrap(wrap(wrap))).,27.0
g4grhwi,iow8w4,"&gt; wrap(wrap(wrap(wrap)))

How to produce dubstep with JavaScript.",23.0
g4gnn13,iow8w4,y u no pipe?,7.0
g4gtyct,iow8w4,"```
const pipeline = (...fns) =&gt; args =&gt;
  fns.reduce((p, f) =&gt; p.then(f), Promise.resolve(args))
```
yep, I do, and unlike the failed proposal this also works for async code ..
it's a glorified promise.then chain, but on the surface looks nicer",11.0
g4gvqmf,iow8w4,This guy pipes,7.0
g4iv4lc,iow8w4,Failed proposal? Have i missed something?,1.0
g4j95ov,iow8w4,"yep https://github.com/tc39/proposal-pipeline-operator
no idea which version of it is this, you may have to go back in the commit history, but in any case they never really got it working with async",1.0
g4jslui,iow8w4,"Oh, thats still in flux, its not failed. Dont know why they want to shoehorn everything in the same proposal.",1.0
g4gryxh,iow8w4,Piping is an entirely different thing.,-2.0
g4gsztj,iow8w4,"Yeah I know, I'm just being facetious; but compared to your example, `pipe(wrap, wrap, wrap)(arg)` is preferable imo",6.0
g4gtjop,iow8w4,I'm pretty sure your example is not equivalent?,-3.0
g4gvoa2,iow8w4,"I see by your other reply you're talking about callbacks. Though the only function that takes a function is the inner one. To continue being flippant: the rest could be replaced with a pipe. I'll amend mine to be the same: `pipe(wrap, wrap)(wrap(fn))`

Ps: I hate mobile formatting",2.0
g4gvw8v,iow8w4,"Ah yeah, you're right.",1.0
g4gtrdj,iow8w4,Isn't piping just outputting the result into the next function? Should be functionally the same,2.0
g4guchl,iow8w4,"I want to put the function itself into the next function, not the result of calling the function. It's an important distinction.",1.0
g4ggjjj,iow8w4,"I don't *think* this proposal covers decorating standalone functions.  If you read it, every example is decorating a class or method, and then when they get technical and describe ""The first parameter, of what the decorator is wrapping"", they list just three options:

&gt;  In a method, init-method, getter or setter decorator: the relevant function object

&gt;  In a class decorator: the class

&gt;  In a field: An object with two properties

Note the lack of ""In a stand-alone **(EDIT)**~~anonymous~~ function ..."" on that list.",1.0
g4ggsw1,iow8w4,"Yeah, but further down they mention that this is the first step to be able to add more types of decorators. And why did you mention anonymous functions specifically? There is no reason you couldn't decorate named functions as well.",4.0
g4gh5r8,iow8w4,"Sorry; I meant that you can't decorate stand-alone functions (anonymous or named).  I guess I didn't need to specify ""anonymous"".

My real point is that this is (currently) for OOP people.  You can decorate:

    class SomeClass {
      @decorate
      someMethod() {

But you **can't** (or at least, can't *yet*):

    @decorate
    const foo = someFunction();

or:

    @decorate
    function foo() {",1.0
g4ghs0v,iow8w4,"Yes, hence why it's a **first step towards more types of decorators**",2.0
g4giirb,iow8w4,"When a *proposal* promises to *someday* implement a feature (at an indeterminate future time), I put *much* less stock in that than I do in the actual proposal itself.

Look, don't forget that we already had a decorators proposal years ago.  It promised lots of things too ... and how successful was it in delivering on its promise?

*Right now* all we can judge is the proposal in front of us: anything else is at best years away, *if* it will even happen at all.  This proposal is the only thing that actually has a chance of becoming part of the JS spec anytime soon ... and (again) it is 100% OOP-oriented.",6.0
g4gn7s0,iow8w4,"All they said was they are looking forward to a future where we can use a related feature, no harm in that",2.0
g4gwl5t,iow8w4,"Right, and all I said was I have doubts that future will come, so personally I don't think ""what might happen someday"" is as interesting to talk about as the current proposal (which incontrovertibly *is* OOP-only). 

But I wasn't yelling at GLinkis2 or calling him names or anything :) No harm in two people talking.",3.0
_,iow8w4,,
g4gkqm1,iow8w4,"RE GraphQL: https://github.com/MichalLytek/type-graphql

It's a great library and it makes heavy use of decorators. We use it alongside TypeORM, they really work well together, though I wish TypeORM was aging better.",7.0
g4in963,iow8w4,"Check out mikro-orm. It's TypeORM, but better.",3.0
g4hhklb,iow8w4,That's the one. Probably saw it on JS Weekly some time.,0.0
g4ggzg6,iow8w4,Angular also makes extensive use of decorators.,7.0
g4gqeou,iow8w4,"I just wrote my own decorator for an angular project a month ago. I found it helpful and I learned a lot about the angular decorators, too. Nothing wrong with this type of programming.",2.0
g4hxnqk,iow8w4,"*Some* typescript frameworks are the drivers. But interestingly, both TypeORM and Angular have stalled development or lost maintainers. Both are built on experimental Typescript decorators that probably won't line up with JS decorators, if they ever land.",-1.0
g4gmpuu,iow8w4,"That's one thing, but my bet would be that main drivers here are people in standard bodies who are used to OOP themselves.",-1.0
g4hhdw2,iow8w4,"I can't speak to their general tendencies, but in this particular case I think it's a clean up of Typescript's eff up, when they went with the legacy decorator proposal before it was even finalised. You can totally pull off (static) introspection black magic with TS and decorators, and a lot of very popular codebases do.",1.0
g4ie5bb,iow8w4,Decorators are just as useful in functional programming as they are in OOP. I'm not sure why anyone would be against them. Decorators are a common paradigm in many widely-used languages.,9.0
g4jwiwb,iow8w4,This proposal is only for class (and method) decorators.,1.0
g4hmhc7,iow8w4,"\&gt; a very sizable percentage of the JS community doesn't have the experience to value certain paradigms in certain situations.

You. just. can't. fucking. ignore. a. whole. paradigm.

&amp;#x200B;

&amp;#x200B;

Why does it exist?

Why does it keep getting iterated on?Why do people choose to represent things as objects?

&amp;#x200B;

&amp;#x200B;

It works.

It solves problems that are sometimes awkward to solve in FP.

Maybe someone just like OOP better, but personally a good programmer will use both OOP and FP together.

&amp;#x200B;

It makes 0 sense to choose only one.",15.0
g4hws93,iow8w4,"OO doesn't mean objects. In modern context it means using classes to manage mutable, private state by way of instance methods.

Working with objects - and having private state when you need it - is pretty trivial in JS without needing classes at all. In fact it ends up being less boilerplate, better linted/typechecked and you don't have `this` pitfalls. The only thing you lose is inheritance, but even within OO circles these days composition seems to be preferred.",2.0
g4ipg9k,iow8w4,"&gt;	OO doesn't mean objects. In modern context it means using classes to manage mutable, private state by way of instance methods.

I once told a seasoned and reputable Lead Architect during a meeting that I wanted to ""take a more OO approach"" to some mission-critical part of the service orchestration layer that had to do with listening to and handling events. He wasn't very interested in this particular meeting since we had to come in early for it and he usually rolled in at 9:30 or 10 but this comment got him super animated. But then he started arguing with me!

Part of this was just his personality- he was a strangely blunt, but also super sarcastic, but also very no bullshit kind of guy and I eventually learned that him taking the time to argue with you should be seen as a sign of respect. Still, this caught me way off-guard in the moment. At some point, I realized he was arguing with me because we had vastly different definitions of ""OO"".

I meant more or less what you described above: heterogeneous classical structures for defining self-contained contextualized states. He thought I wanted to use specific Gang of Four patterns for event-driven architecture! So guess what? I ended up building him a pub/sub Event Bus which used an object literal instead of an array-like so that we could aggregate handlers by ""channel.""

It was probably as far away from what I was initially thinking as he could've gotten, but apparently that coversation was his jam- and directly contributed to an increase in business with the firm.",0.0
g4htqka,iow8w4,"&gt;Why does it exist?

Your post seems to assume all languages are equal.  However, they aren't.

OOP might work great in Java, and that alone may totally justify the pattern's existence.  In fact, remove the ""might"" from that sentence: I've coded professionally in Java, and I can state for a fact that the paradigm works great there.  But ...

... *Javascript isn't Java*.",-3.0
g4gmcxd,iow8w4,"Yeah. It's sad how OOP features are _zooming_ through the standardization process one after another, meanwhile pipeline operator stage 1 :(",5.0
g4hmnob,iow8w4,needs a champion,4.0
g4j6pnh,iow8w4,I don't understand this comment. The proposal is for decorators on functions.,1.0
g4jwmzo,iow8w4,"Please, quote something from the proposal that says as much.  If you try, you'll see it only applies to classes and class methods, not standalone functions.",2.0
g4laqkz,iow8w4,"For now it only applies to classes. And I didn't see that at first, so thanks for pointing that out. But maybe you didn't see this part where they plan to extend decorators to functions? [https://github.com/tc39/proposal-decorators/blob/simplified/README.md#could-we-support-decorating-objects-parameters-blocks-functions-etc](https://github.com/tc39/proposal-decorators/blob/simplified/README.md#could-we-support-decorating-objects-parameters-blocks-functions-etc)",1.0
g4gvd5g,iow8w4,[removed],-8.0
g4gzaxi,iow8w4,"Wording put aside I agree with you. It seems some people in the JS community believe that FP is all you need and there are 0 use case for classes. Just the other day I was debating with a guy swearing that OOP in JS is dead because React is now enforcing FP more and more.  
This is nonsense because there's a lot more to JS than front-end dev and React. I both extensively use FP (React) and classes/decorators (NestJS, MikroORM TypeGraphQl) and they all fit perfectly their use cases. Honestly that top comment is silly.",11.0
g4hmp2n,iow8w4,&lt;3,2.0
g4ic6bw,iow8w4,This. I‚Äôve even mentally separated out FP for front end and OOP (using NestJS) for the backend. The amount of people that are yelling the sky is falling are the same people will be that people championing it as the best paradigm when it hits there favorite framework. Probably when svelte takes over.,2.0
g4ic6vp,iow8w4,Then name a use case for classes over more functional like programming.,-1.0
g4h3v35,iow8w4,"Hi /u/VillageKooky, please refrain from personal attacks. Thanks.",1.0
g4gyo47,iow8w4,Obvious troll is obvious.,0.0
g4gdqqc,iow8w4,It's on the agenda (for now) so it'll probably come up.,3.0
g4glvyk,iow8w4,"Not the direction I like to see the language go, but i guess it won‚Äôt be useful for our codebase anyway",10.0
g4ibsno,iow8w4,How is this any better than using callbacks? I've worked on a python project heavily relying on decorators and I despised it. I never felt like understood what anything was doing with how heavily abused it was.,2.0
g4gdcoq,iow8w4,Oh no this again,10.0
g4i1uym,iow8w4,lol,2.0
g4j6hfg,iow8w4,What‚Äôs the reason for adding special syntax for this? Decorators are an established OO design pattern which can be used already.,1.0
g4ldue6,iow8w4,am I the only that dislike that hashtag identifier for private variables?,1.0
g4sskt5,iow8w4,"Decorator is one of prime features of python.
Having it implemented in typescript made it excited.
i  ‚ù§Ô∏è üòç python and typescript",1.0
g7ixxnk,iow8w4,Can anybody tell what the results of this meeting were? All I can find is the agenda.,1.0
g4iv26i,iow8w4,"Always feel like decorators have too much magic. Some framework use them heavily and for me its always a black box. I tend to like to keep to simple composable functions instead. Also not a heavy user of classes, they have their use case tho..",1.0
g4gbcc8,iow8w4,why javascript is getting so many OOP things? It's awful,-28.0
g4gfeq6,iow8w4,OOP has always been part of the language. Just because you don't like it doesn't mean it's not practical and useful for others.,19.0
g4gfht4,iow8w4,Let's use Java instead and we are done,-33.0
g4ghss2,iow8w4,"&gt;lucastrvsn

Because despite JS using the worst form of OOP possible (prototypical inheritance is ass and that's why nothing that matters besides Lua uses it), it's still preferred by most people and easier to understand than pretending really hard that you're Mr Elite-Functional-Programmer while using multiple object-oriented libraries to manipulate the document object model. I don't think you realize the amount of senior fullstack devs who don't code very much in JS unless it's absolutely necessary that would be able to pick this kind of thing up quickly if they needed to. I work under a senior dev who didn't know they added string literal interpolation in ES6. He's not an idiot and very talented, but he doesn't need to touch the language ever, so when new paradigms etc are invented he is oblivious. Some of them would even prefer to start a fresh PHP project using a modern version of the language and Laravel. This blows my mind, but it's a matter of personal preference.

This JS subreddit skews into the younger crowd that has yet to experience giving their all to one of its trends and having said trend be invalidated by a random blog post 5 years later. This is most easily represented in the extreme hatred given to JQuery and its ""bloat"" that is often a smaller filesize than the alternatives people use to get around having to use it, especially when people fuck up `import { lol } from lolbrary` vs `import lol from lolbrary`. The language has definitely left the ""intolerable trash we're all forced to use"" phase, but it's far from perfect and its inconsistencies/shortcomings is the reason why it's never the first language you learn in school.",9.0
g4gjm9f,iow8w4,"&gt;the reason why it's never the first language you learn in school.

You do realize that *tons* of schools actually start with JS as the first language?  You must be thinking like ""college-level computer science courses ... back in the 00's.""  I took CS classes back then myself (using C, C++, and Java), so I get it.

But I'm talking about today: high school programming classes, boot camps, *and* even some intro-level college courses ... all start out with Javascript.

Get some fresh air man: you'll see JS is taking over :)",14.0
g4jf5ya,iow8w4,"I have to speak from my own experience being a self taught Front End working within a team of CS degree holders. This is exactly what happens and you defined it so well. I can solve any FE problem with vanilla JS and I don‚Äôt need Typescript for that, it makes me very confused to have to deal with some concepts that I don‚Äôt see a use case (or need) for. In my opinion it‚Äôs only adding complexity and doesn‚Äôt really contribute to the crazy fast turnarounds we have to deal with daily.",2.0
g4hb5nv,iow8w4,"I highly doubt that you or your colleagues sit with smalltalk or lisp.
OOP as you know it is a misguided beast that is highly driven on by the bastard language -&gt; Java.

OOP in the forms popularised today has failed us.
But it's not completely useless.
Since we can inherit Animal

Check out Alan Kay",-3.0
g4glt9x,iow8w4,Python is ‚ù§Ô∏è,-5.0
g4gja89,iow8w4,"I'm confused why people are in such support of adding advanced programming features to JavaScript.  Wasn't it always supposed to be a purposefully simple scripting language, intended for use in browsers, to add a layer of basic interactivity?  Isn't frontend supposed to be accessible to everyone, not just the few who are trained in sophisticated programming concepts?  If you wan't that stuff, that is what more advanced languages on the server-side are for.  

This is the real problem with the JS community.  Everyone forgets they learned JavaScript because its so accessible, refuse to learn another language, and demand JavaScript itself change to suit their changing needs.  Such convenience for you will be ruinous to those who seek to follow the same path.  You're destroying the environment.",-35.0
g4glg4k,iow8w4,Accessible != simple. JavaScript got popular because of its low barrier to entry. You just need a browser which everyone has. JavaScript is changing precisely because more people are using it. With increase usage and diversity of usage comes with changing the language to improve both development and language performance.,16.0
g4govjl,iow8w4,"Accessible does mean simple, that's my argument.  JavaScript is a gateway programming language.  The browser is a contained garden of client UI that can have a ceiling in what it facilitates.  Performance isn't really going to be improved much by adding features.",-11.0
g4gwkds,iow8w4,You can improve performance and performance has been improved through adding features. A polyfill is rarely going to be faster than native.,5.0
g4gnevk,iow8w4,"&gt; Wasn't it always supposed to be a purposefully simple scripting language, intended for use in browsers, to add a layer of basic interactivity

And now it isn't.  Things evolve or die.  But `document.write` still works.",11.0
g4gprxp,iow8w4,"The web itself isn't what it was originally planned/intended to be. We live in the era of web apps instead of just documents, so why wouldn't you expect the languages to evolve to enable this?

Pick any language and it probably has some advanced features that aren't very intuitive. That doesn't matter because it doesn't prevent anyone from picking up the language and getting to those advanced things when they want or need to. It's like objecting to calculus because it's intimidating to people just starting to learn basic arithmetic.",8.0
g4gsd1q,iow8w4,"The fact that the internet was, at the very beginning, a way to share simple documents, is a good point.  But, JavaScript came after that, and the vestigial document markup nature of HTML turned out to not be incompatible with making application UIs.  It actually happens to work pretty well.  

Still, though, you make a decent point.  That, just in general, the internet is evolving, and things need to evolve with it.  I just think there needs to be a balance of motivations between webdevs who are just reaching the end of what JavaScript can do, and those who have yet to even write a line of code.  The burden of who has the harder time should be assumed by the more experienced developers.",6.0
g4gtqn6,iow8w4,"Does the introduction of decorators add any difficulty in `document.query selector()`? No. Things like this will not add any difficulty to those who haven't written a single line of code before.

And, if you're going to complain that this is too complex for beginners, have you looked at WebRTC? 

This is something that would enable experienced developers to make code more consistent and reusable. Beginners needn't even know it exists. It's optional. And it's really more aimed at library and framework developers than beginners who may or may not be writing jQuery. Heck, maybe it could help when they start writing their own classes by importing code to deal with some of the more complicated aspects.",5.0
g4gkef1,iow8w4,Just don‚Äôt use decorators if you don‚Äôt want to. No one is forcing you.,15.0
g4glwfm,iow8w4,"No one is forcing anybody to use any feature in any language.  But once it's in there, it's going to get all wrapped up into all the frameworks, libraries, methodologies, and best practices.  That's not even my point, though.  The technique of using a superset language, like TypeScript, should be the condoned way to add a layer of sophistication on top of JavaScript.  It's a very good compromise.",-7.0
g4hh809,iow8w4,"Point of this proposal is to standardize something people already implemented in frameworks/transpilers. People do not pull proposals out of nowhere or just go ""hmm java has that, maybe we should too"". This proposal is about standardising something people already use slightly differently from each other so you do not have x number of different decorator implementations that differ from each other.

Agreed on the Typescript thing but they are not directly governed by tc39 and may die off someday. Some features may worth directly implementing in the language either from language's evolutional progress stand point or things like performance considerations.

Definitely don't really need decorators though. This is more like nice-to-have.",3.0
g4gml8w,iow8w4,"For what it's worth, decorators have been in stage-0 for a loooooong time, mostly because people are torn on if it'd be a positive change to the JS spec.

I personally don't like decorators, and I would avoid a framework that incorporated them into their spec (as Angular did/has) but that's just me.

Anyways, I support advancing the JS spec in ways that make sense for the JS ecosystem, even if it would be considered an advanced programming feature. Who am I to say what is advanced and what isn't? We just have to adapt over time to what the JS community as a whole is moving towards, and not get stuck in our ways because of our own opinions.",4.0
g4gq4my,iow8w4,"Really, hmm.  Well, I swear I read once that people on the TypeScript team sort of regretted adding decorators, and that they were coerced by the Angular team, who requested it as a solution to their problem of differentiating classes as different kinds of components.",2.0
g4gqble,iow8w4,"Yeah, I think you‚Äôre right about that. At least, angular code is the only place I‚Äôve consistently seen decorators",2.0
g4fpid9,ios5sh,"An article with more than 4200 words, 20 minutes ? Really ? WTF ? Like TDD, IMHO this is just a big big big waste of time.",-8.0
g4gcht4,ios5sh,wait until this guy finds out about books,13.0
g4hd5xs,ios5sh,"Bleh, broccoli",1.0
g4gc9dp,ios5sh,Imagine having to put some time into learning! Ew no thanks!,8.0
g4i7jt8,ios5sh,"I‚Äôd argue the more content the less waste of time it is, eg more content generally means more intensive learning",1.0
g4iv2ps,ios5sh,Need to talk about anything there bud?,1.0
g4fgzv2,iorbus,"The  new major release (v10) has been released, the new major feature is  three buttons (confirm, deny, cancel) which can be used for dialogs like  Save/Don't Save/Cancel

The complete release notes can be found here: [https://github.com/sweetalert2/sweetalert2/releases/tag/v10.0.0](https://github.com/sweetalert2/sweetalert2/releases/tag/v10.0.0)",12.0
g4g85z2,iorbus,"Ah man, I remember asking for that feature like 6 years ago... but I'm glad it got put in eventually! Still my favorite confirm library.",7.0
g4fs3ui,iorbus,I use this all the time in personal projects i work on and it‚Äôs great,9.0
g4gikpn,iorbus,What amazes me is there are nsfw sponsors,6.0
g4ivyor,iorbus,"They are the one who need the most ""Are you over 18?"" confirmation boxes.",5.0
g4g55ro,iorbus,I used it on a project and have had no issues. It has a really great look to it.,5.0
g4ggwa8,iorbus,I use the heck out of this in hybrid mobile apps. Its amazing,5.0
g4h4r4b,iorbus,came here to say this. its awesome in hybrid mobile apps,2.0
g4fjijw,iorbus,This is great! I‚Äôve bookmarked this. Will use it for sure!,3.0
g4fpmc6,iorbus,"Looks really good, what is concerning though is bundle size. &gt;18kb (inc. react connector) is probably blocker for us for such a lib, but will keep an eye on it in future.",9.0
g4gw6p5,iorbus,It makes me sad that this comment is getting down voted. I've used SweetAlert in multiple personal projects but it is a bit hefty for the problem it solves. I appreciate that you are paying attention to your bundle size.,8.0
g4fufvi,iorbus,This is truly sweet. We can really use this!,2.0
g4gma3v,iorbus,I've used sweetalert1 and 2 in a personal project. 2 gives a lot more customization and has worked really well for me.,2.0
g4gn24o,iorbus,"I always use this when someone asks for a popup in a project that I don't want to work, nobody ever complained.",1.0
g4hebp8,iorbus,I‚Äôve used the original SweetAlert and they‚Äôve worked great. Glad to see these improvements.,1.0
g4hfoh0,iorbus,"For all of the demos on my S9+, the dark transparent layer behind the modal seems to be broken. It flashes in a second after the modal appears",1.0
g4hgckr,iorbus,Thanks for reporting! What browser are you using?,1.0
g4hu21y,iorbus,It's the embedded chrome webview that apps can use to view web pages. I'm using the reddit sync app in particular,1.0
g4i5puq,iorbus,Sweetalert is the bee‚Äôs knees,1.0
g4fl7ad,ior3ca,"I saw your question the other day on the other sub, but I didn't answer. I still don't want to answer much (read note below for why), but there's a [very nice article](https://fsharpforfunandprofit.com/posts/dependency-injection-1) on Scott Wlaschin's blog which does a very good job of examining the subject of ""DI in FP"".


Note: The thing is I don't _swear against OO_ so I felt I was not the correct person to answer. Also, that title, that way of wording things... well, I may be wrong but it makes me feel like you are predisposed to see this kind of conversation as an _argument_ about ""OO vs FP"" and that makes it really boring and unappealing.",3.0
g4fm7m5,ior3ca,"That argument is how I feel it has to be worded for certain people. (A few people on this sub have made me upset so.. maybe I'm retaliating? Idk)

Reasonable people know how to use the right tool for the task at hand. Oo, FP, doesn't matter, even in the same project.

Thanks for the link tho! I'll check it out.",1.0
g4fmw1o,ior3ca,"If you get upset by whatever some random people write on some random website, you'll be the only one who ends up ""losing"" (your tranquility, at the very least).

Don't pay them so much attention.",3.0
g4fwq8y,ior3ca,"The people who oppose object oriented programming do it because they‚Äôre amateurs and understand programming from the point of view of online blogs. To them, trends are all that matter.",1.0
g4g41ue,ior3ca,"My problem with DI is just what the name implies: it injects dependencies usually to libraries or components that don't need it at all. If direct coupling is problematic, why settle for indirect coupling? Rather, I wouldn't couple those two to each other at all.

Let's have an example of `StarWarsApi` and `FavouriteCharacerSelector`. A DI, as I've understood it, still couples them together, but at another level. There are multiple problems in this approach:

1. `FavouriteCharacterSelector` is still coupled to the **interface** of `StarWarsApi`. Functional programming is usually done with *data-in-data-out* methodology. OO-style instead is with *create-setup-query* methodology. Since the OO-version of `StarWarsApi` is given as a dependancy to `FavouriteCharacterSelector`, it must know about the methods of `StarWarsApi` object. Why should the concern of `FavouriteCharacerSelector` include within itself anything about the concern of fetching data? These are separate concerns! They should be tested separately too!
2. OO-API's are often written in a stateful way and as singletons which clashes a lot with asynchronous APIs. The state usually only goes in the way. With asynchronous API, saving per-request error states or data will lead to tons of problems. If you give an class as a parameter, can the recipient use all those methods freely without affecting other users of that singleton? I doubt it - many ""handy"" singleton APIs wouldn't like one user to set the endpoint to testing server, for example. Thus it needs to be constructor-only or have big documentation warnings.
3. DIs are usually justified with extensibility: ""I can plop into it any other implementation readily"". Unfortunately for that functionality to work properly, you have to an oracle to lock down the OO-api beforehand. Making a separate internal OO-API just for the sake of switching between one real implementation and testing implementation adds a lot of internal API complexity and code for almost no benefits compared to other methods. If you don't have two different real implementations available to use from the start, writing a support for it just increases the time to code it and through it raises the chances of bugs.

A UI doesn't actually need to know anything about the network or the `StarWarsApi`. It only needs the character list, per-character-data and a supplied callback function to inform when a character is selected. The `StarWarsApi` doesn't need to know anything about the UI.

What I would do, is have a glue component/system that knows about the UI and `StarWarsApi` and communicates the data between them. I would do this through Redux-like store-API.

But how do I test it without DI? First you need to know what you don't test. You never test that pushing a button sends a fetch request - that's an implementation detail. With Redux, you don't test that a button dispatches an action: the shape on the action object is implementation detail. You don't test that the button calls an action creator - the button behaviour itself is an implementation detail and there could change in valid, non-breaking ways. You have the internal API of your application with using action creators and data selectors.

To test Redux, you need to start from the end. What you want to see, is that the selector returns correct data. For that to happen, you need to call the internal API - dispatch the actions created by action creators. In our case, it would be `setSelectedCharacter` Redux action creator and `getCharacterData(character)` selector. Anything in-between is implementation details which should not be tested.

However, if there is an external API-call for fetching data from `StarWarsApi`, in-between then we need some code to handle testing it. One way is **DI, writing whole libraries with testing in mind.** Second is **mocking the fetch during the tests** \- this requires knowing the implementation detail, the fetch and matching its arguments, which is fragile. Third is **adding internal API wrapping for external API calls and replacing those in testing** \- in Redux case, we would have thunks/sagas listening to `REQUEST_CHARACTER_DATA` actions, running a fetch and dispatching result in a `RESPONSE_CHARACTER_DATA` action which is added to the store in reducer. In testing, the testing code will have its own code that listens to the `REQUEST_` and responds with `RESPONSE_`.

The latter two cases have the advantage that anyone who implements the code doesn't need to know or care if and how their code will be tested. It's all in the discretion of the test writer. This also means that tester shouldn't ever need to touch the implementation in option number two thus no risk of breaking anything.

Those are my ideas on DI and testing, but they are not completely fleshed out. There might be some missing parts and things I haven't noticed. It feels like DI was thought up for languages / environments where class structures are more enforced and writing anonymous functions / lambdas is difficult. JavaScript has no such problems and thus can use more direct/dynamic approaches like dynamically replacing implementation of `fetch` easily and reliably.",3.0
g4imx5l,ior3ca,"&gt;But how do I test it without DI? First you need to know what you don't test. You never test that pushing a button sends a fetch request - that's an implementation detail. With Redux, you don't test that a button dispatches an action: the shape on the action object is implementation detail. You don't test that the button calls an action creator - the button behaviour itself is an implementation detail and there could change in valid, non-breaking ways. You have the internal API of your application with using action creators and data selectors.

This doesn't sound correct to me. Can you elaborate? Just to clarify we're talking about unit tests here as opposed to integration/e2e tests. What do you mean it's an implementation detail? Isn't that precisely the point of a unit test... to test the implementation of the unit.",1.0
g4ixlbf,ior3ca,"I would rather try to test the bahaviour instead of implementation. There are countless different implementations that could and should pass a test, but if looking from the outside, it gives different output from the same input - the behaviour changed, then it needs to fail.

[Eye-opening presentation about test-driven development by Ian Cooper](https://youtu.be/EZ05e7EMOLM?t=1430). At later point  he explains that classical testing considers the smallest possible piece of code to test, an unit. In TDD; the unit means the test itself, it is isolated from other tests.

What I mean with testing implementation, a lot of time tests are written that require that something is done in a specific way. If you test the implementation in a unit test, you're making your code base resist refactoring. What you're interested is only the result, not how it was reached. A good test should pass even if you completely replace the code inside as long as it gives the same end result.

You don't want to check that `calculateComplex` itself makes a call to `calculateSimplePart` because that's an implementation detail. The test would break if caching is added. At that point the test just checks ""Is the code that I wrote this code"" instead of ""Does the code I wrote return what it needs?""",1.0
g4j16p8,ior3ca,"He does not propose a compelling argument

You should have tests that cover a business requirement / story, but those are not unit test sizes; that's integration or system testing. 

Of course this is very subjective depending on the complexity of the components being tested. If you have a tiny 1-3 liner it may not be worth testing, but larger functions that use it would be.

For something like a fetch request, who knows what that's fetching - and that's almost definitely another module, touching a database and you won't be able to run your tests in isolation. In this case you would have to know that it fetches, you would mock the fetch to test the specific behavior of the component.

For calculateComplex, it could call a prepFn(), and then pass the value into calculateSimplePart(). It doesn't matter what calculateSimplePart does, it could be broken beyond repair... hack into a government database, but calculateComplex will be valid and correct, and the test should reflect that. Specifically it would be tested that it passes the value from prepFn() into calculateSimplePart(), and that it returns the value from calculateSimplePart. The onus is then on calculateSimplePart to be tested (another unit) to ensure that it does its job. 

It's not a goal for unit tests to not break when you refactor. Your end to end tests should remain the same. Your unit tests should absolutely fail catastrophically. Then you check your unit tests and cross check whether the unit tests that are failing are failing as intended, and update them accordingly.

Unit testing is essentially documentation for developers, we want to know the purpose a function; what the domain of inputs are and the expected range of results. If I see a test that says, ""calculateComplex() should return 5 when passed in 3"", that is so useless. How about ""calculateComplex() should invoke prepFn() and delegate it's result to calculateSimplePart()""",1.0
g4jlqjp,ior3ca,"I can't agree with you here on most points.

With fetch, I'm quite torn up about it. I can't figure out a way where a local test for fetching would be able to both recognise when an illegal header field is added, and gracefully handle addition of header fields that don't actually influence the request. My favourite solution for fetch etc. is that you test right until you're going to send the fetch request and stop there. Anything more would be just duplication of implementation: mocking the fetch to test if the copied implementation matches the pasted mock data. This is a test that won't even fail if *anything* changes on the remote end. On the other hand, the only way it can fail is if someone modified one copy of the code but forgets the other. I consider tests of code/data duplication just harmful.

Testing implementation is another such case: If the criteria for the test failing is that the two codes (implementation and test) are different, the criteria for passing is for the two codes to be identical. Correctness is not part of that test criteria at all, usually someone just expects either of them to be correct and fixes the other of the pair to match it.

There's a problem if refactoring touches both the tests and the implementation at the same time. If implementation A passes test AT and implementation B passes test BT, there's no any evidence that B passes AT. Consider which one you would trust more when code reviewing: one where only implementation changes or one where both implementation and tests change.

Code should preferably document itself well enough - splitting the documentation in multiple files sounds confusing. [Writing tests that don't re-implement code to be tested is actually quite complex](https://www.youtube.com/watch?v=IYzDFHx6QPY) and I haven't found the right balance yet. I would like to know that my code produces the correct input instead of it verifying that it does the right steps. We're not manually grading math tests - we do have the luxury of throwing hundreds of different problems and verify that every single one is not incorrect. The methodology on how to solve the problem weighs nothing when considering whether a test actually fails or passes.",1.0
g4k7luj,ior3ca,"&gt;With fetch, I'm quite torn up about it. I can't figure out a way where a local test for fetching would be able to both recognise when an illegal header field is added, and gracefully handle addition of header fields that don't actually influence the request.

Adding an illegal header isn't an issue. This is where an element of art/craft, use your best judgment comes into place. For me, I wouldn't unit test fetch functionality, that's why we're just testing that we're calling it, and illegal headers that broke the server request would be caught in an integration test, as presumably that has some net effect on the outcome of the result. 

At their core, tests aren't designed to stop bad actors. This is what code reviews are for; you validate that their code is correct by sight and then affirm with the test suites. With appropriate architecture you would see that in your call tree leading to the fetch, there would be a requestBuilder.addXHeader(x) call, and there would be a unit test that ensures addXHeader is called. This now makes it even easier to spot any malicious activity. If it is a genuine mistake, and both the developer and code reviewer are agreeing to a header that looks right but is wrong, then unfortunately that would have to be caught in the integration test. And the element of best judgment comes here, if it is a recurring problem because your architecture or product is designed in a specific way, or because of the complexity of the code, the end to end tests take hours, then you might want to refactor the code so that it is clear that having no additional headers is unit tested.

&amp;#x200B;

&gt;Testing implementation is another such case: If the criteria for the test failing is that the two codes (implementation and test) are different, the criteria for passing is for the two codes to be identical. Correctness is not part of that test criteria at all, usually someone just expects either of them to be correct and fixes the other of the pair to match it.  
&gt;  
&gt;There's a problem if refactoring touches both the tests and the implementation at the same time. If implementation A passes test AT and implementation B passes test BT, there's no any evidence that B passes AT. Consider which one you would trust more when code reviewing: one where only implementation changes or one where both implementation and tests change.

They do go hand in hand, this isn't a ""testing implementation"" issue, it's an overall testing issue. Take the extreme example, if the description of a test says it validates user input, but then the body of the test just returns true, then any implementation is correct. This is why it's important to get the test right upon it's introduction. After that point, the test mutates and evolves alongside the implementation being tested.

Let's talk about implementation A and B. What I'm saying is that the test tests the implementation. So in your example, there shouldn't be any expectation that B passes AT. A meaningful refactor changes the unit's behavior. In TDD, when you do a meaningful refactor, it is the same as if you're writing that implementation from scratch / i.e. you write a failing test first with your anticipated expectation of what the component does. And then write (or refactor) your code.

&amp;#x200B;

&gt;Code should preferably document itself well enough - splitting the documentation in multiple files sounds confusing. [Writing tests that don't re-implement code to be tested is actually quite complex](https://www.youtube.com/watch?v=IYzDFHx6QPY) and I haven't found the right balance yet. I would like to know that my code produces the correct input instead of it verifying that it does the right steps. 

You should write code as cleanly and easily understood as possible. But this is not related to writing good unit tests that validate the correctness of your unit. Writing code is easy and quick (10% of time is spent coding, 90% debugging bla bla), so time should be invested in coding up your tests. Imagine if you could flip this around; even if it took the same amount of time, coding 90% of the time and debugging 10% would be so much more enjoyable.

At the end of the day, testing is a means to an end. And the goal is to be maximally effective, being able to (presumably, for a typical business,) maximize throughput of features with minimal bugs for your company. And in my experience, writing comprehensive testing (ignoring whether or not it replicates the implementation) becomes ironically more and more important in hot codebases where things are changing really fast and you have many engineers working on it - protecting the code that you wrote pays big dividends. In a different set up with a small team, I can envision scenarios where the best decision is to write minimal tests",1.0
g4izlij,ior3ca,"&gt; My problem with DI is just what the name implies: it injects dependencies usually to libraries or components that don't need it at all.

This is incorrect. A dependency injection container is not a dependency injection container if it violates the Dependency Inversion Principle. The principle states: ""High-level modules should not depend on low-level modules. Both should depend on abstractions (e.g. interfaces). Abstractions should not depend on details."" What this means in practice is that you're not providing your consumer of the dependency with the dependency itself, but an abstract interface which that dependency must comply with. This means that the code is gauranteed to work as long as *whatever* dependency you pass to it abides by the rules of that interface. This implies that a true dependency injection mechanism requires a type system, but a type system is not necessarily required as the consumer of the dependency can simply make assumptions and validate those assumptions at runtime. The type system method is beneficial because it gets rid of that runtime overhead.",1.0
g4jh25l,ior3ca,"I did mention interfaces in my post, but the focus was admittedly elsewhere. I don't really like interfaces either in DI, since then the data calculation code needs to concern itself with errors etc. I do think there can be found value, but for most DI usages, there is only one real available and feasible implementation. At that point the interface, which both sides have to adhere to, becomes a ""You ain't gonna need it"" -code.

Like I pointed it out, DI actually results in interfaces that are a ton of code which are usually practically only for facilitating testing. While testing by using mocked functions is less elegant, it would also be a lot simpler in most cases.",1.0
g4hmeqk,ior3ca,"In general,  typeclasses and GADT's satisfy the cases where DI is used. This is because typeclasses and GADT's can be used to specify a minimal contract for any given function. DI is used to specify a minimal contract for a constructor. Since constructors are functions,  all use cases for DI should be satisfied.",3.0
g4g6xcx,ior3ca,"One simplistic approach I came across the other day kinda intrigued me using higher order functions: https://www.npmjs.com/package/apeyed

I can't speak to the practicality of it compared to other ways, but it's a very simple approach to solving the problem that is easy to understand.",2.0
g4izveu,ior3ca,"I'm the type that likes to mix OO and FP concepts where it makes sense. I find that, especially in JS which allows for it, it's extremely beneficial to use OO concepts at the architecture/structure level and FP for the inner-flesh of a codebase. So I typically follow dependency injection and Clean/SOLID architecture principles from OO, but when it comes to processing data and business logic, I do that with pure functions and data transformation pipelines.

That being said, I've read a lot about how some OO things are accomplished in FP and vice-versa. When it comes to the topic of dependency injection, the FP consensus is that it's not really required if you make extensive use of higher-order functions, keep things pure, and abide by the laws of category theory. But even so, there are monadic constructs which can be used for more complex dependency injection - the Reader monad, the State monad and the Free monad, as well as monad transformers and natural transformations.",2.0
g4fhjtp,ior3ca,"Not sure how those two things are related.

Angular and AngularJS are full of dependency injection. 

Any language that needs to be unit tested is necessarily going to need a DI capability in order to do mocking.

The only real requirement for DI is the ability to implement a Factory Pattern",1.0
g4fho4f,ior3ca,"There are people in this subreddit who refuse to use classes, and won't accept the fact that they are missing out on a ton of experience from the people before them when they disregard an entire paradigm of programming (OO), just because they had a bad experience with inheritance",0.0
g4gbbsx,ior3ca,"In JavaScript you can pass objects and functions as arguments. Boom, there goes need for classes in DI.",3.0
g4flvfd,ior3ca,"Personally, I don't like most OO practices not necessarily just because of inheritance, but because of the practice of having shared mutable state and the feeling of overcomplicating things that can be a lot simpler. Most of the times, a good datatype with some functions will do the job in a much simpler way.

We currently have a reasonably sized codebase in ReasonML, pure, functional without any classes. Unit tests are performed on the smallers possible unit in code (a single function). Any combination of those functions (if types align) is therefore valid (there is a strong compiler with Reason, and a strong type-system, so this might be different in just plain JS or even TS).

But I mean, the argument kind of goes both ways. When I start telling someone with an OOP background about the importance of understanding things like monads or lenses, their eyes start rolling as well, but building applications without them seems to be a ridiculous idea to me now.

For me, FP paradigms are much simpler. Not necessarily because they are easier to understand, but because once you understand them, and the underlying principles, they're the same everywhere.

&amp;#x200B;

I would be curious to see what exact things you are looking for with DI;

  
**Application State (data and functions) can be easily shared between components**

If you have a library of functions that work on a certain type, you don't need to share them, they're just available. The practice of sharing data is tricky as I'm unaccustomed to that / not a particularly big fan. But in FP instead of having an object with data and functions, you just have your data an functions. So instead of calling the function on the object and the object handles the data getting, there is no object, you just have the data and you pass it into the function yourself.

&amp;#x200B;

**Testing is much easier and can be done in isolation**

Having no shared (mutable) state or classes, and instead just functions that work on data gives you this by design.",3.0
g4fn47l,ior3ca,"I also got the impression that FP tends to be more into the Domain specific written naming and OOP seems to abstract anything away which makes it hard to grasp.

For example ""BasicObj-&gt;Container-&gt;Taxonomy"" instead of ""ClassRoom-&gt;Course-&gt;Types""

FP seems to enforce this ""better naming"", because no one can remember the meaning of sum(map(unique($var))) after a second, so instead, devs make their lives easier in naming most appropiate.

Beside that: Software Projects change a lot. If your ""inheritance"" is not easy to change too, you will fall down into a rabbit hole with workarounds and extra specificity  within your classes.",3.0
g4fpxg3,ior3ca,"I agree with this. But also, iron sharpens iron. The lessons learned from both worlds can be applied to the other.",1.0
g4fsd4b,ior3ca,"Of course, didn't mean otherwise.

""Naming things"" became the hardest thing for me but also brought me the most benefit. Somehow, I just learned it while deep diving into FP, where even simple examples can get confusing very quickly. Just changing the names of functions made everything readable like a book. You know, when ""Code explains itself"" for real.

I think OOP also enforces a meaning (by Software Pattern Structure or Inheritance) but this ""meaning"" is not what you, as a developer, meant. You know what I mean ;-)

Also, I'm very surprised why this fundamental knowledge (""naming things"") is not the absolut standard. Cognitive Overload has hit me more than once and I often was close to crying and thought that I'm a total programming looser because I could not immediately understand what is happening.",2.0
g4fhw9p,ior3ca,"Yeah I have seen it too with some people I work with.

Unfortunately there is nothing much to do about it. People who close their minds to new ideas tend to only last a few years in the industry before moving on.",2.0
g4j09na,ior3ca,"With good reason - JavaScript's classes aren't *real* classes like the ones that exist in other languages. In JavaScript, a class is simply syntax sugar over prototypical inheritance, which is a fundamentally different thing to proper object-oriented classes.",1.0
g4fmu4o,ior3ca,"It's not because of a bad experience with inheritance, that's just usually the straw that breaks the camel's back. The real problem with OO is that it ties together each instance of the data with the code that operates only on that instance. As a result, any algorithm that operates across a reasonably complex OO data structure will jump from class to class and method to method to do its thing, making it difficult to trace the flow.

A classic example is some kind of tree where children are bidirectionally linked with their parents. It enables arbitrary ad-hoc traversals up and down, which seems like a benefit, until you realize that trying to maintain parent/child dependencies this way is just going to end up cascading effects up and down in an uncontrollable fashion.

It may not do so today, but it will do so in the future, when another developer adds a seemingly harmless call to a method somewhere which turns something important from an O(1) into a O(log n) or O(n). The method API of a typical OO class is rarely a true API, it is often just a set of methods of convenience that have to be used in concert with each other in a certain way.

Once you reach a certain level of complexity, you will likely want to defer updates in one or both directions, with the actual work being done later in a separate place, for entire sub-trees at once, ordered by data dependency. Once you throw in caching, you also discover that mutable OO data model can work great in isolation, but makes it a nightmare to keep other dependent data in sync, because you don't have a reasonable way to track history. Maintaining this inside an OO structure is a recipe for insanity. Certainly compared to writing one function that can operate on all instances of the data and can keep line of sight to the job at hand. OO encourages you to keep sources of data and derived state in the same place, and then makes you keep everything in sync by hand.

I don't disregard OO because I had a bad experience with inheritance. I disregard OO because when I finally gave up on what I had been taught, my code improved by leaps and bounds and I could finally accomplish things that had seemed insurmountably complex before. I resent the people that tried to teach me. They were wrong and should feel bad.",2.0
g4fq1ki,ior3ca,"&gt; OO is that it ties together each instance of the data with the code that operates only on that instance. As a result, any algorithm that operates across a reasonably complex OO data structure will jump from class to class and method to method to do its thing, making it difficult to trace the flow.

People shouldn't use OO for that kind of stuff.


People can selectively use OO and FP where appropriate. These aren't one tool to rule them all",1.0
g4fmor0,ior3ca,"I think I will go with the people who have gone before the OOP people, or the people who have gone before me and realized what a mistake OOP and classes in JS are.",0.0
g4fnwgv,ior3ca,"I'm also unsure about your question ""**library-integration aspect?"".**

FP, and also OOP:

Both enable libraries to build off of each other without requiring configuration.

DI is just a specific Software pattern. To have a FP equivalent is possible and might be easier to grasp ...",1.0
g4fq59d,ior3ca,"Without a known shared container to register with, libraries (generally) can't make assumptions about existing behavior",1.0
g4ftuhd,ior3ca,"Not sure if I understand you correctly, but in FP you mostly act upon data and you do not need to know anything about behaviour ...",1.0
g4fuobo,ior3ca,"I agree with that. I think in general fp projects don't work with this type of problem.

All connectivity between libs more or less gets pushed to userland",1.0
g4n4t2x,ior3ca,"I don't know if I quite understand the question, but I would consider a parameter for a callback function a form of FP dependency injection.

You can also use a closure to build a function that takes a dependency you pass into.",1.0
g4flnsn,ioqyqo,**Documentation site built with Ember**.,12.0
g4gzx7i,ioqyqo,If only titles could be edited,1.0
g4g8qp6,ioqyqo,"?? A text website with 100 PageSpeed Score. How on earth is this possible? Is there anybody as proud as I am? Sorry for being sarcastic, but is this the new level in webdev?

Bye the way, on ""my"" page speed insights, the site ranks between 78 and 85 .... as every web developer should know, that the Chrome ""PageSpeedInsights"" is NOT CLOSE to REAL Life.

[https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fdocfy.dev](https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Fdocfy.dev)

I'm really baffled by such hubris.",7.0
g4gzvif,ioqyqo,"Lots of people seem to care. JAMstack enthusiasts, especially.

Frameworks are literally chosen based off scores like this",1.0
g4hsvwq,ioqyqo,I think he was suggesting that it's rather easy to get an high score with a text only website,1.0
g4i7qnk,ioqyqo,"ah. It's not just text though. It's the latest Ember  


 https://imgur.com/9VVekQD",1.0
g4ivwmd,ioqyqo,Yeah but no images,1.0
g4i7seq,ioqyqo,This isn't just a text site: It's a SPA:  https://imgur.com/9VVekQD,1.0
g4j74gb,ioqyqo,"Oh, a SPA ... that's totally not different to a text pages. I'm not sure if I want to use Ember in my application stack when even the devs seem to be unaware of the difference between In-Browser PageSpeed and ""Live"" Testing (like [https://web.dev/measure/](https://web.dev/measure/)) and are therefore unable to distinguish between real live applications that are globally available and indoors basement closed source PowerSuperPCGPUEnabled local dev.

Like I said, I'm really baffled by so much misunderstanding from devs that are supposed to ""power the web"".",-1.0
g4j7lgl,ioqyqo,Oh pls,1.0
g4j9riu,ioqyqo,"OK, do you really think that the proclaimed 100 score is in anyway meaningful? If so, can you please elaborate a little bit?

In my view, its very misleading, and that is something that can break your neck in a project! For Real! 

I don't want to offend you, but the  proclaimed 100 score is very far away of being meaningful (or noticeable) in many ways.

In contrast, building this documentation site is worse noting! It helps devs to find useful infos. Thats good and honable work. But the 100 score shows some missing knowledge in many areas of web dev. 

If you have any further questions, please feel free to ask!",0.0
g4jc0j4,ioqyqo,"look man, you're projecting a lot more than I ever intended with this.  


I'm just squashing the claim that ember can't do modern things (perpetuated by the react hype train).",1.0
g4jefqt,ioqyqo,"Hi and thanks for your clarification. Unfortunately, what you think you are ""squashing"", your are not communicating it well.

As you might have guessed from my comments, I happily fill up the projection area. 

BUT its not that I'm ""projecting more"", its actually the other way around: You open the projection area! But you seem to be unaware of that facts (until you will get annoyed by my comments ;-).

As for the post from yesterday (the one with OOP and DI) your are transmitting a confidence in your statements that is upsetting everyone with a little knowledge.

I assume you are new (3 years in?) to web development and I strongly recommend to deep dive MUCH further into topics. It took me several years until I understood that many ""believes"" in the web dev world are not necessarily correct (like OOP is the solution to everything).

The reason for my ""stubborn"" disagreement is simply the fact that ""false"" / ""unclear"" / ""missing infos"" will mostly lead to wrong decisions at work. And this can lead to HELL. This reddit is all about information and support for devs to find the ""true"" dev knowledge.",1.0
g4jhh3s,ioqyqo,"Just for clarification about ""projecting a lot more than I ever intended with this"":

When your write:

""Ember documentation site scores 100 in lighthouse""

I understand the following:

""Ember"" =&gt; You are referring to ember js, the known framework

""Ember documentation site"" =&gt; sounds kind of ""official documentation"", therefore presumably done by the ember devs themselves. 

""scores 100 in lighthouse"" =&gt; For a normal dev, that's the Google Page Speed Insights Website, which uses Lighthouse, (or the newer [web.dev](https://web.dev) website).

So together, I read that Ember is able to score 100 in Google Page Speed with a normale (including pictures / sliders / many nice HTML stuff) website.

Upon further examination:

\- A synthetic LightHouse Test is used (does not reflect many real life aspects of a website) =&gt; therefore very useless to estimate the usage of ember itself.

\- The website is only text =&gt; therefore is almost not referable to any website out there (because websites use images, like 99% of them ?)

So in conclusion of what I understand after a little examination, you are hyping a project by deception =&gt; that's not useful for any dev.

Instead, the REAL work, like putting together a resource for ember devs is totally neglected and overshadowed by the bold ""100  scoring"".",2.0
g4jgxlv,ioqyqo,"What's funny is I agree with everything you've been saying. But you just keep assuming I don't know anything and keep talking. 

The DI post the other day was interesting, and I did learn some techniques for slightly different approaches to the problem, as well as totally now approaches unique to FP.  

Not talking about you, but in that DI post, it's clear, this sub is filled with immature who don't know how to balance tech decisions. There are a few who 'get it's, but not the loud ones.",1.0
g4jmywp,ioqyqo,"&gt;But you just keep assuming I don't know anything and keep talking.

Well ... like I wrote, it seems that you are unaware of what you exactly communicate. Don't be mad on me. It might help if you ask someone you care and respect to shine light on your way you communicate. Actually I knew that you would feel ""misunderstood"" and I have read several of your posts here on reddit and I'm very confident that you have many insights, but many of your insights might lack some deeper knowledge / connection / understanding.

For Example the LightHouse vs PageSpeed thing discussed here. 

The pure fact that you have used the browsers lighthouse instead of the ""real"" Lighthouse (aka PageSpeed) shows for me that you have the insight of using a LightHouse Test (and probably are able to interpret the hints within theses testings), but you seem to lack the understanding of why the Chrome LightHouse is not a good measurement to bolster any claims (like the 100 score).

SO, IF you fully understood the difference, you would have chosen PageSpeed Test and not the LightHouse Test.

AND IF you understood the difference and choose the LightHouse test deliberately, you are deceiving users.

So, yes, I assume (and actually know!) you knowledge is spotty and I'm trying to point it out so that you can improve.

Sorry to be so blatantly sincere. If it helps, I also have many knowledge gaps, but for most of them I'm aware of. This keeps me from getting into pointless discussions and helps me to specifically improve my knowledge.",1.0
g4kuskx,ioqyqo,"Ref/source: https://twitter.com/josemarluedke/status/1303020371021447168?s=20



It's not my Twitter account. I didn't run the test. My Twitter account is @nullvoxpopuli.

For my own stuff I do use page speed insights. Also the bonus is that it's linkable.
https://developers.google.com/speed/pagespeed/insights/?url=https%3A%2F%2Femberclear.io%2F&amp;tab=desktop


Tl;dr: all that's going on here is a lazy reddit titling",1.0
g4ff573,ioqyqo,Announcement with lighthouse screenshot: https://twitter.com/josemarluedke/status/1303020371021447168?s=20,1.0
g4g5462,ioqpay,"Kinda wanted to give it a read but, medium",3.0
g4g884f,ioqpay,"Same here, buddy.",3.0
g4fcm8r,ioqg5c,"This is meant to be a discussion for people like me who are experienced with testing but didn't follow the latest trends and tools in the past 2-3 years.  I'm curious whether there are new trends/tools/techniques or anything that I should learn before coding tests in the next project. For example, I just came through StoryBook which looks really neat",1.0
g4gkkrj,ioopfe,"A nice improvement to build on this would be adding the concept of [a dead letter queue](https://en.wikipedia.org/wiki/Dead_letter_queue) for tasks that couldn't be executed successfully. 

If I'm reading it right the scheduler will delete unsupported task types without feedback - would be nice to log it for a debugging aid.

In a similar spirit, if a single tasks fails no future tasks will run (obviously won't happen in the sample repo but still!). This may be desirable depending on how you're using the tasks but it can be a ""fun"" surprise otherwise.

I definitely am a fan of application architectures that don't have a lot of moving pieces or external dependencies (makes it easier to think about, debug, and deploy!) but IMO task queues are an area where there's enough complexity it's worth picking some option that has the properties you need (e.g. retry semantics, prioritization, batching, periodic work, etc). Personally for code intended for production I'd usually just use whatever queue solution my cloud provider offered (e.g. SQS) or Kubernetes jobs (if it fits).",3.0
g4glzk0,ioopfe,"I totally agree on it, will try to improve it for sure...
my view for this blog is to make concept implementation as simple as possible for beginners to start with.

Thanks for sharing your suggestion :)",2.0
g4ebw4i,iok5nm,"Project Page (?): https://github.com/swc-project/blog

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g4du8ov,ioh3oj,"I think it really depends on what kind of application your team is trying to build. I don't think there really is a one size fits all by any means.

One example I can think of where redux or any local state would be better is any application where you don't want the server to have all the information until the user has fully completed their desired action. Think a complex form.  


As for the articles, don't take them at face value. I find a lot of them to almost be programming click-bait. There may be some truths in there but a lot of times the author(s) fail to provide any quantitative evidence to back up their claims.",3.0
g4dur1p,ioh3oj,"Why would you even use redux in your example, why not just use simple react state? I guess i maybe just dont understand it well enough to recognize any use case for it especially given its seemingly unreasonable overhead. I also still dont see a reason for the snobbery towards mongo pub/sub that ive seen",0.0
g4dwca7,ioh3oj,"If you can get the job done with just react state I'm all for using the most simple solution. At the end of the day though, redux in the context of \`react-redux\` is just an abstraction layer on top of the existing state management in react. Even in the \`redux\` docs they say:

&gt;I would like to amend this: don't use Redux until you have problems with vanilla React.

As with any abstraction, if you have the problems it's trying to solve namely (in the case of redux):

&gt;In general, use Redux when you have reasonable amounts of data changing over time, you need a single source of truth, and you find that approaches like keeping everything in a top-level React component's state are no longer sufficient.

then you should use it, otherwise look at other solutions that don't have the tradeoffs that it does.

Also another reason why you might use redux, is that you have no choice, the team decided, \`hey I know redux, lets use it\` without thinking about the cost of choosing it as their abstraction.",1.0
g4dx8xp,ioh3oj,"&gt; redux in the context of `react-redux` is just an abstraction layer on top of the existing state management in react

This is not a very accurate description.

Redux is a UI-agnostic state management library that, by itself, has nothing to do with React.  Sure, it's commonly used with React, but it does not ""abstract"" anything in React itself.",3.0
g4edv8o,ioh3oj,"If you look at the thread though even now its been downvote bombed with no explanation whatsoever, theres some bias against pubsub and for redux that no one seems willing to explain",1.0
g4dx3la,ioh3oj,"Maybe it's just that I've never worked with Mongo pubsub before, but this seems like a very ""oranges and apples"" question to me.

Is that pubsub thing equivalent to a websocket in that it's just a data transport layer, or is there actually some kind of a client-side data management aspect to it that you'd use in your React components?

Also, fwiw, I can confirm that Redux is _not_ dead, and that the chatter on social media does not reflect how Redux continues to be used.

For more details, see my post [Redux - Not Dead Yet!](https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/).  Also, I just published a brand-new ""Redux Essentials"" core docs tutorial, which teaches ""how to use Redux, the right way"", using our latest recommended tools and practices. I'd encourage you to check it out:

https://redux.js.org/tutorials/essentials/part-1-overview-concepts",2.0
g4e0g7b,ioh3oj,"There are many ways to use mongo pubsub, for me I expose mongo actions with collections on The backend with an api. Client side is managed by standard react state, prepopulated with dB data or called as needed, and stored just the same. It requires a slim fraction of the code redux does, and allows access To my dB quickly whenever needed as well as complex data tasks completed with simple functions stored on the server",0.0
g5y73md,ioh3oj,"I am doing dev using the same model as you do (instead of mongo I use couchdb) and I have the same experience pretty much. I have tried using my app with react context, redux, pubsub and also a very simple custom global event system eg: [https://www.pluralsight.com/guides/how-to-communicate-between-independent-components-in-reactjs](https://www.pluralsight.com/guides/how-to-communicate-between-independent-components-in-reactjs)

So far from the apps I created and I used pubsub, I saw no benefit if I used instead the redux boilerplate (kinda I expected that as the complexity of my apps is limited to a medium level ecommerce store). But I also don't see a benefit from the react built-in context. If I had to choose between the 3 I would put my choices for the type of work i do like this.

1. pubsub
2. redux
3. last and worst is the react context

Feel free to compare it both in terms of complexity and clarity, what is easier to understand and work with.

[https://www.taniarascia.com/using-context-api-in-react/](https://www.taniarascia.com/using-context-api-in-react/)

CreateContext, provider, consumer, data setup, wrapping and other props complexity in-between trying to pass a simple json from one component to another, wtf? So in industry where options are limited because of crappy management, I would use redux or mobx over the built-in react context anytime for component comms even on a very simple app. Because I can't convince them to go with pubsub.

So when they seem really snobby towards the pubsub concept it's because they don't know pubsub not even the basics and they have only seen redux and the react context. Same is happening in this post because as you see there are no references to pubsub at all. Comments are abstract and general.

I had the exact same problem in the early days of webpack but later they picked it up. You can't convince them when something isn't too trendy, that's my experience.",1.0
g4dzblp,iog2iy,"tl;dr Use pure functions / pure methods.

Before (bad):

    class Point {
      add(point) {
        this.x += point.x;
        this.y += point.y;
        return this;
      }
    }

After (good):

    class Point {
      add(point) {
        return new Point(this.x + point.x, this.y + point.y);
      }
    }

üëç",10.0
g4dvkvt,iog2iy,I am more impressed by the site design and load speed than anything.  But the tips are cool too.,3.0
g4ex52v,iog2iy,"The idea is good but for example how would handle any code in a front end framework? I too try to write functions which are not tightly coupled with the instance of the framework to make them more testable but mutating state in a class/instance is not obligatorily bad after all you have to do it in one way or another to actually get something to work.
&amp;nbsp;

I guess you could always just return a new state after you mutate it but this will have caveats as well.
&amp;nbsp;

Would it really he such a great idea to make all instance methods in Vue for example, return a new resource and assign the state to it instead of just mutating it directly. And would it be ok even in simple cases where all you do is remove some item from an array?",1.0
g4f40d0,iog2iy,What I actually meant was that if you were to do this.point = this.point.add(otherPoint) it would work better with the reactivity systems because assigning a new instance will trigger the reactivity for sure. It's similar to how in react when you modify an array you have to usually assign a whole new array instance that contains the modification.,1.0
g4do2hp,iog2iy,Its just insanly bad code in your example.,-5.0
g4dpn58,iog2iy,what do you mean and which example.,8.0
g4ckz17,ioax2m,[Small explanation](https://twitter.com/0xca0a/status/1302969147211558912) and [demo](https://r3flex.netlify.app/) ([CodeSandBox](https://codesandbox.io/s/github/react-spring/react-three-flex/tree/master/examples/?file=/src/App.js)),10.0
g4e06vj,ioax2m,"Warning to those that experience motion sickness, the text wobbles as you scroll in the demo and it instantly made me feel ill.",17.0
g4dtfc5,ioax2m,"Woah this is awesome! I think it will definitely be super useful to us web devs üíØüëç

Every layout should be Flexbox by default üòÇ",11.0
g4dzg00,ioax2m,...except when CSS grid is a better choice.,11.0
g4e6z4j,ioax2m,"Ohh yeah I love CSS grid! I should clarify, I meant a _default_ of Flexbox with an optional CSS grid. 
For us cool kids üòéüî•üî•",7.0
g4f0o11,ioax2m,html { display: flex; },5.0
g4d4v0k,ioax2m,"This is amazing, thanks for sharing!",3.0
g4fnvpr,ioax2m,Thanks to the [amazing developers](https://github.com/react-spring/react-three-flex/graphs/contributors) who actually built it :),3.0
g4d0ldg,io6z4j,"Looks awesome, but sadly it does not have some pretty critical features:

* only simple evaluation ordering (just -/+ after everything else)
* no unary operators (only binary operators)",1.0
g5yf6q1,io6z4j,"&gt;A simple numeric expression evaluator

It is \`**A simple numeric expression evaluator**\` :) You can take it and add more operators",1.0
g4e78b2,io6z4j,"&gt;Taking into account parenhesis

Did you mean parentheses?",1.0
g4blxie,io5tu8,"Author of the post here. 

After looking for newsletters that are just simple, and has high quality and diverse curation I couldn't find much. (Except for TinyReact, a high-quality newsletter about React) In the end, I decided to curate one myself.

So, I keep an eye out for interesting articles, libraries and updates from the JavaScript world. If I find them worthy of sharing I send them to the subscribers every week. No spam, short and sweet.

Thanks for all the love!",14.0
g4cvqya,io5tu8,"Any hope you could also provide this as an RSS feed? Or rest API I can query for the last 5 letters? I don't read news letters much, but it would be neat to have in my dashboard and smart mirror. 


If no to all of the above, could I get permission to scrape your site twice a day?",7.0
g4d00u9,io5tu8,"Sure, you can subscribe via RSS using this link https://buttondown.email/tinyjs/rss 

The archive is hosted on buttondown.email, I'll be putting it on the site itself in sometime, and sure, the newsletter archive is going to be open to all, feel free to scrape it.",3.0
g4e3176,io5tu8,Any way to submit stories?,3.0
g4ervgy,io5tu8,"No plans for it yet. As of now I do all the curation. Sooner or later, when I have a large enough audience, I can open up a submit option.",1.0
g4bw26i,io52nj,"While that works it makes it harder to explicitly catch issues when the context is actually missing. What I usually do is type it `T | undefined` and expose a custom hook that wraps `useContext`, checks for value and explicitly throws if it is missing.",31.0
g4dc8tc,io52nj,This is the same approach I use,2.0
g4cb964,io52nj,"Yes it works that way too, but I don‚Äôt like the idea of passing an undefined value as default value when creating context personally, plus you have to check for undefined every time you use the useContext",-7.0
g4cdu1m,io52nj,Well you are literally doing that in your example just tricking the compiler into thinking it is defined. Plus if you are throwing on undefined you won't have to check again anywhere else.,12.0
g4ccgod,io52nj,This seems like you‚Äôre trying to use a TS solution to cover up a badly designed context in the first place. Just add default context. I don‚Äôt know why you‚Äôd _ever_ avoid doing so in the first place.,11.0
g4cvoax,io52nj,"You not always know what is a default value, read the Kent c Dodd article linked in the first paragraph",-3.0
g4cyz6w,io52nj,"I‚Äôve read it. It says something that‚Äôs either taken out of context or is outright dumb. If you have a counter component that starts at 0 and counts up, and relies on your context, you absolutely do want a default value, and that value can be easily chosen.

There‚Äôs a reason context as a concept includes the default structure.

You can handily type your default structure as well, even if you don‚Äôt want to provide a default value.

Doing what you‚Äôre suggesting is a mistake several developers on our product have made, and it makes things _very_ difficult for other developers.

We need to know the shape of your context, especially if it‚Äôs an API or a more complex state.

Don‚Äôt overthink things. Don‚Äôt try to be clever where you‚Äôll end up foolish. Do the simple and effective thing.",2.0
g4d66dv,io52nj,"I find difficult you quite understood the use cases of Context API. 

And I think you misunderstood the purpose of the article by Kent C. Dodds, which is not telling you to use a context/useReducer pattern for a counter, but he is telling you how the patterns works.

There are A LOT of use cases in which Context doesn't have a default value, I can provide you some articles on the subject if you need some reference.

Obviously in my article I could have a default value since I simulate a boolean switch, but that was not the purpose of the article which was to have a reference solution or better understanding of how typescript together with context api works.",1.0
g4daqom,io52nj,"The trouble here is that you read a thing without understanding it.

There is nothing wrong with providing sane defaults for any of your values. If you feel you need to fail fast for your contexts, then fine. Just make sure you properly adorn your context/hook so that what is returned has a useable and hintable shape.

In your example you dump the context outside of app, which defeats what Dodd‚Äôs was talking about anyway.

I think that the only thing learned here is that it‚Äôs common for people to read blogs about new things in web tech and suddenly feel like they need to do over-complicated, ‚Äúclever‚Äù things that don‚Äôt need to be done.",1.0
g4dl19j,io52nj,"You are still commenting without giving any argument, make examples, argument, reference and say what you would have done if you want to have a discussion. Otherwise don't be the ""I know it all"" stack-overflow guy.",-3.0
g4dujf7,io52nj,"I explicitly explained exactly what I meant and made my argument.

The subject of discussion is something **you** don‚Äôt understand, so the burden of reference (proof) is on you.

If you don‚Äôt understand what‚Äôs being said here well enough to have a discussion then just leave it at that.",1.0
g4e0nt6,io52nj,"Still no arguments, thanks but !mute",-1.0
g4eav4h,io52nj,Pretending there isn‚Äôt one is childish. Is that what your goal was here? To look childish?,1.0
g4f3su2,io52nj,"Look, this is really the las time I answer you. Saying ‚Äúit is not like that‚Äù is not an argument, if you want to be constructive you have to provide real arguments in a discussion: documentation, reference, code snippets, articles.This is not really bringing anything to the discussion, lookin to your other comments I see you often argue on reddit for no reason so thanks but this is the last time I answer you.",0.0
_,io52nj,,
g4cxl15,io52nj,"I think it is much nicer to

    // This can also be undefined instead of null, even a string whatever floats your boat
    const someContext = createContext&lt;SomeContext | null&gt;(null);
    
    const useSomeContext = () =&gt; {
      const data = useContext(someContext);
      // This can also be undefined instead of null, even a string whatever floats your boat - I just use null
      if (data == null) {
        throw new Error('This hook should be used inside SomeAppComponent"");
      }
      return data;
    }

Shorter code and I also get a nice error message when I forget to put this inside the correct provider (which happens sometimes, for example while testing)

I dislike using the non-null-assertion operator most of the time, sometimes you have to but I think it is often an indicator that something is wrong in the typing. If that is okay then why not just do something crazy like this.

    const someContext = createContext&lt;SomeContext | null&gt;(null);
    
    const useSomeContext = () =&gt; useContext(someContext) as unknown as SomeContext;",3.0
g4d6lzi,io52nj,Thank you for sharing! That is something to think about for sure,1.0
g4e6r45,io52nj,Ooh this is nice.,0.0
g4bhqif,io52nj,Hey guys I just wanted to share with you an article on how to correctly type context using react-hooks since I didn't found a lot of resources on this topic when I was looking for it.,-3.0
g4bw7mt,io52nj,"I would say it is definetly not the ""correct"" approach (not sure there is one) but just one way to deal with this issue.",14.0
g4blo2f,io52nj,Very nice trick with the generic context !!,-2.0
g4blqjm,io52nj,Thanks,1.0
g4bm8mw,io4re3,"I'm sure there are websites that allow you to find businesses to work for free or minimum wage, even though I don't know any. My advice is also first build a github with a bunch of finished projects, and at the same time take a look at freelancing websites like Upwork where you take jobs that count as experience, starting small",6.0
g4c6v9z,io4re3,"I always tell my students the same two things: non-profits and open source projects.  Both are ""work proxies"", in the sense that they both show you can ""do the job"" without (literally) doing the job.

**Non-Profits:** No matter where you live, there almost certainly is at least one (if not lots) of charities in your area that could desperately use your help.  They may not even need *webpage* help specifically: they might just need someone who can help hook up their printer for them :)

But when you put ""Provided technical assistance to Such and Such Charity"" on your resume, what an employer will see is was that you were able to help a real-world (charitable) organization using your technical expertise ... and that you're the kind of person who helps out charities in their free time.

**Open Source Projects**: When you go to the issues section of big projects, like Express or React, they often have tickets labeled as being good for new contributors, and these tickets make a perfect place to start.  At the same time, while smaller projects may not have their issues labeled that way for newcomers, every (at least semi-popular) OSS project has a ton of issues they could use help with also: you just need to dig on their issues page to find one you can tackle.

Open-source projects are just Javascript/CSS code, the same kind you already know how to work with, so it's simply a matter of: learning their codebase, cloning their repo, fixing a problem in your clone, and then creating a PR (and communicating with the team to fix any issues in that PR and get it accepted).

Again, even if all you do is fix a typo in someone's documentation, the fact that you were able to work with a real-world project to fix something acts as a ""work proxy"" ... while at the same time, again, it looks really great that you took your time to help out some OSS.",3.0
g4brl6q,io4re3,"Message a couple local non profits and take a look at their websites and make note of what you could improve. Email them and offer your services for free. 

That‚Äôs how I padded out my first year of experience.",3.0
g4bphrr,io4re3,"TecJon advice is sound. You could also reach out to small businesses in your area and offer them to do a small app/site for free just to allow you to learn how to solve a real problem for them (even if they might not put up a website with it etc). 
If you put it in a way where you are only looking for a chance to better your skills, I am sure you might find one that will help you.",2.0
g4dalix,io4504,This is amaaaazing,4.0
g4bd6jf,io4504,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",3.0
g4affrg,invg56,"But does this actually work as a captcha? Wouldn‚Äôt it be trivial to have this a video stored and fed into chrome as a camera feed to bypass the captcha?
Fun project either way :)",40.0
g4aq0nc,invg56,One solution could be to ask you to complete a few random exercises in order ü§î,20.0
g4awo4m,invg56,"I mean, only if that order was somehow difficult for the bot to read. Some sort of mutated text that computer vision can't parse.

Hang on.",24.0
g4banac,invg56,"i had the idea to generate a random number of squats from 3-10, store it as a session or cookie value and then validate it after submitting the form, but finally I discard it...

thanks for your comment!",6.0
g4bagth,invg56,"a few weeks ago i saw this javascript library ""face-api.js"" and this is the first thing that cames to my evil mind.

another implementation of the same idea is using the Sensor APIs (gyroscope+accelerometer), maybe it works for mobile devices but it's really weird to do squats grabbing the laptop haha.

thanks for your commment!",5.0
g4ab2li,invg56,"Thanks. I hate it.

But for real, that's a cool use case for AI.  I doubt anyone will use it seriously, but I could see adding to my own personal projects, just for the sporadic exercise.",15.0
g4ba6w1,invg56,"someone told me that it's a good idea for unsubscribe forms (evil laught)

and take a look at this [https://www.forbes.com/sites/andrewbender/2013/11/14/moscow-subway-station-lets-passengers-pay-fare-in-squats/](https://www.forbes.com/sites/andrewbender/2013/11/14/moscow-subway-station-lets-passengers-pay-fare-in-squats/)",5.0
g4bafe2,invg56,"That's freaking awesome. Glad to see communities promoting better health in day-to-day activities.

All that's left is implementing a pose estimator, and programming in different workouts.  Imagine having to do to 20 burpees everytime you vist X number of reddit threads. I would get swole in no time üòÖ",1.0
g4b7fz3,invg56,"https://www.forbes.com/sites/andrewbender/2013/11/14/moscow-subway-station-lets-passengers-pay-fare-in-squats/#782f218ab0d8

Reminds me of this for some reason.",6.0
g4ba0tt,invg56,haha thats really cool ! thanks for your comment :),3.0
g4b9421,invg56,That's really cool! Now implement some [Verification cans](https://external-preview.redd.it/qRggs-k588dZAM2uBK3FH4xOih9LEaq0FCcZdkYm2uw.png?auto=webp&amp;s=437dc136ba2ee6da358527bb368707ca2b375447),5.0
g4batxk,invg56,hahaha thats a good one! thanks for your comment :),1.0
g4bb51n,invg56,This is a good contender for /r/badUIbattles!,3.0
g4bbb7n,invg56,"thanks for your comment, i will try to submit there too :)",1.0
g4bhd8n,invg56,"TL;DR

[https://vivirenremoto.github.io/squat\_captcha/sample-form.html](https://vivirenremoto.github.io/squat_captcha/sample-form.html) 

it works with firefox/chrome, a webcam is required for face recognition to validate the squats",2.0
g4ayf23,invg56,Me being to unsporty to do this: guess i'm a robot now,1.0
g4baqo7,invg56,sorry about that! thanks for your comment :),1.0
g4b5dk5,invg56,You don't know how much we hate captcha! Right!!!??,1.0
g4basct,invg56,yes and i like it! thanks for your comment :),1.0
g4bkjfw,invg56,Reminds me of when Kinect was all the rage and I was waiting for the day where I‚Äôd have to jump on my couch and yell ‚Äúyey Pizza Hut‚Äù to skip a YouTube ad,1.0
g4btt7d,invg56,I don't have a comment.,1.0
g4buwec,invg56,I just moved my head 10 times and succeeded LOL. Interesting Tho,1.0
g4c1bjx,invg56,https://giphy.com/gifs/lUnbg5saTIVjO,1.0
g4c1wnj,invg56,congrats! you are not a robot lol,1.0
g48uoyw,inn4nc,You have a deployed version?,4.0
g499pcd,inn4nc,"Not yet, but you can grab pre-build server from tags if you don't want build it yourself

Edit: Deployed version - https://evil-reddit.web.app/r/unixporn",1.0
g4a391u,inn4nc,"This is so amazing, i'll start using this from today, congrats :D",1.0
g4buvum,inn4nc,"Thank you, glad that someone found my project useful.",1.0
g4a3djh,inn4nc,"Nice work, dude.  Great performance, and looks fab.",1.0
g48fb8n,inmnbm,"I wanted to share this technique with you, because I think it is cool and shows how crazy awesome javascript is. 

[https://github.com/anvaka/ngraph.forcelayout](https://github.com/anvaka/ngraph.forcelayout) \- is the source code. I've been trying to optimize its performance for a while now, especially when it comes to layout in higher dimensions (e.g. in 3D, 4D).

The problem was that efficient graph layout needs special data structures, like QuadTree to perform fast approximation of long distance forces. 

Normally Vector based math is  used, and I tried it too. You write something like `massVector.addScaled(otherVector, scaler)`, and implement the vector algebra as methods of a class.

However performance of simulation was always 3x-5x slower compared to manually coding simulation for each dimension (which I tried too, but that required duplicating algorithms for higher dimensions).

Until recently I was left with a compromise: Duplicate code to be fast, or use vectors and be slow. And then it hit me. JavaScript can generate functions on the fly, with [Function constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function). What if I approach to developing algorithm as if it was code too?

And it worked! You can find very basic generating structure in the [codeGenerators](https://github.com/anvaka/ngraph.forcelayout/tree/master/lib/codeGenerators) folder. I wrote a [20 lines of helper code](https://github.com/anvaka/ngraph.forcelayout/blob/master/lib/codeGenerators/createPatternBuilder.js) that performs string replacement based on required number of dimensions:

```
// this function:
pattern('mass.{var} = otherVector.{var} * scaler')
// returns a string:
mass.x = otherVector.x * scaler;
mass.y = otherVector.y * scaler;
mass.z = otherVector.z * scaler;
```

With this, every data structure is now generated on the fly when library starts layout for the first time. I also do tiny bits of caching, so that functions for a given dimensions are reused, and not recreated ever time.

Results?

The library is as fast as the previous iteration, written by hand. And it beats vector-based math by [3x - 5x](https://github.com/anvaka/ngraph.forcelayout.nd/blob/master/perf/perf.txt#L20-L25) factor, and there is no code duplication!

The downside is that my unit tests think that the code coverage is higher than it actually is. Since I'm testing generated functions, and not the generator itself. I'm also loosing some tooling support (like ESLint) since they see code as strings. But the benefit of not duplicating code across multiple dimensions was still a big plus for me.

I hope you like this approach and will find it useful in your future projects. Also if you need a graph layout library, you know where to find it: https://github.com/anvaka/ngraph.forcelayout",9.0
g48vvhi,inmnbm,These animations look weirdly ... alive.  Some of them disturbingly so.  Bravo :),3.0
g49bich,inmnbm,Thank you ‚ò∫Ô∏è,2.0
g48d3l7,inmnbm,"Project Page (?): https://github.com/anvaka/ngraph.forcelayout

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g4bg3yo,inmnbm,Pretty neat! Did you consider CSP (content security policy) that block dynamic code execution?,1.0
g4e82s2,inmnbm,"Oh, good point. I didn't.

 Should be easy to workaround - going to make a build script to precompile algorithms for a given dimension, and then folks can just require them directly

Thank you for bringing this up!",1.0
g48zhvn,iniuit,"Cool! This is exactly what I built 20 years ago using Java, which landed me my first programming job.",16.0
g490ags,iniuit,"That's nice to hear. üòä
Did you use the Swing and AWT package?",3.0
g49d0bv,iniuit,"I'm actually not sure if these existed or not back then. I built a Java applet. Gosh, glad that technology faded away quickly! Not that it matters for me, I abandoned Java 7 years ago and work almost exclusively with Javascript nowadays",8.0
g49bj57,iniuit,Eye twitch,1.0
g48hjzw,iniuit,And when you're ready.... play.battlesnake.com,6.0
g47vkr7,iniuit,Snek say no more,4.0
g47tz2u,iniuit,Very nice,5.0
g4acuon,iniuit,So I took over a project with a couple other devs for a huge repo at a multi billion dollar company. It was a side product with a couple hundred thousand users. First day I found that on the home page it had a listener for the Konami code which would open up snake to be played. That day I realized the mess I had inherited lol,2.0
g4b65ox,iniuit,Nice snakepaul,2.0
g48eeom,iniuit,snek,2.0
g48cnjr,iniuit,snek,1.0
g49zfvk,iniuit,RemindMe! 16 hours,1.0
g4a08po,iniuit,"I will be messaging you in 16 hours on [**2020-09-07 14:48:17 UTC**](http://www.wolframalpha.com/input/?i=2020-09-07%2014:48:17%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/iniuit/learn_the_basics_of_vanilla_js_by_building_a/g49zfvk/?context=3)

[**1 OTHERS CLICKED THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Finiuit%2Flearn_the_basics_of_vanilla_js_by_building_a%2Fg49zfvk%2F%5D%0A%0ARemindMe%21%202020-09-07%2014%3A48%3A17%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20iniuit)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=RemindMeBot%20Feedback)|
|-|-|-|-|",1.0
g493j46,iniuit,"Global variables, for loops, vars and lets, classes... I don't know what to think about it. It might be fine for someone who's just starting but it still teaches some bad practices. It it written nicely however, I like the fact that you have added finished code.",-7.0
g4941u9,iniuit,"It was written especially keeping the difficulty in check, so beginners could benefit from it. Thanks for your feedback, though.",4.0
g4abyji,iniuit,"Could you elaborate on what you mean by this? Are you saying all those things are bad practice? Obviously global variables are a no go, and var is no longer standard practice, but what about the others?",4.0
g47kp8m,indij6,"What an amazing project. I don't hear a lot of talk about NEAT or neuroevolution, but I'm confident it will end up being the main focus of AI research within the next ten years.

Thank you very much for sharing this, only 350 lines too. The source is here if anyone wants it: https://github.com/N8python/NEAT/blob/master/neat.js",2.0
g480465,indij6,"Thank you so much! I saw a few articles about NEAT itself, but not many about its implementation - so I decided to write my own. 

One question - why do you think NEAT/neuroevolution will become the main focus of AI research? Currently, backpropagation-based reinforcement learning (like Q Learning) has  received a lot more attention, and yielded very impressive results.",2.0
g49z1kz,indij6,"&gt;Currently, backpropagation-based reinforcement learning (like Q Learning) has received a lot more attention, and yielded very impressive results.

Definitely. That's why, between us, if I had to pick the perfect JS project, it would be this one - NEAT and neuroevolution have always been a little neglected, and most of the attention *is* on human-designed models and network components, usually produced by academics. It's created a sort of ecosystem where we're building abstract logical circuit boards that approximate optimal solutions pretty well - think RNNs vs LSTMs vs Transformers and so on. These are are basically network templates designed iteratively by humans, and the results *have* been impressive, frankly, especially when we look at stuff like GPT-3.

The thing about neuroevolution is that, *theoretically*, you can reach the same solutions, and get the same output models, as human-designed networks by simply evolving them, and there has been [research showing this is possible](https://arxiv.org/pdf/1712.06567.pdf) (and it is specifically the neuroevolution of deep networks, as covered in this paper, that I expect to garner attention).

Because the process is entirely unsupervised, even the limitations of human intelligence do not constrain the efficiency of the output models. Your only bottleneck becomes raw compute, and I get the impression that evolving a genomic population is something that can be well-serialized on a GPU, but I could be very wrong. In any case I expect to see a lot more development in this area over the next decade, and I expect the benefits to pronounce themselves very quickly once the only variable is how much power you're throwing at the evolution and training stages.

Some new models based on NEAT, like [AGENT](https://arxiv.org/pdf/1903.07107.pdf), seem highly promising. I am also wondering if the genomic evolutionary model cannot be adapted for QUBO, to realize further efficiency gains in the evolutionary pre-training stage.",1.0
g4dkv3d,indij6,"I looked at both the papers you sent me - the results are very interesting.

The compression algorithm used for the four million parameter GA blew me away with its simplicity. 

However, the compression algorithm presented doesn't appear to be scalable to topological evolution - as evolution of topology requires the nodes and connections  of each neural net to be stored somewhere - rendering the seed-based compression useless.

Additionally, training a topologically evolving network on the scale of GPT-3 seems to be far outside the range of current computing power (it took millions of dollars to train one GPT-3) - perhaps Moore's law/optimizations/compression/parallelization will make this feasible.

As of now (based off the papers you sent me), it looks like neuroevolution is a strong competitor in RL, but not in supervised learning where networks with billions of parameters are sometimes used. 

Perhaps topological evolution could be used on small scale problem and innovate new network architectures/solutions. Then, the most promising of these solutions could be scaled up and applied to much larger problems. What do you think?",2.0
g46bcpd,inanzf,"Here is **trace-router :**

üß¨ Framework agnostic

‚öõÔ∏è Hooks for React

üöÄ Not tied to UI

ü•á State-oriented router

üõ∞ Routing in a separate layer

‚õ∫Ô∏è You can describe routes in one place.

‚úàÔ∏è Routes are objects

üõ§ Links straight to the routes

üì¶ Relative navigation out of the box

üîó Compiling a route to its URL

üõ∏ Multiple routers

‚õì You can bind child router path to parent router param

üëç Feature-oriented routing

üíÜüèª Flexible path matching

üéó Merge routes to get a computed route

‚ö°Ô∏è Router keeps track of navigation and updates the state

‚òÄÔ∏è View layer just subscribes to route visibility

üí´ Manual navigation, redirects

üåù ""Not found"" processing

‚òÑÔ∏è Effector stores/events under the hood

üî• Small size",-5.0
g47weay,inanzf,"chill out with the emojis god damn

tf does a plane have to do with ""Routes are objects""",2.0
g497z2y,inanzf,üòÇemojis are almost random... why are you so angry?,2.0
g4d0nlb,inanzf,"I'm not angry, wasn't being serious there

Really though, keep up the great work, your project looks really good",1.0
g4689eg,in72hu,You mean football queries?,4.0
g46d05b,in72hu,You mean futebol queries?,3.0
g475c87,in72hu,Yes üòÖ,1.0
g475cxw,in72hu,Yup,1.0
g46h4up,in4z6d,"As the original author of this emulator, I have to warn you that there's a reason I started over an rewrote it in C. I intend to port that one to wasm (I actually have a branch in progress--and it's like twice as fast). The renderer is written extremely poorly and needs to be redesigned from scratch, for example. While many games work fine, the general accuracy and compatibility is actually pretty poor. For example, try playing MMBN1 and just run around in Lan's room at the beginning. You'll randomly pick up the PET without interacting with it. I never figured out why.",59.0
g46m75i,in4z6d,"Right, I emailed you about this as well. Once your new project is ready I think that will be awesome to have available and get the spotlight. I just wanted to get some attention around a pure javascript emulator.

As you said compatibly isn't perfect, but is acceptable for many games: https://github.com/andychase/gbajs2/wiki/Compatibility-List",14.0
g47owfo,in4z6d,"&gt; Advance Wars 2: no known issues

HECK. YES.",2.0
g47jcvj,in4z6d,"Have you seen this? https://github.com/torch2424/wasmBoy

It's wasm, compiled from a subset of typescript called assemblyscript",5.0
g47af82,in4z6d,Go for it. Can I have the link to your WASM build? Oh and by WASM you mean Blazor WASM?,0.0
g47fis4,in4z6d,"WebAssembly, compiled by emscripten.",6.0
g45i1ok,in4z6d,"Wow I'm impressed we can run something like this entirely in the browser. Not sure I can help, but I'm happy to see it.",22.0
g46l2jy,in4z6d,There are even full x86 emulators running in browsers like PCJS (if I'm not mistaken about the name).,2.0
g46o5pg,in4z6d,Someone even wrote a JVM that runs in the browser LOL,3.0
g4575t3,in4z6d,"There is a great vanilla javascript gba emulator that has been around for some time but still works well!

The original author has moved on to new things but I think it would be great time to pick up the project so I forked the project and I'm looking for contributors.

https://github.com/andychase/gbajs2

The ""hard stuff"" is done with this project, the kinds of improvements could be a good mobile interface (the emulator works perfectly on my iPhone's web browser), remappable controls, things like that.

I managed to fix save states with it as well, so we just need to add that to the interface.

Any other ideas for improvements? Anyone interested in helping?

Mailing list here: https://groups.google.com/forum/#!forum/gbajs2",42.0
g45rwei,in4z6d,"If you're looking for help, it's a good idea to populate [your issues list][].

[your issues list]: &lt;https://github.com/andychase/gbajs2/issues&gt;",16.0
g46mx2b,in4z6d,"Thanks, I will do so",3.0
g45ncpq,in4z6d,"Mind if I try my hand at implementing the HTML5 Gamepad API?

[Edit: You on keybase?  I'd like to chat.]  
[Double-edit: it's there, it's just not remappable.  So I guess a remapping UI?]  
[Triple-edit: I made an issue for a bug I found and addressed it in a PR.  I'll create issues and wait on approval for larger asks.]",11.0
g46odwx,in4z6d,[deleted],7.0
g470owz,in4z6d,Do a barrel roll,4.0
g45iwea,in4z6d,Does it have maybe some performance issues? Or maybe if ran on low end phones more popular e.g. in India? Maybe that is a nice target. To make it available for more people with low end devices? Just thinking out loud.,11.0
g46ly8f,in4z6d,Performance could certainly be a huge help. Performance is acceptable already but I would bet there are big wins there if someone wanted to profile the emulator and find hotspots.,1.0
g45fep6,in4z6d,Looks interesting. I‚Äôll give it a look!,2.0
g45p4ku,in4z6d,Yeah I'll see what I can do.,1.0
g45wl1p,in4z6d,Is controller support possible on iOS?,1.0
g46nave,in4z6d,"Yes it is. The original author even wrote a bunch of code to support it, although I haven't tested it.

Look up ""html5 gamepad""",1.0
g46xoi2,in4z6d,"Interesting, so no need for the app store for emulsion on iOS. Intriguing!

Edit: iOS has had it since iOS 10! https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API",1.0
g46gti3,in4z6d,"I'm pretty down to help where I can, I'm looking for open source projects to contribute to for hacktoberfest 2020. Definitely will add this to the list. Feel free to DM me üòä",1.0
g46nlzb,in4z6d,Yes!! This has been at the back of my mind for a while. I‚Äôll try and jump in and help where I can @andy_____,1.0
g46wsx7,in4z6d,I‚Äôll give it a looksie! I‚Äôm a UI/UX Software Developer so give me a shout or DM if there is something specific in that realm you need!,1.0
g45rwmz,in4z6d,"This is extremely cool. I loaded up my backup copy of Minish Cap, a game I've never played, and so far (after about 15 minutes) it's an almost 100% awesome experience. There is one asset that only appears as a black square -- I can show you a screenshot if it's helpful. This is a project I could see myself contributing to, but I don't have the bandwidth right now -- and I don't have much understanding of emulation. But I'll keep checking out for it, and if I free up I could see myself lending a hand. Good luck and great work.",5.0
g45ggfj,in4z6d,I‚Äôve always wanted to contribute to a project... This might be when I give it a try.,5.0
g45qjtt,in4z6d,Can I join?,2.0
g46lpdn,in4z6d,I'm not a fan of the ES5 syntax. Would future commits have to conform to the older syntax or could we use modern Javascript?,2.0
g46mg8l,in4z6d,"Looks like someone just contributed a ES6 patch: 

https://github.com/andychase/gbajs2/pull/4

I haven't looked through it but I agree with you using modern javascript makes sense to me. The emulator doesn't run well in older browsers anyway.",3.0
g477m93,in4z6d,"GBA.js was written in 2012, before ES6 was a thing, so that's probably why it uses ES5 syntax :P",2.0
g46d7b5,in4z6d,[deleted],1.0
g46fcwv,in4z6d,Trust me that's not the easiest thing todo,2.0
g46e8va,in4z6d,What is it?,1.0
g46k1cq,in4z6d,Pure vanilla javascript game boy advance emulator!,2.0
g46kl34,in4z6d,"Oh man, that's cool. I didn't know you could create something like that with pure JavaScript. The roms are written in assembly though right? How do you interface with that code? Is there a JavaScript compiler for assembly?",3.0
g46n69o,in4z6d,"That's right! The binary assembly files are interpreted by javascript in real time, a virtual machine cpu keeps track of the state and graphics are drawn to a \&lt;canvas&gt; object",3.0
g478tub,in4z6d,"I would love to contribute. Any suggestions and prerequisites, please suggest..",1.0
g47fgqd,in4z6d,"I‚Äôd be down to help with the UI! Those side buttons while probably better for smartphone UX, really aren‚Äôt giving me the gba vibe.",1.0
g45gsic,in4z6d,Gba emulator nice!!!,0.0
g462rxe,in4z6d,"I would be happy to contribute. I‚Äôm pretty handy with js, dm me",0.0
g4798jb,in4z6d,You should also post this on /r/EmuDev.,0.0
g448tf3,imzsna,Made a chrome extension that can create website videos and screenshots in pure HTML (instead of pngs and mp4s). Here's an example: [https://capsule.click](https://capsule.click),14.0
g49z8oe,imzsna,"Very cool, congrats, but it's crashing for me after some seconds :(",1.0
g44yr9b,imzsna,I made a satirical website using Firebase as a backend for the global thank you counter. [https://thankyouindoforthecleanair.web.app/](https://thankyouindoforthecleanair.web.app/),7.0
g45254y,imzsna,very 90's. Upvoted.,2.0
g4hn23d,imzsna,Thank,1.0
g451tnq,imzsna,"I made a fullstack clone of Stackoverflow with MERN stack. 

Live: https://clone-of-stackoverflow.vercel.app
Repo: https://github.com/salihozdemir",3.0
g4t92nv,imzsna," I made a fun game to share with your team/friends - Depict-It! [https://depictit.ably.dev/](https://depictit.ably.dev/)  
It is an online multiplayer game where you draw from a prompt and your friends have to try and describe what you drew. Like pictionary meets telephone.  
It is built in JS with Ably realtime, Vue.js and Azure Static Web Apps.  
I also [wrote up about how it was made](https://medium.com/@jofranchetti/coping-with-quarantine-by-coding-597372a17746?source=friends_link&amp;sk=ab3cac4f850eeaf67bab31d3cfec3ded) \-  and it is open source, so you can take the code and make it your own - [https://github.com/ably/depict-it](https://github.com/ably/depict-it) oh and there is a super extensive readme in there if you \*really\* want to peek under the hood.",3.0
g45lmvf,imzsna,"Hello everyone, I have made a CLI tool to keep track of your soccer queries right in the terminal. It is a new project and I would love some people to use it and provide feedback as well as help me to improve it further. Feel free to open up any issues or PR if you like. Thank you. Happy coding!

Here's the

npm link: [https://www.npmjs.com/package/terminalfootball](https://www.npmjs.com/package/terminalfootball)

Github link: [https://github.com/nileshdas/terminalFootball](https://github.com/nileshdas/terminalFootball)",1.0
g47i16i,imzsna,"I just made a video on time travel features and how they are useful for both testing and debugging. I trace the evolution of the concept from Flying Colors, a 90's painting program, forward to the Beads language where it is baked into the runtime. Only a very few languages have time travel implemented (Pharo (version of smalltalk), Elm, and Beads come to mind).

[https://www.youtube.com/watch?v=3Q9HrvmeGhs&amp;t=81s](https://www.youtube.com/watch?v=3Q9HrvmeGhs&amp;t=81s)",1.0
g47qv94,imzsna,"I'm working on a step by step small app/game that will help people eager to learn RxJS and reactive programming. I offer in the repo a full resolution of the challenge, step by step, with an empty file for for someone trying to follow along and go throw all the levels I designed. They're very carefully sorted in terms of complexity and they cover a wide range of concepts of approaching a problem with RxJS.

Here's the repo: https://github.com/danielcaldas/take-the-cat-to-the-party",1.0
g47yrwn,imzsna,"Hi, I just made a very simple note taking web app, it allows you to note quickly and just simple like that. I would like to hear you guys feedback about how is your experience of using it and how I can make it better. Thanks

URL: [https://uninote.vercel.app/](https://uninote.vercel.app/)

Feedback form: [https://forms.gle/RamEWb6Zxe2EsyLU9](https://forms.gle/RamEWb6Zxe2EsyLU9)",1.0
g4diibb,imzsna,"A little late to the game, but I released my first CLI tool and NPM package last weekend:[https://www.npmjs.com/package/guser](https://www.npmjs.com/package/guser)

Blog post: [https://dev.to/krnsk0/introducing-guser-a-cli-tool-for-git-user-switching-lf6](https://dev.to/krnsk0/introducing-guser-a-cli-tool-for-git-user-switching-lf6)",1.0
g4g7fdr,imzsna,"I made Todo list with Vue 3. Check it out on my channel and like the video if you can.

Youtube: [https://www.youtube.com/watch?v=8ZMNezJzHH8](https://www.youtube.com/watch?v=8ZMNezJzHH8)",1.0
g435loe,imvrv9,"(Nb- for the demo, switch prediction to PPM for a better experience - this is how it works https://www.youtube.com/watch?v=QOzmX2WpPZY)

Dasher - originally a Cambridge university inference group project was an awesome text input method for people with disabilities. It‚Äôs super fast for things like eye gaze, head mouse or stylus users who need to use this because of a physical disability which may lead them to have difficulty speaking. We are on a long path to remake it in web tech and under a new MIT license. We have a great team working on the language model but we have a big backlog of issues to work on. **If you are interested in working on something v unique and literally helping people to speak then step right up! - we need some more coding help to fill in the gaps**

-	homepage https://dasher.acecentre.net
-	Issue queue https://github.com/dasher-project/redash/issues (&amp; backlog here https://github.com/dasher-project/redash#backlog)
-	More docs https://github.com/dasher-project/redash/tree/terminology-wip/documents/Specification
-	And if you are interested - the original project which this is all based on including the research papers: http://www.inference.org.uk/dasher/",14.0
g454evm,imvrv9,"Nice to see this. I am typing this on Dasher v5  on Linux. I am a web developer and would love to contribute.  


Are you planning on running this in electron? My usecase requires a desktop version.",5.0
g4556zo,imvrv9,That‚Äôs awesome! The Linux build was one of the most rock solid versions till Ada worked on the Windows one. We would totally love you to help us! Desktop wrapper hasn‚Äôt been decided. It does work with electron really well (https://github.com/dasher-project/redash/tree/electron). Would be good to have a discussion about pros and cons of different systems. Drop Will an email and he‚Äôll add you to the slack group wwade@acecentre.org.uk,3.0
g451jwj,imvrv9,Thumb covers part of the screen with the characters.,3.0
g451v7r,imvrv9,Yes. Good point https://github.com/dasher-project/redash/issues/22,3.0
g435c2w,imvrv9,"Project Page (?): https://github.com/dasher-project/redash

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g4533n5,imvrv9,"I understand the target user base is people with disabilities... but on touch screen the letters disappear behind your thumb.

I love stuff like this. Thanks for sharing",1.0
g4536jo,imvrv9,Yeah. We do have people use it with touch too to be fair. See https://github.com/dasher-project/redash/issues/22 ;),2.0
g43x4zo,imvrv9,"A strong contender to the best ""enter your phone number"" inputs. Maybe add some obstacles you can crash into while typing? Jokes aside, does this add epilepsy to the disabilities you already have?

edit: yeah, I say I deserved the downvotes on this one. it was pretty insensitive. sorry.",-4.0
g43xp3m,imvrv9,Haha. Well granted the prediction model is key to this working very well. We have a very good group of people working on that part of the project. It will work a lot better with that. We honestly do have a number of users who use the current v5 version without any side effects ;) (see around 1.39 for Steve who uses it every day https://youtu.be/OAdegPmkK-o and see Ada Majorek use this in real-time https://m.youtube.com/watch?v=LvHQ83pMLQQ),4.0
g43y4cs,imvrv9,It's a cool piece of software.,1.0
g41l5vs,imnmfg,"Gosh, I like Svelte and respect Rich,

but opening a Svelte talk with ""it's better then React"" just makes Svelte look desperate and starved for attention. Kind of like approaching someone and starting with ""I'm cuter then your ex"".",11.0
g4cid4w,imnmfg,"Damn, clickbait af. The title does not match the topic at all.",2.0
g5aejui,imnmfg,"&gt;Svelte, as a compiler, results in apps that are much smaller and faster to start than traditional runtime frameworks

Babel, as a compiler, results in Solid and Surplus apps that are much smaller and faster to start than traditional Svelte apps.

&amp;#x200B;

&gt;By eliminating the virtual DOM, apps become many times faster ‚Äî especially critical on low-powered devices

Except in benchmarks, [where a few vdom-based libs outperform Svelte](https://krausest.github.io/js-framework-benchmark/current.html)

&amp;#x200B;

&gt;Designing a component language from first principles allows us to write leaner, clearer, more robust code

Clarification: by ""leaner, clearer"" we mean ""magic + ugly templates.""

&amp;#x200B;

&gt;Svelte is objectively better than React

Chocolate ice cream is objectively better than Svelte. It is not only the bestest, but more superer than Svelte.",1.0
g41ds5f,imngad,"I don‚Äôt get it. Dependencies in typescript are compiled to a target ecmascript. All of the typescript deps in node_modules become JavaScript. If the concern is you don‚Äôt understand them you can read the compiled JavaScript version in the dist folder. For contributing you have to learn the language that the project is written in to contribute.

TypeScript really isn‚Äôt that scary.",16.0
g41qj47,imngad,"Maybe OP thinks Microsoft is still in embrace, extend, and exterminate mode?",1.0
g423ug9,imngad,"They still are in some ways. This project is very transparent, wide adoption, and has decent community.",4.0
g42vqhs,imngad,"Well, their language is licensed under Apache, and it's a language that's transpiled. So there's not a whole lot of legal exterminating they could even do if they wanted to.",1.0
g4265o4,imngad,I wouldn't mind it in context of typescript.,-1.0
g41ikcy,imngad,"""I don't know TS so it's weakening _the ecosystem_""

wat :O",10.0
g41f1yh,imngad,"&gt; My context is that I've not looked into TypeScript yet. That means I have no idea how it works.

Go learn about it. It‚Äôs a great tool. It‚Äôs a superset of JS that adds types and transpiles to JS.",6.0
g41fkrn,imngad,"Before Typescript, people were often compiling ESNext down to node-compatible JS. It's not a whole lot different.",5.0
g448mqw,imngad,"The personal bias of the author clearly excludes TypeScript from the JavaScript ecosystem. I'm personally happy that clearly most of the JS/npm users don't take that stance.

Npm clearly isn't about shipping *code*, it's about shipping *libraries*. A lot of the packages distributed through npm have minified/uglified code. Further, npm ships quite a lot of natively running libraries too.

The X.Org fork from XFree86 similarily could be claimed to have weakened the XFree86 ecosystem, but the end result was arguably a win for every X Window System user. Similarily introduction of C++ definitely weakened the C ecosystem, Python 3 weakened the Python ecosystem and other countless similar examples. You can't make changes to an existing ecosystem without someone disagreeing.

Comparison of TypeScript and CoffeeScript is shaky too. You could learn CoffeeScript syntax without ever learning JavaScript syntax. While CS is a replacement, TS is an extension. You can't learn TS without also learning JS. There are historical mistakes in TS, like enums, decorators, `private` and namespaces that actually generate new runtime code.",3.0
g447d49,imngad,"In some vague sense for I understand what the author is saying, from their point of view they are less capable of directly making an impact on the ecosystem because they seem primarily or only know Javascript. 

But it seem like a very weak argument, as others have pointed out the browser has sort of forced devs to learn js whether they actually like it or not. If anything I think with wasm the number of languages that are incorporated into the browser environment in a significant way is only going to grow. Many of these look a lot less like js than ts. 

Maybe this is also because I know and love typescript but I find it hard to believe you really can't read ts and maintain most of the information you would know from reading js. It seem if you just ignore `type` `interface` anything between `&lt; &gt;` and after `:` you are back to just looking at javascript.",2.0
g41b4xf,imngad,"Project Page (?): https://github.com/timdaub/2020

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g42msmt,imngad,"You might as well get used to the fact that JavaScript ecosystem will always be a weird one.  It has to conform to browser standards, and be a relatively simple language.  

If you want to target browsers, you have to write it, or, if you really want some more advanced programming features, create a superset language that transpiles to it.  TypeScript doesn't even have a runtime, it only transpiles to JavaScript.

If you write code outside of browsers, and are sick of the weirdness, I would say add another language to your repertoire.  But if you write code for browsers, you're just going to have to deal with it.",1.0
g47t6lm,imngad,"This is a terrible argument.

Dear author, there is a flag in the typescript Compiler (or on run tsc) called allowJS. Enable this flag and just write whatever you normally would write.",1.0
g4t6zaf,imngad,"TypeScript is a virus to the concept of globally standard code that anyone can pick up, use, and join the global internet community.

It tries to undo the architecture of javascript which is built for as many people as possible to be able to use it.",0.0
g4vhjdr,imngad,No,1.0
g438ylo,imimun,Why would you bring such a cursed thing into this world,3.0
g4019zq,imimun,"Project Page (?): https://github.com/seanmorris/php-wasm

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g488kx1,imimun,This could potentially replace the PHP runtime,1.0
g4dav8g,imimun,Its IS php. Just compiled to wasm.,1.0
g42g9hb,imkdkc,Great article,5.0
g43iybm,imkdkc,"I'm not sure I'm understanding correctly. After your example, you said that the Channel is the Observer, and the User is the Observable. Shouldn't it be the other way around?",2.0
g47d7h2,imkdkc,"That's totally right, I just fixed that section! Thank you for the heads up!",2.0
g43b0kq,imix71,+1,1.0
g43ij8d,imix71,üòÉ,1.0
g3zkyzd,imgwm4,"Project Page (?): https://github.com/shmuelpro/react-reserver

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g42qmwe,imgwm4,Need to focus on mobile first,1.0
g43wsxa,imgwm4,"Looks cool, but as other post said, it doesnt work on mobile. Also dont see option to create half day (one guest is leaving, other is arriving), but maybe i just missed something",1.0
g426c6e,imgblo,"Never deploy on Friday, unless you hate yourself and don't want a weekend.",8.0
g3xro8o,im7269,"&gt;object property order is not guaranteed

As of ES6, this is no longer true, and object property order is indeed guaranteed. 

https://www.stefanjudis.com/today-i-learned/property-order-is-predictable-in-javascript-objects-since-es2015/",60.0
g3xy23j,im7269,"If you are relying on property order for access/iteration, 99% of the time you should not be using an object in the first place, you should be using an array.",44.0
g3y6lr9,im7269,Wouldn't Map be a better alternative to object if the order is important.,20.0
g3ylswl,im7269,"If order is significant, you should be using an array. Full stop.

Relying on ancillary properties of other data structures is a strong code smell. If you find yourself reaching for these properties, 99% of the time you have chosen the wrong data structure to model your data and are attempting to square a circle. 

Either do the work of transforming your data to an array or do not use Map at all.

Edit: You all seem to be missing the bigger point here. You should be choosing a data structure that reflects your data model first and foremost. Just because you can get a similar benefit from another data structure doesn‚Äôt mean that is the right choice.
99.999% of the time an ordered list of items is an array which *requires subsequent array operations* which you will lose with a Map.

*Just because you can doesn‚Äôt mean you should. *",-10.0
g3z4szs,im7269,"Map is ordered so you can have property access and a predictable property order. An array for that same use case would be a code smell. If *reordering* were a requirement then an array would be easier, but now your property look ups are o(n) vs o(1). Trade offs, no full stop about it.",30.0
g3zr38h,im7269,"Arrays of key-value pairs are always a good iteration choice. Maps maintaining insertion order is nice, and probably not worth the transformation, but it is certainly less idiomatic. If I see iteration over a Map, I'll assume order doesn't matter. That's how Maps work.

Also remember it's very correct to have many data structures lying about. Iterating over key-value pairs while also having a cache for lookups is cool.",6.0
g3zj1gc,im7269,"&gt; If order is significant, you should be using an array. Full stop.

It's important to know your tools. In JS, Maps work in insertion order. This isn't an ""ancillary property"", it is part of the specification of how Maps work. If that behaviour fits the access you need to your data, a Map could be the right tool for the job.",15.0
g401vm1,im7269,I wish I could [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) a [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map),6.0
g407lgk,im7269,"Indeed. The lack of basic tools for working with structured data in JS -- even on built-in types like arrays, Maps, Sets and general objects -- is a horrible limitation of the language today. General utility libraries are still useful to have around, but much of the functionality they provide should really have been standardised years ago.",4.0
g40rbqv,im7269,"Well, Map is new stuff; so I guess not being able to map a Map is by design. That, combined with performance penalties and them not being serializable is why I never use Map.

If I have to convert you into an Array to do useful things then why even bother.",2.0
g416cxp,im7269,"&gt; Well, Map is new stuff; so I guess not being able to map a Map is by design.

It's not a problem unique to Map. JS has a very limited selection of built-in data structures, and an almost non-existent selection of built-in algorithms beyond the most basic operations like inserting and deleting elements in a data structure.

Arrays aren't totally hopeless, because at least they have things like find/every and map/filter/reduce.

Maps and Sets (and vanilla objects) don't even have the equivalents of most of those, and in all cases if you want to do anything derived from multiple structures like zipping a pair of lists using a given function or calculating the intersection of a pair of sets, you have to implement the algorithm yourself. Often that's not hugely difficult, but you really shouldn't have to do things like manually turning a Set into an array just to use map or filter on its elements and then turn it back into a Set again.",5.0
g4n7ye1,im7269,"ramda js, lodash, underscore

&amp;#x200B;

Dunno what are TS equivalents, but for pure JS you do have nice library support.

&amp;#x200B;

You may also go full in on fantasy land and get uniform interfaces for traversals, lenses or recursions ;)",1.0
g40bfe9,im7269,"Eh, I run into a lot of situations where the data structure is canonically an object (e.g. reading a package.json or parsing a lockfile), and I need to do both access by key and to a minor extent also ordered access (e.g. writing it back in alphabetical order to minimize git conflicts).

In application-space, using objects as arrays is indeed a code smell, but because the data is normally sourced from a database, and then normalization recommendations apply. Just like you should not make a db table with a column for each id, it doesn't make a lot of sense to take a normalized schema and butcher it into an object for no good reason. Emphasis on the ""for no good reason"" part.

If you are in fact going to be accessing items in a recordset by key frequently, a lot of times it does make sense to take the array and compute an object/Map out of it (in fact, that's what db indexes are in a nutshell!)",4.0
g3yy664,im7269,"What? Ordered values is one of the core properties of Map, that‚Äôs the whole point of using it over a plain object",13.0
g3zraf6,im7269,The value is using idiomatic Map functions.,2.0
g41vu9o,im7269,"&gt; You should be choosing a data structure that reflects your data model first and foremost. [...] 99.999% of the time an ordered list of items is an array which requires subsequent array operations which you will lose with a Map.

I can see no basis for that assertion. If you need a *defined* order, sure, in JS you probably want an array. If you just need a *consistent* order, which is a much weaker condition, then other data structures such as a Map that provide that guarantee but make other trade-offs might be more appropriate.",2.0
g4myal0,im7269,"Data structures have properties. Explicit ones and implicit ones.

Using data structure for implicit ones is bad. Will break if authors decide to switch internal implementation.

&amp;#x200B;

But relaying on explicit ones is entirely fine.

&amp;#x200B;

So if Map is OrderedMap, using it is fine. Is it better then Array? Depends on specific use case. Structures can and should be used to cache operations and optimize app. (Especially in upper ranges of expected workload)",1.0
g3xyb3n,im7269,Absolutely! If you're worried about object prop order in the first place you're probably using the wrong data structure.,4.0
g3ya6lp,im7269,"Arrays are objects in Javascript, so why should it matter?",0.0
g3ypcyc,im7269,"This is a good question and you shouldn‚Äôt be downvoted for asking it. 

You choose data structures that best model your data. You don‚Äôt choose them for their ergonomics. 

If your data is ordered, then you choose a data structure with ordered properties - queue, stack, linked list, doubly linked list, array, etc. Order is a property of each of these data structures but is represented differently. 

In the real world, 99% of the time we simply deal with ordered lists of things, which is exactly an arrays purpose. Insertion/iteration order is always guaranteed because it‚Äôs baked into the basic definition of an array - an indexed list of values.

99% of the time you should treat the implementation of an array as a black box; as long as it has the properties of an array - it is an array - whether it be a traditional array or a JS array-like object under the hood.",10.0
g3yfkct,im7269,"Functions are objects as well, does that mean you should use objects instead of functions too?",7.0
g3yh6iz,im7269,[deleted],1.0
g4242zr,im7269,Did you really just say you shouldn't add and remove elements from JS arrays,-1.0
g427ero,im7269,Keys and elements are different things,2.0
g3xs7qf,im7269,Probably a better reason not to use `JSON.stringify` to compare objects is that it doesn't handle a lot of object types.,6.0
g3yq6ap,im7269,"More like since ES2020 with [for in order](https://github.com/tc39/proposal-for-in-order), though even now it's not 100% specified.",3.0
g3y9qnh,im7269,"Not sure if you're the project owner but I really liked this repo! I will recommend to others!!

I just added a small suggestion regarding the `++` and `--` operators!",8.0
g3y0lih,im7269,I see classes and 'this' were left out.. :(,5.0
g3y0yxe,im7269,It sounds like you have some recommendations! The repository has some contributing instructions if you'd like to suggest improvements! [https://github.com/nas5w/javascript-tips-and-tidbits#contributing](https://github.com/nas5w/javascript-tips-and-tidbits#contributing),25.0
g3yecgo,im7269,"I think he may be looking for answers, rather than having them üòÉ",8.0
g3zkmss,im7269,"Whatever is after `this` binds to whatever is **calling** it, not where it was defined.

The key to understanding the `this` keyword is to determine what would be the most reasonable way for it to work and know it's the opposite. Except sometimes it isn't.",7.0
g47wlvy,im7269,LoL this spoke to me,2.0
g43iumt,im7269,"Been writing JS every working day for years. The only time I used `class` was when writing React components, and now since the introduction of hooks, I've not even done this in over a year.

Classes are not great in JS, and the `this` keyword is a mess. Much easier to just not use them.",5.0
g447w0p,im7269,"Anyone using Angular or Ember, or has a situation where a class best fits the situation needs to make them. ;)

Not using classes in js I think is a new phenomenon with React.

Also, I totally disagree with your last statement. :)",1.0
g44eei0,im7269,"I don't use classes outside of react either.

Why do you disagree with my final statement? The `this` keyword is a mess in Javascript. It can point to like 5 different things depending on context. It's a complicated mess. Classes don't work well because they're just sugar on top of the prototype system, which is also a mess.",2.0
g44tpnw,im7269,"\&gt;  I don't use classes outside of react either.

How do you encapsulate?or are your projects not big enough to require encapsulation?

if you encapsulate with functions / prototype-based objects, why not use the class ""sugar""?

But also, just because \*you\* don't use classes outside of React doesn't mean tons of other people follow your patterns as wells. You can't disregard an entire paradigm of programming due to discomfort. Angular, Ember, are frameworks that \*require\* classes for there general use, and they've largely solved all the issues people say classes have (it's helped that Ember and Angular have been super involved with TC39 from its inception).  


But also, outside of any framework, classes are handy for:  
\- managing web sockets / lifecycles  
 \- connection pooling  
 \- anything with encapsulated behavior that you may want multiple instances of  
 (I've done a lot with sockets, chat, and streaming data)  


\&gt;   The this keyword is a mess in javascript

In practicality, you only need to worry about two things:- does my function need this \`this\` of the class instance (almost always does)- do I need the \`this\` of the outer scope? (use arrow function)",1.0
g458llo,im7269,"&gt; How do you encapsulate?or are your projects not big enough to require encapsulation?
&gt; 

Closures.

&gt;You can't disregard an entire paradigm of programming due to discomfort. 

I don't disregard it out of ""discomfort"", I disregard it out of years of painful experience.

&gt;and they've largely solved all the issues people say classes have

Cool, do they prevent you from using inheritance then?

&gt; But also, outside of any framework, classes are handy for:
&gt; - managing web sockets / lifecycles

You can do this without classes.

&gt; - connection pooling

You can do this without classes.

&gt; - anything with encapsulated behavior that you may want multiple instances of

You can do this without classes.

&gt;In practicality, you only need to worry about two things:- does my function need this `this` of the class instance (almost always does)- do I need the `this` of the outer scope? (use arrow function)

I'm pretty sure there are 5 ways in which the scope of `this` can be determined in Javascript. It's bonkers, and it leads to confusion.

What's more, class based programming encourages people to think in terms of inheritance structures, which inevitably leads to inheritance taxonomies designed at the point where you knew the least about what you were ultimately building. This leads time and time again to brittle taxonomies that are hard to work with, and the frustrating feeling of changing one thing and not knowing with confidence what the impact of that thing might be on something somewhere else in your system.

I've been following a more functional style for about 3-4 years now, after doing OOP for about ten years.

The single biggest advantage I'd say that I've found when following a more functional approach? My cognitive load has dramatically reduced. I don't have to worry about how this thing might impact that thing and that other thing - I just look at what I need, pull in those things and then compose them together until they do what I want.",2.0
g45j19e,im7269,"So inheritance is why you don't use classes?

Don't use inheritance wrong",0.0
g45j6ut,im7269,"&gt;So inheritance is why you don't use classes?

It's one of the reasons, but not the only one.

&gt; Don't use inheritance ~~wrong~~

FTFY.",2.0
g45j6l2,im7269,I use functional with classes. Disregarding a whole paradigm suggests a lack of understanding of the pros and cons of all paradigms,0.0
g45jexr,im7269,"Nah, I understand it.

You clearly stated above that you don't know how to do encapsulation in a functional paradigm, so you mustn't know what closures are, which means you're not doing functional programming.

If you think you're doing ""functional with classes"", here's a hint - you're not. I don't think ""functional"" means what you think it means.",2.0
g45lem0,im7269,Yeah ok,1.0
g46afqa,im7269,"/u/aaarrrggh  
sorry, this was hastily written -- I was angry at being written off and my experience overlooked (or it seemed that way anyway)  


&amp;#x200B;

\&gt; You  clearly stated above that you don't know how to do encapsulation in a  functional paradigm, so you mustn't know what closures are, which means  you're not doing functional programming.  


nah, I know them -- I think I didn't articulate that I'm thinking of more involved systems, like the question I raised here: [https://www.reddit.com/r/learnjavascript/comments/inah6q/to\_those\_who\_swear\_against\_oo\_programming\_give\_me/](https://www.reddit.com/r/learnjavascript/comments/inah6q/to_those_who_swear_against_oo_programming_give_me/)  


\&gt; If  you think you're doing ""functional with classes"", here's a hint -  you're not. I don't think ""functional"" means what you think it means.  


Oh I do. I think we aren't thinking about the same things though.  
I use classes for what they are good at, and I use functional patterns for what they're good at. Methods within classes can delegate to functional parts of a code base and functional parts of a codebase can utilize class instances passed as data.",1.0
g46a1pv,im7269,I posted here for a legit question where I do recognize a gap in my understanding of functional patterns if you wouldn't mind taking a look: [https://www.reddit.com/r/learnjavascript/comments/inah6q/to\_those\_who\_swear\_against\_oo\_programming\_give\_me/](https://www.reddit.com/r/learnjavascript/comments/inah6q/to_those_who_swear_against_oo_programming_give_me/),1.0
g5756p0,im7269,"&gt;You can't disregard an entire paradigm of programming due to discomfort.

Programming languages and paradigms are made for the comfort of humans. That's their only reason to exist and that's why we keep investigating new ways to code. There are serious concerns regarding OOP and they are worth listening to.

I used to love C#, I mean I still enjoy some of it, but I too have been feeling the pains of OOP for too long. And no, this is not because ""you may be doing OOP wrong"", it's because the concept sucks. It was a great idea at the time but it only exists today because of the unimaginable amount of OOP code that runs a lot of stuff.

I'm personally not trashing everything about OOP. I think objects, encapsulation, and a couple of other concepts are great. But classes, `this`, `new`, inheritance, polymorphism...? It's voluntary torture and it doesn't deliver on its promises.

I'm trying to find a good balance between some OOP and some FP.

If you have unshakable faith in it, there's this great article that has made a lot of waves. [Take a read](https://medium.com/better-programming/object-oriented-programming-the-trillion-dollar-disaster-92a4b666c7c7).",1.0
g42fr0x,im7269,ill help u if u help me :) dm me,0.0
g3ypyik,im7269,Interestingly the interview question is the most language-independent one. Maybe I'll get that high-paid full stack job after all (I'm a plumber now).,2.0
g42iq2o,im7269,This is great shit.,2.0
g3yf1vo,im7269,"please please for the love of mike. . . 

Do examples of async using a publicly available api (star trek, adventure time, etc) or even file system access (via node)... in otherwords, use something that is realistic. 

settimeout is not only unrealistic, but the pattern for it's callback is different (with the comma and the number) than the common callback.

I've recently graduated a bootcamp. One of the biggest things i needed to learn was the syntax and rules of promises/async-await... but the bootcamp punted right past it straight to the library Axios. Therefore I'm still struggling to understand it.",5.0
g3yu0dk,im7269,"Using a third-party API has a few problems.  First, it might go away.  Second, it's a lot more verbose.

Using a setTimeout is a lot simpler because it's a built-in function that the student should already understand (and shame on their instructor if they don't understand it before they hit async!) and the pattern for Promises doesn't actually change.  You call ""resolve"" when the promise is finished.  That doesn't matter if you call it from within Axios, Fetch, setTimeout, onLoad or any other async functionality.  

It sounds to me like the problem was your bootcamp not teaching you the basics properly before throwing you into the hard stuff.  For people learning on their own, learning things in the right order is already a problem they have to solve, and making the async example more complex isn't going to help them.

I guarantee that if all the async examples used a public API, there'd be *more* people complaining about that than will complain about setTimeout.",6.0
g42piy8,im7269,Prototype chaining should be in here,1.0
g42bdla,im7269,one more poorly written thing for google to search and people to have broken knowledge about JS,1.0
g42fmza,im7269,damn... that hit HARD. but also better than i expected. ive been coding for a year and there are too many people im already noticing who dived into react and watched too many youtube tutorials. i am guilty of all of this but i at least waited a full fucking year in my coding journey before diving into react. maybe im confused but this whole ecosystem got really daunting/silly once i dove into react.. seems like a lot of new coders who are heavy on libraries and random shit that i dont really care for tbh. just too much broken knowledge its too fragmented and coding is suddenly not what i though it was. at least in the JS world,0.0
g3y831i,im7269,Item #1: an explanation of the meaning of the word compendium,1.0
g3y8adq,im7269,"*compendium* (noun). a collection of concise but detailed information about a particular subject, especially in a book or other publication.",9.0
g3z3rxr,im7269,One of the four Roman camps surrounding the Gaulish village in the Asterix comics.,7.0
g3xtkc8,im176z,"This looks sweet. I'm not a React developer, but I work with Salesforce LWC which uses a special flavor of Jest. Do you have any additional documentation? I would love to fork this and use this in my field. Writing the tests often take as long as writing the components themselves..",2.0
g3xu9qp,im176z,"Thanks for the support! The README in the root of the Github repo is the most detailed documentation at the moment. The current implementation is fairly specific to Recoil (which is in turn specific to React), but you're welcome to fork &amp; have a go at porting it.

If you have specific questions that aren't answered by the docs or source code, you can definitely send me a DM and I'll do my best to help.",2.0
g449e4o,im0pl9,"Nice, add it to [React State Museum](https://github.com/GantMan/ReactStateMuseum).",1.0
g3wqojy,ilz603,Genuine question: is there any reason to use Underscore over Lodash these days? Wikipedia says many Underscore devs are now devoted to Lodash.,13.0
g3y4wyd,ilz603,"This update might be a good reason in itself, as Lodash's ES module build (`lodash-es`) [isn't being updated for some reason](https://github.com/lodash/lodash/issues/4879) and currently [can't be used with the native ES module support in Node](https://github.com/lodash/lodash/issues/4800).",4.0
g413ap5,ilz603,"Underscore currently doesn't work with the experimental ESM support in Node.js, either. That said, the maintenance argument still stands.",3.0
g41h063,ilz603,"I think Wikipedia is a bit outdated in that regard. In 2015, there was a hype about some devs being on both teams, partly because of an ostensible effort to [merge the projects back together](https://github.com/jashkenas/underscore/issues/2182) that never fleshed out (if anything, Lodash ended up [distancing itself more from Underscore](https://github.com/underdash/underdash/issues/4#issuecomment-110026962)). None of those common devs is actively involved in either project nowadays.

Underscore currently has [one very active maintainer](https://github.com/jashkenas/underscore/graphs/contributors?from=2019-09-04&amp;to=2020-09-04&amp;type=c) while Lodash only gets [an occasional pull request](https://github.com/lodash/lodash/graphs/contributors?from=2019-09-04&amp;to=2020-09-04&amp;type=c).

A convincing reason for me personally is code elegance. I think the UMD bundles tell this story well. Underscore: [2k lines of code](https://github.com/jashkenas/underscore/blob/master/underscore.js), Lodash: [17k lines of code](https://github.com/lodash/lodash/blob/4.17.19/lodash.js). Underscore: the set of functions you see in the code is roughly identical to the set of functions you find in the documentation. Lodash: the functions from the documentation (the ones you actually import and use) are buried between a lot of support code, and it can be quite hard to trace down how a given function actually works.",3.0
g3zqoet,ilz603,Less than half the bundle size might be a reason ([lodash](https://bundlephobia.com/result?p=lodash@4.17.20) vs [underscore](https://bundlephobia.com/result?p=underscore@1.11.0)) if you're using the monolithic bundle.,2.0
g41hq8i,ilz603,There is also [this](https://twitter.com/cambecc/status/1010913078928707585) story of somebody trying to treeshake a single Lodash method and finding that he still didn't really save any space compared to just importing all of Underscore.,2.0
g41ty5j,ilz603,"Interesting! I remember trying to do the same a while back and got similar results. I thought i was doing something wrong, but couldn't find a workaround, so kept using the ""monolithic"" imports.",1.0
g45e97a,ilz603,"well, I have another genuine question. Is there now any reason to use either of them? These last years, with ES6, I really pretty much never had a need for Underscore/Lodash.",1.0
g45zy1a,ilz603,"The Underscore/Lodash interface still has a lot of stuff you don't find in ES6+. Also, ES6 doesn't work everywhere and polyfills are often larger than Underscore.",1.0
g4b6s3l,ilz603,"More importantly. ES evolve at the speed of TC, while js ""std"" libs can evolve at the pace right for them.",1.0
g3vrue2,ilz603,"The good old UMD bundle is still there, but there is now also a future-proof ESM bundle, as well as the option to import individual functions from separate modules. Even without the ES modules, it's a pretty big update.

In-depth article: [https://juliangonggrijp.com/article/introducing-modular-underscore.html](https://juliangonggrijp.com/article/introducing-modular-underscore.html)

TLDR of the article: [https://twitter.com/juliangonggrijp/status/1299478223760306176](https://twitter.com/juliangonggrijp/status/1299478223760306176)

Underscore home page: [https://underscorejs.org](https://underscorejs.org/)",3.0
g3uod69,ilugs1,"""wait... React is a black box""
""It always has been""",3.0
g3urw76,ilugs1,"Plus, if you're doing ""cool things"" with stuff, you probably haven't fully thought through the ramifications of maintaining it.  It's pretty likely that an expert is going to point out the potential problems whenever you go bleeding-edge, no matter the framework.",3.0
g3uo6c6,ilugs1,I am noticing that every time I start a react project about half way through I think ‚ÄúDid I even need react for this‚Äù and regret using it.,0.0
g3wtmjp,ilugs1,"Hmmmm... I searched Twitter for ""React hooks"" and only positive tweets came up at that time on the first few screens of results. And ""React Concurrent Mode"" isn't even released yet --- it's still marked Experimental.  So there's no reason to expect its API to be production-ready.",1.0
g3t1gzy,illwce,Thanks Tom for posting ....just now I registered and thx once again,3.0
g437zhp,ilgxqg,"Hello, looks complicated for small websites... variables or just a good method/knowledge are enough...",2.0
g4917ee,ilgxqg,"Hey, thanks for the feedback!I wouldn't use Inventar for small websites as well :)

As anything that's about layers, decoupling and centralizing, some cases are too small to justify using it. In larger projects, and where several people maintain the same codebase, I believe Inventar could shine.",1.0
g3ubebh,ilgxqg,"Very interesting, do you think it's production-ready?",1.0
g3ugtd3,ilgxqg,"Hey, Inventar's author here.

I released Inventar less than 24 hours ago, and it's still not used in any production environment. I can tell you, however, that it's a tiny library with very good test coverage. This being my side project for the last several weeks, I could invest time to write things slowly and methodically instead of Running Fast And Breaking Things.

It also means that this is a very early, initial release and that things might change (but with only a tiny probability of not being backwards compatible). I'd like to see how people use it to add, fix and change stuff until I'm satisfied enough to move to an ""official"" v1.0 release.

This means I'm available for discussion, feedback and bugfixes, so feel free to use it and I could work on issues and review submitted PRs :)",3.0
g3s1o3n,ileytc,You should darken the background as you lighten the  rectangle. I can't see past a certain point.,42.0
g3sey0w,ileytc,This right here. Around block 12 there is practically 0 contrast between the blocks and the backdrop.,18.0
g3t4oca,ileytc,I'm the author of the code and will follow your advice. I never got beyond level 9 and I'm humbled by the fact that somebody actually played my game for so long!,20.0
g3t6yhp,ileytc,"No problem! It‚Äôs a fun little style of game, and at a very good point for the amount of code you‚Äôve done. You could really spend time polishing it up and taking everyone‚Äôs advice if you‚Äôd like, but it didn‚Äôt seem like that was the projects goal :p 
As an aspiring programmer I love what you‚Äôve done and how everything is documented, and it‚Äôs exactly why I followed this subreddit. Thank you!",8.0
g3tvmvc,ileytc,"Can confirm 12 is super hard to see, combined with moving fast I just could not track it.",1.0
g3uhljh,ileytc,"12 is hard to see, then it gets easier. My top score was 17",1.0
g3x1rpl,ileytc,17! i'm beyond impressed! how did you manage that?!?,1.0
g3sshgv,ileytc,"A few things you could improve in your code:

* Make ySpeed and height both const instead of let since it seems that you're using them as constant values and not redefining them elsewhere in your code. Make canvas.width and canvas.height into const variables so you don't need to access the width/height property in the DOM more than once.

* Add a proper constructor/constructor function to cut down the lines of code and lower the amount of global variables. It looks like you could use the constructor too for the debris object, which will reduce your lines of code.

* Declare a variable and set it equal to boxes[current] so that way you don't have to access/reference the object from the array each time. I don't know if that's any faster, but it will be definitely be nicer to read and easier to modify the logic.

* You could also split up different parts of your code into functions. I like how you analyzed your code by section/groups of lines, and since you have that analysis, you could probably split up your code up that way. This'll make it easier for you to move around different pieces of code (since all you have to do is move a function call) and it's easier to debug as well

And just a few small things:

* On line 41, using a template literal could be a much cleaner way of writing it rather than wrapping every character with a single-quote and using plus signs. 

* You can use += on lines 47 and 70 to avoid accessing boxes[current].width twice and make the code a bit easier to read. 

* On line 92, you can get rid of the splice function and just directly do boxes.length = 1, which'll get rid of all the elements except for the first one.

Overall I'd say this is a pretty interesting, even addicting game. Keep up the good work!",17.0
g3t4c11,ileytc,"appreciate your great feedback! (this is actually my code but I appreciate u/magenta_placenta posting the link)  


definitely agree on const and template literal - I'll update the tutorial when I get a chance. can you please elaborate on ""proper constructor/constructor function""? I'm not sure how to do this. thanks",3.0
g3tafem,ileytc,"A constructor is pretty simple to write. In this context I'm talking about a function that just takes in x, y, and width as parameters and returns an object. Here's how I'd write that:

    function Box(x, y, width) {
      this.x = x
      this.y = y
      this.width = width
    }

Some background: a constructor is written with in **PascalCase** and not camelCase. this.property refers to the property that the object should have. If I did just x = x, and y = y, then there's some ambiguity about whether we're referring to x as a property or the parameter x. But anyways, what this lets you do is create Box objects. For example, I can write:

    let newBox = new Box(100, 100, 500)

and if you console.log(newBox), you'll see that it has an x, y, and width property and it's set to 100, 100, and 500 in that order. Also, since this is a constructor, the new keyword has to be there. 

**If you don't use a constructor** and create some sort of template box object like this

    boxObj = {x: 0, y: 0, width: 0}

and create new objects by doing something like newBox = boxObj, you'll notice pretty quickly that changing the value of a property in either newBox or boxObj will change the value of both. This is because newBox is a reference (an object reference) to boxObj and **they point to and manipulate the same space in memory**. A constructor fixes that by allowing you to create a new object each time.

In any case, this is a much quicker and cleaner way of creating a bunch of objects with predefined properties and giving them values. This way you can create each box and the debris with one line of code instead of having to clone or manually type out an object.",4.0
g3y6ggi,ileytc,thanks a bunch for the detailed explanation! I'll give it a try but not sure if this will really shorten the code... I'll PM you if I have questions.,1.0
g3ts9e7,ileytc,"You may want to keep track of time passing by between each frame. The game runs a lot faster on my high refresh rate monitor. There's an article here about it.

https://developers.google.com/web/updates/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision

Here's another way to set the animation speed to 60 fps using setTimeout
https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/",1.0
g3uhic3,ileytc,"i wanted to keep the code simple for beginners, but you're right that would be an improvement. there's no reason to penalize guys with better monitors or phones...",2.0
g3ujb6e,ileytc,[Best I've got.](https://i.imgur.com/PYPwHui.png),3.0
g3uld0k,ileytc,Ah time to use inspect element and get the highest score lol,2.0
g3um2jl,ileytc,It's a canvas...,2.0
g3x0j7l,ileytc,MS Paint then...,1.0
g3x3ljo,ileytc,Lol no I got that score in the game... Doesn't mean there wasn't a trick involved though,2.0
g3ybwnw,ileytc,"Just use the DevTools console?

[https://i.imgur.com/qSsiXKC.png](https://i.imgur.com/qSsiXKC.png)",2.0
g3y3b38,ileytc,"come on, what's the secret?",1.0
g3sjwad,ileytc,"Really good! A lot of these articles that are like  ""I implemented X in Y lines"" end up being incoherent, unreadable messes, so it's refreshing to see one that's actually beginner friendly and readable.",2.0
g3t4r9f,ileytc,thanks for the positive feedback!,1.0
g3tz8ul,ileytc,Kids from r/masterhacker coming in here explaining that you can minify those files to make it less than 2,2.0
g3x096z,ileytc,"sure! who cares whether the code in the tutorial is readable or not, right? :)",2.0
g3ul68d,ileytc,This is so cool!,2.0
g3uo2n0,ileytc,"I'll do it in 1,000",2.0
g3rtcgs,ileytc,"It's really nice, I like how clean your code is.",1.0
g3s0nx8,ileytc,"Not trying to be rude, but I wouldn't call that 'clean'",21.0
g3s20rb,ileytc,"Ah okay, i meant readable... Because a lot of skilled developers write really short, but for beginners unreadable code. (es6 and up)",6.0
g3s5v0j,ileytc,"It does use simple constructs. But, smaller functions with clear names on what they do would be clean code. Having one function called \`animate\` that does most of the work is actually less readable.",15.0
g3s2eyh,ileytc,"Btw I am also a beginner(5 months of experience in js)
I was trying to be supportive to motivate other beginners , and make friends üòÖ",8.0
g3seou1,ileytc,"I‚Äôm also relatively new to JS but I would consider it clean for the simple fact that it‚Äôs easy to follow is logic and see how he‚Äôs doing things. I‚Äôm familiar with methods and so I can usually spot when someone is better off to have saved themself a few lines of code by using a method instead, but in OPs case I would have to see an 80 line example (or fewer).",4.0
g3tvvyh,ileytc,"Proper criticism of code should be viewed for what it is, an opportunity to learn, anyone taking it another way is simply immature as well as novice.

Source: writing code for many years, someone will still find issues with what I produce, I am happy when it happens.",3.0
g3s1brv,ileytc,Yeah that animate method needs a lot of work,1.0
g3rdh07,ile0ix,"Hey all,

As the title says, we converted the [ReactJS.org](https://reactjs.org/) documentation to use functions and hooks instead of class-based components. This is to make it easier to learn React hooks, since there are so many tutorials and examples in the official documentation, but not many that use the function-based hook syntax.

Let me know if you find this useful, or any feedback you might have!!

(We're working on a some more info on this too, about details on the conversion process and some observations we had along the way, so stay tuned!)",1.0
g3rglep,ildce4,It's a lot nicer to use the Chromium debugger for Node.,2.0
g3rsbpq,ildce4,"I'm not a big fan I even talk about it in the post , it's slower harder to setup and have the same functionalities as far as I know",2.0
g3vidjh,ildce4,"How to debug a node app in three easy steps:

1. Set breakpoint

2. Open a debug terminal in vscode

3. Run your node application from the terminal",1.0
g3rci5n,ildaz4,"I'm the host of the event, so lmk if you have any questions!",1.0
g3qhy70,il9li7,https://github.com/gquittet/graceful-server,1.0
g3qppxa,il9li7,[https://github.com/redyelruc/redyelruc.github.io](https://github.com/redyelruc/redyelruc.github.io),1.0
g3rwbsy,il9li7,https://github.com/joakimunge/denoliver,1.0
g3rzpd5,il9li7,https://github.com/MidSpike/iris-utilities/,1.0
g3zcgt0,il9li7,[https://github.com/fabien-h/acta](https://github.com/fabien-h/acta),1.0
g3r1yi7,il982g,"Chakra-UI has been fantastic! If you have more pointed questions, I‚Äôd be happy to answer.",7.0
g3ryjix,il982g,Thanks! I‚Äôve never heard of Chakra UI. How does it compare to Material UI? And does it have a grid system that would be easy to use like in bootstrap?,1.0
g3spw5r,il982g,"Material-UI has been around for longer and has more components out of the box, but Chakra is more lightweight and (IMO) elegant. It is essentially a design system, so it is much easier to add your own design theme/flavor to it than Material.

And yes, it does have multiple layout utilities, including Grids. Check out their documentation for demos and code for examples. Their API is very simple and intuitive.",1.0
g3qmqbo,il982g,Material UI,8.0
g3rdswp,il982g,"What are you trying to build? I think that's a very important question, since not every app has the same UI requirements.

Personally I wouldn't first search for out-of-the-box ""React widgets"", instead I'd search for CSS frameworks in general and then just make my own widgets, since most widgets are like 90% CSS and very little or no application logic.",3.0
g3rhl4f,il982g,"Upvote for using a pure CSS framework for clickthrough dummies, but also later in the finished product. At work we tend to build our own custom library of components for every project. It's not much to type out the few basic components (like Buttons, Modals, ...) and I find it much better for longer lived projects. Using an external UI components library means you give up control over a big part of your frontend code base, and in my experience that tends to be a big negative point for bigger projects because at some point this will force you to implement workarounds or copies of some components. Managing just one purely own component library elliminates this problem completely as you can just change the code directly, but of course comes with other problems (getting some UI stuff like accessibility right can be really hard).",3.0
g3tjcra,il982g,"How much longer do you think it will take to build my own components vs using a UI library? 

And by CSS framework, do you mean like bootstrap?",1.0
g3u6sg5,il982g,"Chiming in here: building your own UI library is a ton of work and not worth the effort for an MVP. Resist the urge. Just look at an existing UI library like Blueprintjs and look at all the components they implement, all the themes they support, and all the edge cases and states that they account for. Eventually, you'll have to support all those too.",1.0
g3rekk7,il982g,"I like a few of them, BootStrap, Material and lately FluentUI. Most offer the same components (buttons, tabs, forms, etc...) I'd go with what you prefer aesthetically?",1.0
g3s68bp,il982g,"Orbit: [https://orbit.kiwi](https://orbit.kiwi/)

Storybook page to demo all available components: [https://kiwicom.github.io/orbit](https://kiwicom.github.io/orbit)",1.0
g3u77zq,il982g,Check out Blueprintjs! I've had a lot of success using it to quickly build effective UIs. It also supports some really useful UI patterns like `NonIdealState` that I now include in any interface I build.,1.0
g3qf5w6,il982g,What is MVP?,1.0
g3qg2v6,il982g,Minimal Viable Product,6.0
g3qhwmi,il982g,"Do they usually use different design patterns than normal Apps?

I use Tailwind.css for pretty much everything. Pretty easy to prototype as well as to make beautiful designs.",1.0
g3rh6ux,il982g,"You just need to make a decent looking product quickly. Tailwind is cool but it's not a UI library as it doesn't offer any components to use, only utility CSS classes",2.0
g3qwov2,il982g,[deleted],-1.0
g3slc4z,il982g,"MVC = Model View Controller
MVP = Minimum Viable Product",2.0
g3quqkn,il982g,"Do you means components ? or do you mean css styling, I would probably not used made components, Just my own components and tailwind",0.0
g3syxsb,il982g,"Personally, I wouldn't. I'm definitely guilty of a rebuilding the wheel kind of mindset but I can't tell you how much time I've wasted trying to bend a component to my needs when I suddenly need it to do something slightly different that its API is not set up to accommodate.

That may come down to experience though; i know how to build every basic flexibly and good design will follow a consistent contract with a few variants so for me, I get better mileage out of building my own.

Things like windowing, animated grids, that kind of thing, I'll reach for a library because they're complicated and require a lot of specialized effort to pull off in a performant manner. But yeah generally, I'm gonna build my own components and skip the hassle of rounding off the corners in a square peg round hole type of situation 90% of the time.",0.0
g3qah4c,il7hfs,Wait components are new? What was it I was using in the 90s to build UIs then?,27.0
g3qb19q,il7hfs,Was just thinking that but... We also thought that we were geniuses when younger ;) They will learn ...,12.0
g3qbcwr,il7hfs,"Yeah, I believed in object oriented programming.",1.0
g3ua3cb,il7hfs,"I used imperative layout inflating in the 90s and much later jQuery. On the desktop MVC/MVVM, later Angular, i'd call these directives. I'm not aware of anything of that time resembling view=function(state), which imo i'd describe as the birth of the component. Everything has led to it of course.",2.0
g3qf8c9,il7hfs,"I wouldn't say it's a new concept. However, imho, it is important to name the thing you are doing and frame it in the context that you are working. For me personally it helps clarify the concept and make connections that I would have otherwise missed. Also, it helps introduce the concept to folks who are not familiar with it or are new to the industry.",-5.0
g3rhe0q,il7hfs,"But then components are not taking the world. It's timeless concept ""divide and conquer"". Or you have something very specific in mind?",7.0
g3swo9x,il7hfs,"It's a fair point, I think the idea of the site is to emphasize a development workflow that is oriented around components -- more than just using components (which is of course a prerequisite), it is about thinking about your UIs in terms of components all the way through the process. That's what the original post: [https://blog.hichroma.com/component-driven-development-ce1109d56c8e](https://blog.hichroma.com/component-driven-development-ce1109d56c8e) was about.",1.0
g3tgrg1,il7hfs,It all reminds me of Delphi and its VCL :D,1.0
g3q6kcw,il7hfs,These X-Driven-Development concepts are getting out of hand. How many things should be driving my development?,21.0
g3q98td,il7hfs,"Don‚Äôt worry, it goes full circle every 10 years. I was building object oriented UIs around 10 years ago in Qt which sound suspiciously like Component Driven Development",14.0
g3qvp7i,il7hfs,"Delphi 20 odd years ago with VCL.

I for one welcome our scoped component overlords, for a lot of use cases it is a good core model.",7.0
g3tjoj2,il7hfs,"UI programming in Delphi was the best, I have a lot of good memeories about that.",2.0
g3q9dnq,il7hfs,"&gt; It is a process that builds UIs from the ‚Äúbottom up‚Äù by starting at the  level of components and ending at the level of pages or screens.

&amp;#x200B;

I build my sites from the top down personally. The more important concept is component reusability and composition.",9.0
g3sx30y,il7hfs,"If you haven't tried it before, I would encourage you to have a go at building from the component up using a tool like Storybook to harness things. Like all things in software there are tradeoffs but I think you'll really see benefits.

\&gt; The more important concept is component reusability and composition.

Maybe so, but I think starting with the components first in everything you do can't help but encourage more reuse and composition!",2.0
g3sy70k,il7hfs,You can take a top-down approach to components and still use storybook.,2.0
g3u3y5r,il7hfs,What‚Äôs the difference between a top down and bottom up approach?  (Serious Question),1.0
g3uqo73,il7hfs,"I'm just referring to [stepwise refinement](https://www.cs.uct.ac.za/mit_notes/software/htmls/ch07s09.html), the idea of building the top-level subsystems first before recursively building out their lower-level subsystems. When applied to UI components, it just means building the page component first, then any child components like a nav bar, then any child components of the nav bar, like buttons.

You can also do it the other way around, building the buttons first, then the nav bar, then the pages the nav bar is used in. But I find top-down easier to reason about.",1.0
g3vkn4g,il7hfs,Ah got it.  I guess I design bottom-up and code top-down.,1.0
g3qbz26,il7hfs,"The site sure is pretty, but as a developer I'd rather see an `awesome-components` list on github.  Also, what's Jest got to do with components?",6.0
g3qd63a,il7hfs,"The CSF format allows you to reuse stories in Storybook, Storybook Docs for documentation, Jest for unit testing and Cypress for E2E testing. Here's an example: [https://storybook.js.org/docs/react/workflows/unit-testing#gatsby-focus-wrapper](https://storybook.js.org/docs/react/workflows/unit-testing#gatsby-focus-wrapper)",3.0
g3qgtvv,il7hfs,Isn‚Äôt this just atomic design? That approach to design has been popular for almost a decade.,5.0
g3sxevr,il7hfs,"I guess Atomic design (which you'll see mentioned on the page there) is prior art, as is component-based approaches to UI which have also existed forever, and become popular starting more or less with React in the web space.

What's ""new"" is tooling like Storybook that allows you to have a process across the whole team that starts with and orients itself around components.",2.0
g3rqh4p,il7hfs,Components go back to 1969. Ask Douglas Mcilroy.,5.0
g3y6zem,il7hfs,Almost nobody here cares who he is.,2.0
g3r42uz,il7hfs,How ~~components~~ **Microsoft and Facebook** are taking over ~~the world~~ **developers' tech stacks**,3.0
g3pxyv6,il7hfs,"In [2017](https://varun.ca/convergence), I noticed that most major frameworks adopted the component construct. Tom Coleman in his post ‚Äú[Component-Driven Development](https://blog.hichroma.com/component-driven-development-ce1109d56c8e)‚Äù, described this modular UI trend. That said, I‚Äôm still amazed how fast components have take over UIs. Especially on the web.

It makes sense why. Building UIs is hard. Users expect compelling and personalized experiences, which require a lot of UI logic. But managing that complexity is tricky without simplifying it in a modular way. That‚Äôs where components come in.

With this shift, countless frontend, design, documentation, and testing tools adopted a component-driven model. Breaking down complex UIs into simple components makes it easier to build UIs.

To capture this shift, I started collecting a list of tools and the latest thinking on component driven UIs. I gathered all of these resources in one place, to give you an overview:

* üìö Glossary &amp; guides
* üõ† Frontend tools
* üé® Design tools
* üì¶ Component Story Format (common standard for interoperability)",-1.0
g3qriz3,il7hfs,"Most of the time building the UI is hard, because the design/UI you're given is 100% non-standard.

Think of how complex and non-standard Reddit's comment-edit-box is.",4.0
g3pu21b,il701z,"Hey guys i wanted to try javascript and electron, so in the last 3-4 days i created a desktop app where i can save my daily weight and kcal and with which i'm able to visualize the improvements i do in the Gym!  


Also in the future I plan to include other stats like Body fat and maybe some more stuff strictly related to the gym itself like 1RPM of certain exercises (Squat, Deadlift and so on)  


Feel free to contribute and help!",2.0
g3powq8,il5nkg,"I agree with 90% of what you wrote here. In addition to the downsides, I‚Äôll also note that the same company originally built Meteor and then essentially silently abandoned it. I don‚Äôt have a lot of trust that Apollo won't suffer a similar fate when the next shiny thing comes around. 

That said, I appreciate the value that apollo-client gives and your article ignores it. Caching, optimistic UI, and a friendly API make it easier to do simple common tasks.",53.0
g3ps8nw,il5nkg,"True! I'm not really looking at the client side, and there's definitely interesting points to be made there too. I still think it's likely that there are simpler options than Apollo, but coupling to Apollo is also much less of a problem imo. As long as your API itself isn't locked into Apollo-specific features, you can always switch later.",7.0
g3q5s1r,il5nkg,"The folks that created meteor sold it about a year ago, and it is still being actively maintained.",5.0
g3q96nq,il5nkg,"&gt;The folks that created meteor sold it about a year ago, and it is still being actively maintained.

Ah, glad they found a home now. FTR, they were sold in October 2019, and the last **minor** upgrade prior to the purchase was in October 2018. The company I was working at churned soon after because we were using Galaxy (their hosting provider) and had many unresolved support requests causing our containers to crash repeatedly, with no estimated fix.",13.0
g3rcnkn,il5nkg,"[Check out graphi](https://github.com/geek/graphi). Its a graphql abstraction on top of Hapi. If you're using hapi methods as DB services, who needs apollo? Hapi allows cache configd by default. Websockets are implemented by using Nes and offers the same resolver schemas. Its pretty sweet.",0.0
g3ter75,il5nkg,"All hapi ecosystem is dead, and its not a good idea to tie your frontend with backend tech, specially dying ones",4.0
g3u4wm3,il5nkg,"Hapi is not dead, it switched leadership. I am in contact with some maintainers.",2.0
g3qlogo,il5nkg,"An awesome alternative that I find much more interesting and promising is [Hasura](https://hasura.io/). While it also allows you to connect RESTful endpoints to the graph, it's primary usage comes from connecting directly to a Postgres database and exposing tables as entities through their UI. It works remarkably well, and we're starting to roll out usage of that here at SeatGeek these days.",9.0
g3qxtd3,il5nkg,"Do you find Hasura fully replaces the need for writing back-end APIs or are you stitching what you can‚Äôt achieve with it?

I‚Äôve been testing it and trying to understand its limitations. I‚Äôd prefer not to write any back-end code and stick with product/design/front-end but don‚Äôt know how long I can go that route with Hasura before I need to involve a back-end developer.",3.0
g3qy35h,il5nkg,"Yes, it solves for 90% of our problems thus far. So that's 90% less code we have to maintain. 

I believe the most extensive logic we've had to implement ourselves are authentication and authorization.",3.0
g3tevdn,il5nkg,And if you need to communicate with third party APIs? How it's done in hasura?,1.0
g3ur0tp,il5nkg,You would use resolvers https://hasura.io/blog/create-a-remote-schema-to-wrap-a-rest-api-hasura/,1.0
g3pvp8h,il5nkg,"Great article, thanks! Could you please do the same for the client side too?",7.0
g3q1xi4,il5nkg,"Good idea! Will do. Personally, right now I just use https://github.com/f/graphql.js - tiny, very simple.",6.0
g3qc55x,il5nkg,"How do you rate Relay? We're losing patience with Apollo Client here, and Relay is up for evaluation, but we don't really have any insight on it before we start.",2.0
g3qm5xi,il5nkg,"Relay has it's own standards on top of GraphQL. So it requires more from the backend than just a standard GraphQL server.

Without knowing the pain points you are having, I know that my analysis of Apollo Client was that it's simply too big of a library for what we need at SeatGeek.

Because we use TypeScript in our stack, we prefer that the GraphQL library has TS support. So we landed on using [graphql-request](https://www.npmjs.com/package/graphql-request).

We initially used graphql.js, although we had some issues that I don't remember. It was one of my team members who works on this specific parts.",5.0
g3qynpp,il5nkg,"I hated using relay.

It‚Äôs powerful but the documentation is so incredibly lacking that I found myself wasting so many hours digging through the code to figure out how it works.

This was 3 years ago though so it may be different now.",3.0
g3rblvc,il5nkg,"The most stupid thing in client Apollo is their cache invalidation and query refetching. First you don't have any way to invalidate query or drop some normalized objects from cache. Second, whoever came up with then mechanism of refetching queries made huge mistake. If you want to force to refetch some query in non-related component you are not only have to know its name (which is already bad, but understandable), BUT your also have to call refetch with exact parameters that original query was called with. How the hell I'm supposed to know anything about completely unrelated query?? 99% of the time I don't even have access to its parameters.",1.0
g3tl4ib,il5nkg,"That, and also:

- queries don't refetch automatically when variables change; you have to do it manually

- no way to reset settled mutation state

- no way to cancel a pending request

- __typename being injected into every request and response

- documentation is usually not the best; every new thing I try to do usually results in spending one to few hours on browsing issues in multiple github repos, online articles or even source code

- don't even get me started on error handling

- probably many other things I'd forgotten

The breaking changes in latest apollo-client@3 really make me want to reconsider the choice of stack of my past colleagues. Tried to upgrade a medium sized project with multiple links but to no avail. Just few hours wasted.

&lt;/rant&gt;

Edit: some of this may be outdated but I couldn't find a way to upgrade to the latest version, so I'm basing it on my past experiences over past 6 months.",1.0
g3rvaop,il5nkg,"Question about bundle size/npm modules size. On a web server, how much does that really matter? Since we're not sending that bundle out anywhere, and it's just sitting on the server, is it super important?",3.0
g3sisie,il5nkg,"I was thinking about that too, honestly, I don't think it's a limitation in respect to the heavy bundle size on a server per se until you see it comes out of the box with so many features that it might just confound a newbie or really be an overkill for a simple mock project that you might just consider using REST orrr express-graphql, the only ""problem"" I have with pure grahql is it doesn't handle nested types resolver graciously while Appolo makes that a breeze",1.0
g3snata,il5nkg,Interesting. Yeah I think one of the most forcefully made arguments in the article is that the bundle size is *way* smaller without Apollo. I'm skeptical that's going to give you much benefit at all server side.,1.0
g3v6pdb,il5nkg,Isn't GraphQL also struggling to integrate with the latest version of Next.js because of getDataFromTree being super slow? I'm looking for alternatives as I want to build a client project using Next.js but I can't use Apollo because of this issue.,2.0
g3r9i5x,il5nkg,anyone have any recommendations for graphql tutorials?,1.0
g3sjw9x,il5nkg,"on youtube, you could watch **Code Realms** graphql and MERN tutorial he really goes in-depth [here's his playlist](https://www.youtube.com/playlist?list=PLcCp4mjO-z9_y8lByvIfNgA_F18l-soQv)",2.0
g3sm4n8,il5nkg,"Thanks, I'll check it out.",1.0
g3t3akv,il5nkg,"Whats wrong with installing a hundred of packages along with apollo? I mean it sounds like a bad thing,but it  isn't really a practical problem though.",1.0
g3tchen,il5nkg,Great Article..thank you for sharing...,1.0
g3qals2,il4vsw,"On the one hand, I always appreciate attempts to look at things objectively.  On the other hand, I *hate* when people (on purpose or on accident) pretend to show you something objective, but they're really showing you something *subjective* pretending to be objective because of their biases.

Articles where you compare technologies that are meant to be used to power large/complex sites, against .... [***this***](https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mobile-nav-states.png) ... are flat out misleading (at best).  The value of using a framework like React (or Preact) *is not seen* on a tiny little (one step above ""hello world"") site like that!

Look, if the author's thesis had been ""people shouldn't use frameworks for tiny projects"", I would have heartily upvoted it.  But when you pretend you're providing objective information ... and you base your findings on an incredibly simplistic example ... you're *not* providing objective info: you are arguing against a straw man!

P.S. I imagine someone will reply ""we *have* to use small examples: who wants to rewrite a seriously-sized project in React, Preact, and without a framework""?  I totally get that: I for one don't :)

But really that's my point: just because you don't *want* to do the work to compare apples to apples, that does not mean you can just say ""well comparing apples to oranges is easier"" ... and present it as a thesis that compares apples to apples.

If you *had* tried to compare apples to apples, I can all but guarantee the parts of the frameworks you'd have to rewrite to make your vanilla.js implementation work would have been *significantly* less efficient than either framework.",7.0
g3r1iyk,il4vsw,"To play devil's advocate, truly complex UIs written in the framework darlings du jour (react/vue/whatever) will still defer all the heavy lifting to other libraries. Look, for example, at this: https://deck.gl/examples/hexagon-layer/

This example illustrates the idea of starting from the statement that a framework is more expensive and taking it to the absolute logical extreme: it'd be nearly impossible to implement this without someone taking the time to get out of React land and drop down into raw GLSL!

So if we're arguing that cookie cutter CRUD is too simple to highlight the benefits of frameworks, but that custom push-to-the-limits stuff is too complex for frameworks, that... doesn't leave a whole lot left.

The reality is that a lot of people do use React / Next.js / Gatsby / etc for things that vanilla (or even no JS) might fit just fine, so IMHO the comparison between ""simple"" apps is more apples-to-apples than theory might suggest.",0.0
g3rgqkt,il4vsw,"&gt;The reality is that a lot of people do use React / Next.js / Gatsby / etc for things that vanilla (or even no JS) might fit just fine, so IMHO the comparison between ""simple"" apps is more apples-to-apples than theory might suggest.

As I said before:

&gt;Look, if the author's thesis had been ""people shouldn't use frameworks for tiny projects"", I would have heartily upvoted it.

My issue *isn't* with comparing a framework to vanilla for a small site.  My issue is with *extrapolating conclusions from that comparison to bigger projects* ... while willfully or accidentally ignoring the fact that such a comparison  is apples to oranges.",1.0
g3plb55,il4vsw,To write or to render?,4.0
g3rgtj7,il4vsw,"Why not just link to the actual article instead of an article that's essentially just saying ""go look at this other article""?",2.0
g3pshw0,il4vsw,This is a worthless article. React and other frameworks don't exist because of rendering speed.,2.0
g3qcnkh,il4vsw,"I initially downvoted this ... until I read the article and realized how worthless it is :)

The thing is, even though I agree the article was crap, the way you say things sounds bad too.  It sounds like you're saying ""any discussion of React's negatives are irrelevant, because it doesn't exist for quick rendering.""

That's just very wrong: React *is all about* rendering quickly, and regardless React could have a million other advantages and it'd *still* be worth having legitimate conversations about it's speed.

The reason the article is worthless is that it's a straw man argument: it uses an extreme example of an almost ""hello world""-like site as the basis for all its claims.  But again a *legitimate* discussion of React rendering speed would not be worthless at all!",2.0
g3pj7zw,il4tiw,"JavaScript uses 53 bits to represent integers. This means that any number larger than Number.MAX_SAFE_INTEGER is treated as a floating point number and will have rounding errors. 

If you really need long integer arithmetic and you're targeting newer browsers you can use BigInt literals. Simply add an 'n' after the number. 
For example

const val = 123456789012345n;

 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt",3.0
g3sghm1,il4tiw,"&gt; JavaScript uses 53 bits to represent integers

Correction: the number type of JS is a [double](https://en.wikipedia.org/wiki/Double-precision_floating-point_format#IEEE_754_double-precision_binary_floating-point_format:_binary64), which consists of 1 bit of sign, 11 bits of exponent and 52 bits of mantissa. This can accurately represent numbers that fit in the mantissa with the sign (52 + 1 = 53)

The only other number type in JS is the **arbitrary width** BigInt.",2.0
g3pf56s,il4tiw,"With a number that big you are going beyond the max\_safe\_integer value,  [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/Number/MAX\_SAFE\_INTEGER](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) So you can expect undesired results. 

If you just need a long string of numbers, then use a string, if you are actually keeping count of something, what the hell are you counting?",2.0
g3pedzy,il4tiw,Rounding,1.0
g3qitjs,il4sca,A great article... thank you!,1.0
g3t5ozk,il4sca,Thank you for reading it.,1.0
g3pdjog,il2ndq,"Hooks and useContext are a complement to a state management library, not a competitor. 

If I have a datepicker component, it needs to know whether the calendar is popped up, what the currently selected day is, what month is in view, etc. None of that needs to be known outside the component. The state being saved in the component is _ephemeral_, we don't care if we lose it when the user exits. When the user chooses a date, the component should return the user's date choice by calling an `onPick` or `onChange` prop. Using hooks, a component can encapsulate its own internal state and be reused in any project no matter its high-level state management. 

Many if not most applications, however, need a different kind of state that encompasses application-specific needs and often must be persisted externally. For example, I may have an interview tool that asks the user two dozen questions over several pages, including conditional logic that only displays some fields based on answers to previous questions. I want to auto-save the data so that the user can exit at any point and later come back to where they were. That data needs to be easily serialized/deserialized into, for example, a JSON blob. For any non-trivial application state, any solution to that problem will end up being some cousin of Redux or Mobx. You can hand-roll it out of useState, useContext, and useReducer, but you will have to solve many of the same problems.

Plus, useContext is specifically _not_ a solution for application state, there is a reason it's shown mostly as a way to do themes. It's great for things you want to share across the application that don't change often, like themes or other global settings. These are things you wouldn't want in your application state anyway.",51.0
g3pr1qk,il2ndq,"&gt;useContext is specifically *not* a solution for application state, there is a reason it's shown mostly as a way to do themes

Can you expand on this?  Is there some limitation that prevents often updated global state from living in context?",4.0
g3pto0h,il2ndq,"[Per Sebastian Markbage from the React team](https://github.com/facebook/react/issues/14110#issuecomment-448074060):

&gt; My personal summary is that new context is ready to be used for low frequency unlikely updates (like locale/theme). It's also good to use it in the same way as old context was used. I.e. for static values and then propagate updates through subscriptions. It's not ready to be used as a replacement for all Flux-like state propagation.

This is largely due to [the current limitations on how context updates components when a new value is received](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#context-and-rendering-behavior).",17.0
g3psj1a,il2ndq,No but it can introduce some real performance bottlenecks. Of course you can solve these but at that point you've just spent your time half heartedly reinventing Redux,5.0
g3pwkba,il2ndq,"When you change a variable that's part of Context, by default it causes all the components beneath it in the tree to rerender. For something like a theme, that's appropriate, and for something like a user account which rarely changes, that's probably not a big deal. But if you're storing a bunch of frequently changing data in context, you may find yourself needing to tweak things to avoid unnecessary rerenders.",2.0
g3q21y7,il2ndq,"Gotcha.  Is that true even for child components that don't use the context?  ie

    &lt;A&gt; {/* I use the context and make a change to it */}
       &lt;B&gt; {/* I don't use context.  Will I re-render? */} 
         &lt;C/&gt; {/* but I do consume the context.  I will re-render  */} 
       &lt;/B&gt;   
    &lt;/A&gt;",1.0
g3qa92f,il2ndq,"From my understanding, yes -- the whole tree rerenders when the context changes, by default. There are some tricks to get around that, and, frankly, that may not have a performance implication in your particular app, but it's something to be aware of when turning to context.",3.0
g3rwhc1,il2ndq,"Component `B` is likely to re-render in that scenario - not because of the context itself, but because `A` has to queue a state update and re-render in order to update the context value, and [React re-renders recursively by default](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#standard-render-behavior).

See the rest of my extensive post on [A (Mostly) Complete Guide to React Rendering Behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/) for more details, which covers how rendering works with just React components, Context, and React-Redux.",3.0
g3s6wvy,il2ndq,https://leewarrick.com/blog/the-problem-with-context/,2.0
g3q38t3,il2ndq,"Rendering struggles, mostly. Context is a pain to get to render properly, doesn't have a way to customize that, and so you're usually brute-forcing your renders for complex updates, which can lead to lots of other trickle-down issues. More trouble than it's worth.",1.0
g3pxeil,il2ndq,"&gt;For example, I may have an interview tool that asks the user two dozen questions over several pages, including conditional logic that only displays some fields based on answers to previous questions. I want to auto-save the data so that the user can exit at any point and later come back to where they were.

For what it's worth, a multi-page form can *also* have its data encapsulated in a parent component.

    &lt;FormBase&gt;
      &lt;Page1 values={baseValues} updateValues={setBaseValues} /&gt;
      &lt;Page2 values={baseValues} updateValues={setBaseValues} /&gt;
      &lt;Page3 values={baseValues} updateValues={setBaseValues} /&gt;
    &lt;/FormBase&gt;

You _could_ reach for Redux there, but this pattern is simple enough since it's a parent component sharing its state with direct children. Where this may really begin to fall down is if a totally different widget needed to conditionally display your status based on the form responses.",3.0
g3s65si,il2ndq,"Yeah that's totally legit, it's really an example of rolling your own global state with `useState`. Note, however, that the `Page` components may now have to prop drill several layers deep through what are essentially layout components. For simple cases this is fine, or maybe you use Formik state if form elements are the entire page. As an app gets more complex though you will be cursing either of those solutions.",2.0
g3pecgr,il2ndq,"To be perfectly honest, I never liked redux. I'm 100% ok with using it for work, but I can never consider it my own personal choice. There's a lot of repetition, a lot much jumping around between files, too much repeated code: think about it, every reducer, every action creator, has an almost identical structure. Every time you want to add something, you have to change at least three things: reducer, action creator and connect function for your component - this makes you at least three times slower than you can be. Nothing is automated, and if it is, it's considered a bad practice. There's very little out-of-the-box features, making thunk and reselect basically necessary additions. The strictness in terms of reducers leads to a lack of capabilities, e.g. it's considered a bad practice to store a function within your reducer, and this strictness doesn't even lead to any improvements, because it's a gajillion times faster to put a breakpoint for debugging than doing state time traveling.

The perfect state management library is spreadsheet-like. It's the most natural, most declarative and most intuitive approach. **A** depends on **B** and **C**. **B** or **C** changes, that means **A** needs to be recalculated. **B** and **C** is your data, which can itself depend on other data. And **A** is your component. No repetition. Simple, clean and declarative code. I wrote my own library for it, because it was straightforward. That's it - no more endless battle, no more Facebook-pushed solutions, no more arguments - that's the best and cleanest solution for highly interactive data.",17.0
g3pu9we,il2ndq,"We specifically built [our official Redux Toolkit package](https://redux-toolkit.js.org) to eliminate the boilerplate issues you described, and [now teach people to use the ""ducks/slice"" pattern](https://redux.js.org/tutorials/essentials/part-2-app-structure#redux-slices) to put their Redux logic into a single file.  RTK also sets up thunks by default, includes Reselect out of the box, and uses Immer internally to let you write ""mutating"" immutable updates in your reducers.  In addition, the React-Redux hooks API makes it really easy to work with Redux in our React components.

I'll also note that Redux has _never_ been a Facebook project.  Dan and Andrew, who created it, did both move on to join the React team, but Redux itself has never been affiliated with Facebook in any way.  We're a completely independent OSS project.",7.0
g3rnf4y,il2ndq,"redux-toolkit is a life saver! Less boilerplate, mutable code with immer js, and intuitive! Thanks!!!",3.0
g3s1k6c,il2ndq,"Can redux toolkit replicate the flow of any action type be picked up by multiple reducers? This is something I always liked about the dispatch flow.

An example could be for a RESET action type that needed to affect multiple reducers across the store.",2.0
g3s763d,il2ndq,"Yes, absolutely.

Redux Toolkit doesn't change anything about the Redux data flow - it just provides APIs that mean you can write the same thing with less code.

In this particular case, [the `createSlice` API has an `extraReducers` option](https://redux-toolkit.js.org/api/createSlice#the-builder-callback-api-for-extrareducers) that you can use to have a given slice reducer respond to actions that were defined outside that specific slice, including the ability to pattern-match on actions (such as ""handle all pending or fulfilled actions by updating a loading flag"").",1.0
g3trdxb,il2ndq,"Thanks mate.

Just another question if I may. In that example on the counter reducer createSlice, what is the purpose of the extraReducers object and the incrementBy methods? I can see the purpose on the user - catching the counter action type, correct?

Evidently I need to do more reading up on the toolkit in general, but I am about to start a large project at work and right now I am on the fence on whether to go with toolkit or the way I know with AC, etc",1.0
g3u8ip9,il2ndq,"The ""counter app"" is really written just to demonstrate the things you _can_ do with Redux Toolkit, in the same way that the Create-React-App base template file structure is designed to show the things you _can_ do in a CRA app setup:

- CRA:
  - `index.js`: entry point
  - `index.css`: can import CSS files into JS
  - `App.js`: Can write components in separate files
  - `App.css`: Can have more than one CSS file
  - `App.test.js`: can write tests
- RTK:
  - `features/counter/counterSlice.js`: suggested file/folder structure - put logic in ""feature folders"", and Redux code in ""slice"" files
  - `increment`: basic reducer
  - `incrementBy`: more than one reducer in a slice, including using values from an action payload
  - `extraReducers`: handle actions defined in other slices",1.0
g3q0wxw,il2ndq,"I'm glad Redux has been solving their own problems and lack of functionality. Don't get me wrong, I'm thankful to Redux project. Simple pubsub plus one-way data flow plus selectors can do wonders and get you far, and it's not a bad pattern, considering many alternatives. That doesn't mean it's unreasonable to move on. It's like moving from a crib to bed - you're thankful for the crib, you have some good and bad memories about it, but you just end up removing it and choosing something better.

The toolkit you mentioned is just a nicer version of the crib, with things that you need anyway being packaged together. Which still doesn't solve the problem of state purity (no functions, for example) or having to always make changes to mapStateToProps of your component.

I know that Facebook didn't push Redux in any way, I wanted to remove this phrase from my comment right away, but decided to keep it because we're also talking about React, and Recoil fits nicely into the discussion. Thank you for clarifying this point.",1.0
g3q9aaj,il2ndq,"Allow me to drive the point to the absolute and undeniable conclusion. Redux is only trying to approximate the spreadsheet-like solution. It makes an okay attempt, but it can never reach it. Let me show you an example.

You write

    const counterSlice = createSlice({
      name: 'business',
      initialState: {
        itemsProduced: 0,
        itemsSold: 0,
        itemPrice: 200,
        itemCost: 100,
      },
      reducers: {
        produceItem: state =&gt; {
          state.itemsProduced += 1;
        },
        sellItem: state =&gt; {
          state.itemsSold -= 1;
        },
      }
    });
    
    const itemsSoldSelector = state =&gt; state.itemsSold;
    const itemsProducedSelector = state =&gt; state.itemsProduced;
    const itemPriceSelector = state =&gt; state.itemPrice;
    const itemCostSelector = state =&gt; state.itemCost;
    
    const revenueSelector = createSelector(
      [itemsSoldSelector, itemPriceSelector],
      (itemsSold, itemPrice) =&gt; itemsSold * itemPrice
    );
    
    const totalCostSelector = createSelector(
      [itemsProducedSelector, itemCostSelector],
      (itemsProduced, itemCost) =&gt; itemsProduced * itemCost
    );
    
    const profitSelector = createSelector(
      [revenueSelector, totalCostSelector],
      (revenue, totalCost) =&gt; revenue - totalCost
    );
    
    const mapStateToProps = state =&gt; ({
      revenue: revenueSelector(state.business),
      totalCost: totalCostSelector(state.business),
      profit: profitSelector(state.business),
    });
    
    export connect(mapStateToProps)(Component);

Look at how many times I repeated each piece of data? I have to mention each data twice per selector, plus I need a selector for each independent data if I want to be more efficient than lazy. Then, I need to mention it again in mapStateToProps. There's so much boilerplate, even if you use the toolkit.

In reality, you want to write the following:

    const business = connectObject({
      itemsProduced: 0,
      itemsSold: 0,
      itemPrice: 200,
      itemCost: 100,
      get revenue() {
        return this.itemsSold * this.itemPrice;
      },
      get totalCost() {
        return this.itemsProduced * this.itemCost;
      },
      get profit() {
        return this.revenue - this.totalCost;
      },
    });
    
    // Then you can connect component to object without any mapStateToProps
    export connectComponent(Component); // whenever Component uses business fields, it will be recognized and subscribed to this data automatically
    
    // If you ever need to change any data, simply do
    business.itemsProduced++; // And the setter will automatically recalculate anything it needs and update the component

That's what my library attempts to do. That's what you expect from an ideal state management library. There's no separation between independent and dependent data (such as selectors VS. state) - the independent data is simply data with 0 dependencies. There's no repetition.

You, a user of the library should be in total control over when the state object gets created and what initial values are. You can do so by, for example, doing this:

    const createBusiness = connectFactory((initialValues) =&gt; ({
      itemsProduced: initialValues.itemsProduced,
      itemsSold: initialValues.itemsSold,
      itemPrice: initialValues.itemPrice,
      itemCost: initialValues.itemCost,
      get revenue() {
        return this.itemsSold * this.itemPrice;
      },
      get totalCost() {
        return this.itemsProduced * this.itemCost;
      },
      get profit() {
        return this.revenue - this.totalCost;
      },
    }));
    
    // Then, the connected values can be created at any point by doing
    const business = createBusiness({ ...someValues });

The initial values shouldn't be decided at the time of initializing reducers. That's just another arbitrary limitation of Redux.

Redux is only trying to approximate this solution, but it never will, unless the team takes the problems more seriously and rewrites with a spreadsheet-like functionality and a nice API for a new version, which I doubt will ever happen.",0.0
g3qm3fm,il2ndq,"Well I would argue that the benefit of have each feature/component so isolated and repeated is great for larger projects that need to have work divided between teams. There is a clear separation of work that can be distributed out, at least in my experience using it professionally.",3.0
g3rv7u7,il2ndq,How do you gain a clearer separation of work from code repetition? And how does my solution prevents a clearer separation?,1.0
g3th2xl,il2ndq,"None of these selectors is even remotely worth of using reselect for. Reselect is for complex things that need to be cached.
If your getters needed caching, you would need to add that there as well, but there's no reason in both cases to do it prematurely.

So your example comes down to
```
const selectRevenue = state =&gt; state.itemsSold * state.itemPrice;

const selectTotalCost = state =&gt; state.itemsProduced * state.itemCost;

const profit = state = selectRevenue(state) - selectTotalCost(state)
``` 

Please compare equivalent things.",2.0
g3tod16,il2ndq,"That's one way to shorten it, at the expense of multiplication and subtraction being computed each time your component updates for whatever reason, which is suboptimal performance. Regardless, I don't think it changes the outcome much. The point still stands that if you are using selectors, you have to repeat your data at the very least twice (in declaring dependencies, then in data calculation), plus repeated again in the mapStateToProps, not to mention Redux not being flexible in at least two other ways I mentioned.

It is true that Redux is only trying to approximate the spreadsheet-like solution but far from doing it the best way possible.

**Note**: I edited my comment because I partially agree with you - I made a little mistake where I didn't need createSelector in 4 places. Writing code on Reddit is not the most convenient thing.",1.0
g3tt7yv,il2ndq,"Well yes, that non-memoized variant has the *exact same runtime behavior* as your getters. 
Unless you add memoization into your getters, there is no comparison of code amount to make.

Also, you can use `useSelector` nowadays. You are criticizing blindly &amp; prematurely overoptimized code written in a style that would not be written in any new react&amp;redux project.",2.0
g3tv6sk,il2ndq,"&gt; Well yes, that non-memoized variant has the exact same runtime behavior as your getters

Incorrect. The getters and setters in the other example (e.g. if you use my library) actually organize an underlying directed acyclic graph structure with automatic dependency detection and caching, which is very different from Redux's one way data flow. And yes, there is a comparison of code amount to make, since the whole point is less boilerplate.

&gt; You are criticizing blindly &amp; prematurely overoptimized code

Obviously I couldn't have chosen a less trivial example, because of the Reddit format. And yes, the performance in this case is not that critical. But I have worked extensively with react+redux+selector combination for an extremely interactive application, and in my experience it was common to see similar examples, but where selectors were necessary. And if you used a bit of imagination, you'd see very fast how this example applies to interactive applications and how Redux leads to an ever-increasing amount of boilerplate, while the other method is much better (though, I admit, to realize this point you either need some foresight or need to use both in practice, which I have).

My example was just that, an example. You shouldn't focus this much on this particular example, but on a general principle and how it can save a lot of code, boilerplate and mental pressure, which was the whole point.",1.0
g3rs2qu,il2ndq,"Downvoted without reading just because that is *way* too much for a single Reddit post.  It makes it harder to even see any of the  other conversations happening on the page.

We're not in GitHub here; this is not the place for massive chunks of code :(",-6.0
g3rvgfd,il2ndq,"Thanks for being honest and also, people like you make everyone's reddit experience worse.

&gt; It makes it harder to even see any of the other conversations happening on the page.

And yet you posted your own comment making it even harder to see for others.",4.0
g3rwq1m,il2ndq,"&gt;le like you make everyone's reddit experience worse

I'm not the one putting multiple files worth of source code into a single post, on a  site that's supposed to be for *humans to talk to each other*!  If you want to share code use a Gist, use a Repl.it, use *something* ... don't just copy paste GitHub into Reddit.

It *literally* makes ...

&gt;everyone's reddit experience worse

But I do appreciate your appreciation of my honesty :)  I hate to downvote someone without explaining why, even though I *know* I'm likely to get downvoted as a result of saying it.",1.0
g3s068e,il2ndq,"&gt; I'm not the one putting multiple files worth of source code into a single post, on a site that's supposed to be for humans to talk to each other!

You're not. But why do you expect others to follow exactly your amount of text / code? People have different criteria, and people don't know your criteria before they post. Your criteria is that I should've linked to gist, well, someone else prefers to see the code together, can't satisfy everyone now, can I?

This is honestly the most ridiculous explanation for the downvote I've seen. I don't care about a downvote, especially if it comes from someone who didn't read the comment. But yeah, downvoting someone for not complying with your personal criteria for an amount of code on a programming subreddit... wow. It does make everyone's experience worse because people who see this will subconsciously start to censor themselves more and might even give up writing an argument proving someone else is wrong because they'd fear someone's downvotes, so you'd end up with reddit with more undebated wrong opinions. Cause why bother arguing against if you're going to be downvoted regardless of your correctness? It makes for a much worse experience of reddit.",1.0
g3pjfca,il2ndq,Can we see this library?,2.0
g3pkw97,il2ndq,"[Here](https://github.com/guitarino/typeconnect). I don't have the official docs yet, though I have unit tests that you can deduce functionality from. I also made [an app](https://github.com/securebook/securebook.github.io) that utilizes it with preact (react-like library). Theres also some performance improvements I'm thinking of making. As it stands, right now it's for my personal use, but feel free to play around with it if you wish.",4.0
g3plqem,il2ndq,very cool! thanks for sharing I'll give it a look,2.0
g3pp1xr,il2ndq,"Just FYI, there's libraries that are more documented and more battle-tested, for example [S.js](https://github.com/adamhaile/S), which was one of the original inspirations for my own experimentation.",3.0
g3pn0ur,il2ndq,Is this different from svelte's approach?,1.0
g3poovy,il2ndq,"I'd say it's pretty much the same, except Svelte is a big (albeit disappearing) framework that you have to structure all your view logic around. You can't just take the spreadsheet functionality out and use it in your react project, which, in my opinion, is kind of wrong, because I believe in smaller modular solutions rather than one big central framework that everything has to revolve around. So, I prefer a library for state management to be totally separate from my view library, so I can pick and choose, and still be in control of my software.",3.0
g3pe36w,il2ndq,"Whenever I see people complain that you have to change too many files when using Redux, I wonder if they ever tried using the Redux ducks pattern: https://github.com/erikras/ducks-modular-redux

Personally I also dislike Redux modules when they're split over constants, actions, selectors and reducer files. But put those things in a single file, and I find things are much easier to manage (while making that single file grow large faster, giving you an incentive to not let modules as a whole become too big).

I really wish that pattern was more popular because I've literally seen people spread everything over multiple files and then complain they need to change so many files for a single change.",8.0
g3pkgqq,il2ndq,"Also, for people who like more ‚Äúbatteries-included‚Äù stuff, there is Redux toolkit too. 

It adds a `createSlice()` function that‚Äôs pretty cool. 

Like here‚Äôs a basic counter store in the tutorial, super easy:

    const counterSlice = createSlice({
        name: 'counter',
        initialState: 0,
            reducers: {
                increment: state =&gt; state + 1,
                decrement: state =&gt; state - 1
            }
    })

    const store = configureStore({
        reducer: counterSlice.reducer
    })

    document.getElementById('increment').addEventListener('click', () =&gt; {
        store.dispatch(counterSlice.actions.increment())
    })",12.0
g3q3sm3,il2ndq,"&gt;document.getElementById('increment').addEventListener('click', () =&gt; {  
store.dispatch(counterSlice.actions.increment())  
})

Oh god, what are you doing...",1.0
g3qk6qp,il2ndq,"\*shrug\*

Just copied the example out of their tutorial, it's probably meant to be framework agnostic.",4.0
g3ql8oe,il2ndq,"Ah, if it's not react-specific then that makes more sense. I thought you were using getElementById in your react projects to add event listeners. Horrifying thought.",1.0
g3pttwi,il2ndq,"Note that [we now specifically recommend using the ""ducks"" pattern as the standard way to organize Redux logic](https://redux.js.org/style-guide/style-guide#structure-files-as-feature-folders-or-ducks) , and [the `createSlice` API from Redux Toolkit basically gives you ""ducks""-style files for free](https://redux-toolkit.js.org/usage/usage-guide#exporting-and-using-slices).

We also [now teach using the ""ducks/slice file"" pattern in our new ""Redux Essentials"" core docs tutorial](https://redux.js.org/tutorials/essentials/part-2-app-structure#redux-slices).",4.0
g3pkis8,il2ndq,"Doctor, it hurts when I do this!",2.0
g3q3mv9,il2ndq,"Redux &amp; hooks won.

Who‚Äôs battling?",6.0
g3p96eo,il2ndq,"hooks good, redux bad",4.0
g3pglwh,il2ndq,I'm the exact opposite.,1.0
g3pknbs,il2ndq,"I think they‚Äôre just memeing since hooks is the new hotness. 

Redux is still perfectly fine and still preferable in certain scenarios.",4.0
g3pmivc,il2ndq,Agree. For more complex applications hooks are really painful to work with.,1.0
g3q0783,il2ndq,Thank you for the article it was very informative. Do you have any preference over one or the other for large scale applications?,1.0
g3uea1d,il2ndq,"I use mobX and I think it can be very pretty but I tend to suffer from a little bit of spaghetti thing going on. This component update this state which depends on some other states for conditions etc. 

I build real time very fast updates applications, always feared Redux for theses because of the single state tree. Feels like &gt; 10 updates per seconds would make this pretty weird even with selectors. 

Mobx allows me to have minimal changes in specific observable and focus on having targeted observers as well as @computed values which only triggers on changes etc. 

Now what I'm sad about is that few years ago I was under the impression that Decorators were coming our way... Now I think they are not anymore. Maybe not ever. I don't like hacking at CRA webpack to allow them. 

Beside Redux and MobX what are a good choice for highly updated components and minimizing cpu usage with targeted model updates?

(Virtual classroom with user lists up to 45 users, multi user whiteboards, chats, etc. )

I may have the option to rewrite a good part of it and I feel at a loss. Picking technology/pattern is such a burden to me theses days.

Edit: Thanks to this thread already, [this guy sort of gives a direct answer to my problem](https://www.youtube.com/watch?time_continue=4&amp;v=_ISAA_Jt9kI&amp;feature=emb_title)",1.0
g3pj1in,il2ndq,"On the project I'm currently working on, I tried really hard to avoid using react-dnd for the drag and drop because it relies on Redux, but today I finally bit the bullet and accepted I'll have to use it because nothing else seems to handle a grid very well.

I would prefer a solution that didn't pull in Redux just to handle state for drag and drop, but it seems to work better than anything else. Don't know if the creators have any plans to refactor it to replace Redux with useContext and useReducer, but I'd be a lot happier if that happened.",1.0
g3pyhpk,il2ndq,My react is a little rusty so maybe I'm missing something--why would you use a state management library for something like drag and drop? Shouldn't that live as local state somewhere? Just trying to figure out the thought process behind it because it seems so overkill.,7.0
g3q4xbj,il2ndq,"Drag and drop is pretty complex, and react-dnd needs to be a generic solution that's reusable for many use cases, which increases the complexity. I did implement a simple draggable list elsewhere, but it didn't work very well with a grid so I had to look for a more robust solution that I knew would handle it.

Also, react-dnd predates both hooks and the Context API, so they would have had a greater need for Redux than we'd have now. Based on my own exposure to useReducer and useContext, I imagine they could rewrite the internals to remove Redux, but it may not be a priority.",1.0
g3qssc9,il2ndq,"That makes sense, but also coupling it to something like Redux makes it seem less reusable since it's making the assumption that you're using Redux, haha. I guess it makes sense that it was the best option at the time and that it's a bunch of effort to change it now, it just strikes me as strange that a state management tool was the best option.",1.0
g3quv14,il2ndq,"I wouldn't say it makes it less reusable as it only uses Redux internally - the details are hidden behind a hook-based API, and it's pulled in as a dependency, so you never interact with Redux directly. But it's still a big dependency that could be removed and I'm not using elsewhere so it's not ideal.",1.0
g3wa26o,il2ndq,"Redux is roughly 2kb, I wouldn't worry that it's a dependency of a dependency",1.0
g3q2zfv,il2ndq,"Great article! Thank you for your balanced views and well reasoned pros/cons.

I had similar observations regarding Redux. It gets us halfway to a solution, but it has the major shortcomings you touched on: **the infamous boilerplate problem** \-- it requires a huge amount of manual coding to get anything done, and **poor modularity --** the code gets spread all over the place, and consequently it becomes unmaintainable as a project grows.

*Any* shared state library must address these issues, and do them well. It should have:

* **maximum DRYness**: minimize the amount of code it takes to manage shared state
* **strong modularity:** all code for a ""slice"" of the shared state should be in the same file, and exports from that file should be minimized.

In my efforts to discover the DRYest, most modular way to write Redux I discovered what I call the [Modular Redux design pattern](https://medium.com/@shanebdavis/modular-redux-a-design-pattern-for-mastering-scalable-shared-state-82d4abc0d7b3). Simply by writing Redux in a different way, with no additional dependencies, you can get a long way towards a DRY, modular solution.

I then wrote a small, 100-line open-source library to DRY up the last little bits: 

* [hooks-for-redux](https://www.npmjs.com/package/hooks-for-redux)

I offer it as an option for those of you who want (or need) to use Redux but also want a DRY, modular solution.

Here's a complete, working example:

    import React from 'react';
    import ReactDOM from 'react-dom';
    import {createReduxModule, Provider} from 'hooks-for-redux'
     
    const [useCount, {inc, add, reset}] = createReduxModule('count', 0, {
      inc: (state) =&gt; state + 1,
      add: (state, amount) =&gt; state + amount,
      reset: () =&gt; 0
    })
    
    const App = () =&gt;
      &lt;p&gt;
        Count: {useCount()}
        {' '}&lt;input type=""button"" value=""+1""    onClick={inc} /&gt;
        {' '}&lt;input type=""button"" value=""+10""   onClick={() =&gt; add(10)} /&gt;
        {' '}&lt;input type=""button"" value=""reset"" onClick={reset} /&gt;
      &lt;/p&gt;
     
    ReactDOM.render(
      &lt;Provider&gt;&lt;App /&gt;&lt;/Provider&gt;,
      document.getElementById('root')
    );",1.0
g3thezf,il2ndq,"The infamous boilerplate problem was solved a year ago with an official library though.

Not saying yours isn't interesting, but nowadays claiming that there's a boilerplate problem just means you didn't check the documentation for a year.",3.0
g3ux8t0,il2ndq,"Thank you for bringing up Redux-Toolkit! 

I go into considerable detail comparing Hooks-for-Redux with Redux-Toolkit in the Modular Redux design pattern blog post I linked above. Here is a direct link to the [ReduxToolkit vs Hooks-for-Redux comparison section](https://medium.com/@shanebdavis/modular-redux-a-design-pattern-for-mastering-scalable-shared-state-82d4abc0d7b3#1d6f). There is a lot more in the blog post, but here is a summary of what I found. 

Though Redux-Toolkit was a step in the right direction, it certainly didn't solve the boilerplate or modular problems. 

In terms of boilerplate, **Redux-Toolkit still requires more than twice the necessary code** to add Redux to a project. 

The real problem, though, is Redux-Toolkit didn't do anything to solve Redux's module problem. It still uses the same, traditional Redux design patterns in terms of how it integrates with the rest of the project. **Redux, even with Toolkit, becomes exponentially complex as a project scales.**

Here's just one example pulled from the blog post:

Take the [ReduxToolkit's intermediate tutorial](https://redux-toolkit.js.org/tutorials/intermediate-tutorial):

* [Redux Toolkit's solution - interactive](https://codesandbox.io/s/rtk-convert-todos-example-uqqy3)[ (codesandbox)](https://codesandbox.io/s/rtk-convert-todos-example-uqqy3)
* [Redux Toolkit's solution - source (github)](https://github.com/reduxjs/rtk-convert-todos-example)

And then convert it to Hooks-for-Redux (H4R):

* [H4R's solution - interactive (codesandbox)](https://codesandbox.io/s/github/shanebdavis/rtk-convert-todos-example-h4r-conversion)
* [H4R's solution - source (github)](https://github.com/shanebdavis/rtk-convert-todos-example-h4r-conversion)

H4R vs ReduxToolkit:

* **Dependencies - 2.1x reduction:** 13 deps vs 27
* **Lines-of-Code - 2.0x reduction:** 193 lines vs 393
* **Files - 30% reduction:** 10 files vs 13
* **Minimized-JS - 30% reduction:** 134k vs 170k

You can really see the difference if you compare the module interdependency diagrams:

* [H4R and Redux-Toolkit module diagrams side-by-side](https://miro.medium.com/max/2000/1*h4ozNJ7KAXMnOThLlqVwcw.png)
* [Redux-Toolkit detailed module diagram](https://miro.medium.com/max/1400/1*FFlwmCYFUENUuY2WRYTjQQ.png)
* [H4R module diagram](https://miro.medium.com/max/1400/1*kkLGTQF1dWh6mMfpuP_FKA.png)

\---

Obviously I'd like people to use my [H4R](https://www.npmjs.com/package/hooks-for-redux), but really, I just want people to be empowered to make bigger, better projects. Total code size matters a lot, but total module interdependencies matters even more, especially as a project grows.",1.0
g3vggau,il2ndq,"Well, for one, your solution is obviously trying to find a ""clever"" solution while the tutorial you are comparing it against tries to teach people how to transfer from a classical redux application to a RTK one. Shortness is not the goal of it, legibility while keeping the initial core structure intact is.
So it seems like an unfair comparison. 

As for the metrics:
Given the difference in the point of the example, the only thing that is really comparable here would be the libraries themselves.
The minified budles of RTK with all dependencies and react-redux is about 45kb (gzipped 15kb), the size of H4R ist about half of that. The majority of the size difference there is `immer` and I'd argue that tradeoff is well worth it or even suggest that I would not want anyone to use H4R without immer - bringing the bundle sizes up into a similar range.

Your example application is breaking redux core principles like putting only serializable values into the store - you put functions as values into the store, which will probably break the devtools and a lot of middlewares like redux-persist.

Also, from reading that code, your approach on store subcriptions seems to always select the full ""module"", which might have massive performance implications down the road.

As for the ""module diagrams"": Again, implementation. The dependency from ""reducers"" to redux could be removed, as for one `combineReducers` is exported by RTK and also because it is an implicit part of `configureStore` anyways. This, too, *could* remove the ""reducers"" folder altogether, leaving both examples with 2 ""redux-specific"" files and all further differences to the structure of components used. And that realistically has nothing to do with RTK, but is part of an example that starts with a ""legacy redux"" application and starts refactoring it while keeping the structure.
Of course, the example could also use hooks instead of `connect`, which would dramatically alter the component structure, but that's not the point of it. So it doesn't.",2.0
g3xjlvn,il2ndq,"I'm flattered that you took a closer look. Thank you! 

A few thoughts...

1. I'll give you that the minimized library size is a weak argument. Code size and interdependencies are what really matter.
2. You are mistaken about the ""breaking redux core principles."" I totally agree, it's very important that the store only contain serializable objects. *Neither that example, nor H4R puts anything but serializable objects in the store.* It's only serializable objects. (Where did you get the idea it didn't?)
3. Store subscriptions - you are right, in part. When you use the default hook it'll trigger a re-render in any component that used that state whenever the state of that module (slice) changes. For a lot of Redux uses, that's all you need.   
However, if you have a module that, say, stores a large map of IDs to records, and single records can be individually updated one at a time, and different parts of the UX render different, individual records... Absolutely, you'd only want the parts of the UX that depend on the changed record to update. Great! There's no reason you can't write your own ""useSelector"" to hook just that part of the state. H4R doesn't prevent you from using react-redux directly if you need more control in specific places.
4. As to the module diagram... I started with the intermediate tutorial because it's the easiest to grok. In the linked blog post I *also* show that [the advanced tutorial is again \~2x more complex than needed](https://medium.com/@shanebdavis/modular-redux-a-design-pattern-for-mastering-scalable-shared-state-82d4abc0d7b3#434f), and that tutorial DOES use hooks.  
One of the main problems with Redux-Toolkit is it exports *action-creators* instead of *dispatchers*. The former is a very leaky abstraction. It means the rest of your React codebase has to understand the internals of how Redux works. It creates unnecessary dependencies everywhere.   
H4R, however, exports *dispatchers -* which are just simple functions. You call them with the minimum params they need, say ""add(10)""  to add 10 to the counter. The React component doesn't need to know that you are using Redux to dispatch, reduce and store the state. All it cares about is adding 10 to it.   
H4R modules only export simple functions and a hook. You could completely replace Redux with some other global state library without having to change a line of code in any React component. That's the power of strong modular design.

At the end of the day, less code is usually better code. It's faster to write, faster to read, faster to refactor, and perhaps most of all, since the number of bugs is usually proportional to the number of lines of code, less lines usually translates into less bugs (or tokens, or whatever code-size metric you prefer). 

I didn't create H4R to be clever, I created it to solve a real problem. Redux is verbose, Redux-toolkit is verbose. Both creates a large surface areas for bugs. We can do better. H4R is just one possible solution.

If you don't feel it's a worthy pursuit to simplify code and reduce code size, then we can just agree we have different values. However, if you do, I just don't see how redux-toolkit holds up.

If, however, you feel my comparisons with the intermediate and advanced tutorials don't show redux-toolkit in the best light, please show me a better example. All the code I've seen online pretty-much follows that general pattern. i.e. It's verbose and has a high degree of fragile modular interdependencies. 

I'd love to see a concrete example of how use redux-toolkit better. Honestly!",1.0
g3ygdtb,il2ndq,"From my reading of it, your `setFilter` reducer saves the filter function itself directly in the store. A function being non-serializable. I might be wrong there though. You have sacrificed quite a bit of legibility in that example to get it as short as possible.

As for your point of ""simplifying code and reducing code size"": those two are not the same thing, often quite the opposite. More code can be easier to read than a code-reducing abstraction. People are getting away from DRY as that sort of thing often leads to unreadable code &amp; bad abstractions. For example, see the talk ""the WET codebase"" by Dan Abramov or Kent C Dodd's ""AHA Programming"".

So there has to be some ""sweet spot"". There might be one or two things to do there, but I'm pretty convinced that RTK is on a good path there, both for offering newcomers to redux a good starting point as also for offering people with existing codebases something to refactor against, step by step, without breaking any existing principles. (This is where I honestly see H4R falling short, because it does too much. It would need pretty much a big bang refactor, where a step-by-step migration might be difficult or feel weird - especialy *because* you are binding dispatchers etc.)

As for binding dispatchers: This is not a thing of RTK, because RTK has not touched any react interaction yet, but is at the moment framework agnostic. 
It *would* have been a part of react-redux (early betas of react-redux with hooks contained that), but in the discussion around it, Dan Abramov highly recommended *not* to hide that implementation detail - and the react-redux team listened. So this is like this because *a member of the react team strongly advised against it*, at a time where only the react team had any experience with hooks.",1.0
g3pae11,il2ndq,What do you think about storing the state in contexts? It sounds like a good middle ground between using something like redux and storing the state in components themselves.,0.0
g3pn0a9,il2ndq,[deleted],-3.0
g3przfn,il2ndq,"Recoil is so clean. 

Do you keep your selectors and atoms in the same file?",1.0
g3p9es3,il2ndq,"This reads like you've never heard of useContext and useReducer. They make redux obsolete in 90% of cases.  


[https://reactjs.org/docs/hooks-reference.html](https://reactjs.org/docs/hooks-reference.html)",-9.0
g3pcgas,il2ndq,"Provider around your whole app will cause refresh to the parent component. 

You pretty much end up recreating a little redux if you implement hooks for a large scale project.",12.0
g3pnimj,il2ndq,"Most of my colleagues that work on projects that don't use Redux/MobX are constantly complaining about the over-hook-isation. The stories they told about how things get hard after reaching certain complexity level in a project is terrifying.

Though I never used only useContext and useReducer in a big project, I have used similar thing called \`unstated-next\` (it uses context internally). The idea seemed simple enough, but after couple of months of development the limitations were obvious. I don't remember when I had to deal with race-condition in redux, but had a couple of them in unstated-next. Also debugging when something actually changed was not easy. I dreamt of a simple way to see the changes... Just as I can in redux ;-)

So no, I'm not a big fan. Haven't seen context based solutions that worked well in really big project. Perhaps in small to medium projects it's doable, but I have my concerns for bigger projects.",4.0
g3padeg,il2ndq,UseContext is a crock of shit hack that pretty much breaks the entire point of react,-12.0
g3pi397,il2ndq,"Redux uses context to distribute its values. I think MobX does as well.

Context just allows you to create an alternative area to fetch props from.",1.0
g3pufpw,il2ndq,"Not exactly. [React-Redux uses context to pass _the store instance_, not _the current state value_](https://blog.isquaredsoftware.com/2020/01/blogged-answers-react-redux-and-context-behavior/).  This leads to completely different behavior characteristics.",3.0
g3pakk3,il2ndq,"Interesting, why do you think that? What does useContext do that something like Redux doesn't?",1.0
g3ph8hi,il2ndq,"Reasons like this are why I like Vue

edit: always some react fan boys downvoting, stay mad",-1.0
g3pit26,il2ndq,Isn‚Äôt VueX like Redux ?,1.0
g3pjcp5,il2ndq,"Yeah but my point was there isn't this seemingly endless flamewar between different libraries in Vue, because there is just Vuex.",2.0
g3remfs,il2ndq,"&gt;Vuex

Which is, IMHO, a good middle ground between the principles behind both Redux and Mobx. It's much easier on the boilerplate than Redux and feels a lot like Mobx in that regard, but interally it's basically a pure state machine like Redux, utilizing the same implementation that Vue uses.

I'm working with React only nowadays and love Mobx. But I've experienced first hand that new developers have a somewhat harder time with getting it right because of how little structure it imposes compared to Redux or Vuex.",1.0
g3pmc7w,il2ndq,But Vuex uses Flux pattern for their architecture.,1.0
g3pa9cu,il2ifr,Ive been really enjoying [frontendmentor.io](https://frontendmentor.io),6.0
g3p2syk,il2ifr,Code triage is probably a pretty good place to start.,4.0
g3pai1i,il2ifr,"Not exactly what you requested, but check out https://exercism.io/ - it's a learning platform with strong community mentorship. Might learn a thing or two, or at least get a confirmation you're on the right track.",4.0
g3pb92f,il2ifr,Hey ;) I can give feedback to your code! We can schedule a (free) meeting if you like!,3.0
g3pc0q5,il2ifr,"being active in a community and helping out other people helps a lot too as it solidifies what you already know, try checking out the /r/webdev discord for instance",2.0
g3q2xao,il2ifr,"I'd like to add Kodiri ([www.kodiri.com](https://www.kodiri.com)). On top of the learning aspect (mostly focused on JS and friends, from beginner to expert) they run monthly events in collaboration with tech companies and recruitment agencies looking to discover new talent.",2.0
g3pbgpa,il2ifr,[dev.to](https://dev.to) has a tag for projects looking contributors - [https://dev.to/t/contributorswanted](https://dev.to/t/contributorswanted),2.0
g3s2onc,ikvp5j,"Really nice! Thanks so much for this package.

Any chance of some ""No thinking required"" boilerplate at the top of your README, please? The existing examples don't really cover ""starting points"".

Just suggesting because it seems like such a good package for people new to eslint, as well as seasoned config-tinkerers. :)",1.0
g3sfagd,ikvp5j,"&gt; Any chance of some ""No thinking required"" boilerplate at the top of your README, please? The existing examples don't really cover ""starting points"".

hey thank you for the suggestion - I've moved the usual eslintrc.js/.eslintrc from further down to the top. was this what you had in mind, or would you like to see more examples of how to build your own config with this one?",1.0
g3vamli,ikvp5j,"That's great, but I was really thinking of a starter ""custom config"" setup.

I did have a quick peep at your `.eslintrc.js` and that was very revealing:

```js
const config = require('.');

module.exports = {
  ...config,
  env: {
    ...config.env,
    node: true,
  },
};
```

I'm new enough to `eslint` to think that such an example would be really helpful for a beginner. :D 

Obviously it's your project and I hope you don't think I'm putting it down. Actually, I think the idea is inspired, and anything to improve its immediate accessibility for coders of all levels would be great!",1.0
g3p4ssp,ikvp5j,Very nice!,1.0
g3sexlf,ikvp5j,thank you :),1.0
g3psn6r,ikvcfv,"Hi,

I find this really useful.  Hope you can continue to post new chapters.",2.0
g3qs4ju,ikvcfv,Hey! Thank you for your kind words! üôèüôèüôè,1.0
g3ngs6h,ikr4ai,I wish people would recopy the intros from articles in these reddit posts...,1.0
g3nsr9i,ikpag5,"This is a pretty good summary of the three major options for Redux async middleware and their tradeoffs / use cases.

I'd also suggest reading my post on [Why Redux Toolkit Uses Thunks for Async Logic](https://blog.isquaredsoftware.com/2020/02/blogged-answers-why-redux-toolkit-uses-thunks-for-async-logic/) as well.",4.0
g3m27jw,ikl11m,"Useful, But I find it very hard to believe that we don't already have a lib that does this",2.0
g3o3t55,ikl11m,Not the OP - you‚Äôd actually be surprised. Many of them don‚Äôt contain support for things like oAuth state,1.0
g3l9jmb,ikl11m,"Created a simple npm package to get access token for Google users. This can be used in ur server-side code flow to get access token and refresh token, which can be later used to call different Google API based on the scope that you have provided during login/ consent process",1.0
g3ln6q1,ikkrgm,Where were you two months ago!!! Number 1 and 3 drove me bonkers. Hopefully your post will be come up on web searches because my googlefu was lacking when trying to figure these out.,28.0
g3mcaf3,ikkrgm,Having any intentional throttling listed in the performance tab of the dev tools seems like the right approach here if browsers are going to do this stuff anyway,21.0
g3m8z8i,ikkrgm,"‚ÄúrequestAnimationFrame is just that - a request‚Äù

Yep, so don‚Äôt always expect 60fps ¬Ø\\\_(„ÉÑ)\_/¬Ø",35.0
g3mzulq,ikkrgm,"&gt; Yep, so don‚Äôt always expect 60fps 

Could be also 50¬†Hz or 144¬†Hz or whatever at full speed.

If you're doing some animation, make use of that timestamp which was handed to your callback.",15.0
g3mwjk3,ikkrgm,[deleted],3.0
g3nd59v,ikkrgm,requestIdleCallback is more like cooperative multitasking. It even gives you an object that will help you decide whether to pause or keep working.,2.0
g3mww6z,ikkrgm,"If you're at 30 fps because of your low power settings... then the solution is to configure the power settings to perform instead of to save battery. That's not an ""inconsistency"", that is not even a bug that became a feature, that is a deliberate and correct design.

I found the other points in the article to be valid, but that particular snippet is just difficult to debug, not incorrect / rage inducing / end of the world. If you use low-power settings it is because you want it to work, whichever way it can.

Throttling or decreasing the precision of timers is a huge problem, though.",12.0
g3mfijd,ikkrgm,"Yeah it can be a bit annoying, but you really should never assume the frame rate anyways. Always use time interpolated values for you animations, or else you risk that your animation would run too fast on one device, or too slow on another.",24.0
g3mpape,ikkrgm,This is true but none of this article is assuming a frame rate,13.0
g3nty1g,ikkrgm,Request denied!,5.0
g3lj37t,ikkrgm,Nooooo,13.0
g3m04pn,ikkrgm,"Devs: **#useThePlatform**

The platform: let's halve their framerate in low power mode while deprecating battery API **#yooooolooooo**",11.0
g3mnk4x,ikkrgm,"Yeah, well, if there wasn't any tradeoffs when switching the phone to low-power mode, then why would it even be a setting? I think it is perfectly reasonable that low-power mode limits features that otherwise might use power.",22.0
g3myh5f,ikkrgm,Yep but not much fun to debug when you‚Äôre unaware of this behaviour. Also interesting it doesn‚Äôt affect apps.,4.0
g3njbi8,ikkrgm,"I think it's part of our job to be aware. However I like posts like yours and hints within documentation, which make it easier to be aware.",5.0
g3npp93,ikkrgm,You shouldn‚Äôt be assuming a particular framerate and there‚Äôs no need for a website to access battery info.,5.0
g3o17pn,ikkrgm,"I think this is a feature of the platform, allowing your website to take advantage of battery life improvements without actually having to do any custom work (provided you implement it right the first time).",2.0
g3lplnn,ikkrgm,IE throttles rAF before you was born,-9.0
g3mnyjs,ikkrgm,[deleted],-1.0
g3p1pfr,ikkrgm,There's a link to the Webkit issue-tracker in the article.. which confirms that it has been implemented in 2017 (iOS).,1.0
g3j8f10,ik9xwq,"I've written a series of blog posts that tackle the ""hard"" parts of JavaScript: Callbacks, Closure, Async and Prototype &amp; Class, using a number of exercises that develop from easy to more involved. Let me know if anyone finds it useful or has suggestions.",24.0
g3k2i36,ik9xwq,What's the consensus on generators? Would they be considered hard?,7.0
g3k5zrn,ik9xwq,"If the hard parts include ‚ÄúCallbacks, Closure, Async and Prototype &amp; Class‚Äù then yes, generators would be considered hard.",20.0
g3xhphe,ik9xwq,"I know the demarcation is at the hands of the author and I sound very very elitist but I genuinely think those are ""medium"" level topics.

Great read regardless",1.0
g3k6ni0,ik9xwq,"I'd consider them ""extra hard"", along with memoization, currying, etc. Yes it's my very own arbitrary categorisation üòÉ",11.0
g3kh82t,ik9xwq,"True, but generators aren't really that useful in day-to-day coding IME - their main benefit is how handy they are for transpilers (and possibly frameworks). For example, they make async-await (an *extremely* useful feature) comparatively easy to implement.

Not saying they don't have other uses, I've just noticed I'm usually barking up the wrong tree and need to rethink my approach whenever I start thinking implementing my own generator function is a good solution for something.",6.0
g3ks4am,ik9xwq,"I like generators for async control flow in side effects. Best example of this is redux-saga in react apps. I also like reactive programming a la rxjs though, which is frequently labeled as ‚Äúhard‚Äù by developers.",3.0
g3lmxk4,ik9xwq,async await is a generator + Promise combo behind the scenes.They are super useful in that sense but abstracted away so most people don't realize it.,3.0
g3khiwq,ik9xwq,"That is true. Their use is limited in normal web development, but we have to remember that Javascript is a language that's used in a lot of ""strange"" places now, from IoT to rockets, so who knows, I'm sure they're useful in some contexts.

There are a lot of things in Javascript I don't use on a day to day basis, Symbols for example. But JavaScript's power is its flexibility, that it can accommodate pretty much any use case or coding paradigm (and a lot of people also don't like it for this very exact reason).",5.0
g3khmqy,ik9xwq,"Yep, I totally agree. And the transpiler use case alone is reason enough to include it in the language.

But I also don't think people need to be tripping over themselves to learn it",3.0
g3lgzct,ik9xwq,My only use for generators so far has been in unit testing. They can be handy for organizing a test involving a set of interrelated async actions.,1.0
g3m8pxr,ik9xwq,"I've been thinking - if generators were available with the `Array` API, would you be more inclined to use them? I think it could change the way I write ""generatorial"" functions (i.e. creating an array or something) if that was available in a nice way. I've started work on a Babel plugin to implement this using vanilla syntax, but I haven't had good reception on the idea which is keeping me from properly finishing it.",1.0
g3mdy2d,ik9xwq,"TBH no. Raw generators are rarely the right solution. Maybe if someone uses a lot of streams or does a lot of parsing? I don't really have that much need of them personally, and the syntax isn't the problem, it's that the general concept just isn't that useful for me most of the time.

Also you don't really need a Babel plugin to add it to the Array API - you can just add a generator creator to the global Array prototype.

Edit: Dear downvoters, I'm not advocating modifying global prototypes - I'm saying it's not necessary to transpile changes into Array.prototype, because it's possible to modify it without changing the language syntax using babel. It's far more dangerous to modify the language than to modify the prototypes, but neither is a great idea.",0.0
g3mfn05,ik9xwq,"Okay, thank you for the feedback!

I'm actually talking about a kind of lazy pipeline. Essentially the plugin would rewrite a chain like `[...iter].map(mapFn).filter(filterFn).reduce(reduceFn)` so that it works lazily and only keeps one element in memory at a time, making these operations way more efficient.",1.0
g3lcar7,ik9xwq,"&gt;Prior to my introduction to JS, I had never encountered higher ordered functions (a function that can take another function as input, or return a function) so I initially found the concept very confusing.

Which language are you coming from?",3.0
g3ngd93,ik9xwq,I've used javascript for over a year and this is exactly what I've been looking for,3.0
g3j8tfc,ik9xwq,Nice article! Great read.,5.0
g3kbhc9,ik9xwq,"This is great! Thank you, will make good use of it.",2.0
g3khmru,ik9xwq,This is pretty much the first blog post I've ever written. It's great to know that someone finds it useful! (‚Ä¢‚Äø‚Ä¢),3.0
g3m8qv2,ik9xwq,Look forward to more!,1.0
g3jr5l0,ik9xwq,"Oh thats great, thanks. Sometimes I‚Äôm confused with callback",2.0
g3jvnsl,ik9xwq,"Callbacks are functions which would be executed in some later time. 

say if you made executed a function f(data, callback);

here data will be the arguments of parameters you pass as input to the function f. Meanwhile, callback will be another function that would execute when f() has done some execution.

The result is provided to callback instead of returning it from f();",12.0
g3kdt7y,ik9xwq,Callbacks are also called continuations. The continuation passing style or CPS for short is a very powerful concept which is rarely meant for humans. It allows complex flow control and evaluation.,3.0
g3kk2ff,ik9xwq,"You might find this easier to think about in terms of types. Crucially, functions are values, just like strings, plain objects, etc. In the following function we take a string and return a number, very simple:

    const f = (x: string): number =&gt; /* etc */

And within the function body we can of course access the `x` parameter. Functions are the very same:

    const f = (g: () =&gt; boolean): boolean =&gt; g();

This function is pointless, but hopefully it demonstrates how callbacks work. Your function takes a function as an argument, and can do whatever it wants with it, including execute it. Here's how we'd call `f`:

    const x = f(() =&gt; true);

`f` will call the function/callback we've supplied and return the return value, in this case `true`. Nota bene that when you pass a callback, like any other argument, it's up to the function what it does with it internally, if anything. There's no universal rule, it's merely you passing a value to a function.

Lots of older code will take advantage of callbacks for async stuff, so the callback is called _at some future time_. Here's a trivial example:

    const f = (n: number, g: (x: boolean) =&gt; void): void =&gt; {
        setTimeout(() =&gt; g(true), n);
    };

    f(500, (myBool) =&gt; /* etc */);

Here, `f` takes a number and a function. It will wait until the provided milliseconds have elapsed and then call the function/callback. This is a very simple example of how callbacks enable asynchronous code. Additionally, you can see how it's possible to pass arguments to callbacks.

Generally, callbacks should now only be used for synchronous code in which you actually need the function to do something meaningful, for example in `Array.prototype.map`. Promises are much better for asynchronous control flow.",2.0
g3lokup,ik9xwq,This is a time when defaulting to TS makes your examples 1000x harder to read and understand.,1.0
g3m4ond,ik9xwq,"On the one hand yes, TypeScript's type annotations are extremely verbose compared to something like Haskell. On the other hand, you really need to see some types to understand how simple this pattern is. By all means annotate differently, this is just the most likely to be familiar to those in this subreddit.

Also, wow, downvoted twice for trying to help with a relatively longform comment. Lovely subreddit :-/",4.0
g3kjul5,ik9xwq,Am I the only one to almost always wrap callback functions in Promises / Obervables?,1.0
g3km08h,ik9xwq,"It depends, if the callback is executed once it's fairly standard practice to wrap it in a Promise. However for callbacks that are called multiple times it really comes down to whether you're using a mature observable implementation which most people are not, on front-end it's sort of common to use the pattern, but on server-side I've hardly ever seen it - but I'm curious to see if there are examples of it done right?",3.0
g3nt0v1,ik9xwq,"I haven't gotten too far into your blog posts, but it would probably be helpful to explain why solution 5 uses an arrow function. Specifically, why it wouldn't work with a regular function, unless you were to apply `.bind` to it.",1.0
g3ol404,ik9xwq,"FYI, if you don't pass `Array.prototype.reduce` an initial value, it'll use the first item in the array as the initial value, but it will start calling the callback function on the 2nd item.

It looks like your reduce starts calling the callback on the first value regardless of whether or not an initial value is passed.",1.0
g4jk8s2,ik9xwq,Thanks for pointing it out! Should be fixed now üôÇ,1.0
g3ihp14,ik2qou,"Does anybody else find this

`user.id = user.id || 1`

More readable than this

`user.id ||= 1`

Maybe it's just because it's new notation for me. Cool nonetheless.",44.0
g3ijwsk,ik2qou,"Emphatically not!  I think:

    user.id ||= 1

looks not just natural, but superior ... once you adjust to it.  It's the same thing as:

    const bar = foo.bar;

When you're first learning, that really is clearer than:

    const { bar } = foo;

(I mentor programming learners, so I can guarantee that destructuring *does* confuse them ... **at first**).

But once you learn destructuring syntax, the latter version is simpler and clearer.  The same will be true for `||=`.",28.0
g3inuch,ik2qou,"`||=` is also very common in Ruby, it's often used in getter methods to memoize the results of a computation.

    class Foo
      def something
        @something ||= expensive_computation
      end
    end

The equivalent in JS would be

    class Foo {
      #something
    
      get something() {
        return this.#something ||= expensiveComputation();
      }
    }

I could see myself using this sort of mechanism in JS I suppose. (Although using private properties to stick as close to the way it works in Ruby requires you to declare the property upfront)

EDIT: It might be better to use `??=` in this case since `||=` wouldn't work with falsey values like `0` or `""""`.",10.0
g3impux,ik2qou,"Eh. It's not that confusing, but this

    const val = obj.val;

... will always be less confusing than this

    const { val } = obj;

Even after I have used the latter notation a couple of million times.

The later is only used because of this:

    const val1 = obj.val1;
    const val2 = obj.val2;
    const val3 = obj.val3;
    const va4 =  obj.val4;

vs

    const { val1, val2, val3, val4} = obj;",3.0
g3j26ec,ik2qou,"I want to know if there's any extra magic that's possible with destructuring. For example:

    get foo() { return this.getAttribute('foo'); }
    
    get bar () { return this.getAttribute('bar'); }

Is there any optimization for DOM reads if I do `const { foo, bar} = el`?",1.0
g3j3u7v,ik2qou,"Idk about dom reads specifically, but some destruct magic: the thing I miss most about Go when I'm not using it is multiple returns from one func. In js - with destruct - `const {user, response, error} = ()=&gt;{return {user, response, error}}`

Then my calling code is free to respond in a myriad of ways.",3.0
g4pfnx1,ik2qou,"AFAIK destructuring is ""syntactic sugar"".  In other words, it looks different to us humans, but to the computer these two lines are *identical* at run-time:

    const bar = foo.bar;
    const { bar } = foo;

In fact, if you use a tool like Babel (or `create-react-app`, which uses Babel under the hood), it may well be converting the second line into the first one for you, ""behind the scenes"", to support older browsers.  If you actually ""view source"" your JS file in the browser (and wade through the mess of minified code) you may be able to see this.

So, to answer your question, no there is no extra magic or optimization :)",1.0
g4pjfs7,ik2qou,"I'm not saying you're wrong, but the basis of what you say is what Babel does to support older browsers, which would only be true when it comes to the original code running in a modern browser if you start with the assumption that it's only syntactic sugar with no optimizations or other differences. That's circular and it definitely isn't necessarily true. 

For example, there are actual differences between arrow vs regular functions beyond just notation and handling of `this`. But the difference between the two in how stacks and scopes are setup is completely lost when run through Babel. It's been a few years since I read the technical details, so forgive any inaccuracies there, I just remember the implementation in browsers being problematic at first even though they should perform better than `function`s.",1.0
g3j33yb,ik2qou,"Do you feel the same about the analogous arithmetic operators?

    a = a + 1    
    a += 1

If not then it's probably just the freshness of the notation.",5.0
g3j3hkf,ik2qou,I was thinking I was really getting a handle on this whole Javascript thing. Then this stuff pops up and puts me in my place,1.0
g3jeqge,ik2qou,"    user.id ||= 1 

Is the same as reading ""keep the same value or set to 1"", so it's readable but it took me a moment because I've never seen this notation out in the wild before just now.",1.0
g3iyzi6,ik2qou,"Not trying to bash the author of the dev.to post (who is actually a co-champion of the original proposal!), but this isn't the most high quality of content.

Just [read the proposal](https://github.com/tc39/proposal-logical-assignment), specifically the [**motiviation** section](https://github.com/tc39/proposal-logical-assignment#motivation), as it talks about why having this as a ""convenience operator"" is useful.",6.0
g3j9mzh,ik2qou,"The very first example in the motivation section shows the reassignment of a function argument, which is not only bad practice, but can have disastrous consequences when the argument is passed in by reference (e.g. arrays, objects, etc). Bugs caused by reference mutation / impure functions are not fun to deal with.",2.0
g3joglo,ik2qou,"Before [default parameters](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters) were a thing, I feel like this was super common:

    function (a) {
        if (a === undefined) a = 'default_value';
    }

&gt; The example the author gave used `!a` rather than the more correct `a === undefined`, but similar enough.

So `a` won't be reassigned if a (truthy) Object / Array / Function is passed in.

Even _if_ we didn't have this conditional, assignment won't matter here because we aren't modifying a property on the argument.

I agree, functions that aren't pure can potentially introduce subtle bugs:

    var hello = { world: 1 };
    function test(a) {
        a.foo = 'bar';
    }
    test(hello);
    console.log(hello); // { world: 1, foo: 'bar' }

But this only works because we are assigning `a.foo`, a **property** on (the reference to) `a`.

Assigning some value to _to_ `a` itself should be fine.

    var hello = { world: 1 };
    function test2(a) {
        a = 'bar';
    }
    test2(hello);
    console.log(hello); // { world: 1 }

Note that in general, I agree that using ES6 default parameters is the way to go ([babel transpiles to checking the `arguments` object](https://babeljs.io/en/repl#?browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=false&amp;code_lz=GYVwdgxgLglg9mABACwKYBt1wBQDdEC8iA5AO5wBO6AJsQJSIDeAUIohAgM5zqoB0WAOZ46AbmYBfIA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=env%2Cstage-3%2Cenv&amp;prettier=true&amp;targets=&amp;version=7.11.5&amp;externalPlugins=%40babel%2Fplugin-proposal-class-properties%407.7.4)).",6.0
g3k6vhp,ik2qou,"The main issue with reassigning params is just expectations, typically you expect the thing that you're operating on to be the thing that was passed in the function call. Several times I've seen code in libraries where there's some sort of complex reassignment logic halfway down the function body, and it always makes it harder to follow. I'm fine with relatively simple logic at the top of the function though, even if it's more than just assigning defaults (which as you say can now be done directly in the params list) e.g. in certain variadic functions.

There's also a gotcha if you're utilizing `arguments`: https://spin.atomicobject.com/2011/04/10/javascript-don-t-reassign-your-function-arguments/  
But it's less of a concern nowadays since arrow functions don't support `arguments` and we have rest syntax.",2.0
g3k2bus,ik2qou,"Quick ‚Äî someone talk me out of this:

```
const yo = {yo: 1}

function example({...rest}) {
  // Default `rest.ho` to ""hohoho""
  rest.ho ||= 'hohoho'
  
  return rest
}

console.log({yo, hohoho: example(yo)})

```",1.0
g3kay2m,ik2qou,And I thought we were moving away from assignments. I don't remember the last time I wrote one.,2.0
g3mypnh,ik2qou,"As far as I can tell, there's definitely some redundancy between having default parameters, and the existing nullish coalescing operator. The example widely used in the original repo is the \`innerHTML\` getter/setter property, which seems plausible, though it isn't that relative anymore due to React etc. Would love to see more use cases though. I just wrote a blog post about this to help myself understand its uses [JavaScript logical assignment operators deep dive](https://seifi.org/javascript/javascript-logical-assignment-operators-deep-dive.html)",2.0
g3j1lgt,ik2qou,"I'm mostly looking forward to wide adoption of private fields, really. But nullish coalescing and optional chaining sound great too.

I'll be making use of private fields as soon as Firefox support lands. My dev process involves modern vanilla CSS and JS for development using imports, and Firefox just has better dev tools, so I have to wait for that.",4.0
g3jbioo,ik2qou,Don‚Äôt y‚Äôall sit here and tell me you‚Äôd rather write `#doSomething()` vs `private doSomething`,4.0
g3imnq8,ik2qou,more(syntaxes) !== more(good),5.0
g3imqbr,ik2qou,"// eslint-disable no-param-reassign 

Looking forward to using this soon!",3.0
g3ilabn,ik2qou,Thanks! I hate it!,1.0
g3j2lxl,ik2qou,More?,0.0
g3j4wwx,ik2qou,[deleted],-2.0
g3j5pd1,ik2qou,How does an assignment operator break SRP? What side-effects could it have that the current alternative doesn't?,3.0
g3io2fi,ik2qou,"That confuses me... I've never seen languages with assignment operators for logical operators. Interesting concept but...

Is it really necessary?",-4.0
g3islqr,ik2qou,"someone pointed out Ruby earlier in this thread.

personally, I don't think I'll use `||=` and `&amp;&amp;=` any time soon, but `??=` is nice. I just like that it's a good symmetry with things like `+=` and `-=`.

Also, it has the additional property of not executing the setter operation every time:

    class Foo{
        get bar() {  return blah; }
        set bar(x){ console.log(""side effect""); }
    }
    const f = new Foo
    f.bar ??= 20 // prints ""side effect"" if and only if ""f.bar"" was null/undefined
    f.bar = f.bar ?? 20 // always prints ""side effect""",3.0
g3iwiwe,ik2qou,"hey, what does ?? do in the first place? I can't really google it.  I'm not sure I understand what ??= is supposed to do.",1.0
g3ixqbp,ik2qou,"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator

Edit to explain:

    ThisDoesntExist ?? soWeUseThisValue

    ThisDoesntExist ??= soWeMakeItEqualToThis

Note that the difference between the above and the || you may be used to is that ""false"" exists so in that case ?? uses the left value, while || would give the right value for ""false"" (kinda explained that poorly but the docs above are more clear)",6.0
g3iyuv3,ik2qou,"Ya, I agree that this is probably the most useful things here.  This isn't implemented yet though, right? The MDN docs make it seem like it is.",2.0
g3j04mj,ik2qou,"It's es2020 so it's official javascript now. The mdn page has a compatibility table that shows which implementations already have it, such as Chrome 80 and Node v14",5.0
g3j14vz,ik2qou,ah thanks.  I thought this was ES2021 stuff.,1.0
g3iyuz4,ik2qou,"It's the [nullish coalescing operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator). You can think of ""a??b"" as shorthand for ""a == null ? b : a""

""a??=b"" is then ""if (a == null) { a = b; }""

Note the difference to ||, the logical or operator, which triggers on 0 and """" in addition to null and undefined. The nullish coalescing operator triggers only on null and undefined.",3.0
g3j22rp,ik2qou,"     const a = b ?? false

Is shorthand for

    // Assuming accessing b has no side effects
    const a = (b !== null &amp;&amp; b !== undefined)? b : false

You can get a similar behavior with the || operator, but || will have a different behavior with falsy values like 0 and `false`.",1.0
g3k46kv,ik1ngo,"Just a heads up, at this part of the examples:

    let containerRegistry = {
      'services/bot': import('./services/bot'),
      ...
    }

the promises don't seem to be unwrapped anywhere. I know it's not the point but might be worth fixing just to prevent confusion.

Really good explanation otherwise.",2.0
g3mot13,ik1ngo,Whoops. Thanks! The code sandbox has await if anyone checks ;),1.0
g3jicnz,ik1ngo,Absolutely loved the super simple example of dependency injection.,1.0
g3jma64,ik1ngo,"Not quite the same, but it reminds me of an issue with react where it yells at me when I pass hooks as a prop. React.js really only wants you to use hooks at the parent level, so I either build giant components or ignore the warnings. Does anyone have any design patterns or suggestions? It seems more intuitive to just pass them down when needed. It feels like dependency injection.",0.0
g3k6ukt,ik1ngo,"Not sure what you mean, you can pass down references of hooks as props of course, but it has to be called within a component because that's the only thing that gives it real context. There's nothing that would prevent you making smaller broken up components, in fact it's always recommended over all encompassing parent components.",3.0
g3mlabz,ik1ngo,"NVM, I guess. I can't remember what the exact warning was and I can't duplicate it now. I can pass a reference to my useState hook function down to my child components and it seems to be just fine.

Shoot, the warning I had in the past had something to do with calling a function passed down the props and I believe it was a useState function.",0.0
g3p6l0n,ik1ngo,"there are some pretty wild assumptions that hooks make, not being able to call them outside of a components body, even inner functions (for instance inside useEffect) and events aren't allowed. that might have been it. it can be confusing, and i guess most people tripped over it at least once.",1.0
g3p7657,ik1ngo,"Yeah, I wish I knew what it was. I was getting these warnings in a 500 line file. I was working with a team unfamiliar with hooks, new to React altogether, and several people had worked on this file with hooks. I'm looking at it now and there's some weird stuff going on in it. There's a function that isn't a component but they passed props from a component into it and using a reference to a hook. It's working though, and I just resolved all the warnings the script used to have. I remember the author of this function being irrate about using functional components and not classes.

Here's the function. 

    var HandleFileChange = (props, e) =&gt; {
        let fileReader = new FileReader();
        fileReader.readAsDataURL(e.target.files[0])
        fileReader.onloadend = (e) =&gt; {
            props.setbase64data(e.target.result)
            return e.target.result
        }
    }

I think I get it. I'm not sure what his problem was. I don't like that he has props as an argument, since it's not a component. It hurts the readability at first glance and there's variable shadowing with e.",1.0
g3ktbmx,ik1ngo,"Decomposing your components is my first idea. If you're writing something that massive, think about separating concerns. For example, I've written a component that was all business logic, and then passed a few props to the child which was all JSX rendering.

Another point is you can wrap the hooks in functions. React won't want you to pass your useState/setState logic down, but for mutating specific parts of your state you create a function that calls the hook logic.

I would have to see a code sample to give you any more guidance there. But that's the general idea.",2.0
g3lm0q9,ik1ngo,"I don't mean to sound like a jerk, but when you don't understand something well, any attempt to explain things ... without first correcting your lack of understanding ... is unlikely to be fruitful.  Your post, and the way you talk about things (even more than what you say), suggests you don't ""grok"" React hooks fully ... yet.

In other words, I truly believe the answer to your concern is to learn and understand React hooks better (and maybe also React in general). I *know* that probably sounds like ""learn more idiot n00b!"", but I truly don't mean it that way.  I just honestly think you could benefit from a greater understanding of what hooks actually are and how they work ... and the React docs do a *really* good job of explaining things, if you just spend some time with them.",1.0
g3h523b,ijzqtp,This is a small framework I built for personal use. I looked at how I like to build components and applications built as close to that as I could get.,1.0
g45vimu,ijyoti,Thanks man ‚ù§Ô∏è,2.0
g3gtu7u,ijx7z5,I wish I could find my version.. didn't put it in a repo and now it's lost :/,2.0
g3gjvxm,ijx7z5,"Tried to keep the code as clean and simple as possible, maybe some new devs can learn a thing or two. Would also appreciate hints on how to enhance the code / structure of the repo.",1.0
g3hswtg,ijx7z5,"what is the function `framerate`? Where is it? Why are there no semicolons?
why are the functions `calculateChanges` and `numNeighbours` outside of the `class`?",0.0
g3i8oy0,ijx7z5,"The framerate and rect function comes from the p5js lib.

Good find with the functions i moved them inside the class, makes more sense.",1.0
g3j6qyi,ijx7z5,"Super cool, I have always wanted to write a JS version of Golly. Great work OP.",1.0
g47j3ma,ijx7z5,"This was my take in a very simplified form:

[http://www.ovaltech.ca/Javascript\_Life/life\_standalone.htm](http://www.ovaltech.ca/Javascript_Life/life_standalone.htm)

And a version which does other cellular automaton and allows you to try different rules.  

[http://www.ovaltech.ca/Javascript\_Life/life.htm](http://www.ovaltech.ca/Javascript_Life/life.htm)

The coolest rule I found does these amazing mandala like patterns.

[http://www.ovaltech.ca/Javascript\_Life/crystal\_standalone.htm](http://www.ovaltech.ca/Javascript_Life/crystal_standalone.htm)

Never really showed these to anyone who might be interested.  A couple cool tricks in the code.",1.0
g4ca5mg,ijx7z5,Do you mind if i reverse engineer the crystal code and use it on my page? Looks very cool :),1.0
g4cbwmx,ijx7z5,"Not at all, maybe drop me a reference though.  The code is clearly commented, so you should not have much trouble figuring it out.",1.0
g4o0q7v,ijx7z5,"I finally got a release.. love this projects where you code, get new ideas and implement them :) you can check out my version here: [https://js.project-zeta.org/fractal/](https://js.project-zeta.org/fractal/)",1.0
g3gvkz6,ijvbek,How is validating at runtime better than validating at compile time?,17.0
g3hrvtu,ijvbek,"&gt; Validating at runtime also brings many other benefits: you can define your own types, use them in complex model definitions with custom assertions *that can even change depending on your application state.* Actually it goes much further than just type safety. Go on and see for yourself.

From the article, emphasis added by me",9.0
g3iaz4p,ijvbek,"You regularly get data from non checked sources, like loading json data from an api.",6.0
g3h3p0r,ijvbek,It isn't.,8.0
g3i0odg,ijvbek,"I mean for somethings like api methods, form input, or file parsing you have to do runtime validation",3.0
g3gdumo,ijvbek,"&gt; By leveraging ES6 Proxies

Oof, those [are pretty slow](https://bug1172313.bmoattachments.org/attachment.cgi?id=8616443). I wouldn't flood my code with them",16.0
g3h2wa0,ijvbek,"&gt;Oof

Thats pretty much it.",6.0
g3h7qm7,ijvbek,Time for rust,1.0
g3h4z4f,ijv2yn,"&gt;I decided to leave because I got stuck, there wasn't any room to grow anymore. The perspective of being a developer who's 5 years behind of modern day practices made me miserable.

This bit (well, and  the whole article) got me right in the feels.  I *completely* understand the author's sentiment, and I've been at ""dead-end tech"" companies.  But the hard part is, business also needs to get done, and you can't just change tech all the time, because change has a cost. Finding the right balance can be a real challenge ... boring story time (a cautionary tale for would-be tech leads who miss the message of the article).

I used to lead a team on a Backbone application.  This was back in the pre-React/Angular/Vue dominance days, and despite its flaws the framework worked really well for us.  Since jQuery was dominant back then I couldn't find ""Backbone devs"", so I just hired talented juniors and trained them to use it. This worked ... for a couple years, until they started wanting to use React.

React was still ""up and coming"" at that point, so I got really irritated: Backbone worked *great* for us, switching would be a ton of work, and none of them could articulate *why* React was so much better.  They hadn't even used it (at first), they'd just read a couple articles about it, and in my mind they only wanted to ""be like the cool kids"" ... with no valid technical/business reason.

*Eventually* they convinced me, and I embraced (and now &lt;3) React.   But I fought them over it for so long that it really impacted our relationships.  I was so focused on ""being practical"" and ""solving business needs"", that I missed the central point of this article (and also I mistook their lack of career maturity for a lack of ability to make good technical choices).

Even if you're a junior, even if you haven't used new tech X extensively, *it's not invalid* to look around and see lots of smart people using new tech X and want to use it.  You *do* have to recognize that all programmers (juniors especially) have a tendency to ""follow shiny objects"", and you *do* have to balance business needs with all tech changes.  All that *is* true, and again it's ultimately a spectrum where you need to strike a healthy balance.

But tech work is knowledge work, and that means having smart people to do that work.  You can't retain (good) smart people if the team feels like they're working with dead-end tech ... no matter how well that tech is serving business needs.  I didn't understand this, and it was a major failing of my career.",27.0
g3ht09r,ijv2yn,"A classic tech parable. A good lesson, too. It‚Äôs common to want to follow shiny tech, but sometimes it really is worth it.

The point about using new tech to keep your best devs around is an interesting one because it touches on the psychology of the business over the practicality, where sometimes we forget to look beyond the practicality.",5.0
g3ihql3,ijv2yn,"&gt; 
&gt; 
&gt; 
&gt; 
&gt; The point about using new tech to keep your best devs around is an interesting one because it touches on the psychology of the business over the practicality, where sometimes we forget to look beyond the practicality.

I don't think forget is the right word.  Practical is boring.  We want to be working on things that are interesting and eventually it's just time to move on.  It's okay to grow out of a role and find new work",1.0
g3ijp2t,ijv2yn,"I mean we as business leaders making choices for what to focus on in business.

To the manager or executive in this situation it‚Äôs common to focus on the practical: the tech stack still works fine so why change it?

But this psychological reason is one.",1.0
g3hci37,ijv2yn,"&gt; You do have to recognize that all programmers (juniors especially) have a tendency to ""follow shiny objects""

Writing people off with accusations of chasing shinies is a guarantee to garner consternation, FYI.",1.0
g3hcs82,ijv2yn,"*Exactly* my point!

On the one hand, it's a simple fact: we programmers like shiny objects!  New technologies are inherently fun and exciting, and newer very often does == better.

Also I truly believe part of gaining experience as a dev is learning to recognize and challenge that impulse. With each new technology you implement (and see all the pain and bugs that come along), other new tech ""loses a bit of its shine"" , and this is why juniors are ""more attracted to shinies"".

But if you dismiss all desire for change from your team with ""they're just impressed by the latest new thing, I know better"" ... you do so at your own risk.",6.0
g3hdgor,ijv2yn,"Yep, I can agree with those lessons learned.

I had a person on my team who accused me often of chasing shinies for wanting to move away from his ten-year-old practice of using jquery and gulp for everything and writing off frontend frameworks and webpack *in 2019*.

Your title means nothing when all of your practices are ten years out of date in tech.",4.0
g3hvuyj,ijv2yn,[deleted],7.0
g3i2o9j,ijv2yn,"All I can say to this is to counter your ""possible mistake""... (because did you really want to be an entrepreneur?):  you said - ""Ultimately, I didn't have time to learn after work (and I didn't want to anyway because I would end up burnt out), ""

The way I approached the 'continuing education' part of my career or in my view 'seeking fun shiny objects' - to put it like above comments - was by:  \* looking for an interesting tech to me and finding a way to do something related to work with it \*.  I was working in a different arena than you though (EDA, microprocessor design, ... but the parallels are there).

So, in my reading and tech play (I also played sports, so all of my fun isn't tech based, but I really liked what I was doing so I DID spend outside of work time on seeking shiny interesting toys... in my case at one point, it was AI - back then that would be expert systems... wait change that.. my first big risk and toy was wanting to write in Lisp... and I was able to turn that into some big rewards. AI came later and that wasn't as fruitful).   So when I found something I really wanted to know more about, I'd keep my eyes open as I was working looking for an opportunity to use the toy in some practical way, which is needed to really understand and learn it.  Sometimes this was risky... ok always it was risky, but that's another challenge (to overcome hurdles) that kept work interesting.  challenge, reward (""i'm not dead yet"").   yes you are no I'm really not.....

If you don't do the 'outside of work' learning and continuous education, then you'll be bored, burnt, stale, and doomed.  ( ""what is your favorite color?"".... ""blue, ...  no re"". aiiiieee.  [https://youtu.be/0D7hFHfLEyk](https://youtu.be/0D7hFHfLEyk) )",2.0
g3ii25s,ijv2yn,"&gt; 
&gt; 
&gt; 
&gt; 
&gt; I knew the solution to the scaling issues was to use microservices hosted with a proper cloud provider, but I was already being spread too thin between the WordPress work and the business administration to learn Node.

Why was node the only thing in your mind?  And why only microservices as a way to scale?  It sounds like you limited yourself too much on your mindset, not your skillset.",1.0
g3gh7i5,ijv2yn,"It's nice to read something like that if you're feeling the same way, thanks.",2.0
g3ght3q,ijv2yn,Good luck!,2.0
g3i0ki7,ijv2yn,[deleted],2.0
g3i1dj1,ijv2yn,"How come? I never heard any complains about readabilty before, but I‚Äôm definitely open for feedback!",1.0
g3lbc5q,ijv2yn,"*A relevant comment in this thread was deleted. You can read it below.*

----

In 2014 I started my own web agency. The dream was to manage a team of developers.

Long story short, I opted to sell everything to a partner agency last year, giving up on my dream, for the exact same reasons as the blog post.

Not because business wasn't good. The opposite was true actually, business was booming. We had gone from doing tiny website for small businesses, usually just the standard five pages (Home, About Us, Our Services, Our Team, Contact Us) and continually having to find new clients just to make ends meet, to building a name and reputation and getting into municipal projects, which were most importantly recurring clients. We did really well on the business administration side of things.

But the tech killed me. [[Continued...]](https://www.resavr.com/comment/dont-stuck-15173849)

----


*^The ^username ^of ^the ^original ^author ^has ^been ^hidden ^for ^their ^own ^privacy. ^If ^you ^are ^the ^original ^author ^of ^this ^comment ^and ^want ^it ^removed, ^please [^[Send ^this ^PM]](http://np.reddit.com/message/compose?to=resavr_bot&amp;subject=remove&amp;message=15173849)*",1.0
g3g5xej,ijumv4,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g3fr7ug,ijs06p,"Project Page (?): https://github.com/chiragxarora/2D-BOX-COLLIDER

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g3ji8pa,ijs06p,"Cool project! Some feedback to offer is that you might want to consider automatically resetting the game state after the `confirm()` dialog is closed. Currently, users close the prompt and then stare at a paused game, have to F5 to refresh.",1.0
g3frnf7,ijs06p,"It can be played by mouse clicks, I'll probably add additional functionalities in this mini game in future. Currently I'm learning backend. 

I'd appreciate any feedbacks :)",0.0
g3e4cyn,ijjdih,"Hi all! I want to share with you the project I was working for a few months this summer.

It's Perfrunner - opensource, Puppeteer based CLI tool to track and compare web site performance changes.

It was designed to help people, who are trying to improve site performance to get an understanding of how the recent changes affect the site.

The main feature of the Perfrunner is that it supports testing against multiple network/cache/CPU conditions in a single test run. It already tracks first-contentful-paint, largest-contentful-paint, performance marks, and much more.

Development is not finished yet (the current version is 0.8.2, and 0.9 will be available soon). The code is far from ideal, but it already works and I will be very happy for some feedback.

Seems I already wrote too much but just in case you want to try:

* `npx perfrunner` [`google.com`](https://google.com/)
* repo is [here](https://github.com/Drag13/perfrunner)
* the package lives in [npm](https://www.npmjs.com/package/perfrunner)
* a bit more information (just in case) can be found [here](https://drag13.io/posts/perfrunner-intro/index.html)

Hope this brings some use for someone.",4.0
g3eo9dd,ijjdih,"Genuine question, how is this better/different from lighthouse?",7.0
g3ftc2n,ijjdih,"Thanks for the question!

It's not better. It's trying to solve a different problem.

* With LightHouse you see current score and metrics. With Perfrunner you see progress.
* The second big difference that Perfrunner allows you to run tests in different network/CPU/cache conditions. So you see can how does your site loads on slow3g, on 4g, for the first visitor, for the weak CPU, etc.

And all these things are automated, so you can run:

`npx drag13.io --network slow-3g fast-3g hspa regular-4g online --cache true false`

And see progress per all conditions you need.

So it's not better, they are just a bit about different things.

P.S. If you need one time metrics measure than LightHouse would be better.",2.0
g3gt5i8,ijjdih,"Hey very cool, I set up a lighthouse job in our CICD that I wrote the stats to an external tracking tool and when I did that I really was hoping I'd find something like this instead because it was such a pain.

I can't really risk introducing newer libraries to my projects right now, but will follow this closely for sure!",2.0
g3h303p,ijjdih,"Thanks for the warm words! 

Regarding CI/CD - the question is still open. Currently, you can use in the CI/CD process by writing a custom reporter, but it is not that easy I would expect from the library. 

To make it more-less OK for usage in CI pipeline, I need to add a config file (development for this feature is almost done and will be shipped soon). And then I need to extend the config with budget setup. But I am not sure this is really needed. 

So any points about this are highly welcomed!",2.0
g3h52j9,ijjdih,"I'm not sure if this is a great pattern, but we've used tools that work like yours before and we usually would just have the CICD pipeline commit the results of the report to the master branch on PR merge. So I don't think you really need to change anything.

I actually prefer this approach because it keeps the pipeline pretty light and I think it's more robust and reliable than custom reporters (for things that aren't super important).",2.0
g3htd17,ijjdih,"Thanks, good to know.",1.0
g3jhtkp,ijjdih,"This is super useful, love the one-time feature. I also love the attention to network conditions - it's common to ship mobile devices a 2MB webpage now, and more benchmarks like this one might help discourage it!",2.0
g3k4ghu,ijjdih,"Thanks! If you are interested in mobiles, I would highly recommend playing with the CPU setup. Suddenly, a weak CPU has a huge problem with JavaScript parsing. Even if you have super-fast network, the applications that depend on JavaScript (like SPA) will be loaded very slow.",2.0
g3g6n5b,ijjdih,"Just in case someone wants to look through the code, feel free to check the [repo](https://github.com/Drag13/perfrunner). It's served by Lerna and written in TypeScript, so should be pretty clear to understand. 

If you have any questions - feel free to ask, will be happy to answer, really.",1.0
g487ip6,ijjdih,"Added configuration file support:

It allows tuning network setup and using multiple URLs in one test run

To create config - use `init` command

`npx perfrunner --init INITIAL_URL`

&amp;#x200B;

After it, just run Perfrunner without arguments

`npx perfrunner`",1.0
g3eu9q1,ijctr1, **getUserMedia (thePlayer)**,1.0
g3c4in1,ij9gxd,ECMAScript is the correct term which sadly nobody uses (probably because it‚Äôs so clunky).,283.0
g3cbsvp,ij9gxd,"Technically it's ""EcmaScript's Monster""",300.0
g3cjnuq,ij9gxd,Hi Dave üòÇüòÇüòÇ,16.0
g3cxd5n,ij9gxd,Hi Myles :D,7.0
g3d07d8,ij9gxd,"Hey, s5!",-2.0
g3d08pf,ij9gxd,Hi s5 ü§£,-4.0
g3cbtzc,ij9gxd,The real monsters are the people using ECMAScript.,-70.0
g3cklc0,ij9gxd,JavAScRiPT is BaD,42.0
g3e29xe,ij9gxd,This but unironically.,-24.0
g3e36n6,ij9gxd,Have you checked recently?,3.0
g3c9ejb,ij9gxd,"I thought ECMAScript was the specification but JavaScript was an implementation, similar to actionscript was. Have I been lied to?",35.0
g3c9iis,ij9gxd,"JavaScript was the original name given by Netscape before it was standardized as ECMAScript.

These days, everyone calls it JavaScript, and there are multiple implementations (like V8, SpiderMonkey and JavaScriptCore).",45.0
g3eueij,ij9gxd,"&gt; JavaScript was the original name given by Netscape before it was standardized as ECMAScript

*Technically* it was originally Mocha (codename when Brendan Eich was originally working on it at Netscape).

Renamed Livescript before release in Netscape 2.0beta, before a marketing deal with Sun lead to Netscape renaming it to JavaScript.

Microsoft then tried to ""embrace, extend, extinguish"" it by producing their own superset (with ActiveX-related extensions) called JScript.

In response Netscape sought standardisation of the language through the ECMA. The official language standard was named ECMAScript, and Netscape's JavaScript, Microsoft's JScript and Macromedia's ActionScript were all redefined as the names of specific implementations of the standard.",9.0
g3g9ehh,ij9gxd,"Thank god it's not mocha anymore, cuz it literally means piss in my native tongue",0.0
g3g9qdt,ij9gxd,"It's a type of coffee. Likely chosen as a joking reference to Java, another type of coffee.",3.0
g3ktxy5,ij9gxd,I know :),1.0
g3e1o2f,ij9gxd,"How does ActionScript fit in? That was/is a non-JavaScript implementation of ECMAScript, isn‚Äôt it?",2.0
g3e7csm,ij9gxd,It was made after ECMAScript was established using it as spec.,4.0
g3eals1,ij9gxd,"[ActionScript](https://en.wikipedia.org/wiki/ActionScript) dates back to 1998, almost a decade before the first [ECMAScript](https://en.wikipedia.org/wiki/ECMAScript) standard.

ActionScript 2 (and later AS3) added strong typing based on the abandoned ECMAScript 4 proposal.

Moving to more recent times, TypeScript is _very_ similar to AS2/3, albeit extended greatly from those earlier languages.",1.0
g3ef5jm,ij9gxd,Ecma-262 is from 1997.,4.0
g3eidxb,ij9gxd,"Ah, sorry about that! Thank you for the correction.

Not sure how I got the dates so badly scrambled, but I suppose this is a good example of [Muphry's Law](https://en.wikipedia.org/wiki/Muphry%27s_law)!

In any case it is interesting to see how ES4 and AS2/3 so closely resemble TypeScript.",2.0
g3fe0ki,ij9gxd,"Typescript is a superset of ES, that's why TS looks the way it does. One of their earlier goals was to be a preview of future ES versions with the ability to run existing ES5 code as well as transpile likely feature additions to browser JS standards on current and legacy browsers. As browser support advances, they can drop the need to transpile going forward while still offering programmer QOL improvements potentially carving out their (MS) own influence into future ES spec. Personally those goals sold it for me when I previously always wrote off transpilers, and are probably the main reasons it has grown in high profile adoption where previous attempts to improve js syntax have quickly fallen flat as gimmicky maintenance support nightmares.

As far as why ES looks like AS, they added some basic features many languages had and people complained about JS not having. They were obvious moves that couldn't be made fast enough by ES considering the prevalence of old browser versions being used by consumers. AS was trying to solve the same problem that TS is, just with a riskier and grandiose goal of introducing a new platform environment that eventually bit them in the ass. They went far fast, but didn't have market control over browser implementations and fell short on a few important details where browser developers considered native support as a risk to performance and security at the time.",3.0
g3e75np,ij9gxd,Wikipedia says so,1.0
g3q9y3v,ij9gxd,Even i thought the same...,1.0
g3c9pph,ij9gxd,"People do use it, versions were called ES5, ES6, today ES2020 etc.",47.0
g3cb9re,ij9gxd,"True, the ES shorthand *is* used. I guess some people who use them don't even know what the E stands for there.",41.0
g3cbo2s,ij9gxd,I usually hear it like JavaScript ES6 etc or JavaScript with ES6 syntax.,26.0
g3cnp7i,ij9gxd,JES6,9.0
g3d0avs,ij9gxd,JS6 EE,12.0
g3d2fkz,ij9gxd,"I bet most people who use ECMAScript don't know what ECMA stands for 

(European Computer Manufacturers Association)",17.0
g3eyrv8,ij9gxd,That's a big FU to Oracle sitting in the US,1.0
g3cnqto,ij9gxd,It doesn't roll off the tongue and sounds a bit like eczema. Doubt it's going to become mainstream.,8.0
g3cnxti,ij9gxd,"Oh thank goodness, I am not the only one who thinks that when 8 hear ECMA!",3.0
g3dw559,ij9gxd,How about when only 7 hear it?,7.0
g3e1xoo,ij9gxd,I hate that I can post comments with grammatical errors. Should throw a syntax error type thing before letting me post!,5.0
g3eupfq,ij9gxd,Just click the edit link and correct it if it bothers you that much.,1.0
g3fzo4h,ij9gxd,Ecclair. Depends on the person.,1.0
g3sulgh,ij9gxd,"Node.js sounds pretty cool though. It's a name that wants to be mainstream. ""Oh you guys program in Java and Python? Well I program in *Node*!""",1.0
g3c72zh,ij9gxd,"&gt;nobody uses

[There was an attempt,](https://www.reddit.com/r/ECMAScript/) apparently, because (quoting the sub): *why the fuck not?*

Offtopic: Seems that [reddit thinks other subs are talkinkg about the same thing](https://www.reddit.com/r/javascript/duplicates/ij9gxd/til_javascript_is_a_trademark_of_oracle/) because the URL uses only it's local part to identify specific cases (which reddit seems to ignore).",13.0
g3e52dl,ij9gxd,Used about as much as European computer factories,0.0
g3cb8v0,ij9gxd,"Yep, I believe it was owned by Sun, and picked up in the takeover.",38.0
g3cgo8l,ij9gxd,JavaScript is a terrible name anyways. It implies it has something to do with Java. JS is nothing like Java other than the fact that they both use C style syntax.,105.0
g3cit4q,ij9gxd,"Yeah I think it was originally named that to piggyback off the popularity of Java, but it's just misleading. Should have been renamed long ago but it's probably too big itself for that now.",50.0
g3d4wcp,ij9gxd,"Originally JS was created by Netscape and it was called LiveScript.

In the 90s there was a ton of hype behind Sun's Java and Netscape's browser. Microsoft saw them as a threat so Sun and Netscape joined together to fight Microsoft.

However, there was a disagreement between Sun and Netscape. Sun wanted Java to be the language of the web and Netscape wanted LiveScript to be the language of the web. The contention nearly broke up the relationship. However, Marc Andreessen (the founder of Netscape) recommended renaming LiveScript to JavaScript (supposedly as a joke). Sun liked this idea because JavaScript could be marketed as the kiddie scripting language of the web and Java would be the grown-up language of the web.

Sun claimed the JavaScript trademark since they owned the Java trademark and Netscape agreed to this because Sun gave them an exclusive right to use the JavaScript trademark. That's also why Microsoft's JavaScript implementation was called JScript instead of JavaScript.

After Microsoft reverse engineered JavaScript, Netscape got scared that MS was going to embrace, extend, and extinguish the language (a very popular tactic used by MS in the 90s). So Netscape ran around to standards bodies trying to get the language standardized. However, Netscape pissed off all the standards bodies because they completely disregarded the HTML standard and were adding their own features that were outside of the standard. However, Netscape eventually found a standardization body in Europe called the European Computer Manufacturers Association (or ECMA for short) who agreed to create a standard for the language, and that's how we got ECMAScript.

If you're wondering how Oracle ended up with the JavaScript trademark, Oracle acquired Sun in 2009. When they acquired Sun they also acquired Sun's trademarks including the Java and JavaScript trademarks.",85.0
g3d5xyj,ij9gxd,"&gt; (supposedly as a joke)

10 Computer Science Pranks That Went Too Far [Gone Functional]",20.0
g3fs3gd,ij9gxd,in the hood,1.0
g3dzwqa,ij9gxd,"Thank you for this wonderful, quick history.

I actually really like ""LiveScript"". Who else wants to push for a name change? üòÉ",5.0
g3e55d4,ij9gxd,What about HypeScript?,1.0
g3ficwc,ij9gxd,How about Typescript? Sounds catchy,1.0
g3fyhjz,ij9gxd,"Can you imagine Javascript being replaced with Java though?

It would make it forced object oriented an stuff. Especially back then. I can't help but feel that the web would look a lot different.",1.0
g3cpu4t,ij9gxd,"""The language formerly known as Javascript""",28.0
g3eaag8,ij9gxd,ü¶ñ,3.0
g3eroek,ij9gxd,I think the syntax was also changed to piggyback off of Java as well. I think the creator was originally going for a lisp-like language that could run in the browser.,2.0
g3d5t89,ij9gxd,"Not just the name, management told the guy who was designing it (forgot his name) that the syntax must (superficially) look like Java, for marketing reasons",1.0
g3dayet,ij9gxd,"Brendan Eich, designed it in a few weeks if I remember correctly, which probably explains why it's such a clusterfuck of a language! (I develop in it and React for my job)",-6.0
g3dpcr7,ij9gxd,"""Developed in 10 days, and it shows.""",6.0
g3efzwl,ij9gxd,"Developed in 10 days, 20 years of maintenance",2.0
g3cjjo4,ij9gxd,It was a marketing thing made up by Netscape to piggyback off the popularity of Java. I believe internally it was originally called Mocha.,13.0
g3d3urx,ij9gxd,"It was called LiveScript.  But there really was a plan early on to have everything written as JavaBeans and glued together with JavaScript.  Or more like glued together with CORBA with other scripting tasks done by JS.  Mmmmm CORBA.  If you thought SOAP was bad...

(Incidentally, Java was originally called Oak)",3.0
g3d638m,ij9gxd,"Looks like it was initially called Mocha, then LiveScript and finally JavaScript. https://en.m.wikipedia.org/wiki/Brendan_Eich",4.0
g3d9jxt,ij9gxd,I believe JS uses the same Date and Math objects as Java's classes.,3.0
g3dfnur,ij9gxd,"The DOM in particular was designed so the same API could be used in both Java and JavaScript, which is why it feels so out of place in JavaScript.",4.0
g3d0umx,ij9gxd,And they both run in a portable runtime,2.0
g3f8ek4,ij9gxd,I just thought it had to do woth starbucks for the name java,1.0
g3ddrsd,ij9gxd,"Java is to JavaScript like what ham is to hamlet.

It should be called hamscript.",-2.0
g3dvk8p,ij9gxd,"I‚Äôd say Java is a lot closer to JavaScript than ham is to hamlet, but that‚Äôs just me.

I hate this stupid meme.",0.0
g3dm9s0,ij9gxd,Good luck enforcing the trademark.,9.0
g3dotcv,ij9gxd,"*Exactly*. I hear Xerox had a trademark on photocopiers, and Kleenex had a trademark on tissue ... how's that working out for them? ;)

It's a key part of trademark law: enforce it or lose it.  Not being a lawyer I can't say whether Oracle *is* enforcing it in the legal sense or not ... but to a layperson like me they certainly don't seem to be.",4.0
g3e1fb7,ij9gxd,"&gt; Xerox had a trademark on photocopiers, and Kleenex had a trademark on tissue

Just to be clear, trademarks are basically designs or phrases that represent a brand. Trademarks do not protect the inventions, processes, or entire categories or products in your examples‚Äîpatents, trade secret protections, and sometimes copyrights do.

So, for example, the golden arches are a trademark of McDonald's. That trademark would prevent other companies from using the golden arches, but not from making hamburgers.

Or, in your examples, the Xerox or Kleenex *names* (or their logos and associated symbols) are trademarked, but the invention of the photocopier or the process used to create tissue paper would be dealt with through patents or trade secret protections.",9.0
g3e6lbx,ij9gxd,"I think you missed the point I was making.  Many popular trademarks have been lost over time, because if a trademark becomes ""generic"" the government takes it away.  This has happened (famously) to both Xerox and Kleenex: people started referring to photocopiers as ""xeroxes"", and tissues as ""kleenex"", and as a result neither is a trademarked term anymore.

As I said above:

&gt;It's a key part of trademark law: enforce it or lose it.

Part of ""enforcing it"" is keeping it from becoming a: https://en.wikipedia.org/wiki/Generic_trademark

But again, I'm not a lawyer, so I don't know if ""Javascript"" could be considered ""generic"".  All I know is I don't see Oracle doing anything to stop that and protect their trademark.",4.0
g3e7jjx,ij9gxd,I wasn't disputing that aspect of your comment.,5.0
g3e9nz0,ij9gxd,"Ah; this bit:

&gt;the Xerox or Kleenex names (or their logos and associated symbols) are trademarked

... made me think you missed my point.

But otherwise I 100% agree with your post.  Many people misunderstand intellectual property, and it's important to clarify what trademarks (and copyrights/patents/etc.) are/aren't!",3.0
g3f00a9,ij9gxd,"They already did. They made Apple pull every app from the app store that had ""Javascript"" in the title, and sent a cease and desist letter.",5.0
g3ce59v,ij9gxd,"Interesting, and news to me. My guess is the trademark is not for the actual language we know as ECMAScript today and LiveScript when it was originally developed by Brendan Eich and others at Netscape in 1995, eventually being known as JavaScript in some unfortunate marketing scheme. My assumption is that the trademark for JavaScript, if owned by Oracle is IP they inherited from Sun for some product/tech within Sun related to scripting support in Java or using Java. Maybe they did this when JavaFX was being created, or when Groovy was being floated as a simpler form of Java. This does not explain why Netscape wouldn‚Äôt have trademarked the browser language JavaScript.",19.0
g3ci9gx,ij9gxd,"They couldn't trademark it. It was picked on a whim and later on they had a talk with Sun (owners of the Java trademarks) and Sun said it was cool to use it, but they (naturally) wanted to retain any rights to anything having to do with ""Java"" in the context of programming.

So to answer your question, no, it did not stand for something else, but also Sun was pretty much forced to trademark it because of how trademark law works in the US (where if you don't actively enforce it you can lose it). But they were cool enough to let it be used by Netscape.

Later on it simply got picked up by Oracle when they bought Sun.

I'm actually half expecting them to throw a tantrum about it some day, but I guess they still have enough hate capital from suing Google over Java APIs being replicated in Android.",11.0
g3cmu8v,ij9gxd,"As further corroboration that this trademark is indeed about the JavaScript language created at Netscape, it's interesting to click the Documents tab on the linked USPTO page and view the various Specimen links. The [newest one](https://tsdr.uspto.gov/documentviewer?caseId=sn75026640&amp;docId=SPE20191227132243#docIndex=1&amp;page=1) is the [Node.js home page](https://nodejs.org/), and [the oldest](https://tsdr.uspto.gov/documentviewer?caseId=sn75026640&amp;docId=SPE20060718084214#docIndex=12&amp;page=1) is the Netscape JavaScript Guide.

A particularly interesting specimen is the [MDC Doc Center JavaScript Overview](https://tsdr.uspto.gov/documentviewer?caseId=sn75026640&amp;docId=SPE20101228121744#docIndex=6&amp;page=2), which compares and contrasts Java and JavaScript. The text in this overview lives on today in the [MDN JavaScript Guide](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Introduction).",4.0
g3ckkn6,ij9gxd,"Except neither Sun, nor Oracle has ever defended it in any meaningful way.

They could never enforce this trademark, and they'd have saved money if they'd never even bothered with it.

It's just another example of the fact that Sun management was incompetent.",-1.0
g3cl25m,ij9gxd,"I mean, in the grand scheme of things that money was peanuts. And I disagree, Java IP was and continues to be very valuable and that's how trademark law works. They couldn't just let it float around.

One alternative would have been to set up a non-profit to own it, but there was no Mozilla at that point, it was just two companies, and the employee of one of them had come up with a catchy name that infringed on the trademark of the other. They *did* handle it in the simplest possible way.",3.0
g3cxqte,ij9gxd,"Again.

They have **never** actually tried to enforce this particular trademark, and it's use is so incredibly widespread and has been for so long, they could never do so now.

Whatever they spent on the mark it was a complete waste.

They wouldn't have lost Java by not traddmarking this, and marking it did no good when they didn't enforce it.

Because **that** is how trademarks work. If you don't enforce them, you lose them.",1.0
g3ezwsa,ij9gxd,"That's actually incorrect. Oracle told Apple to pull every single app that had ""Javascript"" in the title, and they had to do it, sending a cease and desist to anyone who used it in the name. I knew several people this happened to.",1.0
g3f1nv9,ij9gxd,"And if any of the affected developers had taken Oracle to court, they'd have lost.

The trademark is worthless, a big scary cease and desist from Oracle is not.

The whole world knows JavaScript as being the thing Oracle doesn't own, it's known it as that for twenty years and the mark is used, unlicensed, on thousands of websites.

No one thinks of Oracle or Java when they say JavaScript, and almost no one uses the term ecmascript.

Edit: they'd have lost means Oracle would have lost.",1.0
g3ddiix,ij9gxd,Good thing I don‚Äôt call it JavaScript. I call it Javascript.,5.0
g3dfd1j,ij9gxd,"I know you're joking, but it wouldn't help. Trademarks are not case dependent. See it listed as JAVASCRIPT in the [original registration](https://tsdr.uspto.gov/documentviewer?caseId=sn75026640&amp;docId=ORC20060725062814#docIndex=16&amp;page=1) and the [status page](https://tsdr.uspto.gov/#caseNumber=75026640&amp;caseType=SERIAL_NO&amp;searchType=statusSearch).",5.0
g3dp40e,ij9gxd,"Very true, but trademarks *are* enforcement-dependent.  I'm not a lawyer, but I don't see them defending that trademark very aggressively.",3.0
g3es5hx,ij9gxd,What regex do they use for validation? Maybe we can call it Java_Script?,2.0
g3f5s84,ij9gxd,"Ha, that is funny. Does COBOL support regex? I think that is why they only support UPPERCASE - these are 50-year-old systems that everyone is afraid to update.",3.0
g3cw56r,ij9gxd,"Douglas Crockford is the author of the popular book ""Javascript the Good Parts"". He also did a lecture series about a decade ago on the material.

Though many of the lectures are JS specific and they are quite old, I would definitely recommend anyone who is interested in programming to watch the first one at least. He goes into the history of programming up to how Javascript came to be, including why they chose that name. Also Javascript was written in two business weeks üòÆ [Watch his lecture](https://youtu.be/JxAXlJEmNMg)!",6.0
g3djugm,ij9gxd,"He also wrote another fantastic book [How JavaScript works](https://howjavascriptworks.com/), which is basically ""JavaScript the Shit Parts"".",3.0
g3doiyt,ij9gxd,"From the [sample chapter](https://howjavascriptworks.com/sample.html):

&gt; **English**

&gt; The word for **1** is misspelled. I use the corrected spelling **wun**. The pronunciation of *one* does not conform to any of the stan¬≠dard or special rules of English pronunciation. And having the word for **1** start with the letter that looks like **0** is a bug.

&gt; The spelling of **wun** is unfamiliar to you so it might *feel* wrong. I am doing this intentionally to give you practice with the idea that a bad feeling about something unfamiliar is not proof that it is wrong.

Good to know that Crockford is as arrogant and insufferable as ever.",4.0
g3do6cr,ij9gxd,"Crockford is ... well let me put it this way.  I once saw him give a lecture where he literally spent half the lecture talking about the importance of the ""why"" behind code patterns, and how you should always do things for a reason (eg. to avoid ""debugging in the abyss"").  It was great, and I was super in to it.

He then proceeded to spend the second  half of the lecture giving his personal coding preferences, labeled as ""best practices"", with absolutely no explanation whatsoever of why any of them actually *should* be practiced ... AFTER SPENDING THE FIRST HALF OF THE LECTURE SAYING HOW IMPORTANT THAT WAS!

The guy is smart and has made major contributions to the JS community ... but he *also* is a giant blowhard and hypocrite.  He's probably the most conflicted (at least for me) voice in the entire web dev community.",5.0
g3dph94,ij9gxd,"P.S. And let's not forget JS code linting pretty much began with Crockford's JS Lint ... ie. ES Lint, but without 95% of the customization (because if you weren't doing Javascript the way Crockford said to, you were doing it wrong).

Fortunately better tools supplant inferior ones, and now virtually no one use's Crockford's linter.",4.0
g3edbt3,ij9gxd,JSLint loses hard and yet people still continue to write non-configurable linters for some reason. \*cough\* Rome \*cough\* Deno \*cough\* \*cough\*,2.0
g3ehufl,ij9gxd,"The straw that broke the camel's back for many people may have been this [JSLint GitHub issue](https://github.com/douglascrockford/JSLint/issues/17) (""move_var should be configurable"").

The issue here was that many people (including myself) wrote and preferred code like this:

    function foo( array ) {
        for( var i = 0;  i &lt; array.length;  ++i ) {
        }
    }

JSLint had always complained about the `++i` since Crockford didn't like `++` or `--`, preferring `+= 1` or `-= 1` instead. But if I recall correctly, that was an option you could disable.

With the new non-configurable `move_var` error, this code would no longer be allowed, with or without the `++`. You would have to write:

    function foo( array ) {
        var i;
        for( i = 0;  i &lt; array.length;  i += 1 ) {
        }
    }

When someone asked for a configuration option, Crockford replied:

&gt; You can write all the crappy code you want. I don't care, because you don't work for me. The purpose of JSLint is not to make you feel good about your bad choices.

Besides the nasty attitude, there was a practical problem here. Suppose you had a codebase of tens of thousands of lines of code written in the former style. And then you wanted to use JSLint to improve your code quality. You simply _couldn't_ rewrite all your code in one fell swoop to use Crockford's style, _even if you agreed with it_. There would be too much risk of breaking things.

A configuration option to disable the `move_var` complaint would have been a very practical solution. You could adapt and update your code incrementally, testing as you go and gaining the benefit of lint checking in the meantime, and finally when you'd moved all your `var`'s to the top you could re-enable that setting.

But no, it was ""my way or the highway."" So that was when I and many other people gave up on JSLint.",2.0
g3dtc3p,ij9gxd,"Oh interesting. I've only ever watched this lecture series, which I thought was pretty good overall. There were a few times he talked about those ""standards"" but gave reasoning behind it as far as I remember.

I still think the first video from that series is a good look into how js (and other programming languages) came to be and sheds some light on the reason we call it ""javascript"" rather than ""ecmascript"". Still an enjoyable lecture imo :)",1.0
g3e5trw,ij9gxd,"Totally.  Again, I do not want to say Crockford is all bad!  He's not: he's very intelligent, and he *has* made lots of great contributions.

The problem is just that he uses his authority from the good stuff he does to advocate for things that aren't good, and he seems to have no ability to differentiate the two (again, see JS Lint's attempt to force every JS dev to code the way Crockford codes ... without any evidence whatsoever that his style was superior).

Frustratingly, he's a very mixed bag.  I *wish* I could have a dev crush on him, like I do with *consistently* great voices (people like John-David Dalton, John Resig, Jeremy Ashkenas, Dan Abramov, etc.)",4.0
g3e6wo3,ij9gxd,"I think I need to check out more ""great voices"" in coding to get a better idea of his competitive strengths and weaknesses. Dan is the only one you named that I knew - thanks for the suggestions!",3.0
g3e7twx,ij9gxd,":)  Just to associate projects with names:

John-David Dalton - Creator of both Lodash and the *brilliant* `esm` module (and just all around super nice/smart guy)

John Resig - Creator of jQuery, and he also wrote that Javascript Ninja book and has done other stuff (it's easy to dump on jQuery now in retrospect, but he's made *incredibly* smart decisions with that library, and has some very smart things to say about JS)

Jeremy Ashkenas - Creator of both Underscore (early version of Lodash) and Backbone.js, and also he probably writes the most well-written code I've ever seen (I'll be the first to tell someone to use React over Backbone, but damn the Backbone source is beautiful and easy to understand!)

Dan Abramov - (As you know) creator of both Redux and React-DnD, and now a member of the React team.",3.0
g3e8j3f,ij9gxd,"Perfect, thank you!",3.0
g3hs6yo,ij9gxd,"Related story: I was involved in the jQuery project when it was first getting started in January 2006. I even wrote the very first jQuery plugin, although it was not a very good one!

In July 2007, John Resig was speaking at the AJAX Experience conference and they'd given him a couple of extra tickets, so he gave them to Yehuda Katz and me.

At one point in the conference the three of us had some spare time, so we hung out in one of the side rooms comparing notes on JavaScript tricks we'd discovered - like the (new to us!) [Immediately Invoked Function Expression (IIFE)](https://www.google.com/search?q=javascript+iife).

There was a panel discussion after that, with John, Jack Slocum ([Ext JS](https://en.wikipedia.org/wiki/Ext_JS)), Douglas Crockford, and a few others.

They started with the panelists introducing themselves. Everyone gave a modest and polite description of what they'd been working on, until it was Doug's turn:

""I'm Douglas Crockford. I need no introduction.""",2.0
g3i0pj3,ij9gxd,"LOL great story, thanks!",2.0
g3cq8nt,ij9gxd,It‚Äôs trademarked but does it even make them any money?,2.0
g3dnz8t,ij9gxd,"I doubt it, it could be argued that it's become a ""generic trademark"", which means it loses a lot of legal backing in a lot of countries. In the USA, a generic trademark becomes part of the public domain.

As far as I know, no court case has been had to define JS as a generic trademark, but it's pretty clear that it would officially enter the public domain seeing as Oracle has never pursued it.",3.0
g3elujh,ij9gxd,"To me, this is a constant reminder that Oracle is a predator company and that, as long as I am alive, will oppose to any link with this company.",2.0
g3eh1f1,ij9gxd,"Since they aren't enforcing that trademark, it is pretty much null and void.",1.0
g3ems2v,ij9gxd,Oracle sucks,1.0
g3d0r5r,ij9gxd,When bootcampers learn history its a TIL lol.,-26.0
g3d71id,ij9gxd,Somebody seems a little insecure,8.0
g3d7wcl,ij9gxd,"Somebody seems a little under informed.

This honestly explains why this community is embracing practices that have been abandoned years ago.",-20.0
g3d86sj,ij9gxd,Kinda sad when you‚Äôre ripping zaps you have to go on reddit to talk to people. I just feel bad for you now. Get out of your house and make some friends dude lol,4.0
g3d8afx,ij9gxd,Quarantine is a bitch.,-13.0
g3d8mit,ij9gxd,So you‚Äôll snort blow but seeing close friends is too dangerous for you? Lol good try,-2.0
g3dhnkl,ij9gxd,"You're digging qay to far into this to have anything better to do and you are saying I have no friends, the argument came out of nowhere too... this is starting to sound like your own cry for help",-1.0
g3didw0,ij9gxd,You‚Äôre right I‚Äôve got nothing better to do right now. Railed a couple balls last night with some friends and just woke up. Can‚Äôt get out of bed,0.0
g3byzdf,ij807j,"One of the coolest things I have seen here in a while. What inspired you to do this? :)

Edit: Found your site and spent the last 20 minutes playing with some of the fun stuff you have on there. Absolutely amazing work! I was having way too much fun playing some of your games and demos. Took me back to my days of bit twiddling. It is so awesome to see that you have maintained a high level of passion for such a long time, and that the game industry didn't beat that out of you ;). Your work inspires me to go back and do some low level stuff. I'll send you a LinkedIn invite. Maybe we can collaborate on something one day.",3.0
g3dk2qv,ij807j,"Thank you, I got a bit burnt out working on failed AAA games for the past 20 years, really needed to try something different. So glad I picked up javascript and got into tiny coding. Also, something about writing and reading minified code that makes it so much easier when you don't have a size limit and the code is well formatted.

For the sprite sheet specifically, I was inspired by another dweet, had it on my list to remix for a long time.

https://www.dwitter.net/d/3078",1.0
g3c4gbf,ij807j,"Took a small look at the code... Is it a pixellized rorshac with a 1px black border and a 3 color top to bottom gradient? That math is complex.

Absolutely cool shit.",3.0
g3dlpl8,ij807j,"&gt; rorshac

Close! There isn't a top to bottom color gradient but the algorithm often colors in that way. The math basically picks random points biased to be closer to the center.",1.0
g3dm07q,ij807j,Aren't (non-animation) sprite sheets a bad idea now with HTTP2?,2.0
g3dt50c,ij807j,"&gt; HTTP2

I don't know, what do you mean?",1.0
g3dupu2,ij807j,"Sprite sheets were useful for websites when your site would load slower the more simultaneous connections your browser had to make. After HTTP2, not only is it not slower, but often significantly faster to break your assets into many chunks that your browser loads in parallel. The concept of a sprite sheet, which was born to optimize speed, is now slower than downloading each sprite individually in parallel. Most modern web servers use HTTP2.",2.0
g3dv32k,ij807j,"I was mostly thinking about using this for games, not like a normal website. 

Also with something like this, clients can generate the sprites locally so there is no download needed.",1.0
g3dvg6y,ij807j,"If this isn't over the web then yeah my point is moot. With games over the web though the point stands. It also means that updating one sprite won't cause your user's browsers to redownload the entire set of sprites it has cached, only changed ones.",2.0
g3dwdlu,ij807j,"Yeah, that's a good point. Not really the type of web dev I do but I'll keep it in mind.",1.0
g3g4p0x,ij807j,"Aren't there other advantages like only rendering from one texture instead of multiple small images when doing game development? I remember reading about this when looking up ways to optimize Canvas 2D and WebGL sprite rendering. It's supposed to make it so that your GPU doesn't have to switch states to multiple different textures, and instead just clip out everything from the same texture.

It's pretty common to do when developing games traditionally. However, I'm not 100% sure if this transfers to browsers.",1.0
g3fkp4d,ij807j,Nice,2.0
g3axjai,ij3e6q,"I wasn't really sure how to create a post using the ""submit a link"" option, so I just used the link to my original post in r/starcraft2",2.0
g3e56ws,ij3e6q,cool stuff but can it beat a cannon rush,1.0
g3fpy96,ij3e6q,"If you have enough replays of players countering cannon rushes to train from, I promise the resulting AI could beat a cannon rush no problem haha.",1.0
g3b06u8,ij031z,"Additional fun, useless fact -- in spite of editors accepting it, the shebang is not actually valid in JavaScript. Node strips it off before feeding it to V8.

We [needed to account](https://github.com/microsoft/vscode-js-debug/issues/324) for this in the JS debugger in VS Code.",26.0
g3b31xn,ij031z,"There's a [TC39 proposal for that](https://github.com/tc39/proposal-hashbang), and apparently Chrome 74  and FFox 67 support it.",13.0
g3bgssc,ij031z,"https://github.com/tc39/proposal-hashbang#why-hashbang-instead-of-shebang

Why the hell are they caring so much about changing a name that everyone knows it by?",7.0
g3cf82b,ij031z,"Eh, does It really matter? I wrote 'tc39 shebang' on Google to find the repository",1.0
g3ddx5y,ij031z,"Meh, I just found it confusing for them to care so much.",1.0
g3bs4ws,ij031z,The shebang line is not for node. The shebang line is for the shell to decide to which interpreter to pass your script. That's how running `./foo` gets to the node interpreter and not to e.g. perl.,9.0
g3c1210,ij031z,I wish I had the confidence to tell a Microsoft core developer of VS Code what the shebang is used for.,5.0
g3c1w0m,ij031z,"The comment was to clarify connor4312's comment for readers here than for connor4312 himself. In any case I didn't know who he is, so thank you, but that would not affect my confidence to converse with him. I've been writing code since the mid-1980's :)

The whole idea that the linked article discusses the ""node shebang"" is ridiculous, nothing in that article is node-specific. It makes it sound like the shebang line is something *for* node.",7.0
g3by572,ij031z,Very good point. I'll add that to the post. üëå,1.0
g3atdjw,ij031z,Excellent write up. This makes me want to rewrite some scripts in TS from Python now that i use at work.,14.0
g3c3ju3,ij031z,"&gt; which tells the shell

Kernel handles shebang lines usually.",4.0
g3c8i7p,ij031z,"Very good point. I was under the impression that it's the shell because if shebang looks like `#!/something/random`, bash complains like this: `bash: ./yourfile.js: /something/random: bad interpreter: No such file or directory`

But you're right according to [https://www.in-ulm.de/\~mascheck/various/shebang/](https://www.in-ulm.de/~mascheck/various/shebang/)

Thank you.",1.0
g3apzvs,ij031z,Really interesting and worth the read. What other unique things like these have you written about?,5.0
g3c216f,ij031z,"Thank you. I write about random things. If there's something relevant to JavaScript, I'll usually post it to this sub.",2.0
g3c2amv,ij031z,"Nice, about to check your other posts",2.0
g3f669f,ij031z,"Not paywalled but Medium will annoy you randomly to signup or log in with Google.

Stop using Medium FFS.",2.0
g3jckdz,ij031z,"Super informative article, TY for sharing!",2.0
g3aqx02,ij031z,Very nicely written and informative! Thanks for the read,2.0
g3c21r5,ij031z,Thank you for taking the time to read it.,1.0
g3b2ft1,ij031z,"So if you use shebang with -S and pass some arguments, will those arguments still be applied if the script is run traditionally with `node file.js`?",2.0
g3c1ylg,ij031z,No. Node will only skip the shebang line. It won't try to parse it. Shebang is used by shell prior to running the script.,2.0
g3euqra,ij031z,William Hung approves,1.0
g3a180r,iizj8t,"Project Page (?): https://github.com/jedzoka/jedzOS

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g39w586,iiujfi,Looks great! What‚Äôs the benefit of using this over particles.js though?,5.0
g3aad4m,iiujfi,"There are some bugs I found fixed, many other open issues on particles.js repository are fixed/implemented and some pull requests too, one of the most requested is the FPS limiter so it won't use 100% of the client CPU.
I started from those, then I added other features myself, like particle emitters, particles revealing the background, triangled filled between links, and others.
You can have more customization too, there are particles options override, and themes (custom themes too) will be ready shortly.
You'll find ready to use components for React, Vue, Angular, Svelte, and others if you need.
There are documented methods for play/pause, destroy, refresh so you can, for example, pause the animations with a button if a user wants to.
Anyway, it's a funny side project for learning TypeScript and a lot about animations and a little physics.",5.0
g3aakxx,iiujfi,Well I‚Äôm convinced. Will work on replacing my react particle js wrapper with this later tonight. Thanks for detailed reply!,2.0
g3ab303,iiujfi,"Well, If you are using `react-particles-js` above version 3.0, that component already uses my library (not the 1.17.10 version but a close one). The difference between that library and `react-tsparticles` is just the default values because `react-particles-js` uses some custom values by default.",4.0
g3ab8x9,iiujfi,"Oh cool, had no idea!",1.0
g3a62c7,iiujfi,"Typescript provides type checking, so you don‚Äôt get cryptic errors in the browser, caused by the immense technical debt created by agile development. This version also uses ES6 features, which aren‚Äôt utilized in the original as the project seems to have been abandoned 5 years ago ‚Äî tsparticles stresses that their project is ""actively maintained.""

I suppose it doesn‚Äôt provide much superior value for small projects which just import the minified js library.",4.0
g3cqzjm,iiujfi,Maybe not the right place to ask but any inspirations on particles used well in web UI?,1.0
g39nct5,iissj5,"Nice effort.

I was watching the video provided on the GitHub page and I've come across another video: https://www.youtube.com/watch?v=XftIeHr3wKM

that does look better if you ask me. But that's just my opinion.",2.0
g38udn8,iir35f,"iexcli is somewhat stable now. would appreciate feedback.
 https://github.com/HP4k1h5/iexcli",5.0
g397vh4,iir35f,Finished my crossword maker finally. http://crossmaker.herokuapp.com,4.0
g39snpx,iir35f,Created a Chrome extension to simplify copy/paste experience with Chrome:  [https://www.youtube.com/watch?v=m9\_ridH2EvE&amp;feature=emb\_title](https://www.youtube.com/watch?v=m9_ridH2EvE&amp;feature=emb_title),3.0
g3bykxz,iir35f,Wrote an article on [How not to GraphQL](https://www.samdawson.dev/article/how-not-to-graphql),5.0
g38mt9u,iir35f,[deleted],3.0
g3dkw6f,iir35f,"I'd break the opening text down into 2 sections: one for the bio (your first 2 sentences basically), and then 2nd section would be for a summary of what you've done, usually presented as a headline (the most prominent text on the page). _""I have a drive to use skills and experience towards improving tools, services and communities""_ is a good start, but you want to keep it to a summary, e.g. don't refer to details, like when you mention Microsoft (btw, what is Microsoft discord??). Broad strokes here, not a list of stuff you've done, which is what should go in the ""Projects"" section.

Under ""Projects"", I think you're doing yourself a disservice by showcasing screenshots while hiding your actual technical contributions. IMHO, screenshots only add value to a portfolio if you're a designer; otherwise, they're annoying, because I have to click each one to see _what you actually contributed_, and I can't see all the details at once (like you should be able to do with a resume).

Again, if it were mine, I'd reduce the projects down to list, maybe using a small logo for each company as opposed to giant screenshots. The info in the hovercards would be moved to inline text, maybe hiding some of the more boring text (like ""About company"") behind a click, while showcasing your highlights. If I'm on your portfolio page, I want to know what **you** did, so make that the featured content.

Not a fan of the testimonials, if they aren't from someone notable, and can't be independently verified, you could just be making it all up. We all know LinkedIn testimonials are gamed, and yours offer even less confidence than those.",3.0
g3i8ezc,iir35f,[deleted],1.0
g3igwrb,iir35f,"Glad to see your responses! I have some follow-ups...

Maybe I should've asked before the critique, but it's not too late now:

* Why did you make a portfolio?
* What type of role are you looking for?

&gt; I've got quite a bit of feedback regarding that from UI/UX expert who's around the field longer than I am alive and had very valid criticisms. Honestly his feedback makes sense, you present something pretty, name and your role on it and people can click on it if they're actually interested.

A portfolio is to show off what you've created, and unless you built the site from scratch (or were 100% responsible for the UI), then showcasing the screenshots is disingenuous. 

Are you trying to land a UI/UX gig, or a developer gig? Admittedly, I didn't read every info card, but from what I saw you're a developer. Your friend's advice is great if you're angling for UI/UX (removed from development), and not-so-great otherwise. I've interviewed 100's of candidates at this point, and the only tolerable ""portfolios"" are the ones that link to a github profile with lots of projects you either created, maintain, or contribute to. Developers _develop_, so show me what you've developed. Even in my company, we hire lots of ""UI devs"", but none of them are creatives, e.g. it's all frameworks and tooling, so again, show me the code.

&gt; The one that I use are taken directly from internal ""youearnedit"" platform, if someone wanted to see where those claims are correct they easily could and every single of those people could vouch me.

If you keep them, I'd suggest you add something to the effect of: ""Testimonials pulled from internal company review system; references available upon request."" 

&gt; I honestly never heard about anyone gaming it 

Oh dear...

* [Me and the boys after endorsing each other‚Äôs skills on LinkedIn](https://www.reddit.com/r/consulting/comments/hcmmon/me_and_the_boys_after_endorsing_each_others/)
* [ULPT: Get any job you want by making a fake LinkedIn account who is significantly more successful than you are and then recommend yourself](https://www.reddit.com/r/UnethicalLifeProTips/comments/9iv3a1/ulpt_get_any_job_you_want_by_making_a_fake/)
* [What do you think about LinkedIn's ""endorsement"" system?](https://www.reddit.com/r/jobs/comments/44p05k/what_do_you_think_about_linkedins_endorsement/)
* [How do you guys handle LinkedIn endorsements?](https://www.reddit.com/r/sysadmin/comments/1moplm/how_do_you_guys_handle_linkedin_endorsements/)

&gt; Gotta say that this made me a little sad

Sorry for being curt, not trying to hurt anyone's feelings. I've just been in the game, on both sides of the table, for quite awhile.

I only said what I did because you just have pics of some random people with no last names or company. If we had just met, and I told you: ""I know a guy named Bob says that I'm the best developer in the entire world"", how much would you value that statement? Would you put your reputation (and your company's reputation ) on the line and hire me, based off that? Unless you're extremely naive, you'd do best to completely ignore the statement because it's wholly unverifiable.",1.0
g38ryjn,iir35f,We are building a web browser called [Mosaic](https://github.com/mlajtos/mosaic) that can easily display multiple websites side-by-side. Written in TS/React.,3.0
g392oq2,iir35f,"Like the idea, not sure about the name. 

I‚Äôm guessing when you came up with the name you didn‚Äôt know that Mosaic [1] is the name of a once popular web browser - possible the first GUI browser and the precursor to Netscape and Mozilla.

[1] https://en.m.wikipedia.org/wiki/Mosaic_(web_browser)",5.0
g392w6v,iir35f,"https://github.com/mlajtos/mosaic/blob/master/DesignDecisions.md#mosaic

It was the other way around.",1.0
g39ndtk,iir35f,"Built a discord bot that plays music using only voice controls. Here is the repository link: https://github.com/SteTR/Emost-Bot

Would love feedback as this is my first public side project outside of school.",3.0
g3ne7a4,iir35f,"Hi everyone. I've been working with codedamn classrooms feature for some time now, which allows creators to create classrooms and labs for students to work on.

I recently created a Regex classroom on codedamn with the help of freeCodeCamp regex exercises. If you could try out those and give me feedback on the platform in general, I would be very humbled. You would need to however sign up for a free account, just to prevent server abuse.

Here's the link: [https://codedamn.com/practice/javascript-regular-expressions](https://codedamn.com/practice/javascript-regular-expressions)

Also, feel free to leave suggestions for other exercises/classrooms you wish to see on codedamn. We can literally support any web-based/CLI technology with codedamn's architecture :)",2.0
g3fqi3j,iir35f,"Created an eslint plugin to detect unwanted words (user-defined) in code and comments.  
Can be useful if you want to block certain offensive words or common placeholder values.  
[https://github.com/darwintantuco/eslint-plugin-detect-unwanted-words](https://github.com/darwintantuco/eslint-plugin-detect-unwanted-words)  
Let me know what you think! :)",1.0
g3hgag3,iir35f,A Roasting/Humour platform [http://totaled.upon.one/](http://totaled.upon.one/),1.0
g3hgv2w,iir35f,You can anonymously reveal ur secrets &amp; find out if someone else has also experienced it:   [http://thegreydiary.upon.one/](http://thegreydiary.upon.one/),1.0
g3kr0h1,iir35f,"Cross-posting from r/learnjavascript as I didn't realise this thread existed.

I've been learning to code since April, some Python and then Java for university.

Only started learning JavaScript about 3 weeks ago. I've been following along ""The Odin Project"". This is my first real project: Etch-a-Sketch. I've tried to add as much functionality as I can and to keep the code readable. I'd love some feedback, particularly on ways in which the code may be improved.

Live: [https://redyelruc.github.io](https://redyelruc.github.io/)

Code: [https://github.com/redyelruc/redyelruc.github.io](https://github.com/redyelruc/redyelruc.github.io)

Thanks in advance.",1.0
g38ei0q,iiojaz,I'm on my first job and I feel that my colleagues don't follow a single pattern of good practises.. I work with people of other nationalities and they code in their language every now and then .. so.. refactor.. refactor and refactor,6.0
g38n09l,iiojaz,I'm on my `nth` job now and people who actually care about their work are &lt;10% of the workforce in my experience.,9.0
g38ypn2,iiojaz,"I had a colleague who read ""Clean code"" book or something and after a while we thought: A) It was a troll content and he did not catch that B) He only read that to know what to not do to screw other people... He's code was so bad we never believed it wasn't written consciously.",2.0
g3bw1q6,iiojaz,"Yeah, and those guys will teach you how to do it right...",2.0
g39reaa,iiojaz,Mine too. I‚Äôve only worked 2 teams that took what they wrote seriously. When everyone cares it makes everyone‚Äôs life sooooo easy.,2.0
g3itxe5,iiojaz,Same. Can't stand them anymore.,2.0
g39qui3,iiojaz,"Most of the code bases I‚Äôve worked on have been dumpster fires. 

The code on my current job has been the worst. As soon as this first year of stock vests I‚Äôm out the door lol.

I personally write thoughtful well organized well tested code but it feels like a pointless effort when there are 10-30+ other people churning out nonsense.",4.0
g38u0ug,iiojaz,"I'm a sole developer and I constantly question if I'm following the best design patterns, I'm obsessed with ensuring my code can scale, and wish I had an expert that can review my code and comment on best practices.

Basically I'd like a stackoverflow where you can only post working code and people give suggestions on how you can optimize it, like a code review.",5.0
g39kr4t,iiojaz,https://codereview.stackexchange.com/,3.0
g39o3dv,iiojaz,"Awesome thanks!  I just started reading through it and find value in other‚Äôs code reviews even, if it‚Äôs not my specific code there‚Äôs tons to learn here!",2.0
g38yb9q,iiojaz,"I was the same, and when I started working with other developers

1. As you suspect there is much to learn from others (this was one of the factors that led to apply for jobs)
2. Most people don't think in those terms enough, in my opinion. Having that mentality will very likely mean that you're ahead of most devs 

It hurts me to look at code where the author clearly hasn't thought about maintainability or scale enough",1.0
g3a54ji,iiojaz,"Hey, I'd be happy to do code review for you. I know how hard it can be to code in a vacuum. DM if you're interested",1.0
g38kqtd,iiojaz,"I work on a large project called [Edge Wallet](https://edge.app). Our main React Native application has seen a mix of developers over the years, and we had some bad practices sneak in, but I think we are moving in the right direction.

For instance, we have at least 4 different styles of pop-up modals in our application, so we are slowly porting those all over to [react-native-airship](https://www.npmjs.com/package/react-native-airship) (I'm really looking forward to the day when all those old modal components are gone). We also added Flow types to the project about half-way through, and while most files at least *have* type definitions, we are still trying to tighten those up and get rid of errors. Other projects include moving components to the right folders, re-theming our app using [react-native-patina](https://www.npmjs.com/package/react-native-patina), and simplifying our Redux store. Most of this stuff is cosmetic, though - I feel like our code is pretty reasonable overall.",2.0
g39db9f,iiojaz,"I spent a lot of effort getting my department to standardize on processes like code reviews, and after a few months of work we formulated a standard consisting of roughly 70 (or 80?) individual questions, which we try to amend whenever a new question comes up. Everything is decided democratically, and we discuss as long as we need to.

Since we implemented these changes our code has become so much better, and I really love working on any of our projects now. But I'm also lucky to have great colleagues that support these efforts (even if they don't put in a lot of work themselves).",2.0
g3bwt5d,iiojaz,what sort of question? Which topics do they cover?,1.0
g3bxv0j,iiojaz,"We wrote down all technical and organizational questions we wanted to standardize on. It's stuff like:

- Which frameworks do we use for frontend/backend work?
- Which linter/prettifier/style guide do we use for what languages?
- Which commit message/branching guides do we want to adhere to?
- Who do you add as a reviewer to your PR?

So pretty much any question that we think we should all have the same answer to. The answers are written from a ""We want"" perspective, so e.g. ""We want to adhere to commit message style guide XYZ"". There's always a few sentences describing why we came to this conclusion, and then a list of bullet points specifically describing what this answer means for devs (using verbs from RFC 2119 to be unambiguous).

We started with ~60 questions, and regularly amend using a process described in the same standard. We've found this approach to work pretty well! It allows us to get new interns/devs up and running pretty fast (as we codified our ""code culture""), and it's easy for anybody to ask new questions and participate in the discussions.",2.0
g39jxvw,iiojaz,"When I work on my own team's projects I'm mostly happy. I'll occasionally run into things I don't like  (including my own old code), but generally things get caught in PR review.  My team tends to work well together tho, and we often discuss code style/practices.

&amp;#x200B;

The few times I have to work on other teams' projects I heavily consider jumping off my balcony.",2.0
g3g2oh7,iiojaz,"I'll be happy in the moment. Then when I go back a month later, I'll be like ""What pleb wrote this piece of shit code? Oh. It's me nvm"" :-D",2.0
g3kfcfh,iiojaz,"They really like the Single Responsibility principle.

There is one class with tens of thousands of lines of code, and it has one responsibility:  
Providing the entire application.",2.0
g38zxrh,iiojaz,They all good codes bront,1.0
g3a4041,iio4zt,Thanks for this article! Fun read.,3.0
g3d5ctq,iio4zt,Thank you!,1.0
g39pfbw,iio4zt,What value is knowing how it was done at this point years ago?,2.0
g39pvcy,iio4zt,"IMO Fiber makes no sense if you don't understand how things worked before it and their drawbacks. 

This post answers the question ""why rewrite the reconciliation engine?""",12.0
g39rhs2,iio4zt,"You're underestimating how many people started after React 16 was a thing so the questions never occurred to them and they don't know or care about what Fiber is because it's been their default.

This would be relevant 2 years ago and that's why core team members presented about their reasons and the design of both reconcilers then.",-3.0
g3a6ahh,iio4zt,"It doesn't matter if you're using (say) Windows 2040: if a design choice that was made when Windows went from Windows 3 to Windows 95 still *impacts* Windows 2040 ... then there is value in knowing why that design choice was made (even if it was made way back when).

There's not necessarily *huge* value; I'm not saying all React devs need to read this article, *at all*!  But there is value.",8.0
g3dhfsx,iio4zt,"Its not a compulsion to study the reconciliation engine. Its like driving a car, you dont need to know how the combustion engine works to drive it, but its still a fun thing to know.",2.0
g5jw3tb,iio4zt,The third article in the series is posted at - [https://dev.to/burhanuday/react-internals-fiber-architecture-280l](https://dev.to/burhanuday/react-internals-fiber-architecture-280l),1.0
g3b5brs,iio4zt,Whats the point of posting this about v.15 now?,1.0
g3d56pl,iio4zt,"To understand why the Fiber architecture in React 16 was necessary. It was a huge performance boost. Also, I like it when i understand the abstraction",3.0
g3d74e4,iio4zt,"Then talk about a compare-and-contrast between 15 and 16, if that's what your goal is.",0.0
g3ddjqj,iio4zt,"Thats exactly what i am doing in the series. If you read the article, that is my last statement in the post

I have covered the limitations of this approach in the post. And am planning on covering Fiber in the next one",6.0
g3dfiy3,iio4zt,"My point is cover them both in the same article, get to the point right off the bat.",0.0
g3dgy7c,iio4zt,"Explaining the stack reconciler, its limitations and then the fiber architecture. That would be one long article. Plus i also covered some basic terms like reconciliation and virtual DOM in the first article. Digesting so much info at once would become too difficult",3.0
g3dilhe,iio4zt,"That's why not everyone can write a good article, what you just pointed out is the exactly test of your skill as a tutorial author. Cover reconcile and vdom in a different article, you don need to squeeze everything into one article.",0.0
g3djiti,iio4zt,"Thats exactly what i am doing.... Splitting the whole content in smaller digestable chunks

First article was about the basics like DOM and what is reconciliation

Second was about the Stack Reconciler

Third will be about the Fiber reconciliation engine",3.0
g36gvbe,iig81o,"Project Page (?): https://github.com/cf/avicii-sos-guitar-synth

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g39209m,iig81o,A volume slider would have been nice for my ears. Otherwise cool!,1.0
g35yvpb,iidiy3,"Hi All,

I created [blueprintstack.io](https://blueprintstack.io/) a couple of days ago for new people to experiment with the API blueprint spec ([https://apiblueprint.org/](https://apiblueprint.org/)).

Features:

1. No account required
2. Multiple blueprint files
3. Automatic preview updates (while typing)
4. Blueprints saved locally (indexedDB)

The site was created using Next.js and the source is available here: [https://github.com/alexalikiotis/blueprintstack](https://github.com/alexalikiotis/blueprintstack)

Let me know if you've any feedback or questions, have a nice day!",3.0
g4eb96d,iidiy3,[deleted],1.0
g4f6ymv,iidiy3,"Yes you're right, If the IndexedDB is disabled then some issues will come up. 

It was a compromise I had to take though cause I didn't want to build a full backend (databases, users, login, etc) but I did want to give a feeling of persisting blueprints.",1.0
g3g2pkf,iidiy3,Alexalikiotis++,1.0
g35w9n2,iid3fx,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g35wym3,iid3fx,added üòã,1.0
g38y4x2,iic994,"Offline is definitely an important (certainly not the only) use-case, but it's wrong to portray that as only applicable to apps.

Every single site on the internet should be able to keep being viewed (only with whatever content has already been loaded) even if I lose (or turn off) my internet connection.

The pathetic status quo is that almost all pages fail to ""re-load"" from cache (if your background browser tab was suspended) if the internet connection is off. This is completely unacceptable behavior even for static content like blog posts.

Without exception, every single site on the web should be given a caching-first service worker. Browsers should either block sites that don't, or even better, just start giving every site a default one if they don't already have it.

There's literally never a single time when static already loaded content shouldn't be able to be viewed again/reloaded (when your internet is off).",11.0
g3u8mws,iic994,"IMHO that should be a built-in browser functionality: viewing pages from its own cache that the user can choose to empty on exiting the browser. We don't need to pollute the Service Worker space with every single website that I've visited storing stuff on my hard drive. I would consider that an intrusion. In fact I was horrified to see the number of service workers registered in my browser's devtools Applications tab, and promptly unregistered them all. We need a way to control who gets to store stuff in my system (way more data than cookies), and not just with InPrivate browsing. Fine if it's a PWA I've installed, but not fine if it's just a website I'm visiting.",2.0
g35y4b3,iic994,Where did you get the information that offline functionality was what service workers were mostly used for? A huge component of SW is there ability to cache assets both static and dynamic increasing the speed of your site dramatically. And they are so simple to set up I can't think of a single site that wouldn't benefit.,6.0
g36886o,iic994,"Doesn't make a whole lot of sense for static assets, since HTTP itself handles that just fine. But the dynamic, i.e. actual API calls, is the other thing that really makes SW shine. So the OP is actually right on this one.  


upd: actually SW makes sense for static assents on VERY poor networks, like 2G, since it avoids the roundtrips to the server to check cache.",1.0
g36v5bt,iic994,"Static assets can be precached with a SW. So on your home page (or any page that is the first point of contact) you can load in a non-blocking way your image assets on your ""team"" page, and when a user gets there, they don't need to request all those assets. they're already in cache. Same with CSS files, JS, video, you name it.",4.0
g37x9ku,iic994,"Ah, I see. I thought the caching and offline functionality could be seen as synonymous, since they both keep application data on the client.

In the case of static sites though, wouldn‚Äôt HTTP caching be enough? Or would SWs provide some functionality that HTTP cache cannot?",1.0
g38gax2,iic994,"What if you want cache AND fresh content? Can't do that with HTTP... if you set the cache headers for 1 year... then that's it. But with SW you can fetch from the cache and then in the background in a non-blocking thread you can fetch fresh content, compare with cache and if different update the cache (although from a practical code perspective, you'd probably swap it anyway, as you've already have the response)  


So now on the next load you get fresh content. There are a ton of others things like this with SW that make it better than HTTP caching.",1.0
g361xyj,iic994,"Sending E2E encryption is another use case of SW. Rather than have the encryption/decryption process, which is a resource intensive process, take up the main thread, let a SW do it in the background.",1.0
g36p4q8,iic994,"Or really any process. I‚Äôve built an app that sends patches, and the SW takes care of the work of gathering the patches together, queueing them, then combining them and sending them. It can also maintain the patches (alongside local storage) until the application returns online.",1.0
g36shx0,iic994,Issue patches?? How would you issue a patch? Do you use eval() in your code?,1.0
g36ulcf,iic994,"Who would do that?

It‚Äôs patches to a backend for a complex document structure. The patches are atomic operations generated by an immutable state management tool called Immer.

Having the SW do that work in the background (and using the policy of optimistic updates) means the UI stays snappy and only relies on animations being performance focused to ensure a smooth experience.",1.0
g373f5n,iic994,"You mean a database? You‚Äôre using the SW databases. I‚Äôm really interested by this. What use cases warrant a localized database? I‚Äôm sure Facebook is using this, but I just don‚Äôt see what it‚Äôs needed.",0.0
g3740wf,iic994,"I mean what I said. 

It‚Äôs using local storage to store the structure and the patches. The important part is the patch storage. It‚Äôs a queue that gets emptied when the app comes back online.

The permanent storage medium is on the backend.

All user settings are maintained and updated this way; the SW is both a separate thread and an interface that mimics the backend to allow a user to use the web app offline. It‚Äôs pretty much a textbook use case for the SW.",3.0
g39i9y5,iic994,"Should Web Worker is enough for that use case?

Like any other resource intensive process?",1.0
g36wzjm,iic994,"Notifications and native app install are two features I can think of which are independent to offline.

Service workers have a ton of complexity and their lifecycle behavior is pretty confusing. Not really worth the headache unless you really need offline, notifications, or a native app experience IMO.

There are some other interesting ideas in the comments around scheduling work off the ui thread, but I haven't read or seen much on that use case for service workers (definitely for web/shared workers).",1.0
g37jw3l,iiarqy,Wow. I want to keep an eye on this! Very cool! I‚Äôm excited to see some comparisons with performance vs bundle vs between Brahmos and React and Preact,3.0
g37uhv8,iiarqy,"I am glad you liked it. 

There are couple of optimizations which are in pipeline. Will benchmark and share comparisons once Brahmos is more mature and stable.

On the bundle size, Brahmos can also reduce the application bundles size and parse time on load, due to transpiling the JSX into more parse friendly output. 

But definitely I have to still benchmark for actual difference.",1.0
g38hfd9,iiarqy,"I notice you transpile JSX to template literals. But doesn't that mean those templates are compiled on the client? Maybe I'm missing something (do you have a prod optimization for that?), but if that's the case, I don't see how that's going to be faster.",1.0
g38kb3q,iiarqy,"Sorry I didn't get what do you mean by compiled on the client?

In react JSX is transpiled to createElement syntax for all nodes. 

In Brahmos JSX is transpiled to tagged template literals. Tagged template literal is just like a function call. In brahmos the tag function returns html template tag instance created by static parts (string parts), and dynamic values. 

Hopefully this slide can answer your question
https://docs.google.com/presentation/d/1a1Oi5dVP884gGOKtTiFJiz70KIEUmHvAvL8Xta8tVKc/edit#slide=id.g63b8580613_4_47",2.0
g38q6es,iiarqy,"Right, compiled is maybe not the right word if it's not a traditional template, but what I mean is the string parts of your HTML template need to be parsed, right? Otherwise, how can you create elements out of them? So that parsing now happens on the client, which costs performance.

But with React's regular approach it's JSX =&gt; VDOM elements =&gt; DOM elements, with no more parsing in-between because there's no string representation on the client.

Without measuring it's impossible to say how significant this overhead is, but intuitively I would be skeptical to claims of it being faster because of the necessity for client-side parsing.",1.0
g38ralr,iiarqy,"I surely have to put some benchmarking for this, but string parsing is fast.

Plus for a given template even if it repeated n number of time throughout the application the parsing will happen only once.   
Brahmos caches the parsed template for a given set of static string. [https://github.com/brahmosjs/brahmos/blob/master/src/tags.js](https://github.com/brahmosjs/brahmos/blob/master/src/tags.js)

Btw, with serving tagged template literal we also save the JS parsing time.   
JS parsing time for a string is smaller than the objects.  Check out this article:  [https://v8.dev/blog/cost-of-javascript-2019#json](https://v8.dev/blog/cost-of-javascript-2019#json)",2.0
g384u08,iiarqy,"Awesome work. Looks like a lot of work has gone into this and it's great to explore alternatives to vdom and React's dominance. I love JSX more than react itself, so anything that supports it is great.  


It's an interesting idea, but without actual benchmarks there no actual evidence that it is any faster than React.   


Diff'ing just the dynamic parts seems at first glance that it would be faster, but by having a single dynamic tree there may be optimisations possible that aren't possible here.  Just a guess.

  
The reality is, until something is measured. You can't actually know. Looking forward to seeing the benchmarks and progress. Great work u/_syadav",2.0
g38n2yx,iiarqy,"Thanks u/xen_au. I am glad you liked it.

Brahmos can have perf optimization by three means.

**1. Bundle size  (minified + compress)**

Brahmos: 11.6 kb (It covers most of the React APIs including upcoming concurrent mode)  
Preact + Preact compact: 8.9 kb (But the preact doesn't have concurrent mode support)  
React + React-dom: 38.5 (It might grow little bigger with concurrent mode support)

There is still some work planned to reduce the Brahmos size, which may reduce it more, plus also looking into how we can tree shake while supporting React's 3rd party lib.

**2. Application bundle performance**

Brahmos transpiled output of JSX is smaller than React for application code. Plus it may also reduce the overall parse time as the tagged template literal which is a string is more parse friendly then objects.   
Check out this article: [https://v8.dev/blog/cost-of-javascript-2019#json](https://v8.dev/blog/cost-of-javascript-2019#json)

**3. Update time**

As in Brahmos we are combining the static parts as one node the traversal becomes fn(dynamic nodes) which in React is fn(nodes). So the overall traversal time to find changes to apply on DOM is less on Brahmos.

Before starting Brahmos. I have compared libraries with similar rendering pattern with React to figure out the perf diff and the pattern definitely win on the benchmarking, but still have to do with Brahmos. It's completely on theory right now.

In Brahmos, the current priority was to match the React APIs and there is a couple of micro-optimization which are yet remaining. Benchmarking it and comparing it with React wouldn't be wise right now unless those optimizations are done. I will definitely share the result after it.",1.0
g35hpxt,iiarqy,"Checkout demos built with brahmos 

https://codesandbox.io/embed/brahmos-demo-3t8r6?codemirror=1",2.0
g35nl19,iia7co,Obviously you would need google accounts for that but no word about that in your article.,1.0
g35p6f2,iia7co,How so ? I didn't need a google account for this. I just scraped the data that is available even without an account,2.0
g37zhew,iia7co,"I can confirm you don't need a Google account. 

I'm not sure why the OP is getting downvoted, but if I had to guess, it's because people are interpreting it as meaning ""How to give your business fake positive reviews"" and being disappointed when they see you only meant ""scrape"".",1.0
g35bvdo,ii7my0,"I would go package imports first, then local imports (./), all sorted by the `from` part.",71.0
g361m6y,ii7my0,"I go by distance. Packages first, then imports from further away in the project, then imports from the same directory.",35.0
g36oh60,ii7my0,One of the nicest benefits of TypeScript is the built in baseUrl imports.,12.0
g37bqf2,ii7my0,You can configure that in any project but it's annoying to configure the root in both eslint and VS Code. On mobile so I don't have a link handy.,2.0
g3698n3,ii7my0,I agree with this,3.0
g35dg0v,ii7my0,"At my last job I built our own config plugin for import-sort ([https://github.com/renke/import-sort](https://github.com/renke/import-sort)). We used it as a prettier plugin so it happened at the same time as code prettying rather than linting. We did weigh up whether or not to use it automatically because it technically changes the semantics of the code, but there are ways to opt out in specific cases where the order does matter.

This is our plugin: [https://github.com/Zegocover/import-sort-style-zego](https://github.com/Zegocover/import-sort-style-zego)

I don't recommend using it directly because parts of it are fairly tailored to our choice of dependencies and package structure, but it's easy to modify.

The ordering is essentially:

* System modules, e.g. fs
* Architecture modules, mainly React ecosystem, so anything starting with 'react'
* Other third party modules
* Absolute first party modules (except React components) eg `import foo from ""@zego/foo"";`
* Project-wide React components, eg `import Component from ""@zego/components/Component"";`
* Relative imports 
* Absolute static (non source code,  e.g images) imports
* Relative static file imports

And alphabetical within each group.

We found this gave a particularly easy-to-follow structure to things, especially pushing all non-code imports to the end, grouping things like images together was valuable.",24.0
g35tnt5,ii7my0,"Hey, that basically matches how I prefer to do things.  I'd done something last year with `eslint-plugin-import`, except that if I remember right, I'd had to use someone else's fork of it because of some nuanced behavior that hadn't been merged into the main project.  Bookmarked for later reference.",2.0
g35u6vc,ii7my0,This is generally my preferred sorting style. I also like to add a line break to differentiate some of them like if you use css modules and import to your js.,2.0
g35ujzt,ii7my0,"Oh yeah, I didn't mention but there is a blank line between each of those groups. Very good point!",2.0
g38ck04,ii7my0,"Ah, thanks! We used your tool for years, and it did an awesome job.

In an effort to simplify our tooling, I actually started working on turning import-sort into a proper ESLint plugin (since your code is nice &amp; modular). I never finished that project, though, since I found [eslint-plugin-simple-import-sort](https://github.com/lydell/eslint-plugin-simple-import-sort) partway through. Its output was similar to import-sort-style-module (which we were using), so I gave up and switched to that instead. I still think import-sort would make a great ESLint plugin, so hopefully somebody else will actually do it one day.",1.0
g38i739,ii7my0,"Oh, I only did our custom plugin (the 2nd link in my comment), I can't take credit for import-sort itself!",2.0
g35eqr3,ii7my0,How is this different from [import/order](https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/order.md)?,12.0
g37e38t,ii7my0,This is a much better order in my opinion,0.0
g359ftw,ii7my0,I always sort my imports from longest to shortest. Am I the only one?,6.0
g35bx5w,ii7my0,No. It‚Äôs the best way. Although packages go first,4.0
g35nc6j,ii7my0,Even better is not faffing around with daft stuff like this that doesn't matter.,9.0
g360byy,ii7my0,"Eh... maybe on a solo project, but it matters a lot when you're working as part of a team.  Everyone needs to be on the same page about code styling to minimize diffs for code reviews.",1.0
g3682bt,ii7my0,You can use prettier for that. The order of imports is just a daft thing to care about. Makes no difference. It's a waste of time talking about it.,2.0
g36fs80,ii7my0,"So when you‚Äôre in a code base and you‚Äôre working through props, tracing your way back and forth, looking at imports, you‚Äôre saying the jumbled order wouldn‚Äôt interfere with your process?",1.0
g36ot04,ii7my0,Yes. Has no impact at all.,5.0
g36ht02,ii7my0,"If your team happens to be using prettier, and it normalizes import order, that would be one way to address the problem.  But the overwhelming majority of teams don't use that tool.",1.0
g36ozqh,ii7my0,"If you‚Äôre writing javascript, you should be using prettier.

It saves on all the wasted waffle endlessly debating stuff that can be fixed with the click of a button.

Prettier doesn‚Äôt sort import order, but luckily import order is a pointless thing to care about so that doesn‚Äôt matter.",1.0
g38d0u0,ii7my0,"If prettier doesn't sort import order, then it doesn't address the original problem.  Plenty of IDEs and other tools _do_ sort them, as well as people doing it manually.  With no rules in place about how they should be sorted, or no tool to sort them consistently across developers, the problems remain.",1.0
g38iyea,ii7my0,But it's not a problem. It's a waste of time worrying about it.,1.0
g39aisc,ii7my0,"If you don't find wading through messy diffs to be personally problematic, that's fine.  Plenty of people do, though, and for them, it's absolutely a problem worth worrying about.",1.0
_,ii7my0,,
g374gcy,ii7my0,"I sooo agree. I have spent way too much time of my life already in caring about import order or import styling. I *never ever look at them* anymore except to remove unused imports. I actually keep them auto-collapsed these days. Caring about import style has literally no utility, even when you need to care about looking at the imports. Only possible exception to this is imports with side-effects, which is one reason NOT to auto-order imports.",1.0
g38dg3s,ii7my0,"I agree that the order of imports doesn't matter, as long as it is consistent &amp; fully automated. It's waste of time for humans to sort stuff when we have computers to do the job, but it's also a waste of time for humans to track down duplicates imports &amp; other mistakes that happen when things get messy. Let the computer do the work.",1.0
g35xsgr,ii7my0,"I'd say I probably go shortest to longest, but I try to keep it consistent. Also like everyone else has said I go packages first. I'll also try my best to keep named, default, and the ""import * from"" type of imports separated from the others if I'm working with a file that has a lot of imports.",1.0
g35y89z,ii7my0,"I like grouping imports by their purpose, moreso than something arbitrary like alphabetical, but that's just my two cents.",4.0
g37fyhn,ii7my0,"Totally agree on this. Nice work to OP, but I don't see how imports in alphabetical order adds any value. Like the rest of the code, it should be ordered logically.",3.0
g36pzxy,ii7my0,"For a personal or small team project with only a few imports in each file, manual ordering can work. But as teams get larger and the number of imports grows, it becomes impractical to expect that everyone will maintain sensible ordering, especially if the criteria for ordering is based on something less clearly defined like purpose.",1.0
g37xd3y,ii7my0,"Hard to think of a single file containing an unwieldy amount of imports, sounds like a monolith/God object.",2.0
g3851vi,ii7my0,+1 if your file has that many imports it should probably be split up because it's doing too much.,2.0
g37lw5x,ii7my0,"I definitely understand feeling that way, but surely there‚Äôs a happy medium between arbitrarily organizing the imports and detrimentally focusing on organizing the imports.",1.0
g34vnxv,ii7my0,"I needed a plugin to sort import statements alphabetically by its first letter. I tried to use default ""sort-imports"" rule but it didn't work well for me. It has mandatory behaviour that sorts statements with multiple imports before or after statements with a single default import.

So I created my own plugin for that: [https://github.com/sergeyshpadyrev/eslint-plugin-beautiful-imports](https://github.com/sergeyshpadyrev/eslint-plugin-beautiful-imports)

It sorts imports like this:

    import 'alice'
    import 'bob'
    import * as Ant from 'ant'
    import * as Bear from 'bear'
    import Adam from 'adam'
    import { B as A, C } from 'letters'
    import David from 'david'
    import { E, F as H } from 'other-letters'",9.0
g35bo4d,ii7my0,"The README made me absolutely clueless about the difference, this helps a *bit*.

Can you provide actual examples where they differ?",14.0
g37sih0,ii7my0,"As good as this may or may not be, I always roll my eyes when software descriptions describe themselves as ‚Äúbeautiful‚Äù or ‚Äúblazing fast‚Äù.",3.0
g38vwb7,ii7my0,"Great, but why? How is more bloat *ever* a good idea?",2.0
g380h3o,ii7my0,"When will JS devs start to care about quality and not just quantity? It's not about this package specifically. You know, people, you can sometimes contribute, not reinvent the wheel.",1.0
g38gnjd,ii7my0,[Quantity always trumps quality](https://blog.codinghorror.com/quantity-always-trumps-quality/).,1.0
g37cyh2,ii7my0,"Am I the only one who doesn't care about the order... 
As long as everyone is adding it in the same way. 

Just so I get sane uniform git commits",1.0
g356e7r,ii7my0,Why? What if package b... needs to have package c... imported before?,-4.0
g3586ht,ii7my0,"Should package b, itself, import package c if it depends on it?",23.0
g358rb3,ii7my0,Then you have bigger problems. Really the only exception to this I can think of is polyfills,14.0
g359opu,ii7my0,"Polyfills exist though.

Same as config readers, database adapters etc",4.0
g35am3c,ii7my0,You can always disable an ESLint rule in places where you import a polyfill. It is better than ‚Äúcan you change the order of these imports?‚Äù In code review. Let the machine take care of it.,5.0
g358spg,ii7my0,"Then you most likely did something wrong. In general, b should import c on its own.

Moreover, if b and c are modules, there is no way b will access definition in c without importing it.",3.0
g35oees,ii7my0,"The current state of web development is sad


Oh the community is even more sad.

How is ""haha"" a response to an open ended technical opinion that is the entire reason this post even exists.",-11.0
g35wyhs,ii7my0,Hahahhahah,1.0
g35xrrn,ii7my0,Good point. Really solid technical argument.,-5.0
g361uxm,ii7my0,tbf you made quite a sweeping statement with no technical explanation to back up your take.,2.0
g369md5,ii7my0,"My statement was **clearly** an opinion and a statement that started the conversation his retort was childish and added nothing. 

I get your point but, really these are not the same caliber of statements.",0.0
g36cm15,ii7my0,"You still haven't shared the opinion. Just edited to say it was an open ended technical opinion. 

You'd get better traction if you stated it up front... rather than wait for someone to challenge you and ask you to elaborate. Otherwise you'll get as much effort in a response than you put into your original comment.

Not sure why you're acting surprised or affronted.",-1.0
g36ea1e,ii7my0,"That is the opinion, quit playing stupid.

I did not really want to start an argument, dude left a sparky comment, I left on back, why are you getting so into this?

I'm not surprised at all, every single time someone is at all critical and not just hopping on the bandwagon is chastised. 

I just like messing with you cult fucks.",-2.0
g36eyd2,ii7my0,"Why are you debating so hard whether it's an opinion or not? I haven't disagreed with that. 

You sound so salty. You made a critical **opinion** (happy?) and don't want to elaborate. Fine. Move on. Don't cry over downvotes and not getting backed up when you give nothing of substance.

p.s. hahahahaha",2.0
g36tyer,ii7my0,Baller status!!!!!,1.0
g36fays,ii7my0,"Lol, im starting to think yall are the same person, just 1 guy with hundreds of accounts.",0.0
g36fhau,ii7my0,"that's the real 'hahahah'. 

Think you're taking reddit too seriously.",1.0
_,ii7my0,,
g371s7s,ii7my0,"you seem like the type of person who‚Äôs only purpose is to feel superior to others. I agree with the opinion that the state of web development is sad. I‚Äôm not going to argue with you, there is nothing to argue about. I simply think we often build shit that has no value sometimes and reinvent the wheel over and over again. Idc if you don‚Äôt feel this way or not. I found it hilarious. Sorry to burst you little ego.",1.0
g374qss,ii7my0,"Don't worry about this ego. Its whole existence is in the readers mind.

You're assumptions are a bit wrong though, ill agree a lot pf the people here might be better programmers than I am but they make very questionable choices that seem to be popularity driven and the same old thing repackaged and marketed differently and I see the irony that no one else does.aybe I payed too much attention in my CS classes and everyone has just forgotten the WHY.",1.0
g36tvk4,ii7my0,...,-3.0
g35a9kt,ii60en,"&gt; Yarn 3 in January 2021

That made me laugh a little.

I really like Yarn. I use it for personal projects. So when I was tasked with setting up a new project I chose Yarn. Berry had been out for a while so I tested that out and everything broke. Moved back to v1.

After a while I decided that I unfortunately had to move my team and projects over to NPM because v2 doesn't support CA files, which makes it literally unusable on our internal network. Since NPM and Yarn are more similar today than they were when it was first released, I don't see the value in staying on v1 when NPM will continue to improve AND support CA files. 

My only gripe with NPM is having to add ` -- ` before my cli params",16.0
g35cwab,ii60en,"Sounds good, use what works best for you! 

As for features you might find missing, as a community project, note that we expect you to help if you feel strongly about something. I see my job as a maintainer not to be to implement your needs, but to provide our community the support it needs to implement it itself. So if you're interested to discuss CA support, feel free to pop on our Discord sometime üòâ",11.0
g35qxd3,ii60en,"I totally agree with you. I attempted to add the feature at the beginning of the year but got lost trying to write the tests. I'll pop in and ask some questions when I have time to go back and look at it again.

Sorry if my comment came off as rude, like I said I really like Yarn and appreciate the work you've put in. Cheers.",4.0
g39aplw,ii60en,"Maybe I can help you write tests. I'm not too experienced myself, but I did submit a PR for a small new feature earlier this year (and the help of /u/arcanin was amazing for that, thank you again!). Maybe you can send me a link to your repo?",3.0
g37dt11,ii60en,"I'm actually in the process of assessing the viability of using yarn over npm specifically because of the workspaces feature.  

 I've basically came to the conclusion that classic yarn is abandoned and has major issues that have been open for several years now.

And yarn 2 is pretty much beta software. I couldn't get it to even  work.

Check out my repo and the Readme detailing the issues I had  https://github.com/DerekZiemba/yarn-V2-workspaces-simple-monorepo",5.0
g386daq,ii60en,"Edit: I've left you feedback here: https://github.com/DerekZiemba/yarn-V2-workspaces-simple-monorepo/issues/1.

&gt; I've basically came to the conclusion that classic yarn is abandoned and has major issues that have been open for several years now.

[As announced in the original Yarn 2 release post](https://dev.to/arcanis/introducing-yarn-2-4eh1#what-will-happen-to-the-legacy-codebase), Yarn Classic has entered maintenance mode, which means no new features or bug fixes from the team, except for security vulnerabilities and things that help with the migration to Yarn 2. Of course, people looking to maintain the Classic repo are welcome, but compared to the v2 repo, the v1 repo is... well, ~~it is what it is~~ you can see it for yourself... good luck.

&gt; And yarn 2 is pretty much beta software. I couldn't get it to even work.

As much as it has some caveats, I wouldn't call it ""beta software"". We know it's harder to migrate directly to PnP, and that's why we've put up other migration paths. One of them is the [`node-modules` plugin](https://yarnpkg.com/advanced/migration#if-required-enable-the-node-modules-plugin), which should be mostly a drop-in replacement for Yarn Classic and is even more stable than the node-modules implementation in Yarn Classic. It will continue being supported and maintained in the future and it supports most of Yarn 2's features that aren't PnP specific (CLI improvements, improved workspace support, extra monorepo features, release workflow, constraints, protocols, plugins...). For example, the [Jest](https://github.com/facebook/jest/pull/10188) and [Babel](https://github.com/babel/babel/pull/11962) repositories have migrated to Yarn 2 using the node-modules plugin. [PnP loose mode](https://yarnpkg.com/features/pnp#pnp-loose-mode) and [`@yarnpkg/doctor`](https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-doctor/README.md) can help you with switching to PnP once you're ready.

I understand that migration to PnP isn't always that easy and I agree that there are parts we can improve in the migration guide and in the documentation.

&gt; Check out my repo and the Readme detailing the issues I had https://github.com/DerekZiemba/yarn-V2-workspaces-simple-monorepo

I'll try helping you set up PnP correctly this evening. I know that I'm the one [who recommended](https://github.com/yarnpkg/berry/issues/1443#issuecomment-681167701) you to use Yarn 2 and I've seen your recent comments about the issues you've encountered, but I haven't had the time to help you yet and I'm sorry about that.",3.0
g3538qr,ii60en,"Funny, dedup was there at some point, then it was removed to only output ""dedup isn't necessary anymore"". And now it's back!",15.0
g35496b,ii60en,"Yeah, the original wording was pretty misleading (and too cheeky). I think the original writer meant that the same range would always have the same resolution (which isn't the case for npm), but they didn't consider that deduping could have wider reach, including between different ranges. Now it's fixed!",5.0
g35p5pj,ii60en,"Got mixed feelings about yarn v2 at this point. On one hand, the monorepo-oriented features are really nice. On the other, a large-scale monorepo migration from yarn v1 to yarn v2 is no joke (facebook basically gave up on it, and it's been hundreds of man hours and counting for us).

The biggest problem is that since yarn v2 fundamentally has a completely different architecture, a lot of things don't work properly/promptly with it (e.g. bazel, flow, rando transitive libs that depend on themselves for whatever stupid reason, complex browser fields, complex peer dep webs, sass stuff, etc) so adopting it at large scale is a significant investment.

The irony is that I can bear the install time of a small project and I've found tools like lerna/rush reasonable for medium size codebases. It's on large monorepos that things like instantaneous installs and protocols really shine, but the sheer size/complexity of the codebase and the amount of workarounds needed to make random things work makes it hard to adopt the darn thing :/",6.0
g35zuox,ii60en,"Note that you can migrate gradually by initially using the [`node-modules` plugin](https://yarnpkg.com/advanced/migration#if-required-enable-the-node-modules-plugin). Something that many people seem to miss is the fact that Yarn 2 isn't only PnP - we also support generating node_modules via the `node-modules` plugin (which is even more stable than the v1 implementation, is mostly a drop-in replacement for Yarn Classic, and is also something we'll continue to support in the future). All of Yarn 2's improvements (CLI improvements, improved workspace support, extra monorepo features, release workflow, constraints, protocols, plugins...) except Zero-Installs and strict dependencies (and maybe I'm missing other things PnP brings) are also available with the node-modules linker, so you can use it until you're ready to switch to PnP (basically what the [Jest](https://github.com/facebook/jest/pull/10188) and [Babel](https://github.com/babel/babel/pull/11962) repositories have done).

You can then gradually switch over to PnP if you want ([PnP loose mode](https://yarnpkg.com/features/pnp#pnp-loose-mode) and [`@yarnpkg/doctor`](https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-doctor/README.md) can help you with that).",3.0
g36rry8,ii60en,"Unfortunately for us, the presence of node_modules is a significant factor in our current performance issues and is one of the reasons why we started looking at yarn v2 in the first place.

My grief comes mostly from the ""until you're ready to switch"" part, which is the gap we're currently trying to bridge. The significant investment I mentioned is the cost of going from ""works w/ node-modules"" to ""works w/ PnP"". Currently we've got to the point where we can turn PnP (loose) mode on and selectively unplug problematic dependencies and we've almost got things working. But because of PnP's strictness, a lot of things that used to work now require extra things to be explicitly declared (babel and eslint ecosystem things are the primary offenders)

I didn't know about @yarnpkg/doctor, that does look very useful. I'll take it for a spin. Thanks!",5.0
g37tpj4,ii60en,"I've had mostly good results from Pnpm, which has similar aims to yarn (particularly yarn plug'n'play) but using symlinks and the correct directory structure to work, meaning it's still fairly fast, but it's also usually more portable, and still as strict about depending on the wrong dependencies.

It also has pretty good workspace features, so each package ends up isolated, and you can run simple command across the whole codebase without too much trouble. For small and mid-sized monorepos, it's generally enough, in my experience at least.

OTOH, it's very much a tiny project compared to NPM, and the documentation is really lacking. I think there's only one developer that works on it permanently, although I think there's some support from Microsoft given how they're pushing it with Rush.",1.0
g3561ii,ii60en,"I ended up staying on 1.22.4 after the messy v2 launch, how are things looking these days?",11.0
g3570eu,ii60en,Yeah I agree. We tried to migrate our mono rep. Blew up,10.0
g35aeui,ii60en,"I'm especially wondering if people have managed to migrate one project at a time. I can use different project-specific versions of npm by switching to different versions of Node using [nvm](https://github.com/creationix/nvm) and listing the relevant version in `.nvmrc`, but I don't think that'd work for Yarn. I'd try to migrate one project, but I don't want to have to migrate all others on my pc as well.",2.0
g35bljv,ii60en,"Of course you can - we have supported [`yarnPath`](https://yarnpkg.com/configuration/yarnrc#yarnPath) for years now, which allows you to easily configure the Yarn version for a single repository.",1.0
g386zet,ii60en,"Thanks. So if I'm setting up a project, and I know nothing of my developer's environment, how do I set it up so that the developer automatically gets the right version? If I add a `.yarnrc` to my repository, where do I point the `yarnPath`? Like, I could add Yarn as a devDependency, but then... The developer wouldn't have the right version of Yarn to install it?",1.0
g387hb8,ii60en,"Yarn is distributed as a single JS file. Check it in your repository, and set yarnPath to a relative path. As long as your developers have any global Yarn, they'll use the version you want them to.",2.0
g388vy9,ii60en,"Ah, I see, interesting. Thanks for the info!",1.0
g365eee,ii60en,"""In the end, most duplicates will be removed""

So when will it not dedupe?",1.0
g368a39,ii60en,"We dedupe by resolving each range to the highest compatible version in the lockfile. In some pathological cases (let's say you have both ""~5"" and ""\^5"" in your lockfile) it can lead to the packages not being perfectly deduped (we never downgrade, so if ""\^5"" points to let's say ""5.1"" it'll never be deduped with ""~5"").

In practice however those cases should be fairly rare, so the trade-off seems acceptable. It makes the heuristic very predictable, without relying on the network or anything of the kind.",5.0
g36fm1e,ii60en,"So this differs to npm which doesn't dedupe if a transient package has locally installed version of a package and it's children use the same version. 

https://ctxt.io/2/AADAd9heFA

Sorry hard to explain.",1.0
g38uqix,ii60en,&gt; Paste expired or not found. Create your own Context here.,1.0
g37yu45,ii60en,Managed to provide a formatted example.,1.0
g34lw7h,ii5fb2,Wow nice üëå,1.0
g34ovci,ii4kal,Whats a single-spa?,7.0
g34p4ym,ii4kal,"Single single page application.

You can add as many single as you want and it makes it more single.",31.0
g36daqu,ii4kal,"All the SPAs were single, but this one is single-er",1.0
g34q6no,ii4kal,"Im not asking what the acronym means, what is a single single page app?",1.0
g34qbde,ii4kal,RIP in peace,17.0
g350r4x,ii4kal,It combines multiple single page apps into a single single page app.,10.0
g35pocs,ii4kal,"That should be named multiple spa then, cause that's what its offering.",3.0
g359h5s,ii4kal,I don't get it. Isn't it like a multiple page app then?,2.0
g35a0m8,ii4kal,the most basic description is that it's a router that coordinates multiple single page apps,5.0
g35aede,ii4kal,"It's loading each app through JavaScript, and you can have some apps stay on the page while others are replaced. I can't really explain it better than what's already on https://single-spa.js.org/",1.0
g35daqp,ii4kal,It creates an application that behaves like a normal SPA but is actually composed of multiple SPAs. It orchestrates between them to create a relatively seamless experience. It's a form of micro-frontends architecture where you build individual frontend apps for different domains of the overall application then have a tool that pulls them all together for a seamless user experience.,1.0
g35pext,ii4kal,It doesn't sound all that practical.,1.0
g35pphg,ii4kal,"It provides a workflow where you're using smaller chunks of code rather than monolith. Micro-services for the frontend, basically. It allows individual parts of the app to be releaseable on their own rather than everything having to go. At my company we use a similar architecture to avoid different teams stepping on each other's toes with our various release scheduled.",1.0
g35pyz1,ii4kal,"monolith is the most practical way for most frontends, maybe you're talking about enterprise apps for users within an organization?",1.0
g35q246,ii4kal,This is an enterprise app yes. A massive codebase with lots of features.,1.0
g372x1v,ii4kal,I'm sorry but this sounds unbelievably horrible.,0.0
g35r5ed,ii4kal,"I used this approach a few years ago and it worked pretty well, I had a small core that contained, well the core (primarily the API communication stuff that was reusable and would be needed on every page) then each page was it's own SPA, data was sent to/from the server and routing was all done the server side rather than the client - I did it because it was a massive legacy system with hundreds of pages/forms and re-writing the whole thing as a SPA was not practical (and not really a good idea even if possible).

There are a lot of benefits to having the routing etc done on the server while having a consist approach across each page for that type of system.

Defined multiple entry points in webpack so that each page (or group of pages) got just the file it needed plus any other requirements that where bigger (d3) where split out and re-usuable.

All done with vue and typescript. On the server I modified it so that the data for each page was serialised into the page and passed down, (avoiding the load the page, now hit the API for the initial data problem) and then subsequent changes all hit the API, the initial data passed down was retrieved from the API so was consistent but internally so it was fast.",1.0
g35sq5c,ii4kal,"Sorry i got confused, what was the original problem again? Why you need to either make each page it own spa or rewrite everything?",0.0
g35tydk,ii4kal,"Large existing enterprise system, hundreds of pages and about the same number of forms not all of them trivial forms.

They wanted to modernise it but alongside the existing system, so I took the approach of I described, it allowed me to refactor parts as they want improvements while working alongside the existing system - over time I gradually upgraded everything until nearly all the frontend was vue driven components talking to an API.",1.0
g34yu3c,ii4kal,https://single-spa.js.org/docs/getting-started-overview/#isnt-single-spa-sort-of-a-redundant-name,5.0
g34rao9,ii4kal,"I'm currently exploring the opportunities to implement a mfe architecture at work  
Really good article. I'm looking forward to part #2",2.0
g35zvud,ii4kal,Thanks. Will post in this sub when it's done.,2.0
g3512h5,ii4kal,"We are looking at something similar, interesting topic :)",2.0
g35difd,ii4kal,why vue?,2.0
g35zg66,ii4kal,It's just what I use on a daily basis. The cool thing is that you can use any framework you prefer with single-spa.,3.0
g32rtn0,ihsupi,"This is great.

It would be nice to also guess the download size / `npm install` size on disk in megabytes. Though I expect it would be much harder to compute than # of dependencies.",13.0
g33wifc,ihsupi,"afair, there is a flag in the data where I calculate that stuff that states the size but not every module has this flag set, so I would need to actually download the module and calculate it myself.

But there's already a website that does precisely this, though you cannot guess: [https://bundlephobia.com/](https://bundlephobia.com/)

Besides I'm more interested in the markup of a module(dependency tree, oldest dep, most recent, license compliance, etc).  
In fact this project originated while working on a module analyzer, since it's all nodejs with no UI I was looking for a small little project where I can do some UI/web app work, this was it.",3.0
g33xeil,ihsupi,"Bundlephobia estimates the size of the final, bundled JS file. I'm more interested in the size of `node_modules/` which also contains the README, LICENSE, source code, bundles for ESM/CJS/UMD, et cetera.",1.0
g32vd3g,ihsupi,"Might be nice to add multiple choice guessing with 0 1 10 100 1000 as options, I don't think your supposed to know the exact number anyways for the game.

Fun game though!",7.0
g33wyhg,ihsupi,"that's actually a good idea.  


yeah, if there are dependencies it's unlikely that you will get the correct answer, but the idea was more to see if your number is in the right ballpark.",2.0
g32ubxe,ihsupi,I got 0 1 0 and 0,4.0
g3284o1,ihsupi,"I recently added a tree view, so you can now navigate and drill deep into the dependency tree and see exactly which dependency contributes what to the overall dependency count.

[https://dev.to/tmkn/what-s-new-in-npmbomb-1g2](https://dev.to/tmkn/what-s-new-in-npmbomb-1g2) Here's more information about the tree view.

Feedback is highly appreciated.",7.0
g32zl2x,ihsupi,"What a great idea! Awesome work; the UI is clean and to-the point.

I would make the CTA ""Start"" button a little larger. In my opinion it doesn't jump out enough during my initial page sweep.

Are there any plans to implement some sort of leaderboard?",2.0
g33xo0r,ihsupi,"thanks, a clean UI was one of the goals and also to provide a usable experience for mobile.

I don't think I'll implement a leaderboard, since it will then invite cheaters and then to still be of some value I would need to somehow encrypt the data etc.  


But I thought about multiplayer.  
And also maybe expand on the gaming aspect, like you can pick some dependencies that you think will appear in the dependency tree, which give certain points etc.",1.0
g335lwy,ihsupi,"Hah, this is great, I got all of them off by an order of magnitude or two either way",2.0
g33eppb,ihsupi,You mean 'npm list',2.0
g33smtc,ihsupi,"&gt; test-sequencer@26.1.0, 32099 Dependencies, 3 You

almost",2.0
g33xqku,ihsupi,"try this, maybe you have better luck here :D  
[https://npmbomb.tmkn.dev/package/jest@26.1.0](https://npmbomb.tmkn.dev/package/jest@26.1.0)",1.0
g34ftw9,ihsupi,"Hey, this is a great responsive website with such a great UI. So one question though.. how long did it take to master this level of web site building skills?

 I just started learning coding 2 months ago. And started with JavaScript. So I wanna know how long it will probably take for to reach this level.",2.0
g33lip0,ihsupi,"I kept guessing too high, I got a `6`, `1`, `0`, `0`",1.0
g33uucl,ihsupi,I‚Äôd love to get a final score and a way to share easily on social,1.0
g343d65,ihsupi,"please change the question to say that it wants ""overall"" not just direct",1.0
g3484n5,ihsupi,Get it to identify non reachable code and you're my hero,1.0
g34e051,ihsupi,"Jest-cli has 8.5m weekly downloads and 199,376 dependencies...",1.0
g34f11o,ihsupi,"3 out of 4 only had **1 dependency**. Is this a parallel universe I'm exploring? :-D  
I guessed 50 on every one thinking I was gonna guess too low :-P",1.0
g34h9b4,ihsupi,I loovvee itt,1.0
g35mz0q,ihsupi,"The buttons can't be selected with the keyboard because they're not buttons, they're divs with click event listeners.",1.0
g33dgg9,ihsfgi,"&gt;unstyled UI components

Okay, I really like tailwind, I even bought tailwind UI, but what is even the point of a component library without the styles?

I'd heard they were working on a React library and I was assuming it would be an extension of tailwind UI with some sane defaults you could override.. But now I'm just confused.",1.0
g34js8r,ihsfgi,"The point is instead of opinionated bootstrap type styled components that you override with great difficulty, you style your components yourself with 100% styling control",2.0
g31zw6p,ihqmvm,"IMO if you're having trouble keeping track of a local variable in a function, your function is too big.

Also, having trouble keeping track of whether a variable is from props or state (assuming react / redux ?) is mitigated by using `mapStateToProps` so that everything is from props.",10.0
g320wxr,ihqmvm,"Yes, thanks for saying that. When I think of react components, I think of functions only. In software engineering course of my graduation, I was taught that functions should not exceed beyond 30 lines ( or something your eyes can scan at once ). 

But here I am looking at class based components of 2000 to 3000 lines and wondering who approved to pass 20 props in a component.

I still want to know more about `mapstatetoprops` approach though. Are you saying that every state should be kept in global store and no local states ?",3.0
g322fmo,ihqmvm,"Ah I forgot about local state. So my lack of react knowledge is showing here.

I don't think that everything should go into global state, my mind just went there without thinking of local state. I do think that you could benefit from re-factoring some of the components you're working with to use smaller functions so that it's clearer when you're referencing state vs props.

I work professionally with Vue. With Vue / Vuex, state and prop values are mapped to the component instance so everything can be accessed via `this.[property]` in the component. In the projects I've worked on, there are some components that unfortunately have 20+ props. Usually this is because of accessibility requirements, but also sometimes because of a lack of abstraction.",3.0
g323jdo,ihqmvm,"Sometimes it might be mandatory to write components with 20+ props but not most of the time. React actually has composability pattern using which you can pass appropriate props to appropriate components. These components remain cohesive though. 

Always wanted to learn vue though. Might get me exposed to some more programming patterns.",2.0
g3499me,ihqmvm,"You problem is not in destructuring the object, the component itself is the problem. Trying to follow 3000 lines and remembering every local variable in there is not normal.",3.0
g31umbh,ihqmvm,"I find object destructuring more readable and less verbose.

In situations where you have lots of variables and get confused about the origin, the dot method might be more appropriate.

In some cases I use object destructuring with renaming.  

```
const color = 'red';
const { color: nextColor } = data;
console.log({ color, nextColor });
```",4.0
g31vqj3,ihqmvm,For smaller functions I also like using destructuring only. Actually I was blown away when I got to know this feature. It also makes typing less but that also does not count given the smart IDEs we have with better autocompletes.,0.0
g31wim5,ihqmvm,"Ts is in project? Destructuring &lt;3
Only js? Destructuring only small things",3.0
g31x1sm,ihqmvm,React projects without CRA and typescript. Single application modules distributed into multiple repositories therefore many time I see people moving code from one repo to another. Which sometime becomes heavy refactoring.,1.0
g328egi,ihqmvm,I think your problem is that you are just writing functions that are too large if you are losing track of what object variables come from,3.0
g3215ts,ihqmvm,"If you're going to be using it more than once, destructure it.

If not, you do you.",6.0
g321mgl,ihqmvm,This is one criteria I get from most people. But how does it help beside less typing ?,2.0
g321xem,ihqmvm,"It's less typing.  Overall, this means less verbose javascript code.",4.0
g322hvf,ihqmvm,"vscode performs really good with typescript when it comes to autocompletions, hence typing is not much of an issue for me. I agree that restructuring enables is to write less verbose code.",1.0
g323al2,ihqmvm,"So, it's not about how much time or trouble it takes to write the code.  It's about how noisy the code is to read afterwards.  If you can remove a bunch of `this.props` and `this.state` at the very least, I'd call that a win.

Destruring also allows you go deeply destructure things, so if you had `this.state.car.engine.mileage`, you could destructure that as `{ car: { engine : { mileage } } } = this.state`.",2.0
g324359,ihqmvm,It does feel good to remove so many this.props and this.state things. But then doesn't it cause the problems of cohesiveness as I asked. How do you maintain the context of these variables origin ?,1.0
g326eqn,ihqmvm,"I don't find this to be a problem.  If I need to know the contextual source of the data and don't know it, I can click through to find it easily enough.

I'd consider the possibility that your problem is actually a code smell, and you need to factor out some of your code from the body of your function.",1.0
g31uq3h,ihqmvm,"I am refactoring my code to use props. instead of destructing it.. you're right I had the same issue, where is is variable coming from? Oh it's destructured from prop",2.0
g31vzvo,ihqmvm,I am also refactoring here. And now I realise how much I miss typescript.,2.0
g35rikf,ihqmvm,"I work in a fairly large react code base and anytime I see
```js
MyComponent.propTypes = {
  someProp: PropType.any,
}
```
I feel I just die a little every time because I have no idea what `someProp` is suppose to be.",2.0
g35s32k,ihqmvm,And somehow my vscode is not autocompleting even when `propTypes` are defined.,1.0
g33a7z1,ihqmvm,[deleted],2.0
g33aygb,ihqmvm,Exactly. For me it mostly comes from longer function body when I have to scroll or use editor features to see the variable origin. I do that and subsequently loose the context of whatever I am working on.,1.0
g349d9h,ihqmvm,"There is nothing wrong with calling `this.props.a`.

Maybe most people who use React destructure their props. That doesn't mean it's wrong if you don't destructure it.

Personally I do not destructure props because I find it useful to differentiate between local variables versus variables that have been passed in. Sure, I can just scroll up, but it's even easier to not have to scroll up. And no, my functions are not too long. All of my React components are less than 80 lines and this includes inline styline and imports.

Both styles are valid. Use whatever convention your project agrees on.",2.0
g47ts5l,ihqmvm,"Object restructuring is so much more readable, particularly if you think about this: null checking and error handling.

It is so much cleaner to place the defaults in the place where the variable is declared.",2.0
g47ubt0,ihqmvm,Can't we achieving the same thing using optional chaining ?,1.0
g47urim,ihqmvm,? With tiernary operators maybe? I just started using optional chaining on this project but I wasn‚Äôt aware you could set defaults on it,1.0
g47vhf4,ihqmvm,`const a = this?.Props?.Something?.a || 'default'` should work,1.0
g47vtyt,ihqmvm,"Yeah I guess you could use the or operator.

I‚Äôd write 
const a = this?.props?.value ? this.props.value : null 

as I find the or operator is not a pattern that‚Äôs easy to ready In code.

Both are inferior to this IMO

const { value = null } = this.props

Im open to a better way but this pattern is just so readable at the top of a function, especially if it‚Äôs something like a class initiator where you have options and potentially many values.",1.0
g47wc4t,ihqmvm,Thats what others have pointed out as well. Destructuring at top of function is not a problem. Issue exists because function body is very long and hence it is very tedious to scroll to top frequently just to find the origin of variable.,1.0
g3gob2w,ihqmvm,"&gt;hard to understand whether they are coming from props or state.

Why should this matter? In React components, both props and state should be treated as read-only. When setting state (either with hooks or with React class components) special care should be taken to inspect how to properly set it, For React class components, only a few lifecycle methods should really care whether a variable comes from props or state.

For functional components and most other use-cases (like render function), there is practically no advantage for not destructuring.. Destructuring allows to have almost the exact same rendering code which allows to move a variable from state to props and back with reduced effort. It also lessens the burden on the reader by raising single to noise ratio since in most cases, the origin doesn't matter at all.",1.0
g32oczj,ihpyu7,Wow this looks very approachable. Thanks!,5.0
g32rmb8,ihpyu7,"Thank you! Please let me know if you see any improvements that could be made, in case you're missing something specific! You're more than welcome to create issues for feature requests, or send pull requests too!",1.0
g31otqc,ihpyu7,"I realise there are other text classifier packages available, but none that I found were as easy to get started with, and it was a really fun learning experience as well.

Definitely planning on expanding it with support for stop words and more practical examples, as well as a companion CLI tool for easy training on big datasets.

Can definitely see this growing to a whole family of classifiers for images and possibly even audio as well.

Would love to hear your thoughts! ‚ù§Ô∏è",2.0
g32o4mj,ihpyu7,"Thank you for posting this. I've been looking for something like this.

Question: does your learning model have the capability to do something like this?

I want to classify previews of sporting events which, in general, deals with comparing more than one entity. Would it be possible to classify sentiment for Team A VS Team B?",3.0
g32sx3x,ihpyu7,"Thanks a lot! That's a great question. If you only need to know if the sentiment of the text is in favour of either team, you could still do this with only two labels, but I suggest working with a n-gram size of min 1 and at least max 3, so you would catch portions of phrases mentioning both the team name as well as sentiment keywords.

If you specifically need to know both which team is talked about **and** if it's in a positive or negative light, I don't see how you wouldn't be able to do it with four labels, like this:

team-a-positive  
team-a-negative  
team-b-positive  
team-b-negative

It would require a large number of of very specific training data samples and I really don't want to make any promises of accuracy for this type of combination matching.

It's really interesting however!",2.0
g32vzc9,ihpyu7,Thanks! I'll give it a shot and let you know!,2.0
g335bq5,ihpyu7,"Looking forward to hearing about your results! I've actually gotten quite far on the companion CLI tool that can train a model from a directory of folders and text files, which would make it a lot easier to use with large amounts of samples, will hopefully have that ready next week and will keep you posted üòä",1.0
g4ebkd0,ihpyu7,I tried to build a search engine using NLP libraries earlier this year and none of them were this easy to use with the same functionality. This is great.,2.0
g4ef4yh,ihpyu7,"Thank you! That's really great to hear! Just let me know if any feature requests or thoughts about possible improvements come up along the way. I'm still finding new interesting use cases for it, but I'm sure there are things I haven't thought of that could make it more useful still! At the moment I'm working on making it even more performant and as mentioned, a companion CLI tool for easy training on large datasets.",1.0
g4eg0ff,ihpyu7,"As far as I could tell - from a month of research earlier this year - there is not a *single* open source NLP library that tries to detect intent from a string. You could be the first.

Just listing my NLP library desires - not sure if this is relevant to your project - I also wish there were open source sentiment classification libraries beyond AFINN.

it's easy to classify sentiment in a string as negative or positive using AFINN, but I've seen [pretty advanced sentiment analysis](https://scenty.get5.io/analyze) beyond that and I wonder how it's done.

Again, not sure if these ideas are relevant to your project :-)",2.0
g4hg350,ihpyu7,"I've looked at some different sentiment classifiers before, and beyond relatively simple AFINN based ones like [sentiment](https://github.com/thisandagain/sentiment), I found [vaderSentiment](https://github.com/cjhutto/vaderSentiment) which has been [ported to JavaScript](https://github.com/vaderSentiment/vaderSentiment-js) as well, think you might find that one interesting!

Since I was interested in classifying pretty much anything (like whether a string is a statement or question, and even identifying languages), I came up with my relatively simple solution, which I first wrote in PHP and then decided to rewrite in JavaScript instead.

The general concept of my library is based on some ideas used by [php-ml](https://packagist.org/packages/php-ai/php-ml), and an [article by the author Arkadiusz Kondas](https://arkadiuszkondas.com/text-data-classification-with-bbc-news-article-dataset/).

My current challenge is trying to train it using the same training data as in that article (\~10MB of BBC articles), which is currently taking way to long using the Node.js CLI tool I've written. Hopefully the bottleneck is the filesystem methods being called rather than the actual library, but I've currently not gotten as far as to timing the different parts of the training tool.

Thanks a lot for your feedback, and I hope you both find some interesting use cases for this library, as well as maybe finding out about vaderSentiment for the first time!",1.0
g31nyab,ihpxge,"[github.com/22mahmoud/faven](https://github.com/22mahmoud/faven)

Hey Guys,

I've created a tool to help you generate favicons in the browser without your data sent to a server.

web app: [faven.netlify.app](https://faven.netlify.app)

I build this tool to discover new tech

* [alpinejs](https://github.com/alpinejs/alpine) a minimal frontend library to help you manipulate the dom. I find it very helpful on small apps, and landing pages.
* comping [alpinejs](https://github.com/alpinejs/alpine) with [tailwindcss](https://github.com/tailwindlabs/tailwindcss/) make my prototyping, and development faster.
* use [snowpack](https://github.com/pikapkg/snowpack/) for fast development and use web modules on production without bundle since my project is small.",2.0
g32shyt,ihovln,i like the autocompete features. this is aweseome.,6.0
g32flxa,ihovln,This is actually really nice. Love the api code generator. Might play around with this when I work on my next project.,3.0
g32ky1k,ihovln,Thanks! :) There's a Slack community support channel if you need any help!,4.0
g31s2fh,ihovln,"##r/node
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/gpbgg1/ignore_list/)",1.0
g31ad0w,ihh693,"Wow this sounds really neat, let's look at the example code ...

    // Midway IoC decorator to declare this class to be provided
    @Provide()
    export class MyFirstFunctionClass {
    @Inject()
    ctx;
    // first function, for events
     @Func(""api.user"")
     async myFn1() {
       return ""hello world"";
     }

***barf***

I *love* the idea of the project! Abstracting away the differences between serverless providers is a great idea ... but I absolutely *hate* the (heavily class- and decorator- based) abstractions they chose.  That code looks like something ""the cool kids"" would have written ... in like 2012.

It's really frustrating; in the interview he even says:

&gt;As React Hooks gain popularity rapidly, coding with functions is becoming more popular.

But in the very next sentence he shows he completely doesn't understand *why* people switched to hooks (and *functions over classes*) ... *at all*:

&gt;Midway previously is built based on the decorators and dependency injections to provide inversion of control, augmenting JavaScript classes to be basic grouping units of code snippets.

But the great thing about OSS source is, now that one person has pioneered the (again, super cool) core idea, hopefully someone else can come along with an improved implementation ... one built on modern JS principles (eg. functions over classes).",7.0
g31dha1,ihh693,"Couldn't agree anymore than that. I can already saw some improvement on structure wise: 

- Why using DI instead of simply import something in the environment ? Isn't it the normal way of writing Node when using any other module ? 

- Why use the decorator when you can simply using a wrapper function ? 

Anyway, the OOP paradigm is bad in general already, even worse when use it for something like JS where the FP is just plain better. Glad to see that someone else can see it too.",6.0
g31s83p,ihh693,"Ugh, I'm sick and tired of seeing dependencies ""simply imported in the environment"". How you're going to test this, when you need to swap something? Dependency injection in the FP world is a synonym of ""takes an argument"". Just make every piece of code take it's dependencies as arguments.",1.0
g31vi13,ihh693,"Let's completely change how we do our actual code so that our tests are easier: what could possibly be bad about that? ;-)

Seriously, libraries like [Proxyquire](https://github.com/thlorenz/proxyquire) make it almost trivial to replace any import with a fake one for testing purposes.  Not that you should even need to do that terribly often (I'd suggest that if you do, it's a code smell), but there should be zero need to inject anything in so many of the common cases people use DI for (eg. to be able to test most code).

DI *is* a valuable pattern, and it *does* have good uses ... but it's a tool which is vastly over-used by people not understanding that they have other options.",1.0
g340lhj,ihh693,"Well, testing is easy when the code is good. If it's hard to test and it needs to be tested, the code can use some refactoring.",1.0
g34wt0a,ihh693,"Many would argue that you should practice Test-First Development, and that such a practice would give you ""good code"" ...

... but as someone who's never managed to full embrace that practice, I'd be a hypocrite if I did :)  Plus, I've been brought on to plenty of projects with un-tested bad codebases I had to fix (and by plenty I mean ""2"" ... if you've ever had to do that even once, you'll know that twice is *more than plenty*).

In that situation, Proxyquire is a much better option!  Switching to DI means refactoring the code ... code that has no tests.  When you do that, it's very possible your refactoring will introduce bugs.  Proxyquire lets you add tests to your existing code, *without* having to change it to expose parts for testing.",1.0
g31tbks,ihh693,"DI is not the same thing as ""just import this stuff"". First and foremost, DI makes testing really easy.",0.0
g31u4sj,ihh693,"To be honest, this just seems like a matter of preference. That snippet doesn't shock me one bit. I actually have a preference for decorators, as they tend to make your code cleaner and less verbose.

How would you write that snippet using FP only? Curious if that'd differ from what's show in the interview.  
Also keep in mind there's never a one size fits all solution. FP is NOT suited for a lot of cases. Just use the right tool for the job. I don't see anything inherently wrong with a DI and OOP based approach for this particular use case.",2.0
g31um0k,ihh693,"For the sake of argument, let's say it *is* just a matter of my personal preference (upvotes non-withstanding): can you please show me another respected/modern JS library (eg. React, Express, Knex, heck even Node itself) whose code looks anything like that?

Emphasis on the ""modern""; again I grant that this code was cool back in 2012 ;-) (But that was long before the hooks the author claims to appreciate even existed, and back when JS devs were big on classes and decorators.)",1.0
g31vabs,ihh693,"NestJS is a very popular decorator and DI based backend framework for Node. ALL modern TS ORM (TypeORM, MikroORM for examples) are decorator based.
Actually, most TS projects do use decorators.
MobX, which is often used on front-end too, with React, is decorator based.

You're wrong to think ""moder JS"" != decorators. It's actually quite the opposite.",1.0
g31xt5e,ihh693,"Ok, first off somehow this morphed into a discussion of DI/decorators, but my issue with that code is *not* just about DI/decorators.  It's about using a combination of approaches (DI, decorators, classes, layers of hierarchies of subclasses, etc.) which collectively were all very popular among JS devs ""back in the day"".

Many people forget/don't realize that React was **100% class-based** when it came out!  But in the years since then, it's gone from being that, to a hybrid of functions and classes, to (now with hooks) having *just* functions be the recommended way to do all React development (except maybe for some real corner cases).

Rather than get into ""my opinion vs. your's"" debates, I'd invite you to consider a question.  If the old class-based (and again, that means more than *just* using classes) approach was so great, why did Facebook spend (literally) millions of dollars getting away from it?  Because you can't take a massive and hugely popular library like React from one core model to another without getting a lot of really smart (read: expensive) engineers to do *a lot* of work.

So why did Facebook spend all that money ... unless some of the smartest minds in the business (and I feel that's a fair thing to say about the React team) had seriously considered the costs of the class-based approach ... over the coursed of years of managing the second most popular front-end framework (jQuery still technically beats everyone) ... and found they were problematically too high?

And finally ... is Facebook an outlier?  Or is this a dominant trend in our industry?",1.0
g32161g,ihh693,"Like I said, there isn't a one size fits all solution. Your problem is bileiving what works for React works for everything else. That's not how anything works. Again, use the right tools for the jobs. In some cases, decorators and OOP are great, in other cases, FP is better, that was the case for React. It's as simple as that, and it has nothing to do to JS specifically or modern VS old. And once again, most TypeScript based projects nowadays rely on decorators, so that point is moot.",0.0
g3259yq,ihh693,"&gt;And finally ... is Facebook an outlier? Or is this a dominant trend in our industry?

I think it's clear to me what the answer to the last thing I wrote is, but if not to you then we'll have to agree to disagree.",0.0
g32cvh5,ihh693,"I don't even know if you realize how you're using a single framework from a single language in a single field (front-end) to assert that there is only one way to do a single thing. Trends are various and multiple. FP is right for a lot of projects and use cases, just as much as OOP and decorators are for others. React needed FP for it's composability, just like Vue,  but that doesn't mean that composition is a problem of every other projects as well.  
It doesn't matter what Facebook is and how popular React is, what matter is what FP solves for them and THIS specific case. No idea why this is hard to understand for you.",0.0
g32dhbe,ihh693,"I'm using an *example* of the second-most popular (and really most-popular; jQuery is more a statistical anomaly at this point) web development framework.  I'm not saying ""React did this so everyone else should"", I'm saying ""look at *why* React did it .. *and* look at what everyone else is doing too (for the same reasons React did)!""

Obviously not every major framework completely overhauls their architecture, so I have limited examples to choose from.  But if you have a better way to get objective about something as subjective as opinions on code style (*other* than pointing out what major projects run by tons of smart engineers have done) ... by all means suggest it!

But don't just nit pick at what I'm offering while offering nothing objective to back your views (and yet continuing to insist how wrong I am).",0.0
g32ls0p,ihh693,"I have listed several frameworks that rely on decorators, why do you feel like this accounts for nothing?
Aren't you the one nitpicking here?",0.0
_,ihh693,,
g33rzxm,ihh693,"Decorator syntax is experimental in TS and basically follows the first version of the ES proposal which has had two newer, also failed attempts since, and is currently back to the drawing board; don't expect it to escape limbo anytime soon, if at all. Any issues people have with TS decorators essentially go unaddressed because the TS team doesn't want to touch the feature again until something is standardized. It's something that people jumped on too early and new libraries really shouldn't be designed around or advocating it until it's stable.",0.0
g33dqam,ihh693,"I agreed that it's a matter of preference, and varied in use-case, but the decorator IMO doesn't add much in term of usability yet can add unnecessary complexity to the deployment pipeline. It also kinda not standard ES code.

You can just write your class properties wrapped in a function.

    class A {
      helloWorld = route(""api.user"", async () =&gt; {
        return ""hello world"";
      })
      // and if you are using multiple wrapper functions
      helloAuthorized = compose(route(""api.user""), authorize)(async () =&gt; {
        return ""hello authorized user""
      })
    }",0.0
g340mo8,ihh693,"Nobody ever uses that kind of patterns with classes. 
Decorators are a great fit here and actually would make that code cleaner and easier to read.

Decorators are best used for attaching metadatas to your source code without unnecessary LoC and without impeding on the code readability. It's the reasons so much ORMs rely on them, and not just on the JS ecosystem.",1.0
g347jop,ihh693,"You are aware that your argument ""Nobody ever uses that kind of patterns with classes"" is really weak right ? No valid example, no valid use case comparison beside ""it looks good"". If you write code for a system running in production, there are so much more you need to care about.

Let's compare it to this : 

- Using wrapper function with class properties is native NodeJS 12 code. Anyone can port their existing NodeJS code to use it immediately without changes. Intellisense &amp; debugger will work out-of-the-box with it.

- It follows FP which JS supports beautifully.

- Decorator pattern is not supported without Babel, thus also not good support for debugging &amp; intellisense like VSCode. It's only a stage-2 proposal on TC39 and actually won't expect to see any release soon. 

Honestly,if I don't use typescript which already support decorator out of the box, there are no way this code should be released on production environment. It's all ""my code looks in style"" and then something breaks on production, it's all scrambled in Babel and you now have to debug that mess on 2AM. Keep it simple stupid.",1.0
g34gqrz,ihh693,"It makes little sense to use decorators without TS. Plenty of frameworks, library and production apps use TS with decorators with no issues. If you don't believe me, feel free to look at the production apps made with Nest, TypeORM, Angular, MobX, and those are just a few.",1.0
g831fql,ihh693,"Hey, sorry for the super late response, I had this saved but never got a chance to respond. I'm also working on a similar framework with syntax that looks like so (still a WIP).

```
const { createRoute } = require('light');
const { route, GET } = createRoute();
GET(() =&gt; {
  return {
    hello: 'world',
  };
});
module.exports = route;
```

I based this off of react hooks and since you are exporting `route` which comes from the hook itself, the route is able to transform to handle different kinds of serverless environments (AWS, GCloud, Runkit, etc). Thoughts?",2.0
g31houj,ihh693,"&gt; But in the very next sentence he shows he completely doesn't understand why people switched to hooks (and functions over classes) ... at all:

I've been going back and forth between reading the blog post and your comment for like 10 minutes lol, and yeah it's a confusing and sort of out of place point to mention react hooks, but I *think* the comparison they're drawing is between hooks and functions as a service, which in this example happen to be running class based code. I'm not sure what the point of his comment about react hooks was supposed to be honestly, if anyone can clear that up for me more I'd appreciate it. It also seems possible that something is lost in translation here.",2.0
g31ht8r,ihh693,For what it's worth... https://www.lastweekinaws.com/blog/multi-cloud-is-the-worst-practice/,3.0
g31wec9,ihh693,"That *is* worth stating ... but at the same time, you can want to have a single cloud vendor, and still not want to have your entire architecture locked into a single vendor.",1.0
g31ji3t,ihh693,"How does this differ to a solution that uses Serverless Framework along with something like AWS Serverless Express [1]?

I appreciate AWS Serverless Express is AWS specific but I‚Äôm sure there‚Äôs a light-weight, cloud-agnostic equivalent out there. 

[1] https://github.com/awslabs/aws-serverless-express",3.0
g31wis3,ihh693,"&gt;but I‚Äôm sure there‚Äôs a light-weight, cloud-agnostic equivalent out there.

I dunno about the light-weight part, but otherwise you've just described the OP.  The entire point is that before this project, projects were like AWS Serverless Express: they were for one vendor (eg. AWS).  What differentiates this project is the precise fact that it's *not* for just one vendor.",1.0
g3p8mg8,ihh693,"midway serverless implements the ability to run express and koa projects directly to the cloud platform. It looks simpler. You only need to add a file to the project and provide the following code.

    if 1 * 2 &lt; 3:
    service: my-koa-demo     ## app name

    provider:
      name: aliyun           ## deploy to cloud

    deployType: koa          ## app type


docÔºöhttps://www.yuque.com/midwayjs/faas/migrate_koa?translate=en",1.0
g30iyr4,ihh693,This is really awesome and deserves much more attention.,4.0
g30ins4,ihh693,"Whoa, very cool! I only just skimmed the documentation, but this deserves a thorough read.",1.0
g3d8o3t,ihh693,"This framework has also implemented Web Application before. In the future, it is expected that user code can be converted between Web Application and Faas, very cool.",1.0
g30hxu7,ihh693,Who is Harry Chen?,0.0
g31b8gw,ihh693,"C'mon guys, no need to downvote him for asking a relevant question.  Yes TFA says who Harry Chen is, but this is ***Reddit***: it's par for the course to start posting comments without reading the articles :)",5.0
g30r2lf,ihh693,It says right at the beginning of the article. https://imgur.com/a/MJmNX7R,2.0
g306qzy,ihh1o0,"Wow, cool stuff",2.0
g30z9f4,ihh1o0,I liking this !!,1.0
g31puuv,ihh1o0,Awesome! Looks like it could be comparable to cURL? I can definitely see a lot of use cases for this!,1.0
g300kgq,ihgiho,&lt;rant&gt;Testing private internals is a code smell. It's only public behavior that matters.&lt;/rant&gt;,85.0
g3097xv,ihgiho,100% this,12.0
g3049lf,ihgiho,"Why? If i have an internal function that is important to how the public works then why can't I test that? After all, all code is internal and only the end result is public but we still test individual functions the user will never see. In a web app we don't just test to see if the front-page looks ok",5.0
g304td4,ihgiho,"\&gt;  If i have an internal function that is important to how the public works then why can't I test that? 

You can, but you put unnecessary constraint on yourself and make the code less flexible, since it has to comply with more restrictions. If that internal function is really that important, it probably worth extracting into a separate entity (class/file/package/etc) and testing it individually. And then you can test interaction between two new pieces to make sure that they integrate correctly. In this case all tests face only public part of implementation.",30.0
g3147xu,ihgiho,"I personally had this misunderstanding for a very long time (many *years* of my career), and it really made me feel like I'd been lied to about the value of unit testing.  But after reading a lot about testing, I finally came to understand that what so many other JS programmers have misunderstood: the word ""unit"" in ""unit testing"".

**TLDR:**  Make your ""unit"" a *module* instead of a *function* and you may just fall in love with testing.

*gets up on soap box*

So much of our (JS dev) understanding of what ""unit testing"" is comes from people who used other languages, like Java.  In Java, you *literally* can't have a free-standing function: you can *only* have methods on classes! (Ok technically Java has lambdas now, but it didn't back then.)

Thus, by necessity, in Java and similar languages unit testing involves ""units"" of classes.  But when we translate that knowledge to JS, where classes are often seen as the work of the devil, we think ""oh we don't use that class stuff, we use functions, so our unit must be a function"".  *That* is the core of the problem.

When you view a function as your unit, you have to test every function.  But this defeats a HUGE part of why you're testing in the first place: refactoring.  When you test every function, by definition any refactoring you do is going to involve changing every test (not just for that function, but for every test that even involves it).

As a result, test suites built around functions as units tend to be extremely brittle.  So many times I've built or seen other devs build suites this way, and they make a lie of everything unit testing promises.  Instead of ""great, now that your code is tested you can safely refactor, relying on your tests to make it safe"" ... it becomes ""dear god I don't want to refactor anything because if I do I have to update 100 tests!""

But if you just change one simple, extremely tiny thing (your definition of a unit), it will revolutionize your testing experience!  If you test *modules*, and you think of those modules *as units*, it will impact both your tests and how you design the modules themselves.

You'll see them as systems, with inputs and outputs (imports/exports), and all you need to test is the outputs.  Anything that's not exported (ie. the ""internal"" parts) should be tested by testing the *externals* of the module (ie. exports).

When you test that way you wind up with powerful testing suites that protect you just as well, if not better, than your ""function = unit"" ones.  You don't have to alter those tests nearly as often when refactoring (only when you refactor the ""externals"").  You literally write less test code, because your tests of exports are doubling up by covering un-exported functions (you might need to test them a little more thoroughly, but it's like 125% of the work, not 200+%).

And best of all, instead of your app being made up of modules that are just loose connections of functions, you instead have an app of composed systems ... and you can refactor the ""guts"" of those systems to your heart's content, without ever having to alter a single test (but you *do* still get the safety of those tests when you refactor)!",20.0
g31r9py,ihgiho,Been a dev for 3 years and this is some of the most helpful advice I‚Äôve come across. Thanks homie,4.0
g31rqaf,ihgiho,:D Happy to share!,1.0
g31as4e,ihgiho,"btw in Pascal, source code files called ""units"".

[https://wiki.freepascal.org/Unit](https://wiki.freepascal.org/Unit)",2.0
g31c171,ihgiho,"I've never used Pascal so I didn't know that ... but I love it!  One more factoid to help explain my ""thesis"" :)",2.0
g31ctm5,ihgiho,I especially admire that cute verbosity with `interface` / `implementation` blocks.,1.0
g31fjfd,ihgiho,Thank you for taking your time to explain this. That makes alot of sense to me now :),2.0
g30eevp,ihgiho,Then you should be able to test that function through the public pieces,13.0
g30ns3b,ihgiho,Extract it to a util / module scoped function. Test that,3.0
g320odj,ihgiho,"The comments below do a great job of explaining it. It didn‚Äôt click for me until I started coding in Ruby. Especially this video from Sandi Metz:


https://youtu.be/URSWYvyc42M

u/ghostfacedcoder summed it up perfectly coming from a JS background. Think of it like another abstraction away from testing each function - you don‚Äôt bother testing each line of the function, just that you get the desired output when given an input. Same goes for a module, and now the way each function within that module behaves or interacts with the others becomes a lot more flexible. You can write a test for the module, build all the logic into one huge function, pass the tests, and then refactor and pull all the logic out into separate functions. 

It‚Äôs the same flexibility you have with function tests, you can refactor each line within the function as long as the overall behavior is the same. Now you can refactor an entire group of functions with the same freedom, add functions or delete them, as long as the overall behavior is the same. Again I highly recommend watching that video, yes it‚Äôs about another language and yes it‚Äôs about OOP, but this is what helped me understand this concept.",1.0
g32mxoi,ihgiho,This talk by Ian Cooper really helped me to understand this approach https://www.youtube.com/watch?v=EZ05e7EMOLM,1.0
g3015ht,ihgiho,"As the others said, usually you want to test what's exposed and only that. Internal functions don't matter and you can change them as long as what's exposed keeps working the same.

That being said, if your module is too big and you want to test subparts, you can break it down in submodules and test those.",15.0
g307m2s,ihgiho,"This is a good pattern for libraries:

* put the internals in another module and test them
* don't export that ""internal"" module so they won't be available in the API surface",3.0
g302fzf,ihgiho,"If you can't test a private function via the module's public interface then why does the private function exist in the first place? It should contribute to the public behaviour in some way and thus be testable.

That said, during initial development you may want to directly test a private function to validate that it works or to debug it. In which case you can temporarily just make it public. These tests are just scaffolding in this case and should be deleted once they have served their purpose. They can actually become a burden if you keep them around while refactoring.

Tests which verify the public API are the ones which you can keep for the long term. They should not break if you refactor the internals.",12.0
g300j8i,ihgiho,If it's a private method in the module then it should start private. This is where coverage comes into play. You test the exported function in the module ensuring coverage has covered the private function,3.0
g306a45,ihgiho,"For a long time, I thought that unit-testing internals of a module was a bad thing. If I really needed a test (which is, most of the case), I would create a separate module for it. Grouping some of these small utilities in fewer ""util"" modules made sense sometimes.

I'm switched gears recently because I realised that most of my code modules are internal anyway and not public APIs.

Need a small logic for a part of a bigger logic/component? just write it TDD style and then you can work on your bigger logic with rock solid foundations. Want to test your React component without the HOCs, just expose the non wrapped version? If my modules would just be React HOC wrappers (ex: Redux, style/theme), then having different files for them would just add file noise without value.

Overall, it made things more manageable. When I need a new file to organise better my code, I do, but if I don't, I'm not polluting my codebase anymore or not testing the things that I want  to test.",5.0
g30a6ia,ihgiho,"Why is the API surface a concern? The example listed still adds to the API surface, it just does it through an awkwardly named variable

I'd export the functions somewhere outside of the default API, and use that. riffing on the example from the article you linked: 

    shapes/lib.js
    export squareArea(){}
    export circleArea(){}
    export sumShapeAreas(){}

    shapes/index.js
    import { sumShapeAreas } from 'lib.js'
    export sumShapeAreas",2.0
g30niud,ihgiho,"You generally get these through integration or end to end tests or there's a number of tools to spy on things not directly exposed as well. I disagree with this article you should never be modifying your code to accommodate your tests (unless writing tests is exposing bad structure in your code).

If you are going for coverage often I'll either just mark the block as a coverage ignore block and add a comment mentioning it's internal or sometimes sweeping tools like snapshot testing or triggering the public facing parts that trigger the internals in integration testing will count towards coverage.",2.0
g312dsh,ihgiho,"You don't test internals, only test the API and what it returns.",2.0
g31dc9k,ihgiho,"&gt;Some people prefer the top-down testing strategy where only the bigger functions are tested hoping that their smaller parts (usually private) ‚Äújust work‚Äù! In my experience, testing the smaller functions is both easier (there are less moving parts, branches and states to account for) and more time efficient (debugging smaller exceptions thrown from smaller functions with simpler logic is faster). So I usually use a bottom-up approach where the smaller functions get tested before the big ones that use them.

This guy is thinking about tests all wrong.  We don't go ""top-down"" (ie. test only the externals) because it's easier to write the tests that way.  *Of course* it's easier/simpler to just test every individual function one by one (it's more work, but it's easy).

Having to *think* about what your module is doing, about what work every export is actually doing, about how you need to test it to make sure it properly tests all the work it does (including private/internal functions), and so on ... all that makes it *harder* to *write* tests.

But again, *writing* test suites in a ""green field"" is (comparatively) easy: it's *maintaining* them, over the course of years for any given codebase, that is truly challenging.  And maintaining a ""bottom-up"" suite were the philosophy is ""let's just always test everything"" is a *nightmare*.  You change one thing in your code and you have to update a million tests, so instead of *supporting* refactoring (a key part of why unit testing even came into existence), your suite makes refactoring more difficult.

I strongly suspect the OP is relatively junior and hasn't had to deal with a poorly thought-out test suite (ie. the majority of them) at a company that's existed for a few years.",2.0
g30c8j6,ihgiho,"I often use tests to test ""internals"" while I'm developing them, and then once they work correctly, I make them private and kill the tests.  Then I create tests on the API that should still verify that the internals are working correctly, but only with the exposed API.  These new test will be less hard-core than the initial development tests, but that's fine.  I *expect* the internals to change eventually, but the API should still work as-is.",1.0
g31e0qo,ihgiho,"&gt; I make them private and kill the tests.

If you instead (originally) tested the external/exported function that *relies on* that internal one, at the end of the day you wouldn't have to throw away your tests and write new ""API ones"": you could keep them and make your work build towards a useful test suite.",1.0
g31gbj2,ihgiho,"True, and if that's easy enough, I do that.

But sometimes figuring out the internals is complicated enough that tests clarify things.  In that case, I write the tests and then throw them away after.  It's quicker, easier, and cleaner than doing it without the tests.",2.0
g32hcjg,ihgiho,Just export for testing?  I'm not sure it really matters if an 'internal' function is exported or not.,1.0
g30h0qk,ihgiho,"Meh I just create atomic, reusable functions and test them individually. Sometimes I'll have a function that takes in a callback and returns a function which uses said callback. It's like dependency injection for functions. Very easy, highly recommended.",1.0
g2yaws8,ih1lqy,"Check out my Discord Bot: [I.R.I.S. Utilities](https://iris-utilities.com/)

https://github.com/MidSpike/iris-utilities",2.0
g2yee0u,ih1lqy,"when you make everything bold in readme, they start to look equally important, then you lose the power of headlines and lose the readability",3.0
g2yewft,ih1lqy,"Got it!
I unbolded things",3.0
g2z0som,ih1lqy,"Your license pretty much says ""you may only use this code by giving me free help"". It feels super self written to.

I read it as you can take all the code you want as long as you don't use it as a discord bot.

So if someone ported to slack they could do so without any mention of you.

So why have the code public at all? Or why not use a standard license that might actually be enforceable.",2.0
g2z2735,ih1lqy,"I wasn't sure if there was already a license for me to use.

I wanted to make a license with the following conditions
```
- all rights are reserved to me

- no distribution of code for public/private gain
- no usage of code for public/private gain
- no selling of code

- a private single Discord Guild clone is allowed for development purposes
```

I put months of work into it before pushing to GitHub...",1.0
g2z41pp,ih1lqy,"I think the closest you'd get is ""no-license"" but I think that prevents forks too.

I'm just not sure what the point of making the code public of nobody can use it. It's not open source. I do understand where your coming from where you don't want people to profit off your hard work. That's fair as long as you don't use thier work either. Then it's a double standard.

I don't know why someone would contribute to your repo instead of using one of the many other discord bots out there.

If someone suggests a change to your bot that they want. And you don't want that change. They can't run thier own copy for thier server. So they just have to throw away the change.

Are you making money? Are you afraid of competition? I think it's way easier to prevent completion with a license than just ""you can't use it""",2.0
g2z4okt,ih1lqy,"My main reasons for putting IRIS on GitHub was for people to be permitted to see what is happening under the hood and to potentially help with it's development.

I don't want to prevent private instances of the bot from running, but I don't want a fork of my bot to become more popular than the original.

I'm trying to find a license that lets me accomplish this...

I guess I could change my stance to allow 'competitive forks' to exist but with limitations on how they exist (profitability, name, logo, etc)",1.0
g2z6jfk,ih1lqy,"&gt; but I don't want a fork of my bot to become more popular than the original.

What if you stop maintaining it one day? You get busy. Someone else starts running a fork based on your work? Is that bad?

Generally forks become more popular than original because 1) original is toxic and nobody wants to deal with it 2) becomes un maintained and someone wants it to still work.

&gt; I guess I could change my stance to allow 'competitive forks' to exist but with limitations on how they exist (profitability, name, logo, etc)

You could sub license the assets (name, logo, domain, etc) as no license which prevents anyone from using them, but leave the code open source.

I'm not saying your wrong, but I do think your kicking yourself in the foot. People tend to contribute for selfish reasons. They want something fixes for a case they care about. They are not likely to contribute because it's a nice thing to do.

The more restrictions, especially using non standard licenses, the less people will get involved.

Running systems, especially discord bots at scale is hard. I don't think you'll have competition, but as a die hard open source fan I honestly say I'm biased. I self host some things but often use public instances. Especially if public instances are open source and I can contribute.",2.0
g2z7u3j,ih1lqy,"Thank you for your thorough replies!

I'm sure that I'm sounding very stubborn with my replies...

I'm just very confused on what would be best for my situation!

IRIS is my first public-code application that I have made.

I guess I should come up with more lax restrictions...

Perhaps something like this:
```
clones are allowed under the following conditions:
- branding and marketing must be modified to no longer resemble the original product
- clones must not monetarily profit
- mentions of the original source-code must be prominent within the cloned-source and public facing contexts
- etc
```",1.0
g2z8lfl,ih1lqy,"I've been doing open source for more than 15 years. I've had some companies use my libraries or tools. I think it's cool and exciting.

I think your talking about open source with trademark restrictions. You should be able to time a standard license for that though I'm not sure it qualifies as open source (any restriction disqualifies you from the official term) but should allow contributions and help.

Honestly though. It's good to know what you want. And don't let me change your mind.

But that being said I don't see someone taking your code,  Running it and claiming it as thier own. It's a lot of work. No word of mouth. They won't know how it works as well. They can't support it as well. You keep your lead by being a better product. Better support. More experience. Etc.",2.0
g2z8z4q,ih1lqy,"Thank you for your input!

There will be a license change soon! (I'm too tired rn lol)

I guess this

&gt; This document can and will be updated in the future

came in handy

Edit: I have work soon! üí§ time",1.0
g33uxa9,ih1lqy,nani,1.0
g2wnzyi,igynpo,"*""I really like it but can I use postgres instead of mongoDB?""*

Last time I shared Papyr, this was one of the first and highest rated responses I got. At the time, the answer was that only Mongo DB was supported, but then I got to work! Leveraging the [Sequelize](https://sequelize.org/) and [Mongoose](https://mongoosejs.com/) ORMs, Papyr now supports any databases that these ORMs support (including Postgres).

Maybe you weren't here last time I introduced Papyr. Papyr CMS is something of a CMS/Framework hybrid. Using the NextJS React framework, Papyr is designed to be extremely customizable (the CMS part) and extendable (the Framework part). Using a combination of ""Content Posts"" and ""Page Posts"", which leverage a series of pre-built Sections, custom landing pages fly together (check out [how it works](https://papyrcms.com/posts/content-and-page-building)). Because, however, Papyr is built on NextJS, developers can customize their install to their heart's content. Additional Sections can be added to the ""components/sections"" directory of a project to be included in the list of sections used to build pages, or, using NextJS's ""pages"" routing, one can simply build their own React component in the ""pages"" directory that can be as custom and advanced as it needs to be.

Besides being a customizable CMS and extendable Framework, Papyr comes with all sorts of functionality that most websites need already baked in. These features include blog, events, ecommerce, quick website initialization, user authentication, Gmail integration,¬†Google Analytics, and more! On top of that, Papyr is designed to be used for free! Every service (hosting, database, image storage, etc) is a ""freemium"" service, so everything can be used for free, but is very easy to scale for a few dollars once you need to.

Check out the home website at [https://papyrcms.com](https://papyrcms.com/)¬†or the code at [https://github.com/drkgrntt/papyr-cms](https://github.com/drkgrntt/papyr-cms). You can also see a demo site showcasing many of the front-end features using fake content at [https://drkgrntt.herokuapp.com](https://drkgrntt.herokuapp.com/).

Do you have any questions or comments? Feature requests? Bug reports? Would you like to contribute? Please feel free to reach out in any way you know now, or via the [contact form](https://papyrcms.com/contact), and I will get back with you as soon as I can.

Thanks for reading!",3.0
g2xqhju,igy7se,"User:

```
user clicks button at 0 seconds (x axis = time)
|
|
0-------1-------2-------3-------4-------5-- - - -
^         ^-- ""hmm""       ^               ^-- ""jeeze! what's the hold up?""
                          '-- ""well, come on""
```

Humane solution:

```js
on('interaction', () =&gt; updateUiState.then(updateLocalStorage)))
on('localStorageUpdated', () =&gt; updateServer.catch(retryPeriodically))
on('receivedUpdateFromServer', () =&gt; compareWithLocalStorage
  .then(updateLocalStorage)
  .then(updateUiState)
  .catch(promptWhichVersionToKeep)
)
```

Developer:

```js
xhr.timeout = 10000
```",6.0
g2yjv0p,igy7se,Haha timeout goes tick,3.0
g2xx77p,igy166,You mean I could have been writing my podcast in javascript this entire time?,54.0
g2yrva3,igy166,"Just cause u could, doesn‚Äôt mean you should :P",9.0
g2zbep6,igy166,"Invaluable content, not only for JavaScript, but for **any** programming language, since you explain the data structure itself.

Thank you very much.",6.0
g2wpff4,igy166,"Well done! I didn't watch the whole video yet, but I thought I'd share my own Node code for this. The messy part for me was converting my samples to Little-Endian. I'll have to finish the whole video to see how you achieved that!

 [https://github.com/jaranasaur/node-wave](https://github.com/jaranasaur/node-wave)",5.0
g2wqv55,igy166,"Thanks /u/_jaranasaur - let me know what you think of the ending. Yeah the endianness stuff is a pain to deal with manually. These days I tend to use DataViews to abstract it away, but in this video I used a library I wrote some time ago called [construct-js](https://github.com/francisrstokes/construct-js). It raises the abstraction level a bit and allows you to express the structures in terms of fields and values - without having to convert the endianness yourself.",8.0
g2wsd6f,igy166,I love your videos! Thank you for this one!!,4.0
g2zh8ns,igy166,"I'd like to note that while the imports being named as A, B, C, etc are clean and take up little space, it makes it difficult to remember what they refer to exactly, even if in this case they happen to be the first letter of the library they refere to.",6.0
g2ykuy1,igy166,My favorite JavaScript YouTube channel by a mile!,3.0
g2zgib7,igy166,Could someone refer me to why `yield` is used here in the example code? Is it because of it being run in NodeJS?,3.0
g2zr4vq,igy166,"No, that‚Äôs the syntax used when using [generators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*)

Edit - so it‚Äôs interesting the way it‚Äôs being used here, I‚Äôve never seen a LHS used with yield, but [that is apparently a thing](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield)

So it looks like this library he‚Äôs using, arcsecond, can accept a generator as part of the parser (using coroutine), which allows you to yield expected encodings to the parser and then receive back the encoded value as the yield return. Clever API design.",4.0
g2zujls,igy166,"Thanks. Also, ""LHS""?",2.0
g2zulk4,igy166,Left-hand side of an assignment,2.0
g3013oh,igy166,"Ah right, thanks!",1.0
g2zuzvl,igy166,"I actually made a video about this mechanism: https://youtu.be/yPEwjpIWOGg

You can think of it as async/await, but for parsers instead of promises. However this technique can be applied to many different kinds of problems.",1.0
g3011j8,igy166,Thank you! I took a watch and plan to also look back at the building Promises and Async/Await from scratch. Love the video content.,2.0
g2yif5p,igy166,"Ty.  
For the amazing channel that I never heard of.",2.0
g2wqymx,igx3ni,"Do any of these tools help make sure that you don't upgrade a dependency too far?

I recently took on a pre-existing project in which one dependency (let's call it ""A"")  had stopped development a number of years ago. It had downstream dependencies that continued to be updated. The latest versions of the downstream dependencies broke the ""A"" library. So I couldn't update all dependencies to their latest versions without rewriting the code to not use the ""A"" library",1.0
g2xalph,igx3ni,"I'm not sure why it's not on the list but I always use npm-check-updates. This allows you to lock certain dependencies in a config file so they won't ever be suggested for auto-updates. But this is actually a reason I like having really high test coverage. I can update all dependencies and just re-run the tests and be fairly confident it'll still work. I'll also manually sanity check the change log of any major version update (and sometimes minor versions) to see if there's any breaking changes, depreciations or new features I should be using.",1.0
g3021t4,igx3ni,"The updates are pull requests. Have a CI running your test suite on every PR, and you should be golden, whatever tool you choose.",1.0
g2wibuo,igwujw,"JS is a bit crap in places because it had flaws to begin with, is super popular and has been patched together over the years to keep things working. A bit like PHP in that respect 

Some of your issues are probably because you came from Java first and are used to doing things a certain way.

A lot of people will claim that JS is the best thing ever - but dependency management and lack of standard library are things that bug me a lot

You can write JS well but you can also write it very poorly. Maybe that‚Äôs true for all languages",10.0
g2xju8z,igwujw,"&gt;because you came from Java first and are used to doing things a certain way

100% this. Never met a Java developer who didn't write garbage JavaScript.

It's not because JS is bad or Java is bad, it's that most Java programming paradigms don't transfer to JS because JS doesn't offer the same conveniences ‚Äì static type checking is the biggest one. Devs who learn to code with strongly typed languages end up becoming dependent on the type checker to understand the types, so they never learn how to write code that is easy to type check by visual inspection. So functions/methods become extremely bloated with parameters in Java without too much maintenance cost since you can easily check types. The same type of code in JS is completely unintelligible because you don't have static types. Java devs need to learn to refactor their functions in JS so that they are each easily understandable without needing to rely on automated tools. This means functions are short and have few parameters in JS, compared to Java. It also means most of your time improving existing projects is refactoring/rewriting functions rather than extending functionality by writing/extending classes.

At the same time, JS does provide some conveniences that Java developers completely ignore because that's not how they do it in Java. E.g. lone variables! I can make an object literal in JS `const obj = { foo: 'bar' }` and use that directly, but devs from Java backgrounds invariably wrap it in a manager class. Because that's how they do it in Java.",3.0
g39a0fh,igwujw,"Nicely put, apart from experience where would you point Java devs for a go-to book",1.0
g3b4jpi,igwujw,Almost every link looks useful: [Functional JavaScript for Java Developers](https://www.google.com/search?q=functional+javascript+for+java+developers),1.0
g3b887p,igwujw,"There goes the weekend,thanks ;)",2.0
g2whpsb,igwujw,"You can create horrible code with any language, it's just a bit easier to do in Javascript. It's up to you to learn how to properly use the language. As others have already said, look into using TypeScript.",6.0
g2wlb8l,igwujw,"I am just going to address the point ""JavaScript allows you to create HORRIBLE code"".  


JavaScript gives you a lot of freedom and it's up to you to use it wisely, that means that you are bound to stumble upon code with questionable practices.

  
If your question is ""Should JavaScript give us that much freedom?"", I don't think there is an easy and universal answer to that. Everyone will have a different opinion based on their background and what they generally use the language for.  
While this is an interesting question in general when looking at programming languages, I don't think it matters in the context of JavaScript. Because it's not going to change, it will remain a very permissive language.

Your frustration is totally understandable and I think a lot of other developers will share it, myself included. Sometimes you just need to vent because you're working on code you despise, I've been there. 

But keep in mind that you will face similar issues in any language. I take it you come from mobile development, so you must know as well as I do that it's not all rainbows and butterflies there. Version incompatibilities with Gradle? Libraries written half in Objective-C half in Swift on iOS? And don't even get me started on Xcode, talk about hell.

My point is, you will have projects that are a pain to work on. But if you have the right team and the right knowledge you can also build amazing things in JS, it's such a versatile language!",4.0
g2x8cdw,igwujw,"To add to your comment. Dependencies bring a lot of code into the project. Those dependencies were constructed in a permissive language and might be crap. If a developer brought in chaos with dependencies and added chaos to integrate it, often it is easier to rebuild parts of the code than to yank on the spaghetti. In that way JavaScript development is more like C development. There were plenty of C developers that knew exactly what they were building as they built it then immediately forgot about the black magic they employed to make code work. 

Comments explaining ‚Äúwhy this exists (business rules)‚Äù or ‚Äúwhat did we gain by doing this‚Äù or ‚Äúwhy this terse code works‚Äù go a long way to code maintainability. Comments can feel blasphemous to people that believe in ‚Äúself documenting code‚Äù or have been working in frameworks that lean heavily on convention.",1.0
g2weofj,igwujw,Typescript + react(typescript tamplate) üëåüèº,5.0
g2x90m4,igwujw,"I must be a masochist because I've always liked JS.

Prior to learning JS years ago I had learned PHP and Ruby so I never really had to become comfortable with type systems.

The fact you're working with legacy code means it's probably far worse than what someone would produce today because the ""way of doing things"" has shifted pretty rapidly from even just a few years ago.

Ironically since you appear to be refactoring stuff that's where something like Typescript shines.

I wouldn't allow your experience with having to clean up someones mess shade your idea of what the language is today.",2.0
g2ylv3c,igwujw,"Every language has some great ""candy"" that makes some developers love it, so don't think that you're a masochist.

For what it's worth: I *love* Objective-C.",2.0
g30zc7v,igwujw,"I used to love Objective-C, but my new loves are Kotlin and Swift. Also a heavy user of fuckingblocksyntax.com",2.0
g3m2b4h,igwujw,Do you develop Android or do you use Kotlin for something else? I don't develop Android (at least not natively) but would love to give Kotlin a try too.,1.0
g3m2lfv,igwujw,I‚Äôm starting with it. Mainly in Android but also in the backend as a substitute of Java (as Kotlin generates ByteCode that runs in the JVM),1.0
g2ymqj5,igwujw,"It's you who doesn't have much experience, and that's perfectly okay. Coming from an Objective-C/C# background, I've been into JS heavily just for a year and when I look back to the code that I wrote last year I find it terrible. It all works, but there are infinite places that I say ""oh my god I could write this muuuuuch better how newbie was I"" in the code. And next year I'd be probably saying the same for the code that I write nowadays. 

Just as in any other language (actually as in pretty much everything in life), experience is everything. Jump on the train, keep on coding and become better!",1.0
g30zj7c,igwujw,"Thank you for your comment!. I‚Äôm going to invest in learning best practices with JS. Probably what bothers me the most is the excess of flexibility, and that can be solved with (many) good practices",2.0
g47v4gy,igwujw,"The excess of flexibility is what I love! If I‚Äôm building an API that ships something from one place to another and that something is really consistent why create a class for it? API code is so much more readable in JavaSCript in my opinion.

I love the creativity of JavaScript though. Java is on my list of do not do jobs. I think java is a bad language to come from to learn JavaScript.

If you love java usually JavaScript is strongly disliked, and vice versa. Funny about that marketing thing.

The bad parts of JavaScript are mostly jacked on java patterns, in my opinion.",1.0
g2zip7q,igwujw,"The thing with JavaScript is that it is multi-paradigm in an extreme sense. So much so that you could use it as an imperative scripting language. It is also built to interface with the browser and it's apis. 

It wasn't until es6 and eventually typescript that people started bringing OO into the mix. 

Then React also brought some functional concepts into popularity. 

I would say because JavaScript has so many applications you can write it in all kind of ways so mixing and matching paradigms and patterns is common. 

I would criticize JS as having a case of the fomo. It feels as if the language and community is so insecure about itself and trying to evolve to be like other languages. But at the same time it cannot just throw away it's past cus #dontbreaktheweb.",1.0
g39lmqr,igwujw,"Your only critique of JavaScript is really the lack of a type system. This is a pretty fair complaint, and it's a ~~joke~~ hole* nicely filled by Typescript. TS's type system is much more expressive than Java's, even!

Your annoyance at version incompatibilities is not specific to JavaScript. I'm surprised you haven't encountered ""dependency hell"" yet in a Java project.",1.0
g47v8m9,igwujw,I don‚Äôt know.. he doesn‚Äôt seem to be a fan of function size and constructor logic.,1.0
g308aa8,igwujw,[deleted],0.0
g30z56l,igwujw,"Wow. You are assuming too many things about me.
I clearly state I code in other languages such as Objective-C or Swift, and hell thats professionally, at the Uni I coded in python, C and C++ as well... I really do not understand how do you conclude that I think JavaScript === Java üòÇ 

But thanks for your input I guess.  ü§∑üèΩ‚Äç‚ôÇÔ∏è",2.0
g2wf8cd,igwujw,"It‚Äôs you. JavaScript is love. JavaScript is life.

Read javascript.info. Learn best practices and design patterns. 

Use Node and React and TypeScript. 

Do not use Vue.",-5.0
g2whmlc,igwujw,Any logical argument for not using Vue?,4.0
g2woct3,igwujw,I think Vue optimises for beginner familiarity so you end up with something more abstract than React. So pros and cons depending on how you see things,2.0
g2wonc3,igwujw,There is a decent amount of magic under the hood but the same is true for react and angular.,3.0
g2x8hwp,igwujw,"Vue optimizes for developer happiness because you can use it in whatever manner you want be it through mustache like templates or jsx etc.

That flexibility is a blessing if you as a developer can remain consistent, and is a curse if you as a developer prefer strict convention and expect that across an ecosystem.

The irony is that React has the same problem ultimately because in JS there tends to be more than one way of doing things no matter what you're doing.",3.0
g2wjn4h,igwujw,It‚Äôs a dumbed down template based framework hobbled by underpowered programming abstractions.,-8.0
g2wk3sb,igwujw,"Oh, so not because of any actual technical limitations, you're just emotionally attached to react. Got it, thanks.",8.0
g2wlgrw,igwujw,Looks like I hit an emotional nerve. You ok bro?,-8.0
g2wmxc8,igwujw,"Keep trying, you're doing great so far.",6.0
g2wu58s,igwujw,"I know that we all like to hate on Angular here in r/javascript  
But you might need to prepare for a downvoting brigade now :-D",2.0
g2ynxeg,igwujw,I‚Äôve come to expect nothing less from the Vue hivemind. None of which disputes my point by the way.,0.0
g30zr2x,igwujw,Well I like Vue and it is already in the project so that‚Äôs not negotiable. Thanks for the tips!!,2.0
g2wqm69,igwujw,"`Java !== JavaScript`

JavaScript is cowboy coding. **It's pure love**.

Most ""real"" programmers that stumble upon JS these days opt for ""The TypeScript flavor"" :-P",-1.0
g2w8dfg,igr2c6,This looks nice and all but what I really appreciate is your neat demo/showcase/project website.,23.0
g2vidx3,igr2c6,Wow that's clever.,45.0
g2voimn,igr2c6,And it‚Äôs little,15.0
g2vyc5s,igr2c6,And is certainly is in JS,19.0
g2x1s8l,igr2c6,And it's new and I think in 3D as well.,4.0
g2x6q1j,igr2c6,"And it starts with ""z""!",3.0
g2vqn3t,igr2c6,such library,13.0
g2w4c29,igr2c6,wow,7.0
g2vnciu,igr2c6,This is **[so fun](https://blazing-fast-thesaurus.netlify.app/)!**,33.0
g2vy7w2,igr2c6,"Looks nice, but please don't wrap every letter into it's own &lt;h1&gt; tag.. unless you don't care about SEO optimization at all.",21.0
g2x8x29,igr2c6,SEO is one part. It‚Äôs an accessibility nightmare.,11.0
g2z9s9k,igr2c6,"Don‚Äôt forget web performance, while you‚Äôre at it. 

Don‚Äôt get me wrong, I dig this library conceptually (and it reminds me of the weird experimentation we did a couple decades ago when the web was still weird), but I can‚Äôt imagine using it in production.",2.0
g2vkjim,igr2c6,"Looks retro like Myspace, just needs more  Sparkles‚ú®",12.0
g2vpmwl,igr2c6,Glitter and sparkles,4.0
g2vxek9,igr2c6,3d text is making a comeback,6.0
g2wh3k0,igr2c6,Need to use those googles from the 3D tvs somehow,1.0
g2yn778,igr2c6,I prefer the old bings,1.0
g2w4iwz,igr2c6,Wow that's pretty slick! The demo makes me want to find some excuse to use 3d text somewhere.,6.0
g2w8c2c,igr2c6,\*squints in accessibility.,11.0
g2vv3hv,igr2c6,"This is neat.

Is there a node integration, with the app? Or was that just a way to showcase a functional test enviroment?",4.0
g2wcpi1,igr2c6,That‚Äôs so cool. Love the scroll one.,4.0
g2vp4xf,igr2c6,Nice,3.0
g2vq97o,igr2c6,yes very good,3.0
g2w28kr,igr2c6,Bring back Zara3D,3.0
g2w7lwk,igr2c6,Nice work!,3.0
g2we2gi,igr2c6,I'd like to see an inverted scroll one!,3.0
g2wt8yw,igr2c6,"Cool work. One bug though, in Safari the text gets copied multiple times. For example, copying the logotype then pasting the text gives:

zzzzzzzzzztttttttttteeeeeeeeeexxxxxxxxxxtttttttttt..........jjjjjjjjjjs",3.0
g2x0ts2,igr2c6,"Flash may be dead, but this is its reincarnation.",3.0
g2xgn9e,igr2c6,"Nice this looks cool. I'm definitely going to use it in one of my next projects. 

Looks like it will totally add to the fun levels, who doesn't love some good 3D text üëç",3.0
g2xv9f7,igr2c6,This is really darn solid,2.0
g2xymgn,igr2c6,"This is really cool.

One thing i've noticed is that the performance on the transform event listeners absolute tanks when dev tools is opened. Anyone else having the same issue?",2.0
g2y1asg,igr2c6,This is superbüòçüòçüíØ,2.0
g2ydsn3,igr2c6,"Finally, I can make **WordArt** using **JavaScript**. What a world we live in.",2.0
g30861n,igr2c6,Any chance of an npm package?,1.0
g3auyst,igr2c6,wow. very nice,1.0
g2v48tu,igpbuv,"Project Page (?): https://github.com/aelof3/DuckDrone

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g2uuyy9,iglbvo,"Short answer: no

Long answer: just like every other tech it might solve some people's problems but not others. At work we use jsonapi resources which I have never even heard of before now 

Soap is still popular

Graphql has some big names behind it 

https://xkcd.com/927/ explains it best

Should it stop you from making a new tool? absolutely not.

Will it fix everyone's issue? Absolutely not",10.0
g2xajxh,iglbvo,"RPC is what people used to do before the REST craze, which what people used to do before GraphQL. Everything comes around full circle.

Like most everything else in programming, you should understand the pros and cons of each option, and use the right tool for the job.

- RPC: your API is largely action-oriented (I want to do X)
- REST: your API is largely entity-oriented (I want thing Y)
- GraphQL: your API is largely relation-oriented (I want to mix and match W and Z in some way)",3.0
g2xnwy4,iglbvo,"I agree that neither RPC, REST, nor GraphQL are silver bullets and each have their use cases, although I see the uses cases to be:

* No need to decouple frontend and backend development? Then use RPC. For example if you use Next.js then you develop frontend and backend hand-in-hand and there is no need for an API. RPC is pretty much the superior choice is such situations. RPC being easy to set up (especially with tools such as Wildcard :)) and more flexible. (The flexibility assumes that the backend and its RPC endpoints can be modified at the whim of the frontend development, which is the case when you use Next.js or other full-stack frameworks.)
* If you need to be able to develop the frontend(s) independently of the backend then you need an API. For example, if you want third party developers to be able to develop apps on top of your API, then you need REST or GraphQL. Or if you are a large company with dozens of frontends built on top of a single backend.
* Deciding between REST and GraphQL is mostly a case-by-case thing. GraphQL being a more advanced tool that is more ""powerful"" but usually costs more dev time to set up. Deciding between REST and GraphQL depends on many details such as if you are using ecosystem that facilitate the creation of a GraphQL API, such as Prisma, Postgraphile, or Hasura.

But really if you aren't a large company and you don't have third-party developers consuming your API, then REST and GraphQL are most often the wrong choices and you should go for RPC instead.",1.0
g2xludn,iglbvo,RPC ... isn't that the thing people used before RESTful apis?,2.0
g2y0qio,iglbvo,"Yes and actually even back then at Xerox PARC they implemented RPC, long before the invention of REST",1.0
g2ybdl5,iglbvo,"RPC was something started in 1981, what do you mean by future, Graphql/Rest, basically anything is a remote-procedual-call, something that works on remote machine

GraphQL is a means of asking question, with shape criteria, and predictably get what asked.

Given such criteria, it can prevent over-fetch or under-fetch, the benefit is both sides, and also enable analytics for what type of data are more popular and many more, trust me those are goldmine.

When you are using framework like GRpc/Thrift, 

You cannot say ""what if I don't need the DateOfBirth field, and I need the Hobby Field"" after the schema is set and stone, you can of cause define params to do so, and that basically becomes GraphQL.",2.0
g2ueu22,iglbvo,I think that GraphQL is [more popular](https://2019.stateofjs.com/data-layer/) that you realise.,3.0
g2ugqn8,iglbvo,"Redux is also widely known - yet people got to realize that's it's not the silver bullet they thought it was.

Same thing with GraphQL. People will eventually realize that GraphQL is overkill for like 95% of the time. It will take a while until the becareful-of-GraphQL hype overcomes the GraphQL-is-perfect hype.

Don't take me wrong, if you are Facebook and you have zillions of third-parties using your API then GraphQL is awesome. But most of the time I see someone using GraphQL it's overkill.",2.0
g2ukllz,iglbvo,"I do agree.

GraphQL is a tool. Redux is a tool. If at any point we say to ourselves, ""This tool will solve all our problems"", we're essentially forgetting what the word ""tool"" means. Tools have scope, and so do problems, and these scopes overlap in bizarro ways more often than we'd like to admit. :D

At least GraphQL is an actual specification, unlike REST. Have you ever looked-up what it means to call a system truly RESTful? Bonkers.

Anyway, congratulations on your Wildcard API! The more tools the better. :)",7.0
g2unfrj,iglbvo,"Yes REST is unfortunately not particularly well defined and still today there is lots of confusion as to what REST exactly means. Quite a pita!

Thanks :)",2.0
g2ulhi7,iglbvo,"What doesn't redux solve?

GraphQL is more involved, but it is objectively better than RESTful APIs. Over time, as more frameworks and improvements are introduced, it will become easier to adopt.

RPC based API calls was what all AJAX developers were doing pre REST. Developers decided on RESTful APIs so as to have semantically meaningful and predictable behavior.

Auto generating functions to make these calls is not a huge win, and it does not solve any meaningful problem that developers are having. Real RPC solves a real problem, i.e. performance, not having to send extra bytes over the wire, and so it is used to communicate between servers.

What is being proposed here creates business problems; there are many good back end developers, and there are many good front end developers, but there are very few good full stack developers.

Exposing back end methods to the front end kills the encapsulation - kills the flexibility you would otherwise have to change how the data is fulfilled to the client (or otherwise kill your architecture by trying to work around this).

GraphQL does not have these problems, and in fact it improves on the separation (to fulfill a GraphQL API from the backend, you don't even need to coordinate with your front end developers). In that regard GraphQL is an objective improvement over REST, and what is called ""RPC"" here is objectively worse.",2.0
g2uoiuu,iglbvo,"Great observations, but on the question of ""What doesn't Redux solve?"" I'd say we wouldn't have React Hooks, Recoil, or Formik if it solved all of our front-end state problems.",2.0
g2uofb6,iglbvo,"Yes, if you have the dev time to implement a GQL server, then GQL is objectively superior to REST.

And yes, if you want to decouple frontend and backend, then REST/GQL is objectively superior.

But, if you want to ship things quickly and you are developing frontend and backend hand-in-hand, then RPC is objectively better ;).

As for the quality developer thingy I'm really not sure about this. I'd argue that someone who is comfortable with React will very much be comfortable with Node.js. In general, you don't want to trade salary money for loss of skills; paying more for higher skilled devs is virtually always worth it.",0.0
g2uexf1,iglbvo,Can you explain how this concept is different then how things like express already work where each endpoint is a function?,1.0
g2uh9ks,iglbvo,"Conceptually it's the same. But it takes care of all the boilerplate for you:

* Serialization (including types such as `Date` that JSON doesn't support).
* No need to think about HTTP (what HTTP verb should I use? What HTTP status code? Etc.)
* Automatic caching.
* Supports TypeScript: you can use your backend types on the frontend!
* SSR
* Dev tools
* Etc.",5.0
g2vasdl,iglbvo,Thanks,1.0
g2ugjru,iglbvo,They can very much be used in conjunction and work quite well together in situations where you have a proxy layer that talks to many micro services,1.0
g2uht1i,iglbvo,"Agreed and in certain situations GraphQL is a powerful tool. But, and that's what seems to be an increasing sentiment, GraphQL isn't a silver bullet. Actually, most of the time, GraphQL is overkill and something simpler like RPC is the way to go. Most devs used to think that GraphQL was just plain better but it seems that they start to realize that GraphQL is only good for certain use cases.",1.0
g2ui908,iglbvo,"Yeah, if something could also just be a simple rest server there‚Äôs probably not a need for GQL.

I was just stating I think GQL + Grpc is a really solid duo if your needs call for it.",1.0
g4zwlet,iglbvo,"It died in the past because of how much boilerplate you had to write, some xml schema thing i dont remember. If we have rpc that just works with minimal plumbing code like the library retrofit in java I'll use it in a heartbeat.

Unfortunately to this day, things like grpc are still a pain to use with a cripled type system that makes you duplicate code in your client and server language, it's too much work. 

I like zerorpc but it does not seem to be in active development and lack binding for things other than python and nodejs. Speaking of which having binding library/code gen for all major languages is a must. Not everyone have a homogeneous stack these days.",1.0
g2ucy00,igl1zm,"IMO, there's *never* a strong reason to ""jump"" to a new thing after only a few months.  There are, however, strong reasons to wait and see how things go first.",28.0
g2uhduw,igl1zm,[deleted],0.0
g2us3y8,igl1zm,"Sorry but Node won't fall in any near future, Deno it's just a baby and Node has a huge backing.",4.0
g2vi2ee,igl1zm,"Honestly, I'm confused by the sorcery that is the server in the standard library.

```js
import { serve } from ""https://deno.land/std@0.65.0/http/server.ts"";

const s = serve({ port: 8000 });

for await (const req of s) {
  req.respond({ body: ""Hello World\n"" });
}
```

I understand that this uses Async Iterators. I understand how Async Iterators work. What I don't understand is how this code can accept requests concurrently. Just hear me out here... what happens when we have 2 simultaneous requests to the following setup?

```js
for await (const req of s) {
  await sleep(1000); // sleep for 1 second
  req.respond({ body: ""Hello World\n"" });
}
```

Does it process both requests in parallel? Does it stall for 1 second before accepting the 2nd request?

I set to find out.

It handles both, simultaneously. 

It uses a mechanic called a Multiplexed Async Iterator. The code for which is pretty easy to understand. It basically takes multiple async iterators and combines them into 1, but uses some kind of trickery to continue accepting new requests.

But here's the kicker... if you copy/paste that multiplexer into Node.js as-is, and run two async iterators on it... they run 1 at a time because of that `await sleep(...)` statement.

What manner of sorcery is doing this?",11.0
g2w4xrf,igl1zm,The event loop?,3.0
g2ws40n,igl1zm,"I had considered that Deno's event loop may differ slightly, but after [reading this](https://denolib.gitbook.io/guide/advanced/process-lifecycle), I'm not so sure that's it.",1.0
g2ue28e,igl1zm,"""TOO SOON!"" (c) Ragnaros",8.0
g2ugmrm,igl1zm,"I do not have an issue with the lack of npm, especially as I‚Äôm coming from go, which Deno modeled its module management after

I really like typescripts optional type system and am excited for the future of this project",7.0
g2vnffd,igl1zm,Deno standard library is modeled after go too which is cool,5.0
g2ud8vv,igl1zm,"I think it looks very promising but It is probably too early to use it seriously.

Give it a year or so.",5.0
g2ud7dl,igl1zm,Pros: Cute mascot. Cons: Not sure how to pronounce it.,5.0
g2waqd2,igl1zm,[deleted],2.0
g2x5kjn,igl1zm,Thanos,1.0
g2vqxd3,igl1zm,In terms of professional work? I would wait there is no reason to immediately jump on something new so soon. Far too many downsides. For personal work? Who cares do what you love. For clarification most people don't have a problem with the lack of npm its deno's poor package management in general that is the issue.,2.0
g2uysk2,igl1zm,Deno.,3.0
g2ulkvg,igl1zm,"I haven't picked it up yet but I'm hoping it succeeds. I like it from a conceptual level, but of course as with everything new it's wait and see.",2.0
g2w7wr2,igl1zm,"A hobby project? Sure go for it.

Actual production stuff? Nah wait for a bit, nodejs is here to stay for a while anyway.",1.0
g2w8e2f,igl1zm,"After trying it out for a few minutes I've run into the following problems for which I can't find a solution.

The thing I want to do is create a ssr React application. So far so good. Then I want to make use of special loaders so I can for instance import svg's as components and use those as react components. This proved to be the first hurdle I can't get over. The second one being (S)CSS Modules.

After I ran into these problems I've stopped the little experiment.
I think I'll wait until the solutions are there.

Deno states that it want things to work out of the box without custom build tools like webpack. However this also means no support for custom loaders. Which I think is a shame.

Another thing to consider is that while it's possible to import modules from any url. When you do so you have to be pretty sure that resource will exist there for as long as your code needs it to be. Or you could only use modules from deno.land (Deno's NPM repo).",1.0
g2xppal,igl1zm,"If I were to choose statically typed language for back end. I would go with c# or java.

When node was out not that many programing languages had option for async io. Now this no longer the case. 

NodeJs is still really fun to use.",1.0
g2yedm6,igl1zm,"I was a bit skeptical about how the import system works, but apparently it allows you to create a import map through a config file ([source](https://dev.to/sukhbirsekhon/what-is-deno-3hia#modules)). Maybe I'll try it out for my next project.",1.0
g2uf3ia,igl1zm,"Question: Do you want to?

\- Yes: Do it  
\- No: Don't do it  
\- Don't know: Me neither",0.0
g2svnh8,igchw8,"No, it's not industry practice, but it does depend on the application.  Realistically there isn't much to be done when you get a network error, and if it's not critical software then making the user retry may be the more economical choice.

But it does sound like the DM is a condescending ass who compensates for lack of experience/ education

I'd rather work with you than him",33.0
g2tngvg,igchw8,"that kind of push back on some PR comments from someone who ""recently joined"" is a huge red flag IMO.

I'd probably just tell him that you're not comfortable approving the PR without error handling and test coverage, and to keep comments in the PR thread so that ""everyone can discuss and learn from them"" or some politically friendly reason like that. 

part of being a senior dev, especially when joining a new team, is understanding that you should be open to doing things the established way at first, even if you don't think it's ideal

then if you want to make an argument for ""tests are a waste of time"" or (""typescript is superior"", ""css in js over sass"", etc) then you do that and if the team is onboard everyone can transition together, and if they're not you can do things the team-way or start looking for a new job (or both)",20.0
g2svf2m,igchw8,"People like this ruin code bases. Tests are documentation, even if he legitimately made bulletproof code, he isn't the only one who is going to maintain it.",47.0
g2sw61v,igchw8,"What I don‚Äôt understand is the resistance to simple error handling? His feature makes a number of backend requests, each of which depend on each other in some way and any one of those could fail. 

It‚Äôs unclear to me why that shouldn‚Äôt be covered by tests or data fetching errors shouldn't be handled?",12.0
g2sz92o,igchw8,"&gt;He said tests are just ""confidence building busywork"" and the team should trust his 20+ year expertise

He told you why. It's because that person is arrogant. Dunning Kruger strikes again.",21.0
g2t2wm4,igchw8,"Yeah I interviewed a 'sr. Frontend engineer' with 10 years of job experience listed, he didn't know what recursion was.

I think I've finally gotten to the point with my imposter syndrome where I'm realizing the reason I don't know what people are talking about is because they don't either.",19.0
g2sxs6j,igchw8,"It's not normal although I've only got 14 years so who know's what I'll discover in the next 6 ;).

My experience when teams decide not to test is that it is a short term gain as they're expending less effort. Great for a throwaway prototype you build in a few weeks to try out a concept.

But, if it's a long term product with more than one dev and likely changing hands over time then tests will save you more time than you expend writing them. Both as a fail safe against unintended consequences from changes, but also as self documentation of the thought process.

If you're in a pinch for time, then focus on the hard parts that will be easier to break and have more impact if they go wrong.

It's even more of a concern in JS as it has some of the best tooling for rapidly building &amp; iterating tests.

Same goes for error handling. I get that you can't recover from every unexpected error; but at the very least show the user a retry button when you get an unexpected/no response.",18.0
g2tj5uo,igchw8,Tests also help you think more carefully about how you are designing your product. I'd say it helps you to save time in the long run.,7.0
g2tozh4,igchw8,Definitely; you find out the flaws as you‚Äôre the first user of your API! Then hopefully the world thinks it‚Äôs perfect. Until...,3.0
g2tu9al,igchw8,"&gt; Great for a throwaway prototype you build in a few weeks to try out a concept.

Until, next thing you know, the prototype is what's out on production.",3.0
g2v5mjk,igchw8,"""There is nothing more permanent than a temporary solution.""",3.0
g2txo5e,igchw8,"That‚Äôs what I‚Äôm dealing with right now (not my prototype, but my problem now).

But, my point about focussing testing on the complicated parts is my focus for now as those are the most delicate when they change came from this current project. A few days of jest and mocking got me a long way into deciphering what had landed on my lap. I found plenty of optimisations I could make too (why write to the DB once at the end when you can do it multiple times as you go).

I‚Äôve found those ones hard to predict; if there someone else‚Äôs then you‚Äôre at the mercy of them. If it‚Äôs mine, I try to test from the start where time allows. Again, anything that lives beyond a few weeks will get complicated enough to require some level of testing.",1.0
g2tts0o,igchw8,"For test coverage: If the product has not launched yet, it is OK to not have tests as long as there is intention to add tests at a later stage and 100% commitment to that intention.

For error handling: It depends on the application and the code in question. 90% of the time error handling is needed. However, sometimes it is far better to just stop the application and restart it if it is in an unknown state. This works better when the app is containerized and part of something like a Kubernetes cluster.

His attitude: Uncalled for, big red flag, why's he hiding his opinion in a DM and not leaving it open for discussion? I would understand if he was one half of the dev team, but from the sounds of it he's part of a company and this is not ideal behavior from someone who is supposed to be part of a *team*.",8.0
g2sw9wf,igchw8,"No it is not normal. The dev has insecurity issues about getting their code reviewed. 

Get it on paper that they made that statement / at minimum in the PR, to make it clear it was their decision. YOE means nothing, and you don't get to pick and choose when you've just joined a team, you follow the team.",8.0
g2t1ug9,igchw8,"Error handling is most definitely best practice. It is, unfortunately, completely normal for the connection between a front end and back end to have trouble. Your application shouldn't just silently fail because of a network hiccup or the backend breaking. You need to catch that and do something sane. You can't just pretend nothing happened.

There's a lot of code out there that ignores error handling because it takes time to write, and it's boring, and sometimes it's hard to figure out what the application should do. But it's what you do when you're writing real code and not just slapping together examples from the internet.

There was a maxim from way back that went something like: ""80% of a well developed codebase will be error handling and input validation"".",6.0
g2t69zn,igchw8,"&gt; Is it industry practice NOT to handle network errors?

It's a bad developer's practice.",5.0
g2vurx5,igchw8,"&gt; HTTP errors are the concern of the backend devs

I laughed at that statement. The person who said that does not know what they're talking about. HTTP errors are a way for the backend to communicate errors with the frontend, and the frontend needs to gracefully handle these errors when they occur.

There are also network errors that can occur beyond HTTP errors. If the user's connection drops or something causes specific requests to be blocked (e.g. ad blockers or similar), then the frontend should also handle that. Making a call  to `fetch(...)` will throw an error in that case and that needs to be handled.",4.0
g2t6og7,igchw8,"Sadly, it is standard practice, which is why most apps are flaky pieces of shit.",7.0
g2tn58m,igchw8,The truth has been spoken.,3.0
g2t3lpl,igchw8,Is it normal practice in your team? If it is then case closed. Just tell him that's how the team does it. If he has an issue with it he can talk to the lead dev. That's not your fight to have.,3.0
g2t4bxv,igchw8,"&gt;	Is it normal practice in your team?

We don‚Äôt have 100% test coverage but anything on the critical/revenue path is heavily tested. All network requests are wrapped in try catches, even if we don‚Äôt do anything with the error. 

&gt;	That's not your fight to have.

Yeah, that‚Äôs sort of my problem. Lead dev is on FMLA and I‚Äôm on rotation for PR review.

If I don‚Äôt approve, it will cause a ton of team drama and I will have to explain to the PM why this feature is delayed. If I do, and the feature blows up for some reason, I get blamed for merging untested code.",2.0
g2tbic7,igchw8,"You have a valid reason to not approve the PR. If this isn't good enough for the PM (or who ever), then the process of going through a PR is pointless.

Stick to the principles of your team. Does your team have a ""Definition of Done""?",9.0
g2t61is,igchw8,"There's a reason a PR needs to be reviewed in the first place.

If he insists, let him merge his own PR without anyone reviewing. 

I'll bet merging it will cause more problems down the lane and you don't want to be responsible for that.",6.0
g2v597u,igchw8,"&gt;  All network requests are wrapped in try catches, even if we don‚Äôt do anything with the error.

Not doing anything with errors is essentially worse unless this is an area of the application where it doesn't matter like let's say a custom internal admin dashboard. It sort of promotes a false sense of security, especially if you catch these errors without analytics or logging for when these requests fail.

&gt;  Lead dev is on FMLA and I‚Äôm on rotation for PR review.

Rotation for PR reviews? This sounds like a poorly run company imo. I've never seen a company devolve to using a rotation system for PR reviews. This seems like a ""company smell"" for engineers who are being penalized for how they spend time or engineers who are uninterested in properly reviewing code. PR reviews shouldn't be something people have to be thrown onto rotations. People who are knowledgeable about an area should be willing to lend their eyes to it. In fact, this entire situation seems screwed up based on that as another senior engineer should immediately be asked to follow up with their thoughts if they agree with you so it isn't someone using their position of seniority to crush your own.",1.0
g2tbz1j,igchw8,"There seems to be two common practices, neither of them ""best"":

1. Exceptions never caught at all.

2. Every single exception caught, logged, and ignored, guaranteeing more serious problems elsewhere. IDEs tend to generate boilerplate out of the box that do this, and it's infuriating.  

I prefer letting exceptions propagate to the highest level possible.  Network clients should not be concerned about catching failures in every bit of request code they write, they should let the error propagate up to generic retry code.  And if there's nothing you can do about an exception, then it's not _supposed_ to be handled.  Other than showing a ""something went wrong"" banner somewhere, just Let It Die:  the awesome thing about JS apps is that doing so never crashes the event loop, so it's impossible to truly kill most apps that way.",3.0
g2tps60,igchw8,"Many years ago, when computers were mainframes, every single function had an error return value, and well written code checked the status of every error code, and would promptly stop on an error, and report some unique code. This led to giant books of error codes, some 10 inches thick. It worked, but it was clumsy.   


Fast forward to 2020, and hardly any code i look at has any comments, or error checking. People are incredibly sloppy now, because most of the time things mostly work. HTTP errors are not common; the protocols are well debugged at this point, so he has a point.  


One problem with error checking is that there is often no way to report it, or propagate the error. So many systems are designed to just start over and repeat the process.  


The widespread lack of testing, and the lack of an error information back channel in many systems has led to a pretty flaky modern universe.",3.0
g2twzk5,igchw8,"We use Must, Should and Could and the policy is that if a team member put an M then you better be ready to go to the head of IT to defend why you won‚Äôt do it and you‚Äôll probably loose. Having this as a policy works well as it‚Äôs no one persons opinion, it‚Äôs just the policy for team work and cohesion.

Oh and yeah, he‚Äôs being an ass, write error handling in your front end and back end code, if you get a 500 let the user know and log it.

We have very little testing and as a result we have avoided upgrading our node for 4 versions due to some breaking changes and now I‚Äôve spent two weeks manually changing and testing over 500 end points because each one needs changing and the response patterns aren‚Äôt consistent, testing would have saved me over two weeks.",1.0
g2u1js1,igchw8,No.,1.0
g2ua2jj,igchw8,"A piece of software does not know what a ""back"" end is. It only knows what an ""end"" is, and it should treat it as down-by-default.",1.0
g2uga5v,igchw8,You should just explain to him that the tests are more for the team going forward rather than specifically checking his code.  He wouldn't want a junior dev screwing up his code without tests would he?,1.0
g2uood3,igchw8,"I work at a pretty large company &amp; we log errors &amp; some are UI relevant (letting the user know something happen). In some cases the error is meaningless or the backend can‚Äôt return an error that we can use. So yea, we error catch when we can. Helps with debugging too.",1.0
g2ure1h,igchw8,"We don‚Äôt know enough about this app to say anything definitive. However...

The main point is adapting to the codebase. My standard position here would be to include tests, and catch/handle errors only if they won‚Äôt be adequately handled at a higher level. 

But if the codebase differs, you match it and slowly influence as you become part of the team. 

Try to learn from the pragmatism seniors often bring, but don‚Äôt be browbeaten either.",1.0
g2wmrse,igchw8,"No error handling for network problems? That's a joke. Even if there is nothing you can do, there should still be a graceful handling of the error, maybe a generic popup in the UI. Not just relying on a uncaught exception in promise console log.",1.0
g2wxmq8,igchw8,"Show him this thread and let him eat that humble pie :-P

He should take the opportunity to learn something new.

Albeit he should know about `try/catch` after 20 years :-D 

I've done this for 15+ years and I still f\*ck up on a weekly basis. The best thing one can do is own up to it. Apologize, fix it and brew another coffee :-)",1.0
g2ziw6l,igchw8,"No network error handling at all? That's bizarre to me since 1. network failures are a natural fact of life; services aren't guaranteed to be 100% available and 2. it's not difficult to implement a reusable pattern for error handling. For example, if a UI interaction leads to a failed request, there can be a notification that uses the context of interaction to generate a message in a banner (or whatever). Optimistic updates that queue upon network failure? Basic error logs? Otherwise, frustrated users will contact support personnel who are further frustrated with the lack of helpful feedback.

Also, I'm surprised a person who sounds this dogmatic against testing wouldn't take this an opportunity to persuade you why this is so. I have come across these types, but at  least some respect can be given to those who can genuinely argue for it. This is just development at its most selfish.",1.0
g31ppj5,igchw8,"I've found the catch rarely catches anything in Javascript. I've only used it in a few circumstances where my code threw an exception in testing, and I decided to use the try-catch for control flow instead of rewriting that block of code.

Unless you're talking about the catch method in a promise. That can be different, but I often don't use it either. My dept. doesn't care for code reviews though, so it's a little wild west for me on how I want to handle things.",1.0
g2uinki,igchw8,"It depends on a lot of factors.  For the tests, I'd give it a pass - if it's a large feature and the team is under the gun to get it done quickly, tests are honestly the first corner to cut.  Tests aren't for ""today's dev"", they're for ""future dev"".... one of the (half-jokingly) phrases our team uses is,  ""oh well that's future dev's problem"".

For the error handling, that seems pretty bad but again it varies.  It's not that you're going to get just HTTP errors (I mean, you might - some flaky wifi or network conditions on client machines might not even result with a response from the back-end).  The one I'd be concerned about is type errors resulting from faulty assumptions about data, and if the underlying architecture is throwing chunks.  If the front-end just throws up it's hands, hits an unhandled promise rejection and does nothing, well that's not a problem of the back-end team - that's a shitty user experience... but maybe that's OK.  It really depends on the product you're building and the audience.

In my humble opinion, you should always handle errors in *some* way.  It may just be a console log - showing some kind of canned message to the user that something went wrong... ideally you should have some monitoring in place like sentryio so you can track and report on weird errors cropping up.  You can do all that without wrapping every network request in try/catch.  Sure, you could, but It'll just bloat the code.  Errors do bubble out - if your base error handling is bad, that's where my concern would lie.  The code in that PR may not even need to handle anything specifically if, say, an error boundary in react is doing it for you.",1.0
g2vccb9,igchw8,"If it's so obvious that this is the case, why did they decide to DM you instead of replying on the PR",0.0
g2saynm,ig9art,"You can get the extension in the marketplace [here](https://marketplace.visualstudio.com/items?itemName=hediet.debug-visualizer).

All visualizations can be used independently from this extension ([see `@hediet/visualization-bundle`](https://github.com/hediet/visualization))! You can play around with them [here](https://hediet.github.io/visualization/?darkTheme=1).

I think it is very useful to explain, learn and understand certain data structures like linked lists, arrays or ASTs.
With the table visualizer you can quickly inspect collections of similar objects. The plotly visualizer allows to plot arbitrary graphs if you ever need to.

A big thank you to my [sponsors on github](https://github.com/sponsors/hediet) who motivate me to do this and other stuff! ;)

If you like this extension, you also might like my free, open source [Draw.io extension](https://github.com/hediet/vscode-drawio/blob/master/README.md) for VS Code :)",21.0
g2t0hrh,ig9art,"Stupid question: this is super cool, and even *if* it had no practical value whatsoever, it's cool enough to be worth making anyway, but ...

... do you see a practical use for it?  Like could you describe a common(ish) scenario where this visualization would help you solve a problem?",8.0
g2t3x27,ig9art,"It actually has several practical use cases:

* I use the AST visualizer all the time when working with typescript syntax trees. Without it, I wouldn't be nearly as efficient working with the typescript compiler API. I use the compiler API for automated refactorings and for implementing ESLint rules.

* The table viewer is super useful when checking the result of SQL queries

* The graph visualizer is useful to explore arbitrary object graphs and quickly check whether they are cyclic or not

* The text visualizer is useful when you quickly want to see the content of a multi line string without any escape characters. Just select the variable and press Shift+F1. Much better than the existing watch window or the tooltip.

We used a very, very early version of this thing to debug optimizations on SSA-Graphs in our mini-java compiler. You can find a screenshot at the very bottom of [this page](https://github.com/comprakt/comprakt/blob/master/README.md#using-the-visual-debugger). Back then, it was a total hack. This extension is a proper implementation of it.

Also, I noticed me doing this:

* When I want to plot some data (e.g. a csv file), I simply create a node script, debug it and use the plotly visualizer to plot the data. Much faster to setup than anything else.",10.0
g2t4l99,ig9art,"Thanks!

(P.S. If you put those asterisks on their own line you'll wind up with much more readable bulleted lists here.)",1.0
g2t5hka,ig9art,"That's funny, they already appear quite readable to me (https://i.imgur.com/UnQBtcs.png) :D
Also, thanks for the question ;)",1.0
g2t61z7,ig9art,Weird: https://i.imgur.com/qj6zHay.png,1.0
g2t6aag,ig9art,"Ah, it's the new reddit design.",4.0
g2t9ur9,ig9art,"Interesting.  I *am* on old Reddit, and I guess you (heathen!) are using new Reddit ;)

Funny that they'd have a bug in their markdown parsing in one and not the other ...",0.0
g2t8dt3,ig9art,Your Reddit isn‚Äôt parsing the markdown.,2.0
g2ta40m,ig9art,"Heh, ""my Reddit"" is just Reddit, albeit with the old interface.  It seems they've introduced some sort of bug into that interface :(",2.0
g2tcv05,ig9art,"I meant that, yes. A lot of people browse on mobile.

Reddit is not very good about keeping their interfaces consistent :/",3.0
g2sqdne,ig9art,[deleted],15.0
g2st6vi,ig9art,"Doesn't [this example visualization](https://github.com/hediet/vscode-debug-visualizer/blob/master/docs/doubly-linked-list-reverse-demo.gif) load?
Also, the Readme points to the [visualization playground](https://hediet.github.io/visualization/) where you can play with all visualizations!

If you mean `@hediet/visualization-bundle`, yeah, I should add screenshots there. However, I put a lot of effort into the playground to showcase the visualizations - otherwise, I would need to keep the screenshots of each visualization up to date. Maybe I can automate this with puppeteer.",10.0
g2uq6r8,ig9art,They loaded fine for me in the linked repo,1.0
g2ss3gr,ig9art,"Curious question... why is everything  `""kind"": { ""graph"": true }` format as opposed to `""kind"": ""graph""`?",4.0
g2stkye,ig9art,"This allows for kinded specialization that is compatible with structural typing.
E.g. there ist `{ kind: { tree: true }, root: ... }`, but also the specialization `{ kind: { tree: true, ast: true }, root: ..., source: ""..."" }`. This way, all AST visualization data can be viewed by tree visualizers too.

If you would implement this with `kind: ""tree/ast""`, the type system would not treat it anymore as `tree` data. If you do `kind: ""tree"", kind2: ""ast""`, there is no generic way anymore to check the ""type"".",6.0
g2tove4,ig9art,What a great project. Thanks for sharing!,3.0
g2srfb0,ig9art,"This is awesome. Imagine how this can be used to show how algorithm works (etc variation of sort, search, merge , find ) too.",2.0
g2sv926,ig9art,"Exactly! I think it has many use cases.
I like the multi line text visualization - this was something that I was missing in the watch window.",1.0
g2t64bx,ig9art,"I will definitely be passing this along to my son, who's in school for his CS degree. I imagine it'll be very useful for him. I'll have to play with it a bit to see where it may be useful for me on the job. Looks very cool in any case, great job!",2.0
g2sp7go,ig9art,"Holy fuck man, these sorts of things are even a thing? Wow well done",2.0
g2svfwz,ig9art,"Thanks ;)
[All the visualizations](https://hediet.github.io/visualization/) actually can be used standalone, making this extension only a simple integration project!",3.0
g2soev2,ig9art,Really cool! Great job,2.0
g2su28t,ig9art,Thanks ;),1.0
g2ss8ai,ig9art,Cool project. I wish I had that when I was learning algorithms and complexity,1.0
g2sv9wt,ig9art,Thanks ;),2.0
g2tjdnp,ig9art,Nice one u/Gehinnn love it!,1.0
g2tughw,ig9art,This is very cool. Great work :),1.0
g2u57av,ig9art,"Amazing -  cool. I wish I used the debug more. Maybe I‚Äôll find ways to work it into my workflow more now with this tool.

Thank you so much for making something like this.",1.0
g2zepkd,ig9art,"I'm pretty stubborn about mostly working on algorithm problems in a system level language, but this is pretty seductive. I'll give it a try",1.0
g2t7poo,ig966m,Im not sure what this is supposed to be for? It just looks like JavaScript.,1.0
g2thyzh,ig966m,"It looks like a a stripped-down version of Javascript. No \`class\` keyword, no \`function\` keyword, no \`if\`, \`for\`, or \`while\`, etc.. I think they are going for the smallest subset of Javascript they can get away with to make writing config files less painful? It seems pretty arbitrary at first glance, but I get how a less general-purpose language might have benefits.",1.0
g2tkztk,ig966m,"There's lots of advantages to a config language not being Turing complete.  Or more to say, lots of disadvantages to one that is.  The Halting problem implies there's a lot you can't statically prove, because just as you can encode any Turing machine you want in a TC language, you can also ""smuggle in"" semantics other than nontermination.  Taken less absolutely, it just means it's buggeringly hard to statically validate a configuration because there's an infinite number of ways to express it. 

But it has arrow functions, so all those static guarantees go out the window anyway üôÑ",2.0
g2toinh,ig966m,"Aha! I couldn't put my finger on it, but that is what was bugging me. There *are* advantages to having a less general-purpose language, but having functions basically eliminates the biggest one. Their language has just enough stuff to build a Turing machine, but not enough stuff to be convenient or comfortable, which is why their choices seem arbitrary and strange.",1.0
g2tqgkk,ig966m,"I suspect it boils down to ""JS is bloat lol""",1.0
g2tjlqv,ig966m,You should get Magento to implement this and get them to get rid of their XML layout system!,1.0
g2uxj23,ig966m,Literally anything would be better than what Magento gives,1.0
g2uoow6,ig7f8y,I think you may have posted to the wrong subreddit.  Titanoboa is Java.,1.0
g2xzawb,ig7f8y,Well isn‚Äòt this a classic one :D,1.0
g2r5byj,ig22lh,Also see [dot-prop](https://www.npmjs.com/package/dot-prop).  I use this module a lot.,3.0
g2r8211,ig22lh,"Oh nice, I have never seen this one before",1.0
g2rjy57,ig22lh,"&gt; Rmember, this

Typo


What happens when one inputs: `'${i.dont.exist}'` or `'use ${} for JavaScript interpolation'`...",3.0
g2qdmxp,ifxvo0,"BTW it's not my video.

The author is one of the lead engineers at Mongo.",53.0
g2qo5s1,ifxvo0,A summary for those of us who don't want to watch a video to see whether it's worth watching?,41.0
g2qulhi,ifxvo0,TL;DW: GraphQL is cool and has some amazing features for the front end but the server implementation is difficult. Ultimately the author of the video believes that GraphQL solves Facebook-scale problems which most people (and himself) do not have.,109.0
g2rk8pz,ifxvo0,"To me, even using GraphQL like a REST API gives advantages, type safety and built in documentation is amazing and much better than maintaining a seperate Swagger implementation. From there it's only benefits in optimisation",28.0
g2rovpu,ifxvo0,You could generate the Swagger interface automatically.,25.0
g2rte0u,ifxvo0,"Yep, and also a client in your favorite language.",10.0
g2rwc09,ifxvo0,"I think that it is a bad practise, in my work produces errors in the worst time. A part of a lot of discussions from front team and back team ""why you rename the model of this service"" ""because versioning, the app team has not a mandatory version"".

After a lot of hate, backend in all teams avoid to use swagger.",-11.0
g2rzx70,ifxvo0,"That is not GraphQL's fault though.. if your team isn't willing/able to adept to new tools, it's not the tools who are to blame.",7.0
g2u6fly,ifxvo0,"I'm always amazed at why people use GraphQL even though they only need to communicate between a single frontend and a single backend.

For such cases RPC is much simpler, e.g. [Wildcard API](https://github.com/reframejs/wildcard-api).",2.0
g2ue2ut,ifxvo0,"What's the advantage over REST?

This seems to be a way to simply save a bit of time by not having to create routes/endpoints in the server. The logic in the route handler will be essentially the same.

Also, you need to add a client to your browser which is like 10kB gzip:

https://bundlephobia.com/result?p=@wildcard-api/client@0.3.2",1.0
g2ufl7d,ifxvo0,"Wildcard takes care of all the boilerplate for you:

* Serialization (including types such as `Date` that JSON doesn't support).
* No need to think about HTTP (what HTTP verb should I use? What HTTP status code? Etc.)
* Automatic caching.
* Supports TypeScript: you can use your backend types on the frontend!
* SSR (This is quite tricky to get right..)
* Dev tools
* Etc.",2.0
g2ui50r,ifxvo0,"Ok, the typescript types thingie is cool.

So what are the drawbacks?",1.0
g2uisy9,ifxvo0,"You'll have one more dependency.

The less dependencies the better; if you don't mind spending couple of days rolling out your own RPC thingy, then don't use Wildcard.

Otherwise Wildcard will save you time.",1.0
g2ulq9l,ifxvo0,Are there no drawbacks of using an RPC approach vs REST?,1.0
g2umvgd,ifxvo0,"Depends what you mean with REST: [https://github.com/reframejs/wildcard-api/blob/master/docs/blog/rest-rpc.md#readme](https://github.com/reframejs/wildcard-api/blob/master/docs/blog/rest-rpc.md#readme)

Strictly speaking REST denotes a REST level-5 API but many people use the term ""REST"" to denote an RPC-like API.

RPC-like and RPC are conceptually the same thing and Wildcard gives you the previously mentioned benefits.

REST level-5 has a similar goal than GQL which is to create a generic API that is meant to be consumed by lots of clients, and enable a decoupled development &amp; deployment of API and clients. See [https://github.com/reframejs/wildcard-api#wildcard-compared-to-rest-and-graphql](https://github.com/reframejs/wildcard-api#wildcard-compared-to-rest-and-graphql)",2.0
g3xo856,ifxvo0,Doesn't Prisma help tremendously in that department?,1.0
g3zp9fp,ifxvo0,"Yeah, also Hasura.",1.0
g2ryj3x,ifxvo0,"Maybe people should try dgraph, a native graphql database",-3.0
g2rz1n3,ifxvo0,"Zhenni from Dgraph here. Thank you for the shut out. We at Dgraph knew building a GraphQL backend is a pain in the butt, and that‚Äôs the problem we try to solve with Slash GraphQL, our managed GraphQL backend service. Maybe give it a try before give up on GraphQL completely? :)",-11.0
g2rpbhq,ifxvo0,"Basic summary

Pros:

* A well-defined schema of all data
* strongly typed interface to your API

Cons:

* n + 1 problem, inefficient queries if not handled correctly
* caching requires a new layer and isn't free like HTTP caching with REST endpoints
* complexity (this was primarily his major concern as I took it). everything in graphql is unique which means it comes with new problems and a big learning curve. he also said this is magnified by documentation and hype that says graphql will solve all your problems but hides all the complexity under the surface.

I personally haven't used graphql in any production environment, just in an academic sense. All the things he says in this video basically echo most of the issues I've already heard about GraphQL so nothing really surprising here and I agree with him mostly.",40.0
g2rtaal,ifxvo0,N+1 problems have existed long before rest or GraphQL. Everyone has to solve for them and they are not inherent to GraphQL.,14.0
g2s3jom,ifxvo0,"Well-formed SQL queries don't have N+1 problems. You would be amazed at the problems a good DBA can solve, and how they can format the output.",8.0
g2s841s,ifxvo0,"It's often a problem of DB structure, and for that case you're absolutely right.

But it can also be a problem with the data itself, or the way you need to consume it. And there's not much you can do to solve that kind of problems, without dealing with the inherent complexity of it.",3.0
g2st3oe,ifxvo0,"I've heard it said that ""data ages like wine, applications age like fish"". Make sure the database structure is sound before any code is written!",2.0
g3k8jre,ifxvo0,"This.


_Also, I'm stealing that sentence! But I'm changing it a little bit..._

_""Data ages like cheese, applications age like milk""_..   _Because cheese is good.._",2.0
g2snzqw,ifxvo0,"People deciding against GraphQL ""because of n+1 problems"" and building REST APIs instead crack me up. It always ends up with a cacophony of dynamic query parameters that are basically a worse version of GraphQL.",4.0
g2ssxgu,ifxvo0,"You might dig downvotes, but you'll get an upvote from me. I once saw a rest API ""optimized"" by removing the endpoint that ran specific a query that returned the results needed for a specific control with a generalized endpoint that needed to be hit N times.

I made the argument that both endpoints could exist, as the generalized endpoint is in fact nice for future expansion, but decided not to die on that hill as there were so many other hills to conquer on that project.",3.0
g2szr8q,ifxvo0,"Yes. Ever seen the JSON-API spec? It‚Äôs basically that. It‚Äôs actually not bad for what it tries to do, and it can be more compact than GraphQL, but implementing it is a nightmare.",2.0
g2t6wua,ifxvo0,"I actually had a client that wanted me to build a project with it. After some days of investigating, we decided to use GraphQL instead (it was a Rails project, and the Ruby implementation of GraphQL is fantastic.) It didn't necessarily make things _easier_ to develop, all in all, but a lot easier to reason about, extend, and maintain. Would do it again if given the choice.",1.0
g2t0dp3,ifxvo0,"It‚Äôs not how well-formed the query is, it‚Äôs the number of them executed for a single request. As soon as ORMs introduced lazy loading we started seeing n+1 problems because devs didn‚Äôt understand what their ORM was doing behind the scenes.",2.0
g2t1nit,ifxvo0,"I am aware that ORMs *can* properly load the data. I'll argue though that the percentage of developers who write SQL yet are not capable of recognizing and avoiding an N+1 issue is far, far below the percentage of  programmers who write ORM statements yet are not capable of recognizing and avoiding the issue.

Sometimes a low barrier to entry does not improve the field.",2.0
g2t2lxr,ifxvo0,"I agree with you. If your are using an ORM because you don‚Äôt know SQL you are going to run into problems.

I know SQL extremely well but I still use ORMs. Because manually writing every query and mapping  the resulting data to objects is tedious and error prone. I could write my own abstraction and make sure it‚Äôs well-tested but then I‚Äôve just written an ORM!

It‚Äôs a tool like everything else. Sometimes it‚Äôs the wrong tool but you‚Äôd never know it if it‚Äôs the only tool you know.",2.0
g2toypk,ifxvo0,"But you shouldn't compate gql with sql, they're not for the same problem domain, the question is can well-form rest queries avoid that",1.0
g2u55ro,ifxvo0,"In practice, both GraphQL and Rest APIs are used for the same purpose: To query data from the server. You see the two competing every time a team of developers has a meeting to decide which to use. The two do not solve the same problem, but they most certainly serve the same problem domain.

Rest APIs often (but not always) serve specific data not unlike a GraphQL query, just with the request forming part of the URI.

Instead of:
```
{
    foo(bar:""boom"")
}
```

One would query the endpoint:
```
/foos?bar=boom  // If expecting multiple foos
/foo/boom       // If bar is the primary key
```

There's a whole philosophy behind how the Rest API URIs should look, and you would not believe the debates people get into over them.

That said, if a control needs a very specific set of data, an endpoint could serve less generic data and serve exactly the data it needs. What would the endpoint look like then? Depends which side of the philosophy you sit on, but these are not uncommon:

```
/controls/foo_display/boom
/controls/foo_display/bars/boom
```
The response would usually be in JSON format.",1.0
g2u5rjs,ifxvo0,"Yeah, so its not about gql or rest, its about how you implement it to avoid n+1",2.0
g2w9giv,ifxvo0,"Right. The Rest philosophy might lend itself better to returning the specific data than a control might need, though.",1.0
g2whykc,ifxvo0,"Gql doesn't force you to have resolvers for all fields, thats because this is also the gql philosophy.",2.0
_,ifxvo0,,
g2ryldw,ifxvo0,Basically they are inherent to tabular structures,4.0
g2s4jv4,ifxvo0,"And dataloader resolves them all pretty well (okay, it's a bit hacky really, but it works)",1.0
g2tpdak,ifxvo0,"The first two cons can be fixed by libraries, they're practically ""free"", the last one is bs just to make a list of three reasons.",0.0
g2s3baa,ifxvo0,"After two minutes of no content I also shut down the video. The noise to signal ratio is way too high.

EDIT: After skipping around the video a bit, there doesn't seem to be any content anywhere! He talks about his cardboard boxes, and about his air conditioning. I suppose that is all supposed to be metaphors for GraphQL but I'd rather he just get to the point.

Respect my time. Don't wrap a simple idea that would fit in a tweet in a 15 minute video.",8.0
g2s6g5l,ifxvo0,"Happens way too often on YouTube. People always posting long videos with little content to cram in more ads, but I'm not seeing any ads so idk.
 The guy just wants to ramble on.",7.0
g2sf38c,ifxvo0,Well that was quite a shocking way to wake up to my face on my Reddit feed. Thanks for posting! I‚Äôm around with any thoughts people may have.,10.0
g2slyzf,ifxvo0,Thanks for an informative and interesting video. I am subbing your channel.,1.0
g2sujal,ifxvo0,So glad you enjoyed! Welcome new subscriber!! üòÑ,2.0
g2sj160,ifxvo0,dude... the n+1 problem has nothing to do with GraphQL. Saying that you have totally lost any credibility I had for you the video going in...,-3.0
g2suhcb,ifxvo0,"Not unique to GraphQL, correct! But GraphQL absolutely exacerbates the issue!",3.0
g2rdtdj,ifxvo0,"We have exclusively shipped client projects using GraphQL for the past 3 years and we loved the fact that it is very easy to build backend endpoints that are self-documented and type-safe thanks to the client codegen. It is much easier to communicate between teammates and all you have to do is to run the playground and find out what all endpoints there are.

The things we don‚Äôt like about it is how bloated Apollo is. Urql solves the problem alright but it is still much lighter to go without it.

The deal breaker for us is with a client where we initially have the graphql set up but have to start optimize the endpoint performance. In the frontend we have no control of how the client queries the backend, and most of the time it is firing multiple resolvers at a time and the server simply couldn't keep up, there was also a federated gateway that merges multiple services in front, so one of the heavy services will need to take more than one hop to get to the frontend. It will be a much easier problem to optimize once graphql is out of the picture. This project essentially makes me think twice before choosing graphql.",20.0
g2rjidz,ifxvo0,"&gt; The things we don‚Äôt like about it is how bloated Apollo is

You can use fetch (or even XHR) to make GraphQL queries, you don't need anything special.

&gt; In the frontend we have no control of how the client queries the backend, and most of the time it is firing multiple resolvers at a time and the server simply couldn't keep up

Yes, that can be an issue. Have you set up a depth limit? Otherwise any client with access to the API can crash your server with a recursive query.

https://www.apollographql.com/blog/securing-your-graphql-api-from-malicious-queries-16130a324a6b/",10.0
g2rugeo,ifxvo0,"Underrated answer! Have also just used native fetch and it‚Äôs so simple to use. Don‚Äôt bother with Apollo or urql (all clients are heavy) until you really need caching (you usually don‚Äôt, at least not at first)",2.0
g2s6jq0,ifxvo0,"I wanna ask a question that's probably stupid.

I'm thoroughly unfamiliar with GraphQL but from what I'm reading here I would imagine it as something that would make it easier to create parameterized RESTful endpoints and live between the endpoints and the database, invisible to the client.

I believe that it should not be a concern of the frontend to consider how many resolves the backed is firing.

The other argument I have for it is that (if I trust the video) GraphQL works with POST requests only thus killing the semantics and impacting the caching capabilities.

So with those two things in mind, plus the (apparently) bloated client, I'm having a hard time wrapping my head around exposing the GraphQL layer to the frontend. 

Am I missing something key here or am I onto something? Because this would tie nicely into a microservice architecture where the backend with the endpoints would be a client for the backend with GraphQL layer.",1.0
g2t3iiq,ifxvo0,"IMO if you're just considering GraphQL because it would be nice, don't do it. Use GraphQL because it solves a problem you have.

You don't need a bloated client to use GraphQL. Just use fetch, XHR, or any HTTP client. GraphQL is just strings and JSONs, nothing more.

GraphQL will give control of the queries to the client so you should be careful what you expose in your GraphQL endpoint and how you expose it (see max depth limiting).",2.0
g2s8wid,ifxvo0,"Totally agree, I tried all these libs and hated them, so much easier with fetch and your own simple caching setup",1.0
g2rtxvx,ifxvo0,"Dude - omg this is so relatable. I'm working on a project right now. GraphQL is great... Apollo and it's caching mechanics are a FUCKING NIGHTMARE. UGH. We inherited this code base but Apollo has consistently been routinely ""magic"" behavior and is buggy AF.",6.0
g2s9khz,ifxvo0,I‚Äôm curious to know what kinds of issues you‚Äôve been having with it,1.0
g2tt55o,ifxvo0,Apollo caching issues. Query vs Fragment.,1.0
g2run3f,ifxvo0,"Yeah agree with easy-to-build. Between Prisma 2 and Apollo Server it‚Äôs never been simpler to spin up a GraphQL endpoint super fast.

Only times it‚Äôs been a struggle is when you try and handroll it, or you‚Äôre building it in a language that doesn‚Äôt have a good solution (like Go or Rust‚Äîamazing, amazing languages but the GQL solutions are still in need of some maturity)",2.0
g2sweh6,ifxvo0,Is juniper not any good for rust? I have never tried it but I heard good things about it,1.0
g2uw9k1,ifxvo0,"Juniper is still a little early last time I checked (about 3 months ago), mostly around not having the nice Rust async support.",2.0
g2wdrda,ifxvo0,Ah I see good to know thanks!,1.0
g2qnfjk,ifxvo0,"GraphQL is an optimization, and like any optimization you trade one thing to get another.  GraphQL makes it *harder* to build on the server: to a server dev they are an inherently worse option.

But to a *consumer* there are huge advantages to GraphQL.  That doesn't mean everyone should use it though: as with any optimization, you only want to if you're trying to optimize for that case.",86.0
g2qottt,ifxvo0,"P.S. But if you use *Postgraphile*, you get all the benefits of GraphQL's optimization for the client ... while having to do almost zero server work; way *less* than your standard REST server.

I've found using that tool is the real sweet spot for my projects.",33.0
g2quteo,ifxvo0,Or Hasura,35.0
g2riiyx,ifxvo0,"I absolutely love Hasura, I‚Äôve been using it in a side project and can‚Äôt believe how easy it is to use and how much functionality it has.",12.0
g2rijpa,ifxvo0,Hasura is awesome,5.0
g2s2jyr,ifxvo0,"With all these new names floating around with 20+ upvotes on comments, I feel old at 24 already.",6.0
g2szg3b,ifxvo0,"I'm 38 and I just learned Postgraphile earlier this year.  You can too :)

Now to be clear, I'm *not* saying to buy into the BS myth about how you always need a side gig in addition to your main job (so that you can spend all your free time learning new stuff for your work without getting paid)!  I feel like that gets said way too often here.

But if you can find time to play with new technologies (at work, at home, wherever, just *on your terms*) ... well honestly I really do feel like learning new tech (eg. Postgraphile ... or even just GraphQL itself) is *fun*, and part of why I still enjoy this career.",2.0
g2t3tf3,ifxvo0,"No.. I totally understand that and I personally use some graphql as a frontend dev.

But the part which really intruiges me is that when these new technologies pop out of nowhere and become pretty much part of regular dev lingo is when I start feeling out of the loop.

It's a dynamic area though, so we gotta wait and watch how it grows. It'll eventually mature out and calm down.",2.0
g2s5s0y,ifxvo0,35 here and I'm feeling about ready to pack it in,2.0
g2soxwo,ifxvo0,"38 here, drinking scotch. WTF are the kids talking about.",5.0
g2sj7o9,ifxvo0,Hasura? Just two words: A Mazing!!!,2.0
g2xyw8i,ifxvo0,"Problem with Hasura, no user authentication or file upload out of the box, you need to fiddle around with remote schemas.

Would prefer a native way to solve this.",1.0
g2y660q,ifxvo0,"Yeah that's true.

AFAIK the only service that provides easy auth and file storage is Firebase. No GraphQL though which is kinda incredible in 2020.

What do you mean with ""native""?",1.0
g2y9y6k,ifxvo0,"Yeah but firebase is not something you could selfhost.

With native I meant built into the framework.",1.0
g2qzdfb,ifxvo0,"Depends, I find that it's a lot easier to optimize GraphQL than REST, especially on even remotely large projects.

REST optimization tends to look like super endpoints that are tailored to the client, GraphQL optimization is done in a more generally applicable manner that speeds up any request for that field in any context.

GraphQL libraries and tooling is still needing work though.",15.0
g2rtk6f,ifxvo0,"I year ago I would have agreed with you. I had to write a GraphQL server implementation in Python with Graphene and it was a nightmare.

Recently I‚Äôve been working with type-GraphQL (a fantastic typescript library for building a GraphQL schemas) and it‚Äôs replaced REST as my goto API pattern because it is so intuitive.",7.0
g2rsm9m,ifxvo0,"&gt;to a server dev they are an inherently worse option

I do both client and server side development, and I find GraphQL to be much better than REST on both sides. The queries are much cleaner for me on the server, each piece of data is well defined and creating the schema is pretty straightforward and simple. 

I will say that the query/mutation model isn't very good, though. I prefer HTTP verbs. And cursors for paginating are of the devil.",11.0
g2rtdsr,ifxvo0,"I'll take cursor pagination over page offset pagination any day. 

Completely avoids having the same data on 2 different API requests because a resource was added/deleted between requests.",8.0
g2rue8a,ifxvo0,"There are definitely places it's better, but for most of my use cases, having a single row duplicated or omitted isn't a big problem but not being able to traverse the pages is. 

This could just be that I've had to rely on APIs programmed by people who don't know what they're doing, though.",1.0
g2s79r7,ifxvo0,"&gt; cursors for paginating are of the devil.

what? gql is completely unopinionated when it cames to pagination, you can definitely do offset pagination with gql. none of the gql apis I work with have cursor pagination, and I work with both php (laravel/lighthouse) and nodejs based backends",3.0
g2syuzn,ifxvo0,"From https://graphql.org/learn/pagination/, the gql best practices for pagination:

&gt; In general, we've found that cursor-based pagination is the most powerful of those designed. Especially if the cursors are opaque, either offset or ID-based pagination can be implemented using cursor-based pagination (by making the cursor the offset or the ID), and using cursors gives additional flexibility if the pagination model changes in the future. As a reminder that the cursors are opaque and that their format should not be relied upon, we suggest base64 encoding them.

That's opinionated. Relay uses this behavior by default. The language supports either approach, but it's opinionated about which approach it thinks you should take.",0.0
g2w1q14,ifxvo0,It‚Äôs just best practice documentation. GraphQL itself is not ‚Äòopinionated‚Äô because it places literally no restrictions on you for either approach.,2.0
g2wbdxs,ifxvo0,"That's not what ""opinionated"" means. ""gql is unopiniated"" means that the query language itself doesn't force you to use either, and doesn't even give you clues as to which method is the preferred one.",1.0
g2rmxfs,ifxvo0,I think most ppl don‚Äôt have e,1.0
g2ri8ks,ifxvo0,Graphql makes it so backend and frontend teams can work independently. Working together to create an optimal rest API is usually the best option.,-10.0
g2rzb3y,ifxvo0,[deleted],16.0
g2s1wm9,ifxvo0,"Yeah it's kinda funny really. It's like saying, ""If a problem is not _unique_ to GQL then we can dismiss it as a valid criticism"". I agree with you this line of thinking is completely incorrect.

Let's say I eat at a diner that has cold food. Now this is not a _unique_ problem in the food industry. However, it doesn't change the fact that it is still a valid criticism of the diner that needs to be rectified.

Uniqueness of a problem does not equate to validity or value of a problem. It's a wrong-headed dismissive argument to ignore otherwise valid criticism.",5.0
g2u7qs2,ifxvo0,"so, using dataloader is not straightforward?",2.0
g2t3tmx,ifxvo0,"FYI Hasura and others have solved the N+1 problem.

https://hasura.io/blog/architecture-of-a-high-performance-graphql-to-sql-server-58d9944b8a87/

That's not say it would be trivial to solve it if you were implementing the GraphQL server yourself.",1.0
g2qlsfw,ifxvo0,"One of my biggest issues with GraphQL is not being able to easily take advantage of the built caching system in http.

CDN (and bit of browser) caching can take a tremendous amount of load from your servers if you use the Cache Control headers in the right way. Improving page load times for end users as well.

Which is very difficult to do with GraphQL without doing that ID build step thing he mentioned.

It works for Facebook I think because almost all API requests are personalized, making stuff like public CDN caching useless.",32.0
g2w1s4f,ifxvo0,"There are actually some GraphQL CDNs cropping up now which do provide public caching on top of the POST requests

Or, you can use GET and persisted queries",2.0
g2s8rng,ifxvo0,"But graphql is for data not assets, you still use a CDN for your assets so all that caching works as normal. You can also have caching on graphql fields of course but that has its own complexities. Also there is nothing stopping you having rest endpoints on your graphql server if requesting common public data would be more efficient via rest, again more complexity. Personally I think it's worth the complexity, and loved using it previously.",0.0
g2sb114,ifxvo0,"I am talking about actual data, not assets. 

We got pages where requests are handled upwards of 60% by CloudFlare during peak time. If we were to use GraphQL w/ POST, we'd be worse of in server cost and performance.

Dealing with both REST and GraphQL interchangeable would be awful in my opinion. What's the point of using GraphQL when the most popular pages can't use it because of load?",4.0
g2rbx64,ifxvo0,"Finally, something to confirm my bias.",27.0
g2r4mxa,ifxvo0,Like most things in tech graphql is a huge cargo cult.,28.0
g2qm4rv,ifxvo0,"This guy sums it up so well! I still love GraphQL but I think it‚Äôs easier to love when I‚Äôm mostly involved in front end work. I helped setup a gql backend once and it was a lot more work than I expected, initially wanted to go with Relay but noped out of that one.

FWIW I think the caching issue is largely solved by all the gql clients. Apollo and Relay both do it well, then there‚Äôs the backend agnostic libraries like react query, urql, etc that also do a really good job",5.0
g2r58zo,ifxvo0,"5 minutes in and this guy is still talking about boxes, has yet to mention to mention graphql.  I hate this world.",43.0
g2rfesv,ifxvo0,"I've ranted about this before but yeah fuck the video format. It gets abused so badly. This guy is at least trying to make analogies somewhat related to the topic. Internet marketers will just fill their shitty YouTube videos with whatever to get to 10 minutes. Gotta get that YouTube admoney bag, after all....",27.0
g2seqpi,ifxvo0,"Really, the reason is a lot more boring. I just like to talk üòÄ",1.0
g2sewt5,ifxvo0,"That's fine for like a podcast type deal. But for a tutorial of any sort it's so bloody unacceptable for people to ramble on and constantly talk about offtopic shit. A one minute video turns into 15 minutes of garbage and me trying to find the part where the uploader actually talks about the topic, waiting for buffering, having to listen to some mouth breather try and get the fucking words out.

Fuck I hate videos like that. Makes my blood boil.",1.0
g2sf0ax,ifxvo0,Not sure I‚Äôd call this a tutorial? Also people enjoy the preamble.,2.0
g2sf43n,ifxvo0,"Nah I know. I wasn't really talking about this vid specifically. But I'm sure you know the type.

""How to administer an epipen"" is the title and for some reason the video is 15 minutes and starts with ""like, comment and subscribe, check out my 2nd channel where I vlog and my 3rd channel where I do Let's Plays"" and on and on.

Point is, even in this video he takes too long to get to the point. It's fine to talk about all sorts of stuff, but one must always be respectful of the viewers time.",2.0
g2sfd11,ifxvo0,Oh yeah üíØ. Thanks for clarifying that this video isn‚Äôt the worst offender. üòÖ I will say I have definitely shortened my preambles from feedback. Check earlier videos and they‚Äôre around 30 seconds compared to the 5 seconds now lol,3.0
g2sg8za,ifxvo0,"Yeah this video is still fine, but there were points where I definitely considered either skipping through it or just not to watch it cause the pace was rather slow and it felt like you weren't going to get to the main topic.

If you're faster now, that's good. I think cutting out periods of prolonged silence is a viable idea, if they exist in your videos. Maybe even turning it up to 11 and using jumpcuts like you'd see with modern day vloggers and stuff.

Idk if you have a script, but making one would seriously tighten up the quality, since you'd be less likely to go off on unrelated tangents and stuff like that. Plus you get to polish your wording beforehand. That has value.

But I get that you might not enjoy making videos that way, instead preferring improv. Even then, maybe creating a list of talking points might be useful.

You mention that you like to talk, and that's totally fine, I'm the same way (as this wall of text shows). But even then, one must always be aware that people make the decision to dedicate their time to watching your video. As such, one must always respect the viewers time.

Maybe one last piece of advice would be to get to the main topic right away, and then, only once your done with that, talk about other stuff you've got in mind, or adding comedy skits, or whatever sounds good to you. :)

All that aside, I did enjoy the video and thought it was useful. I also enjoy the way you talk and your voice. I think with a little more practice you'll be really good.",1.0
g2sh4fp,ifxvo0,"Yeah it‚Äôs very hard to make every second fully engaging. Especially at a pace of a new video a week. 

I did have an outline of points for this video, not sure if you could tell when I was reading from my phone. Is that distracting seeing my focus move away from the camera?

I do respect my audiences time, hence my change in behavior, but I do think I have a say in what I create as the content creator. It‚Äôs an interesting (and very tricky!) conversation to balance. 

The one fear with front loading content is few people stick to the end for additional promotions. So again, some balance is what I desire. 

Thank you for the feedback! Hope you‚Äôre a subscriber üòÑ üòà",2.0
g2si8xz,ifxvo0,"All totally valid points!!

I didn't really notice you reading from your phone. But I'm usually not watching the video actively. Instead, it's on my 2nd monitor or in the background, so the audio is the main content for me.

Obviously you are the owner of your content and therefore all decision you make are up to you. I hope I didn't come across as though I was attempting to take away your autonomy and ordering you to change the aspects mentioned above. It was just feedback I had, but nothing polished, just food for thought.

Yeah I feel you on the front loading issue. Personally, I would make super short videos, with the exception of discussions or like an internal monologue, kinda like the Socratic method but on my own. Most videos would literally be 1-4 minutes long, cut to maximum efficiency.

But that's only cause I wouldn't do YouTube as a job/for any kind of serious income. For me it'd only ever be a hobby, so my content wouldn't be affected by watch time or the amount of people seeing X amount of promos. The focus would be purely efficient, high quality assistance.

And yes, I did subscribe after watching the video! üòÅ

Gonna watch some more soon, but first I got some stuff I wanna take care of.

Have a nice day!",1.0
_,ifxvo0,,
g2s1amp,ifxvo0,Yep.  Video is terrible for this stuff,4.0
g2s87sh,ifxvo0,Video monetization is one hell of a drug.,1.0
g2rfgtl,ifxvo0,"&gt; GraphQL will replace REST like MongoDB replaced PostgreSQL

\- presentation I found on the internet

EDIT: this comes across as an insult, but I think there is some good nuance to it. Both GraphQL and NoSQL have their place, but both have been really really hyped.",21.0
g2rj66y,ifxvo0,The guy works at Mongo so I would take that with a rock of salt.,16.0
g2rnor9,ifxvo0,Mongo is web scale,9.0
g2ru2g1,ifxvo0,Mongo is fine... I prefer MySQL but for the smaller projects I've done it's been great working with it.,2.0
g2set26,ifxvo0,To be clear I don‚Äôt speak for Mongo. Also I don‚Äôt say that anywhere in the video.,2.0
g2t3xuk,ifxvo0,Sorry... Since the parent commenter quoted that I thought I had missed it in the video.,1.0
g2t6gim,ifxvo0,No worries! Thanks for posting the video!,2.0
g2sjst0,ifxvo0,"Sorry, it wasn't quite clear but my quote was _not_ from the OP link. It was from another slide presentation I found somewhere on the internet and had no idea how to find again.

Also, maybe this isn't as clear devoid of context, but the point of the quote is that MongoDB _did not_ replace Postgres. So by analogy, GraphQL, despite its current hype, will probably _not_ replace REST.",2.0
g2rvtdi,ifxvo0,"The quote really sells that postgreSQL is antiquated like REST which I find bullshit. Like you said noSQL and GraphQL has their places but man, people don't know what postgreSQL can do for them. Look up at Hasura, Postgraphile, PostgREST, row level security, functions and more that I don't have the capability to understand yet.",3.0
g2r7zep,ifxvo0,I've been writing a GraphQL service in NexusJS and it's lovely.,6.0
g2s19q5,ifxvo0,Video is not the fight format for this type of info :/,5.0
g2qmccb,ifxvo0,[deleted],3.0
g2qtwsd,ifxvo0,https://github.com/dunglas/vulcain,4.0
g2qmra2,ifxvo0,"That's... actually really smart, lets you take advantage of all of the benefits of defining a graph schema and using a normal REST API.",1.0
g2qndns,ifxvo0,[deleted],0.0
g2qpfc2,ifxvo0,"""the ability to consume graphQL"", huh? Graphql is all GET/POST requests not sure what wouldn't be able to handle that but yet could handle REST.. ?",1.0
g2slyvt,ifxvo0,Isn't it just POST,2.0
g2sm0c4,ifxvo0,Nope you can use GET for better caching.,1.0
g2rkxiv,ifxvo0,"I‚Äôve used Absinthe in Elixir to develop GraphQL services for a couple years now and don‚Äôt find it particularly onerous at all.

I‚Äôll accept the Cache-Control / CDN argument for sure, but in my own apps the places where that‚Äôd help are few and far between‚Ä¶",3.0
g2ro17f,ifxvo0,"Same for graphql-ruby in a rails app. Type definitions and implementations look super clean, and mutations are really easy to follow.

Solving N+1 problems can be ugly and I'd be nervous about creating a public facing GraphQL API with it, but for internal APIs it's by far my preference over REST or custom endpoints.",3.0
g2rmjrv,ifxvo0,"Resuming:

1. GQL requires more complex programming than REST.
2. GQL can produce nested calls that could be dangerous (for security and performance).
3. With GQL you lost the HTTP VERB/action that you have with REST. (It's not clear why that is bad).
4. With GQL you need to develop a serious caching strategy.

He mentions the n+1 problem but that is not really a GQL problem.

Anyway, the two contra-arguments that I can think are:

1. We have known about these trade-offs from years now. They are mentioned in the first chapter of any GQL book.
2. None of those points are particularly hard to overcome.  GQL is more complex but not in a big way, after two weeks developing GQL, most developers get used to create schemas and mutations as naturally as with REST. There are policies to forbid nested calls and in normal apps caching is neither so hard.

I developed a middle size GQL API with Clojure in three months. After the initial learning curve it was actually pretty fun.",5.0
g2rwwwk,ifxvo0,"I agree. One more dependency down.

But I would still use it in some closed and isolated network environment like a terminal of sort.",3.0
g2s0avi,ifxvo0,So. Much. Waffle.,3.0
g2rz3zf,ifxvo0,"Most of the arguments he‚Äôs saying that there‚Äôs a lot of complexity in GraphQL, both front and backend

I think this argument can be made about a lot of things, not just GraphQL. There are complexity in the REST approach as well, just in different areas.

There are lots of libraries right now aimed to reduce complexity on the server, batching/caching for n+1, client and even type generation. As a community, I think we had figured a lot of these out and will continue to do so.

If you asked me, I‚Äôd say the benefits outweigh the complexity most of the time.",2.0
g2s8chb,ifxvo0,"Sucks the guy didn't use all the time he had to finish moving, and written a text article with the 5 minutes he had left.

Video is a very bad format for that kind of stuff.",2.0
g2sewjx,ifxvo0,I enjoy video more üòÄ,3.0
g2sgqzt,ifxvo0,"Wanna hear why I didn‚Äôt use GraphQL to begin with? 

Wanna see me do it again?",2.0
g2txhyv,ifxvo0,At work we‚Äòre currently in the process of phasing out GraphQL because it causes more issues than it solves. The previous project lead chose the technology because it is cool - bad choice.,2.0
g2ry77g,ifxvo0,"Setting up GraphQL isn't trivial. The most challenging part is the tool selection and with this, defining the entity that leads the data model: Is it the GraphQL schema, your types, your database or some esoteric proprietary DSL?

I chose my types to dictate everything as the single source of truth. From there you can derive anything with handy decorators, also your GraphQL schema (with `type-graphql`). So, you get autmagically an API by just adding some decorators. Show me something which is easier, REST is def more work in this regard. 

Some tools make the db the lead or use some propriety DSL but they didn't convince me, too much restrictions, not DRY and/or just clumsy.

Once you have such a setup and are familiar with it, IDK of any better way to structure a maintainable app.

So yes GraphQL is a PITA in the beginning but what are the options in the long run?

Re Harry Wolf: this must be kind of a click-bait content strategy (he did the same nonsense with `recoil`) or he is just an odd guy. I couldn't care less and stopped to watch him a while ago, no substance, too much negativity. I mean recoil is too easy for him, he prefers redux and graphql is too hard, yeah sure.",1.0
g2s04x5,ifxvo0,Those u-haul boxes though,1.0
g3xoj7x,ifxvo0,"I personally don't like GraphQL too much to be honest, I have used it without problems alongside Apollo and Prisma but it's too ""unique"" for its own good.",1.0
g2sumca,ifxvo0,"tl;dw; GraphQL ecosystem has a steep learning curve; N + 1 problem is a drawback for which (only?) workaround is caching\*


**disclaimer:** no experience with GraphQL; just summarizing 15 minutes spent watching a guy ranting about tech i have no experience with 



also - nothing to do with boxes so far as i can tell 


N + 1 **2c**: this appears to me to be an acute case of Law of Leaky Abstractions all technology stacks suffer from =&gt; whereby abstraction layer implementer needs to understand abstracted layer's performance caveats and circumvent them in the abstraction layer implementation; preemptively voiding them *ab initio* by understanding the abstracted layer, in the process - so the argument goes - defeating the very point of having an abstraction layer to begin with

this last tidbit i disagree with in general as tell-tale sign of some kind of a logical fallacy (not sure which) but it bears a close resemblance to what i would call a ""gross oversimplification"" stemming  from a knee-jerk distaste for new approaches (all-too-commonly-seen in programming discourse but hardly surprising given the taste we all develop for the fear of the unknown)

from first-hand experience with ORM frameworks and SQL - where i have personally seen increases in productivity many-fold despite optimization caveats - underlying SQL needs to be understood irrespective of whether or not the implementation will be from a ORM-generated SQL queries layer or a direct-to-SQL, rolling our hand-coded SQL queries ""layer""

as we came to understand in that space, having an abstraction layer does not replace understanding of the underlying layer (or excuse lack thereof, for that matter); it only automates code generation of underlying layer's code, thereby eliminating the need for repetitive tasks 

e.g. hand-coding the same 5 query lines over and over with slightly different clause input values in each - something both tedious and error prone, which also, by-the-by, often results in production system bugs difficult to diagnose, costing hundreds of productivity hours lost to tracking misnomer bugs, catastrophic system crashes with accompanying revenue income outages, and - last but not least - dangers to security and exposing of private data 

so, yes, GraphQL certainly does suffer from Law of Leaky Abstractions (as any abstraction layer would) but - from prior experience with that - this alone should not be a reason to disqualify any technology as an overall hindrance to the system design and development (as it was probably developed and serves to solve and protect the developers from a great deal of many more and far more costly problems than it, unavoidably, presents)

rather than being dismissed outright, it needs to be soberly accounted-for in the planning phase upfront, so that analysis and implementation of these shortcoming workarounds can be phased into the development, and (ideally) expressed as solution in an intermediary layer - which could then continue to be further developed separate to the business rules and concerns of the application layer 

and even, perhaps further developed into its own fully-fledged library/framework, potentially solving problems for thousands of other developers; an approach clearly taken by this crew https://github.com/graphql/dataloader - negating, in the process, the notion that explicitly rolling out your own hand-coded caching solution is unavoidable and the *de facto* standard approach which must be taken

even a cursory web search reveals a multitude of competing approaches in this space https://medium.com/@__xuorig__/on-graphql-to-sql-146368a92adc

of course, it goes without saying that any and all of this - discussions and development included - can easily be avoided by using the tried-and-tested approach, whatever it may be (in this case, by the sound of it REST?) 

i suppose my **tl;dr;** would be: universal lessons still apply despite naysayers and mistrust or general negativity about a new technology stack even if you can opt out upfront by applying ""learning is hard, let's go coding"" approach to any new development project

kind of a silly argument to make in an industry where researching new ways of doing things is kind of the main perk, if you ask me

-

^\* ^half ^of ^all ^hard ^problems ^in ^computer ^science",1.0
g2qxc0h,ifxvo0,I never saw an advantage to using it. Guess I haven't had a use case come across that is solves.,-1.0
g2r0sys,ifxvo0,Do I want to take advice from someone who appears to live in their garage?,-22.0
g2rj1a1,ifxvo0,yes,3.0
g2qgvp4,ifx1hr,"Sounds interesting, but the home page was not responsive üòë...",3.0
g2rp4sb,ifx1hr,"Seemed mostly responsive to me, but there were a few problems with things overflowing off the right edge at some widths.  Looks like it's really meant for static content, since it's basically absolute positioning on a fixed scale (namely percents).  I design apps, not pages, so I have to do layout programmatically, making this fairly useless for me.

Still seems like a decent start for a page building tool.",1.0
g2qknj5,ifwnve,"By my reading, `this` will hurt me more than it does you.",13.0
g2r28gp,ifwnve,‚Äúthis‚Äù is why we can‚Äôt have nice things,8.0
g2rgqog,ifwnve,"It's really not that bad, just because you should know the context of arrow functions vs regular functions and classes anyways...",7.0
g2qn6cu,ifwnve,"I see you thought about `class` bodies having strict mode on by default, but ES modules also have strict mode on by default. Death to sloppy mode!",7.0
g2qprti,ifwnve,"To paraphrase WarGames, the only way to win at `this` is not to play.

But seriously, it is surprisingly easy to avoid using `this` in most cases.",11.0
g2qwt25,ifwnve,Writing clean JS (to me) means avoiding ‚Äòthis‚Äô at all costs,9.0
g2sbqh6,ifwnve,So not using OOP at all costs?,3.0
g2suzlq,ifwnve,"Depends on what you mean by OOP. If you want mutable, private state with pubic methods, a closure will work and you don't have to worry about `this` binding.

The thing to avoid is inheritance, but even within OO languages the trend has been to prefer composition over inheritance.",5.0
g47umg8,ifwnve,"Tell that to my boomer boss. He ripped all my initial functional code straight out with out talking about it. Pulle the GUI  out from the URL hash Because it was a security risk (some how?) and then he pulled it out of local forage (security risk?) all the WHILE THE BEARER TOKEN IS NOW PASSED THROUGN THE BROWSERS URL AS A QUERY PARAMETER AND STORED IN LOCAL STORAGE. 

My library contributions on this project now have oop facades around functional initiation libraries. It is stupid.

Of course we didn‚Äôt talk about how we were going to do all this before the project started, and he just can‚Äôt read functional code. The rest of the devs read it no problem",1.0
g2sdqwx,ifwnve,Sounds right to me üëç,2.0
g2refgc,ifwnve,I ran into a bunch of old school legacy JS (written in jQuery) I had to upgrade to ES6 to work with our linter restrictions at work today. `this` caused me a ton of headaches today.,2.0
g2u3a70,ifwnve,The this keyword shouldn‚Äôt be a part of the language.,2.0
g2rrktw,ifwnve,no i think this is accurately estimated amount of complicated,1.0
g2rswl5,ifwnve,"Unrelated: this brings bad memories of UML, trying to stuff long text into a diamond.",1.0
g2rgj75,ifwnve,This is what I love about vue!,-2.0
g2q3h1u,iftpn3,"That's an impressive accomplishment! I do wonder why though - is the intention more of a ""I did it because it could be done"" thing or do you have a long term plan/aspiration for your language? If you do, what would be the 'value proposition'?",3.0
g2q7jwu,iftpn3,"Well, there is a scarcity of languages that can be used to target WebAssembly, isn't there? You can't even use Ada, which can even be used for OS development. And all languages you can use are C-like languages, and not everybody likes C-like syntax. It's a good thing to have a BASIC-like language to target WebAssembly, isn't it?",2.0
g2qdzvo,iftpn3,"It's like any other assembly language. Many languages like Java compile to a target virtual environment and have their own garbage collector. You wouldn't compile java to X86 code, just like you wouldn't compile it to web-assembly either.",2.0
g2qf3s1,iftpn3,"I believe it's harder to modify existing compilers to target WebAssembly than to target ""yet another assembly language"". Assembly languages generally don't complain if you, for example, call a function which returns something and do nothing with the result, WebAssembly complains about those things. These are different kinds of problems than when targeting a new processor. When targeting a new processor, you usually have to deal with not having a full matrix of conversion between types or not having a division instruction, you don't have to deal with processors doing nonsense type-checking before running your code.",1.0
g2qk3rw,iftpn3,"LLVM targets webassembly so many languages which target LLVM will work or would be easier to fix to for WA than from scratch. Also more maintainable as there are already people working on language X with LLVM. P.S. Ada targets LLVM and runs as WebAssembly.

P.S. 2 Congratulations anyway.",2.0
g2s7ths,iftpn3,"As far as I know, Ada can't target WebAssembly even for the ""Hello World"" program, GNAT-LLVM throws a bunch of linker errors if you try to.",1.0
g2pafl7,ifr8oo,"&gt; React also leads to some questionable practices. Like hovers in JS (rather than in CSS), drop-down menus in JS

I mean.. wtf? How exactly React forces you to do any of that?

Yet another ""javascript fatigue"" rant (and this guy is CTO/CPO somewhere, ugh), agreed with HN comment: 

&gt; This is the typical ""we didn't spend any time thinking about our architecture therefore we're going to blame our framework"" article.",8.0
g2phxqb,ifr8oo,"Out of all ""react speed garbo"" articles, this one is probably not _the_ worst, but way up there :O",0.0
g2p7o1m,ifr71j,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g2pdny8,ifqkus,"Nice, interesting approach using the web sockets.

For my e-paper display I have a Python script which renders an HTML page (from a jinja template) to an image (using imgkit) and then displays that image on the display.",10.0
g2p4y7k,ifqkus,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",21.0
g2pnaew,ifqkus,[deleted],22.0
g2qgi36,ifqkus,Is that so? Because if there isn't a license anywhere it's automatically protected. I better fix some copyrighted stuff then :o,2.0
g2qkh4f,ifqkus,[deleted],2.0
g2qlytx,ifqkus,Hmm interesting. So would MIT in a package.json override a non license in the repository itself? I don't license all my stuff because then it's simply copyrighted but MITis an OS license,2.0
g2qqyqd,ifqkus,[deleted],1.0
g2qsopc,ifqkus,"Makes sense, thanks !",1.0
g2q6uy3,ifqkus,"So cool!

For like 5+ years I've been really wanting to have a ""netbook"" form-factor e-ink device for coding in direct sunlight. Do you know if larger e-ink displays are available now?

Last time I checked (years ago) everything was too tiny for my ideas of a little Pi-based personal development computer set-up. I found a few larger displays, but they were either attached to expensive, uncustomizable products, or ""too custom"", e.g. I found larger screens but straight from factories in China, and poorly documente,d and I don't have time to explore that at the moment. My ideal setup would be either something alraedy as a netbook like computer as a consumer product, or something I assemble as a Pi-based computer that I run off battery and attach a portable keyboard to.",2.0
g2qdnt4,ifqkus,13‚Äù Onyx Boox Max 3 has HDMI input,3.0
g2r0rnk,ifqkus,"&gt;13‚Äù Onyx Boox Max 3

Oh wow, that looks great! Thanks for sharing this. Really cool device. A bit out of my price range but a cool device nonetheless. I wish there was something that's just the display, just for showing a terminal with SSH, and &lt;$200 and I'd get it in hearbeat....",4.0
g2pr1jl,ifpv4q,Not having the guns be on the same side means one bot will always have an advantage depending on the angle.,2.0
g2qecy5,ifpv4q,They are on the same side. On their left side.,2.0
g2qnj28,ifpv4q,"True.  The part about the angle still stands, the bullets should come out the center of the spheres and not the gun.",2.0
g2oz2w9,ifpv4q,"Project Page (?): https://github.com/oguzeroglu/kompute-demos-with-roygbiv

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g2rne0h,ifoetu,"I'm looking through it briefly, what a great book &amp; resource, and great that it's for free online in such a clean and easily navigable presentation! Thanks for sharing.",3.0
g2qmxwk,ifoetu,"I haven't read the material linked to here, but I would be very surprised if it offered more than what is located in the you-don't-know-js books by Kyle Simpson",-5.0
g2s00sp,ifoetu,[deleted],7.0
g2ssedw,ifoetu,"Please forgive me. Lemme rewrite it in a nicer way.

""if almost every single topic in the table of content interests you, and the previews of the chapters aren't enough for you, and you want to learn more, and you want a free resource, an alternative to this wonderful content can be found for free. It is called you-don't-know-js by Kyle Simpson. """,2.0
g2upls6,ifoetu,"Sounds like `Deep JavaScript` and `You Don't Know JS` are both great resources.

What a world we live in.",6.0
g2wyuf5,ifoetu,"Note that they are not previews of chapters, they are full chapters.",1.0
g2x89ub,ifoetu,"Good point. You're right.

I read this https://exploringjs.com/deep-js/ch_about-book.html#how-can-i-preview-the-content

&gt; On the homepage of this book, there are extensive previews for all versions of this book.

and thought that meant only previews were there. 
I didn't realize that 
&gt; Free to read online (except for three bonus chapters): HTML version
&gt;Previews (50%): PDF file, EPUB file, MOBI file",1.0
g2oovwa,ifn7ow,"There are many css animation libraries out there. Some of them are Greensock, animate.css, anime.js,animista",3.0
g2p12vi,ifn7ow,"Thank you for the list.  Among these libraries, are there some more inclined on the functional programming side, in their API?",0.0
g2p78c5,ifn7ow,"4 libs. Go check them out and you tell us which ones you think are functional. 
This is a lazy question. 
I like animate.css.",3.0
g2pk6z0,ifn7ow,"Sorry for the bad question.  I did my homework before asking.  I searched for hours for the blog post / tutorial I am searching, without finding it.  I also checked the 4 mentioned libraries.  None of them seem to be the one described in the article I remember.

Greensock approaches what I am looking for, but I need to see more examples of code.

animate.css is not at all of the FP kind.  You add some classes to elements to obtain the animation you want.

anime.js also approaches what I am looking for.  I prefer it to greensock, but this probably only because I don't like the web page of greensock, this feeling is not about the library itself.

animista seems to be a webpage for the creation of the CSS for the animation you want.  It is not an api.

From the 4 libraries mentionned, I would probably go with anime.js, that I already mentioned in my first post.  I need the animation to be controlled by JS, to chain animations, to make multiple animations in parallel but starting together, or adding random delays as some examples.  All that preferably with a simple FP api.",2.0
g2q0tjj,ifn7ow,"üôèüòÖ
I haven‚Äôt found any blog posts matching your description. 

Maybe check out popmotion.io ? 
They have red dots though. 

CSStricks guru Couyier has a good animation roundup but nothing about functional. 

‚ÄúFunctional CSS‚Äù makes me think of single purpose classes like tachyons, tailwindcss, and such libs. 

Good luck",1.0
g2pvvzp,ifn7ow,"You could start [here](https://css-tricks.com/comparison-animation-technologies/) by an explanation of the many ways you can animate on the Web.

Greensock &amp; their library GSAP is kinda seen like the gold standard of animation, you can see [here](https://css-tricks.com/how-to-animate-on-the-web-with-greensock/) for a good introduction. And [here](https://www.motiontricks.com/) for more examples.

They have a codepen [channel](https://codepen.io/GreenSock) and you can see plenty of examples [here](https://codepen.io/tag/gsap). Unfortunately GSAP has some paying plugins. But it has all you are asking for. Delays, etc... 

Anime.js is totally free.

That should get you started.",1.0
g340rvj,ifn7ow,Thank you all for your comments.  I will use animejs or popmotion.io.,1.0
g2ocyum,ifcis4,"This made me remember Bolt browser back in the day, that would render desktop sites on phone and pretty fast. It disappeared pretty quickly.",5.0
g2oteqi,ifcis4,"What do you mean? Bolt Browser is still available in the Apple App Store. At least on my iPhone it is.

Or is that something else?",0.0
g2p31wd,ifcis4,"Not the Bolt I was talking about, it was available back in the days before Android on J2ME phones. Read more here: https://en.m.wikipedia.org/wiki/Bolt_(web_browser)",4.0
g2p66lv,ifcis4,It really supercharged my 240x144 screen with full desktop sites. Good old days üòç,3.0
g2pblyd,ifcis4,"Browsing the web on phone was tough job, and having desktop site features was a dream. Internet speeds were clunky, but this guy would still let us do a couple of things.  ‚ù§Ô∏è 

Sadly it died, before long. ü§ß",3.0
g2pc0cd,ifcis4,"So does the Java J2ME, small screens, lower speeds.",2.0
g2pc9vv,ifcis4,"Yeah, it had to die, they didn't innovate much. There were hacks, but they weren't able to beat what Android or iOS offered in the first place.",3.0
g2p41zv,ifcis4,"Ah, gotcha! Cool piece of trivia :D",2.0
g2ola93,ifcis4,Nice job. I think you should add [datalist](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist) and preview on image choosen before it is uploaded.,2.0
g2pwafj,ifcis4,Thanks for sharing!,2.0
g2o9uox,ifcis4,Thanks for this. It‚Äôs great!,1.0
g2ow56q,ifcis4,Great Job. Thx,1.0
g2m3w6a,if70on,"[Stop touching built-in prototypes](https://developers.google.com/web/updates/2018/03/smooshgate).

Spreading the generator into an array only to use the inferior `forEach` on it is also pointless:

    for (const node of xpath(query, contextNode)) {
      node.textContent = ""Some people just want to watch the whole world burn"";
    }",16.0
g2nw1t9,if70on,"Yay XPath. 

Chrome Dev Tools has [the `$x` function](https://developers.google.com/web/tools/chrome-devtools/console/utilities?hl=en#xpath) which can come in handy when testing. 

Though better than that is the venerable `xmllint` command, which can run an XPath shell [via its `--shell` option](http://xmlsoft.org/xmllint.html#shell). 

But the important question is: will browsers ever support XPath 2.0‚ÄΩ",3.0
g2ocebr,if70on,"Also Yay XPath.

XSL templating was also once a thing of interest.",1.0
g2qvamz,if70on,"Well, that's enough of a reason for me to dust this link off, haha: https://github.com/sshaw/xslt-timecode",2.0
g2os18m,if70on,I remember xpath there is a reason it never became big. I wonder if it will get past the shadowDom? That is about the only reason I would use it.,1.0
g2p2du8,if70on,"To some extent, the queries used in document.querySelector, document.querySelectorAll, jquery selectors, CSS 3 attribute selectors are mimicking ye olde XPath queries. 

It's almost as if the world is catching up at last.

;)",1.0
g2psffj,if70on,Xpath! Party like it is 1999!,1.0
g2lllhy,if6ddg,"A Functional Programming style is seeing some significant adoption in non-traditional Functional Programming languages. JavaScript being a clear example, and the Dart language being another. Dart supports Either and Option through the Dartz package and also completely immutable collections via built\_collections, and so does JavaScript with union-type.js, immutable.js and others. I believe Dart is a very exciting language, which is not only a modern statically typed and easy to write language, but also compilable to various platforms and also **completely transpilable to JavaScript**!

The one major drawback, from a Functional Programming style perspective, of JavaScript and Dart, is that they currently don't support Tail Call Optimisation. This can change however. There is currently a new open issue with the Dart language team at [GitHub](https://github.com/dart-lang/language/issues/1159) that is discussing the benefits of Tail Recursion, the importance of Tail Call Optimisations and even possible ways to implement this into the language, compilers and transpiler (thus language guaranteed TCO in JavaScript).

Some interesting reading about the feasibility for Tail Call Optimisation is coming out in this [thread](https://github.com/dart-lang/language/issues/1159#issuecomment-678710258).

I quote a short snippet of the update:

&gt;These types of issues have been grappled with for years and numerous solutions have been implemented to work around similar constraints. Looping/Chicken Scheme/ShadowChicken/Trampoline... in various types of recursions. Compiler annotations ... to demarcate expectation so that the compiler can error if the said expectations can't be met. We can also turn to C++ compilers using loops and other TCO strategies, JavaScriptCore/WebKit having implemented ECMAScript 6 Tail Position Calls; Scala, Clojure, Kotlin that have successfully implemented TCOs by working around the JVM having no such support, ....

This is our chance to influence the Dart Language/Compiler teams to accept this feature into the Dart language and give us a JavaScript transpilable language that supports TCO. So, if you want to be able to run Tail Recursive functions in Constant Space (that is, without the fear of **Stack Overflow errors**) and those that are experimenting with/loving the Functional Programming style of coding, head on over to [GitHub](https://github.com/dart-lang/language/issues/1159#issuecomment-678710258) and thumbs-up the latest comments on this open issue and let your voices be heard.",2.0
g2nmd1y,if5yp4,"My company was thinking of doing this, but given we were already using an 8kb size image the 20% or so that is usually saved by using a webp format instead of jpeg/png was not worth the engineering man hours to implement it.",8.0
g2odpze,if5yp4,Most of the placeholder images are ~100-200 bytes.,1.0
g2nrek2,if5yp4,Good you can now use open source man hours,1.0
g2ns4w3,if5yp4,no u,0.0
g2nxkuz,if5yp4,I meant this guy's hours lol,1.0
g2on9n5,if5yp4,And I thought my commit messages were bad..,3.0
g2osi3u,if5yp4,https://classic.yarnpkg.com/en/package/commit-emoji,0.0
g2ofwmf,if5yp4,"Anyone else think that SQIP actually looks noticeably better than the other results, except maybe the autumn trees.",3.0
g2ogv7j,if5yp4,All of the LQIP results have a `filter: blur(20px)` applied. The goal is not to match the original image 1:1 but rather to provide an aesthetically pleasing loading effect.,2.0
g2oku5s,if5yp4,"Looking at the compressed file size of LQIP, it certainly looks like it's doing a better job of that than the others.",2.0
g2o1mzu,if5yp4,Do you guys prepare separate images for safari?,1.0
g2odrd4,if5yp4,There's an output option for using `jpeg` instead of `webp` if desired.,1.0
g2ougvi,if5yp4,Safari will support webp this fall,1.0
g2pn8ui,if5yp4,Yes. It basically means so that webp could be used only next year,1.0
g2ofc44,if5yp4,Should i process images on every request or make cache with low detail images somewhere?,1.0
g2ogwpb,if5yp4,I would always recommend caching for static assets like this.,1.0
g2p1fda,if5yp4,"My mistake in wording, but do you think they should be staticly saved all of them always, or just some cache for most downloaded ones with something like redis is better?",1.0
g2pa8yl,if5yp4,"Really depends on the use case; if you have a set number of static images, it's less important but if you're dealing with potentially thousands of dynamic images, then I'd recommend computing each one lazily and caching it somewhere.

These placeholders are really small, so they work well as values in a KV store such as redis.",1.0
g2nsh9i,if5yp4,"I have noticed more and more that webp is the way to go in most situations, especially now that I can easily not support IE.",0.0
g2l4wtw,if353p,"I've done it to understand the difference between the following cases:

    async function delay(ms) {
        await new Promise(r =&gt; setTimeout(r, ms));
    }
    
    function* generator() {
        yield delay(1000);
        yield delay(2000);
        yield delay(3000);
    }
    
    let start = Date.now();
    for await (let value of generator());
    console.log(`lapse: ${Date.now() - start}`)
    // Will the lapse be ~6s or ~3s here?

Creating an array from the generator:

    let start = Date.now();
    for await (let value of Array.from(generator()));
    console.log(`lapse: ${Date.now() - start}`)
    // Will the lapse be ~6s or ~3s here?",10.0
g2lhnsg,if353p,"And also, why 

```
function* generator() {
    yield delay(1000);
    yield delay(2000);
    yield delay(3000);
}
```

Behaves the same as 

```
async function* generator() {
    yield await delay(1000);
    yield await delay(2000);
    yield await delay(3000);
}
```

when used with `for await`.",5.0
g2lquvw,if353p,"The first one yields the promise returned by delay to the for await loop which awaits the promise then executes the next loop. This results in getting a promise from delay and passing it out of generator and waiting on it in the for await - 1s, 2s, then 3s. 

The second one waits in the generator function and then yields a promise that wraps the fulfilled promise, so it waits for the delay, then returns a promise to the for await which happens to already be fulfilled so it moves on immediately to the next loop. 

As you observed the net effect is the same the difference is in the stacking of the promises and where the waiting of the promises occurs.",8.0
g2mx9aw,if353p,"&gt; so it waits for the delay, then returns a promise 
&gt; to the for await which happens to already be fulfilled 
&gt; so it moves on immediately to the next loop.

Here's my version of the timeline. The async generator can be rewritten like this without `await`:

```
yield new Promise(r =&gt; delay(1000).then(v =&gt; r(v));
yield new Promise(r =&gt; delay(2000).then(v =&gt; r(v));
yield new Promise(r =&gt; delay(2000).then(v =&gt; r(v));
```

These are the promises that [get returned from `gen.next()`](https://gist.github.com/noseratio/721fea7443b74a929ea93c8f6a18cec4#file-async-generator-js-L39) to the `for await` loop. So, I would *not* say they happen to be already fulfilled when they arrive at `for await`. Rather, they will be instantly fulfilled as soon as the their inner `delay()` gets fulfilled, and then the suspended flow of `for await` will resume execution and move to the next step.

Comparing that to the first part:

```
yield delay(1000);
yield delay(2000);
yield delay(3000);
```

there's essentially no difference, IMO. 

I'd say, `delay(1000)` is the same as `Promise.resolve(delay(1000))` or `new Promise((resolve, reject) =&gt; delay(1000).then(v =&gt; resolve(v), e =&gt; reject(e))`, with just a few more allocations and event loop ticks.",0.0
g2n0x29,if353p,I don‚Äôt think that‚Äôs right. Await actually waits for the promise to be fulfilled. It lets other events in the event loop run.,3.0
g2n8lqy,if353p,"&gt; Await actually waits for the promise to be fulfilled.

What do you mean by *waits for the promise to be fulfilled*?

`await` is a syntax sugar for continuation callbacks and state machines. It technically doesn't wait for anything. Rather, the state machine flow is suspended and the method returns to the caller, and on, and on up to the main event loop. 

Anything that uses `async`/`await` can be implemented without it. For example:

```
async function method() {
  for (let i = 0; i &lt; 3; i++) { 
    await something();
    console.log(""next step"");
  }
}
```

is pretty much the same as this: 

```
function method() {
  return new Promise((resolve, reject) =&gt; {
    let i = 0;
    const nextStep = () =&gt; {
      try {
        if (i &lt; 3) {
          something().then(() =&gt; {
            console.log(""next step"");
            i++;
            nextStep();
          }, reject);
        }
        else {
          resolve();
        }
      }
      catch (e) {
        reject(e);
      }
    };
  });
}
```

Unlike the `async` version, this is messy and unreadable, but it should be very close to what JavaScript does behind the scene. We've implemented a state machine for the `for` loop, that can be suspended and resumed after each step.

In this light, I believe my comment above is correct. If I was to implement `yield await delay(1000)` without `await`, that'd be:

```
yield new Promise((res, rej) =&gt; delay(1000).then(res, rej));
```",1.0
g2ndpdg,if353p,"I mean exactly what I said. Perhaps you should read the docs? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await

It WAITS for the promise to be fulfilled. I didn‚Äôt say it does so synchronously. It pauses the function execution by returning to event loop (as I said) and execution will only continue when the promise is fulfilled. So as I said if you await then the execution is effectively blocked on the await statement which then returns a promise representing the result of the fulfilled promise. So the await version of your function returns a fulfilled promise while the non await version does not return a fulfilled Promise it just returns a promise that is yet to be fulfilled. 

One slight correction - your delay function also awaits so the promise returned from delay is also fulfilled - making the discussion above moot to some extent. If you want to illustrate the difference properly your delay function should not be async/await.",2.0
g2nqhcg,if353p,"&gt; One slight correction - your delay function also 
&gt; awaits so the promise returned from delay is 
&gt; also fulfilled - making the discussion above 
&gt; moot to some extent. If you want to illustrate 
&gt; the difference properly your delay function 
&gt; should not be async/await.

To address this part, I believe that to the caller of `delay()`, there is no difference between `async` and non-async version. 

To illustrate that, the `async` version:

```
async function delay(ms) {
    await new Promise(r =&gt; setTimeout(r, ms));
}
```

non-async version:

```
function delay(ms) {
  return new Promise(r =&gt; setTimeout(r, ms));
}
```

or, more precisely:

```
function delay(ms) {
  return Promise.resolve(
    new Promise(r =&gt; setTimeout(r, ms)));
}
```

... all have the same resolution timeline. It might only be different by a few consequent ticks of the event loop, and only because any `Promise` object is always fulfilled asynchronously by the contract. 

That is, `Promise.resolve(Promise.resolve(new Promise(r =&gt; setTimer(r, 1000)))` will all be fulfilled each on its own event loop tick, but immediately after the timer callback is called.

So, I don't see how the implementation details of `delay()` change the discussion or make it moot. 

Perhaps, I'm missing something obvious, but I could not agree that a promise returned to the `for await` happens to already be fulfilled, as stated in your top-level comment. 

Rather, I believe that this promise is still *unfulfilled* when it's returned to `for await`, and it will be fulfilled 1/2/3 seconds later, a few ticks after the corresponding `setTimer` callback is called.",0.0
g2nrlwo,if353p,"There‚Äôs a really big difference to the caller - if you await inside the delay function the function will pause while it‚Äôs called delaying the execution of the caller. Conversely making it a normal function means the caller continues and the promise returned is where the delay is. 

In your trivial examples this doesn‚Äôt make any practical difference but it would be a huge difference in a real program.",0.0
g2nsnbb,if353p,"Don't get me wrong, it's quite possible that I don't have a good grasp of this, that's why I started this thread. 

So I'd appreciate if you could give a real life example. 

As I see it, both versions, async and non-async, return a `Promise` to the caller. What's happening inside is the *implementation details* the caller really doesn't need to know or care about.

Internally, I can implemented any workflow with async/await, or I can create a chain of callbacks with `then` that does the very same thing. To the caller though, it's still just a `Promise` returned from some method (`delay` in my case).",0.0
_,if353p,,
g2lrape,if353p,"I'm thinking the lapse will be 6s. I would expect `for await` not to request the next value until needed. Since `generator` is a generator function, it pauses execution until its next value is requested, meaning the next `delay` call doesn't happen until the previous one resolves.",2.0
g2mlnfw,if353p,The lapse will be 6s for `of generator()` and 3s for `of Array.from(generator())`. Here's a [runkit](https://runkit.com/noseratio/async-generators-and-for-await-in-javascript).,2.0
g2mqfb9,if353p,"Makes sense. `Array.from` will run through the generator until it finishes, meaning all the `delay` calls happen nearly simultaneously.",2.0
g2lscdm,if353p,"I've created an async await with generators and callback support

https://github.com/Almo7aya/async-await-with-generators",3.0
g2kxh8l,if0qqk,"Can we please stop using medium? They are literally hosting text and some small images. It's not like they are paying a premium price for Google's Map API yet they are only giving you like 2.3 articles per month, and that is if you signed in with a free account...",84.0
g2l0cv1,if0qqk,"I think medium is *fine* , but I think this subreddit ought to have rules against sharing paywall content.",24.0
g2rjlxa,if0qqk,"it was always inevitable, they somehow need to make money while also building their audience on the basis that they would never show ads. They should have been a bootstrapped startup if that was their goal and not taken millions in VC money. Thus the need to implement so many dark patterns",1.0
g2lsryb,if0qqk,Not to mention medium see no problem with racist content.,1.0
g2mejfz,if0qqk,What?,2.0
g2mhv8n,if0qqk,https://medium.com/age-of-awareness/yes-all-white-people-are-racist-eefa97cc5605,7.0
g2mm3u2,if0qqk,"If you ever sign up for the daily digest, you're gonna get race-baiting articles sent almost by default, even if you're subscribed topics are tech related (they have 'World' and 'Social' topics too). I've since unsubscribed because every other day, at least 5-6 of the links to articles have really loaded titles. It's not that I don't care about these subjects, but I don't care to have authors try to get a rise out of me if they actually want a discussion on an important topic.

I'm not sure why people downvoted your comment above. Maybe it's because of the recent movements... but denying the existence of race-baiting doesn't mean it's gonna go away, and in the same way, denying racism isn't gonna make it go away.",5.0
g2mnc4i,if0qqk,"These people are dead serious, and medium is doubling down on this by not only keeping article like that, but also promoting it.",6.0
g2ktg0l,if0qqk,"Ugh. Medium. It's either paywall / registration popups, or if I disable JS I can't see any code samples.",31.0
g2l53lc,if0qqk,"If you use Firefox, you can disable cookies for medium.com and you can view as many articles as you want.",6.0
g2ku2bu,if0qqk,Try opening the article in a private/incognito tab. You might be able to read it that way.,5.0
g2kza6d,if0qqk,There's extension that's prevents medium paywall popups.,2.0
g2kzkaq,if0qqk,"Or... Hear me out now ‚Äî People could just use alternatives like [dev.to](https://dev.to), hackernoon, freecodecamp etc.",20.0
g2luyw7,if0qqk,[dev.to](https://dev.to/) is great!  PLEASE use it instead of Medium.,8.0
g2ma7mc,if0qqk,"Exactly! It's made for devs/programmers. 

Medium clearly is not, it doesn't even have syntax highlighting.",2.0
g2l1zsy,if0qqk,"You can get the full text of the article [from Google cache](https://webcache.googleusercontent.com/search?q=cache:aZ7_V-dV78YJ:https://medium.com/weekly-webtips/transduction-in-javascript-fbe482cdac4d+) with javascript disabled, but I think you will find that it isn't exactly high-quality.",1.0
g2l7xce,if0qqk,And the embedded github examples won't load.,3.0
g2l6ty1,if0qqk,"Everyone complains about ads, and when a popular website finally comes around that uses the only alternative, they demonize that too. :/",-3.0
g2lmtw3,if0qqk,Anyone can have their own blog on github pages / netlify / vercel that won't cost them a dime and will be accessible to everyone.,5.0
g2lx4mq,if0qqk,Static hosting is in no way equivalent to what is offered by a service like Medium.,1.0
g2m5m7o,if0qqk,What ***is*** offered by a service like Medium?,2.0
g2m5wqr,if0qqk,"Just off the top of my head: exposure, community, and more feedback/user engagement. People don‚Äôt write articles as a public service. It‚Äôs about creating a name, reputation, and following. Platforms like Medium help with that.",1.0
g2md1a9,if0qqk,"It's quite possible that Medium offers engagement by other Medium users, but with the Medium paywall (or login wall, or whatever that thing is), I doubt there will be much engagement from the larger outside community. (I may be wrong of course; I don't know the stats.)

Which is essentially the point of the comment that started this thread. There is something profoundly discourteous in sharing links to inaccessible content. It's perfectly fine to share them within the Medium community; but from what I can see in the comments, there aren't many members of that community here.",1.0
g2mh0wl,if0qqk,"That's an argument against using Medium over other similar (generally ad-based) services. However, my argument was what services _like_ Medium offered over simple, static hosting.",1.0
g2lq6bq,if0qqk,"Not true at all, GitHub Pages, Netlify, surge.sh etc. All exist and are easy to use for anyone technically proficient enough for this subreddit. There is not the ads/paywall dichotomy that you propose, free hosting as a loss leader is the third and best way.",2.0
g2lsbj8,if0qqk,"None of those are the equivalent of a platform like Medium, which there is a lot of value in.",0.0
g2lbne4,if0qqk,"&gt; A¬†transducer¬†is a higher-order reducer or a composed reducer. A function that is composed of reducers, accepts a reducer, and returns a reducer.

Tell me again how functional programming makes code simpler and easier to understand and maintain.",33.0
g2lxepn,if0qqk,"This comment reflects a common misconception about complexity in software development.  To take a simple case, React is *not* simpler than using HTML + JS *for any given task*! It is an abstraction layer, and like any abstraction layer it *adds* complexity; it does not reduce it.

But then why on earth does everyone use React if it makes things more complex?  Well, like any abstraction layer, while it does add some overall complexity to parts of the system, in exchange it makes doing a large number of tasks within that system simpler.

Yes, React devs have to learn component life cycles, and how state changes trigger re-renders, and all that *added complexity* ... but it makes their basic day-to-day work of building a web application *much simpler* in exchange.  It's like Comp Sci 101 when you learned about storing your data in a HashMap vs. a Linked List: yes Hash Maps slows things down when you write data, but *in exchange* you get faster reading of that data.

In a very similar fashion, using functional programming principles/techniques  *does* add complexity.  It does make things harder, and if you're only dealing with simple cases that extra complexity is not worth it.  But if you're building big complex web applications you *want* to add a bit of complexity in one piece of the system to make working in many other parts of that system simpler ... and that's what functional approaches offer.",15.0
g2mf3ek,if0qqk,"It simplified my portfolio I host on GitHub. I was copying and pasting a lot for the different pages, but react made it simple to eliminate the redundant html with a client side router and it didn't affect the complexity of the existing JavaScript I had.",3.0
g2mpnd3,if0qqk,"Absolutely ... but even forgetting about React itself, *just* using React Router is introducing a whole lot of complexity that you didn't have before.

As I said, it's 100% worth it to get simplicity in other places (eg. not having to repeat code in HTML files) ... but it *does* add complexity.",2.0
g2mjwdi,if0qqk,"This is a very well written and earnest response to a comment I hadn't intended anyone to take very seriously. You are quite right, something as arcane and conceptually abstract as functional programming couldn't have maintained such a large and dedicated group of adherents over the years if it wasn't actually good for some things. Please forgive me if I occasionally mock it's abstruse lingo :)",3.0
g2mp197,if0qqk,"Forgiven ;)  And to be fair, some of the lingo *is* fairly abstruse.",2.0
g2m33hj,if0qqk,"When you say React is not simpler, is that because you are including the React source code itself in what is contributing to the overall complexity of a codebase? Or are you saying that the code that the developer is writing using React is actually more complex than vanilla JS?",2.0
g2mcgc4,if0qqk,"I'm saying that when you use jQuery, you can modify the DOM when you want, you can modify your data variables when you want, and you can do whatever else whenever you feel like doing it: there are no rules to learn, so it's simple.

With React, you have to use state variables whenever you want the variable to impact your DOM.  You never modify the DOM directly, you do it by changing state variables.  Those state variables have to be ""passed down the tree"": your `Book` component can't make a state variable and give it to the `BookList`, the `BookList` *has* to make the variable and give it to `Book`.  If you want a control to be able to set the state, you have to pass a state setter down to it.   And I could go on for awhile like this.

React *is* harder and more complex than not using React (and using jQuery, or raw DOM manipulation, or arguably even a framework like Backbone).  But again, that's all on purpose: we accept that added complexity/difficulty/new junk to learn *because* it makes developing complex web apps *overall* much easier.

Once you learn React's rules you can build complex web apps with tons of data, and never once run into (for instance) many of the ""data binding"" problems that raw JS/jQuery/Backbone/etc. apps have.  The architecture of React solves them, and makes your life simpler overall ... in exchange for some added complexity in specific areas.",3.0
g2mg4a2,if0qqk,"Ahh, okay. So I think when people state that abstractions (such as React) reduce complexity, they are talking about structural and logical complexity of the codebase itself. They aren't talking about the complexity and learning curve of the rules involved in writing the software. A more complex but well designed ruleset will in general allow for simpler and more elegant implementations.",2.0
g2o1dq5,if0qqk,"Yeah, there are lots of *kinds* of complexity. One of the types of complexity that often goes overlooked is the complexity of *finding* code.

For instance, let's say that I wrote some javascript in the super low tech way, and now I have an issue where this global variable is being modified incorrectly, but I dunno what code is doing it. It's virtually impossible, given how flexible JavaScript is, to guarantee that you've found all the places. You can't just search for the variable name, maybe we dynamically generate the variable name?

Saying that we aren't going to use global variables, only state variables, and those state variables can only be modified in a small set of places makes the code harder to *write*, but it makes it immeasurably easier to reason about in cases like that. Manually read the few places where the variable can be modified and you know you found all of the places.

Theoretically, there is a floor on how simple you can make a thing. Below that point you're really just moving complexity from one place to another. The trick is to move complexity into places where it's easier to deal with.",1.0
g2lj4es,if0qqk,They sure do like their vocabulary words in functional programming.,2.0
g2lxu0c,if0qqk,What branch of software theory doesn't?,3.0
g2lqdg8,if0qqk,What‚Äôs wrong with that? Every word there is one that the target audience of this article should be familiar with.,2.0
g2miebn,if0qqk,"I agree that transducers themselves aren't particularly useful in Javascript because they do not offer anything that vanilla ES6 iterators don't.

But the general idea behind it, ""a function that is composed of X's, accepts an X, and returns an X"" is pretty useful when dealing with combinable operators that transform data in an agnostic way. Think observables or iterator composition.",1.0
g2lp3ed,if0qqk,"Oh yes, every time an explanatory article is posted, the obligatory big-word-bad mindset in response.",0.0
g2lco92,if0qqk,"If you wanna do a deep dive on this stuff, I recommend reading [Professor Frisby‚Äôs Mostly Adequate Guide to Functional Programming](https://mostly-adequate.gitbooks.io/mostly-adequate-guide/content/).

That said, I wouldn't recommend blindly following the pure FP approach to JS development without considering the fact that, currently, it is not the idiomatic way to write JS. IMO, JS developers mostly use an imperative programming approach, with some functional and object oriented programming mixed in (though the latter is slowly decreasing, from my perspective).

What does this mean? That going full FP makes your codebase more difficult for others to work in‚Äîi.e. it makes it less readable‚Äîand readability should be a top priority.

That said, by all means go this route if you have a good reason to do so, and you have buy in from your team (or you're working solo and you don't mind that your codebase will naturally have a higher learning curve).

---

All that said, this was a good read. My one nitpick would be the emphasis given to running multiple O(n) operations being ""bad"". It's not. JS is incredibly fast and unless you're working on huge datasets, optimizing for performance over readability is not a good move, IMO.",8.0
g2ly4qx,if0qqk,"Wow, so much real-world wisdom in this post!

&gt;That going full FP makes your codebase more difficult for others to work in‚Äîi.e. it makes it less readable‚Äîand readability should be a top priority.

Amen!  Code readability should be every dev's primary focus (*even individual devs*: your own code looks like someone else's after a few months!)

&gt;My one nitpick would be the emphasis given to running multiple O(n) operations being ""bad"". It's not. JS is incredibly fast and unless you're working on huge datasets, optimizing for performance over readability is not a good move, IMO.

Double amen!  If I had a nickel for every time a web dev worried about the Big O performance of their Javascript code I'd be living on my own private island ...  but 99.99% of that code will, in it's entire lifetime, *NEVER* fetch even 1k records!  When you have no meaningful amount of data, on a modern computer, any ""Big O thinking"" is *completely and utterly premature*!",2.0
g2m6pmh,if0qqk,"Tacking on in agreement: write the code to be readable and if it's too slow optimise at that point when you have something to actually *measure*.

Pareto principle applies here as it seems to in a lot of places, 80% of your runtime is in 20% of the code (or less).",3.0
g2mu4bp,if0qqk,"It's one of those questions I always ask project managers, how many of a ""thing"" are we expecting on average, and in the maximum case.

Up to a few hundred? A few thousand? A few million?


It's such important information and so many people completely ignore it until release day!",2.0
g2m52z0,if0qqk,This is exactly where I'm currently at after 15 years in the game. 100% true. And The Mostly Adequate Guide is probably the best resource on FP in Javascript I ever came across.,2.0
g2mh14p,if0qqk,"This is a nice introduction to Clojure-esque transducers, using Javascript code to drive the point home.

I do question whether this is something that is useful in Javascript, though. We already have iterators- no libraries needed.",2.0
g2oeqwj,if0qqk,"Transducers work great in a functional programming environment, but FP in js lends itself to being hard to grok. There is a far more js-idiomatic way to do the exact same thing with the exact same benefits: generators + iterators.

```js
const data = [1, 2, 3, 4, 5];

const map = transformer =&gt; function * (iterable) {
  for (const value of iterable) {
    yield transformer(value);
  }
};

const filter = predicate =&gt; function * (iterable) {
  for (const value of iterable) {
    if (predicate(value)) yield value;
  }
}

const compose2 = (fn1, fn2) =&gt; x =&gt; fn1(fn2(x));

const pipe = (...fns) =&gt; fns.reduceRight(compose2);

const incrementBy1 = value =&gt; value + 1;
const multiplyBy2 = value =&gt; value * 2;
const lessThan10 = value =&gt; value &lt; 10;

const transform = pipe(
  map(incrementBy1),
  map(multiplyBy2),
  filter(lessThan10)
);

const result = [...transform(data)];
```

Though not immediately apparent, this has the same benefits that transduction has. Since each step of the transformation pipeline returns an iterable, and iterables are by their nature lazy, there are no immediate collections in-between each transformation step. You just have to mind converting the iterable back into an array (or whatever data structure you intend to return)",2.0
g2oiah1,if0qqk,"This comment should be the ""accepted answer""

I would also add:

\- The only mutation is happening in the iterable object- so no big if you're trying to stick to functional paradigm. Referential transparency is still preserved.

\- You can also write a single reduce generator and express all of your transformations in terms of that, if you don't like writing for loops- just like the other transducers

\- It is not any harder to reason about than the Clojure style transducer- they just compose forwards instead of backwards

\- Since you're using an iterable you don't need different helper functions to deal with different data types- just spread operator

\- This method works great with async iterators too",1.0
g2lamm9,if0qqk,"    for (var i = 0; i &lt; data.length; i++) {
        //do some stuff here
    }

I don't get why ya'll make it so hard.",6.0
g2lqyzo,if0qqk,Because using a for loop sometimes _is_ making it hard. It's nice to know all the alternatives and pick the most suitable.,5.0
g2m4s2d,if0qqk,For example?,2.0
g2mi3ry,if0qqk,"Imagine you have a list that is expressed not as an array for iterating-over, but as a stream that you have subscribed-to. A lazily-populated array, if you will.

This is the use-case the article never really covers. Certainly, if we consider the examples given, then truly the imperative alternative is much simpler and easier to understand.

But I guess the purpose of the article was to introduce the ideas in a more familiar manner. Arrays, `map`, `filter`. Most of us know those things. (Actually, I think the article was mainly written for the benefit of the author, since regurgitating what you've learned is a great way of solidifying it. It's an exercise that benefits author and reader alike.)

Anyway, for those who dabble with Streams/Observables, `map` and `filter` exist also, but their predicates don't do anything until they receive events from the stream. They're lazily evaluated, rather than as 1 of 1000 iterations in a loop.

Hopefully I haven't added to the confusion and that this explains why it can sometimes be useful to, however clumsily, ""compose"" reducer-functions, especially if you're dealing with vast datasets that are lazily-loaded.",3.0
g2mk1rh,if0qqk,"&gt;  They're lazily evaluated, rather than as 1 of 1000 iterations in a loop.

Seems to me that in that case, you'd make some kind of async while loop, and you still have the choice between just writing the logic of your program straight forward like, or being the JS Bach of composable functions.",0.0
g2mtt0j,if0qqk,"How exactly is an async while-loop ""straight forward""? We didn't get async/await until ES2017, so until a mere 3 years ago we'd have to use Promises and recursion, or an event/message-queuing system, or do the filtering on the server and have the client be as dumb as possible.

You can skin this cat however you like, but that's kind of the point I guess? We're talking about programming, and if programming was \*actually\* straight forward there wouldn't be so many ways of doing it.

Anyway, I'm not so feverish about the drive to make everything as functional as possible, but I do see the benefit, even if I'll be dead before it's realised. The point is to try and train the next generation of programmers to think as side-effect-free as possible so they can actually take advantage of all this fantastically parallel hardware we keep making, yet is still being utilised like a 1960s timesharing mainframe.",2.0
g2r1w78,if0qqk,"&gt;The point is to try and train the next generation of programmers to think as side-effect-free as possible so they can actually take advantage of all this fantastically parallel hardware we keep making, yet is still being utilised like a 1960s timesharing mainframe.

üôèüèª",1.0
g2m1sug,if0qqk,So you can spend a lot more hours debugging your code.,2.0
g2mkd4w,if0qqk,"Because for loops are needlessly verbose, don't express intent, and (more importantly) don't compose. I don't see a need for transducers themselves in JS, but the general idea behind it is useful.",2.0
g2mmg5x,if0qqk,"&gt; Because for loops are needlessly verbose

ES6 gives us this choice:

    for (let element of array) {}
    
vs 

    array.forEach(element =&gt; {})

is a difference of one character. It's a difference of ""=&gt;"" or ""of"". 

Yes, map, filter, and reduce do express intent.

But composability is clearly hiding the overall intent used in this manner.",0.0
g2mnh6z,if0qqk,"Sure, for/of loop is preferable to the old way in most cases. But that's still a lot more verbose than map(x =&gt; x + 1).

And vanilla map/filter/reduce depend on the collection in question being an array, so they're not really composable. Transducers are agnostic of data source.

Not sure if I follow what you meant by the last sentence.",2.0
g2mo953,if0qqk,"I mean that I can understand what the functions being composed do:

    const addBy1 = (x) =&gt; x + 1;
    const multiplyBy2 = (x) =&gt; x * 2;

    const getItemsBelow10 = (x) =&gt; x &lt; 10;
    const sum = (accumulator, currentValue) =&gt; accumulator += currentValue;

But now to do what you want it says:

    const mapReduce = mapperFn =&gt; combinerFn =&gt; (accumulator, currentValue) =&gt; {
      return combinerFn(accumulator, mapperFn(currentValue));
    };
    
    const filterReduce = predicateFn =&gt; combinerFn =&gt; (accumulator, currentValue) =&gt; {
      if (predicateFn(currentValue)) {
        return combinerFn(accumulator, currentValue);
      }
      return accumulator;
    };
    
    const combinerConcat = (accumulator, currentValue) =&gt; {
      accumulator.push(currentValue);
      return accumulator;
    };
    
    const transducer = pipe(
      mapReduce(addBy1),
      mapReduce(multiplyBy2),
      filterReduce(getItemsBelow10)
    );
    
    const res = data
      .reduce(transducer(combinerConcat), [])
      .reduce(sum, 0)

I could see how something like this might be very useful if your rules are data-driven, but even then... there's probably a better way to write it than this.",1.0
g2n06rh,if0qqk,"Ok I see what you mean. Yes that that example is very repetitive as well   
With native JS transducers it can just be written like:  
const map = fn =&gt; reduce((\_, b) =&gt; fn(b), null)  
const filter = fn =&gt; reduce((\_, b) =&gt; fn(b) ? b : Skip, null)  
// combinerConcat not needed- can just use spread operator  
const result = pipe(  
 data,  
 map(addBy1),  
 map(multiplyBy2),  
 filter(getItemsBelow10),  
 reduce(sum, 0),  
 values =&gt; \[...values\]  
)",1.0
g3kzxpd,if0qqk,"Not sure if you're joking but I've been triggered either way, good job. If you're serious, I think maybe you should learn why in JS, functional programming can do wonders for you in some situations. Sometimes ""harder"" makes things eventually easier =)",1.0
g2l185l,if0qqk,Personally I'm not a fan of typeacript. 98% of the time it is unnessisary and just add another layer you don't need to deal with.,-14.0
g2l5023,if0qqk,"That may be true if all you're doing is some form validation, but if you're writing actual applications, the amount of unit tests you'd have to write because you don't have static type checking, becomes entirely too unmanageable.

Also makes a whole class of bugs trivial to find and fix.

To each their own, but as soon as an application moves beyond the first simple stage, static type checking and a good test suite becomes indispensable, unless you're a full team of 10x engineers.",5.0
g2l1mul,if0qqk,"I think typescript is a decent linter (a tool that warns you about potential issues you may want to check out), but it's a terrible concept if you're actually writing new code, because it forces you to fix linter-level errors before you can actually test your perfectly valid javascript code.

First make it work, **then** worry about making it pretty, not the other way around.",5.0
g2l6bzs,if0qqk,"It doesn‚Äôt, actually. Just use ‚Äúany‚Äù a lot and add types later. There‚Äôs absolutely no downside to TypeScript at _any_ stage.",3.0
g2l1zsn,if0qqk,"I don't think typescript belongs in frontend development. It may help in node api services saving back to a staticly typed DB, but even then, the savings in using it arnt that big",-10.0
g2l6j20,if0qqk,That‚Äôs absolute nonsense. Frontend is far more convoluted and complex than backend code. It‚Äôs perfectly appropriate in both contexts.,10.0
g2l2orz,if0qqk,"Yup, pretty much that.

I *would* consider using typescript for code that is stable, but sufficiently complex that people tend to get it wrong. After the 3rd time a contributor calls it wrong, it may be time to add interfaces.
Possibly also before major refactorings. But in general, nope :).

Also, it doesn't help that typescript loads all the files by itself, even when you're using webpack loaders, so doing anything non-standard means having 2 copies of the config at best, or giving up on typescript at ..other best :D. (That's actually what I had to do for my project to support UI plugins loading javascript and dependencies from other paths.)",-5.0
g2kbzwq,iexd64,You made an enum?,2.0
g2kclyk,iexd64,Yeah pretty much.,4.0
g2ojdi5,ieqejo,"As far as articles go, it's nice. But if we're talking about the ""monads in JS "" genre there are quite a few problems with it:

\- Article unnecessarily explains why they might actually be useful in a practical context

\- Missing obligatory type signatures copied and pasted from another tutorial

\- Missing definition of endofunctor copied and pasted from Wikipedia

\- Article fails to claim that using this pattern automatically gives JS code some degree of correctness, despite JS not having any ability to validate that",2.0
g2mvpdi,ieqejo,"Thank you kindly for the article. Very nicely written. Just one comment:

&gt; Well, replace `whenExistsMerge` with `then`, and you're on a road to discover `Promise`, which is also a monad. Kind of (2).

I think a lot of confusion about ""intuiting monads"" could be alleviated by starting here. A monad is just a fulfilled `Promise`.

Okay, well, it can be more than that. But to give people on a JavaScript-forum a fighting chance to get deeper on the topic I think it's a good place to start! :)",1.0
g2q7fxk,ieombv,"Cool idea! Did you make this?

If you are open to some suggestions: I think you should open the marketing with a more clear example of what it is. It's essentially homework-style projects that you ""learn by doing"". You could even spin it as ""mini-courses"" or ""mini-workshops"" or something!",1.0
g2hxp1l,ien5a7," My motivation for this website is to try and fill a gap left by other work (mentioned in the article), and allow users to upload and draw their own fourier epicycles. The current implementation is far from perfect, but I think it‚Äôs a good start.

Anyways I had a lot of fun making it and I have open sourced the code here.

[https://github.com/trozler/myFourierEpicycles](https://github.com/trozler/myFourierEpicycles)",11.0
g2i4enf,ien5a7,"Uploading an svg doesn't work unfortunately. However, using the mouse to draw does work as expected and is really neat!",3.0
g2i5wh2,ien5a7,"My bad, I admit it is somewhat unstable. The upload feature  requires ""nice SVGs"". Those are images that are less than 50kb and can be made single path. I'm currently [svgo library](https://github.com/svg/svgo) to try and standardise all the images before I begin computing. However, even then some poorly formatted SVGs require parameter tinkering.",5.0
g52ymt5,ien5a7,"Great project! Would be cool if the SVG epicycles could also be animated, because I think from drawing simple paths I'd learn more about the epicycles than from hand-drawing free-form shapes.",1.0
g2i0vho,ien5a7,"Tried to draw a square, the program fails",3.0
g2i2nke,ien5a7,To draw by mouse or upload ?,1.0
g2idt9r,ien5a7,Mouse. I think it fails at anything that covers most of the canvas.,3.0
g2iduk0,ien5a7,"*Mouse. i think it fails*

*At anything that covers*

*Most of the canvas.*

\- Parachuteee

---

^(I detect haikus. Sometimes, successfully. |) ^[Learn&amp;#32;more&amp;#32;about&amp;#32;me](https://www.reddit.com/r/haikusbot/)

^(Opt out of replies: ""haikusbot opt out"" | Delete my comment: ""haikusbot delete"")",21.0
g2iezph,ien5a7,"Just drew a lot of squares see what you mean. Works a lot of time, but doesn‚Äôt which crosses top left area. Will try and get it fixed",3.0
g2iunmh,ien5a7,This. If I draw anything larger than about half of the canvas size it really doesn't like it at all.,1.0
g2jegjj,ien5a7,"This is really freaking cool. Smarter Every Day did a video on using sound to generate images on oscilloscopes and that used Fourier transforms as well, I believe. It's pretty neat. https://youtu.be/4gibcRfp4zA",2.0
g2kvnf0,ien5a7,"Great project dude! I didn't find an option to change the speed, would be cool if you could add that",2.0
g2kyd1h,ien5a7,Thank you! For the adjusting the speed do you mean for mouse drawings or when uploading SVGs?,1.0
g2kmjxh,iei47q,That looks useful! It could/should be included in automated project creators like vue-cli and create-react-app,1.0
g2ktw51,iei47q,"Thanks!

Yeah, it's been really satisfying to a) have it work at all and b) handle everything using one API.

I don't use React, do you think there's any information that should be added to the readme?",1.0
g2gpz9h,ieh338,"üëâüèª [Go to examples directly here](https://davidcetinkaya.github.io/embla-carousel/examples)

Hello all,

I've been working really hard on [Embla Carousel v.3](https://davidcetinkaya.github.io/embla-carousel/) and it's finally here. Here's how it turned out:

* üëâ Even better swipe accuracy
* ‚¨ÜÔ∏è Support for vertical carousels
* üöÄ Exposing its core for maximum extensibility
* üì¶ Reduced bundle size
* üìã Brand new [documentation &amp; examples page](https://davidcetinkaya.github.io/embla-carousel)
* üíª CodeSandboxes for every example

**For those of you** **not familiar with** [Embla Carousel](https://davidcetinkaya.github.io/embla-carousel), it's a carousel I created because I was frustrated about the large bundle sizes and quality that the existing javascript carousels had to offer. Stuff like poor touch/swipe accuracy and slow loop effects pushed me to try solve this challenges.

David",14.0
g2j44a0,ieh338,[deleted],2.0
g2k8mht,ieh338,"Thanks u/CheatMaple!

Wouldn't want to ruin your expectations about frontend developers and emojis, but I code backend too =P.

My guess would be that frontend developers are generally more interested in UX and interfaces (or visual communication if you will), and they need to pay attention to these things on a daily basis in order to achieve good results. But I don't have any studies or numbers to back this up though, so I'm just guessing. In my case, I used emojis for the bullet points to make the list more visually appealing I guess (although I didn't explicitly think ""How do I make this more visually appealing to consume"").

Does this make sense to you =)?",3.0
g2kgnz4,ieh338,[deleted],2.0
g2m34dg,ieh338,"I see u/CheatMaple. Well that's totally fine and maybe you're right. I haven't thought about the extent of emoji use up until now. Good thing the [Embla Carousel documentation](https://davidcetinkaya.github.io/embla-carousel) doesn't use a single emoji then ;-).

Cheers!",1.0
g2h387p,ieh338,[A small 2d raycasting simulation.](https://aydencook03.github.io/simulations/raycasting.html),6.0
g2hbnlz,ieh338,"Cool, nicely done =}!

Just a thought: You could prevent the body from scrolling while moving the pointer on touch devices for a slightly nicer experience.",1.0
g2hcm6t,ieh338,"I'm working on my Discord Bot, I.R.I.S. Utilities, a music / utility bot.

I recently made I.R.I.S. open-source.

You can check it out here: https://iris-utilities.com/
 
(The GitHub is at the top of the website)",2.0
g2hd6rz,ieh338,"Nice, I'll make sure to check that out!",2.0
g2hfmgr,ieh338,"In preparation for interviews/apply to jobs, I updated my Github README and added a fancy graphic.

The graphic looked really cool, so I made a general / re-usable repo for making üî•Github README graphicsüòÄ

https://github.com/bleafman/spicy-readme-graphics",2.0
g2hl62v,ieh338,"I've worked on a plugin for figma that generates material ui palettes. This week I published version 2.
https://www.figma.com/community/plugin/799767414861565467/Material-palette",1.0
g2hp1ok,ieh338,"I made a subreddit for popular posts on dev.to, check it out: r/DevTo",1.0
g2hrude,ieh338," 

Build my first MERN stack Project

A Trello Clone - Built with React, Redux, Express, and MongoDB. 

Website \[Desktop Only\] - [https://trellis-app.herokuapp.com](https://trellis-app.herokuapp.com/) 

Not responsive yet. Demo Account - Username: gozmit, password: gozmit

Repository - [https://github.com/ayushagg31/Trellis](https://github.com/ayushagg31/Trellis)",1.0
g2jw2lw,ieh338,Very cool! I've been working on something similar using react-beautiful-dnd,2.0
g2jvc2b,ieh338,"Hi all,

I have made a node CLI library to remove all node_modules in the system. 

It identifies the unused node_modules of NodeJS applications. based on last used by days and provides the details

1.  When the project was last used.
2.  How much memory node_modules taken.
3.  Remove those node_modules from system.


[mo cli](https://github.com/uttesh/mo)",1.0
g2k2ek8,ieh338,"Worked on creating a package to handle twitter login

[https://www.npmjs.com/package/twitter-login](https://www.npmjs.com/package/twitter-login)

[https://github.com/knitesh/twitter-login](https://github.com/knitesh/twitter-login)

This package can be used to retrieve a user access token for Twitter, which can be later used to making read/write API calls to Twitter.

Still working on documenting and uploading a sample application for it. This is my first nom package ever, so any feedback is really appreciated.",1.0
g2negkx,ieh338,"I started creating a website for different tools. I started with the word count tool (of course it is not new and many already exists on the web, I just want to create one), And would like to continue working on different JavaScript and other tools. Here is the link to my work. [http://www.toolbow.com/word-count/](http://www.toolbow.com/word-count/)",1.0
g2gqnov,ieh0bf,[deleted],43.0
g2gugtl,ieh0bf,"When I read 'magnitudes of times', I was expecting at least 10x, not 0.5x",17.0
g2gvd8z,ieh0bf,[deleted],10.0
g2hvo86,ieh0bf,A....minitude?,5.0
g2grlhx,ieh0bf,Yeah seems odd to claim it being so much faster then have a table showing it to be the slowest. Maybe the table is incorrect?,7.0
g2ht3ot,ieh0bf,Where is this table located if you don't mind linking me?,6.0
g2hue7v,ieh0bf,[deleted],13.0
g2hv9oj,ieh0bf,Oh dear,10.0
g2jerjx,ieh0bf,Not that I see a reason to ever use this but the fact that this happened instead of owning up to it pretty much puts the final nail in the coffin.,3.0
g2iifn2,ieh0bf,"""They didn't like us talking about it?"" You pointed out an issue in the benchmarks. I changed it. Your claim was over. Now you're telling me what I like and not? Assumptive indeed.

Also, who is ""us?""

This sounds more like a **cynical coalition of miserable haters** than someone presenting a genuine question or constructive criticism.",-18.0
g2ijmts,ieh0bf,[deleted],11.0
g2ikv87,ieh0bf,"I see where you're going with this. I won't give you what you expect. I just wonder though, how many pats do you get on your back for such devoted acts of hatred?",-22.0
g2ilxnk,ieh0bf,[deleted],15.0
g2imz9r,ieh0bf,"Playing victim now, huh? You were literally using terms like ""shamelessly"" and ""shit version of"" (to be specific) to represent your views. Are you gonna pretend like those are the right choice of words for constructive criticism?",-17.0
g2jvks5,ieh0bf,You look very childish right now.,5.0
g2ictjz,ieh0bf,That is...quite embarrassing.,6.0
g2hg79j,ieh0bf,"The example in the readme has 2 very big ""please no""s :  


* A GET with a side-effect
* A Stateful API",26.0
g2hrpev,ieh0bf,"Yeah, that's what hooks are for. For managing state. I guess that's part of the reason why this hasn't been done yet.",5.0
g2gmns1,ieh0bf,But why? I'm sorry but I don't see the problem this solves,16.0
g2grms2,ieh0bf,I just went through the entire readme and am still trying to figure that out.,14.0
g2h7zei,ieh0bf,"I brought this up in another thread about a ""new fast lightweight and just best"" React state management library. 

These projects are cool for educational purposes and to potentially show off to hiring managers, but not much else. I'm happy to see somebody share something they built and are proud of, but not as a viable alternative to pre-existing solutions.",11.0
g2hbtx5,ieh0bf,"As I said in another thread, I wince every time I hear a junior dev announce they've created the newest/best version of ______.  Even though it *is* exciting to see someone passionate about their craft, and investing in a project.

The thing is, once in a blue moon they're right: the Babel guy started the project at the end of high school, and I think Dan Abramov made Redux pretty young ... but even then, those were arguably brand new libraries, not ""a better _____"".

99 times out of 100 (if not more) a junior just *thinks* they've made a better ____ ... when really they're just to junior to understand why it's not really better.  When we're juniors we think we know everything, but we just don't know what we don't know :)",15.0
g2ihz54,ieh0bf,"I think I remember you from somewhere. Still angry after you embarrassed yourself? Maybe the ""junior"" mentality is just a reflection of what you really are, given that you haven't built anything and aren't improving.",-9.0
g2iliox,ieh0bf,"I'm not ""angry"" about anything; if you're reading that into my posts, it seems that's on you.

On the contrary, my current job (after a decade of leading teams in Silicon Valley start-ups) is creating new junior developers at a coding boot camp.  Pretty clearly I have nothing against juniors :)

However, in my career I *have* seen many ambitious juniors not understand their own limits, and what massive effort goes into building a successful library.  It was that experience which motivated both this post and the previous one (the one in another thread you refer to).",10.0
g2j454s,ieh0bf,Man this whole thread got real sad real fast. Kind of proves both of our points though :/,9.0
g2in8h2,ieh0bf,"So, ""after a decade of leading teams in Silicon Valley start-ups"", you still have the *junior* mentality, right? Those decades mean nothing if you keep degrading yourself like that.",-8.0
g2indpn,ieh0bf,"What are you even talking about?  How am I ""degrading myself""?",9.0
g2iojim,ieh0bf,"Maybe you consider yourself a ""junior"" developer, so every project that doesn't meet your standards simply become a result of a ""junior"" developer's work. Seriously, at least have some self-appreciation.",-4.0
g2j8y6k,ieh0bf,"You're not doing yourself any favors here, please try to calm down a little bit.",10.0
g2i6k0r,ieh0bf,"&gt; Nest is a large Web framework built from many components and extendible. Redia is lean and allows extendibility via hooks.

Yeah, you're telling me. It's literally a few lines of code that mash the http module and TNG-hooks together; and for no good reason as far as I can tell.

I can understand making projects like this as a learning exercise (maybe), but putting up this glued-together ""framework"" and framing it as a solution compared to an _actual_ production ready framework that others have poured thousands of man-hours into... it just makes you look silly.",13.0
g2ihnho,ieh0bf,"Can you point to the exact place where you came to the conclusion that Redia is 'framed as a solution compared to an actual production ready framework'?

""That others have poured thousands of man-hours into?"" If those hours were wasted crafting half-witted solutions, it can't be helped but present a much decent approach.

Express is way smaller than Nest (like, literally a few files), yet is production ready. Your analogies are weak and your claims false. Learn to read more.",-5.0
g2hfry7,ieh0bf,"This is the first time I see a JS framework calling itself ""reasonably fast"", given that ""blazing fast"" is our current standard, I'm guessing this gotta be super slow",12.0
g2ihxd8,ieh0bf,"It looks like the implementation only allows for in-memory persistence. This is a super weird feature of a web app's back-end. Usually you want data persistence to be maintained in a database. If there is a server refresh, or even different instances under your load-balancer, you typically want data to persist and remain consistent. Is there a use-case where you want all the functionality in your API to have data persist for only as long as the process is alive?",5.0
g2ii9bh,ieh0bf,[deleted],5.0
g2iitua,ieh0bf,Please give me one reason why you're conducting yourself in such a hostile manner.,-3.0
g2ijq2p,ieh0bf,[deleted],6.0
g2j8nrr,ieh0bf,"That was a pretty inflammatory statement to make of someone else's work, as if you were trying to provoke a reaction -- there are many other ways the same opinion could've been diplomatically expressed. 

In the interest of [""Remember the human""](https://www.reddit.com/wiki/human_reddiquette), please try to remember that there is, indeed, another human you're interacting with.",5.0
g2jf47p,ieh0bf,"Is it worth having a thread about posts like this? I am on the side of sharing cool libraries and solutions people build, but I've seen an uptick in the amount of people posting GitHub links to ""The new best and fastest *"", instead of, ""Here's a thing I built, please provide feedback"" 

Not sure if that's worth anything, but this is a pretty toxic thread and I've seen more of this lately.",7.0
g2ne311,ieh0bf,"By thread, are you referring to this conversation chain, or this post?",1.0
g2nef84,ieh0bf,"By thread I mean this post, not this conversation chain.",1.0
g2nf4n7,ieh0bf,"Ok, then can you please explain your criticism? OP shared a thing they made using an objective title. I'm not sure what more we can do.",1.0
g32n71m,ieh0bf,Still waiting for a reply :),1.0
g2jc6ke,ieh0bf,[deleted],4.0
g2lff2x,ieh0bf,"Yes, I'm well aware of what's transpired in this post.

It's irrelevant, though; regardless of OP's behavior, it doesn't give you license to treat them any differently.",1.0
g2hmykr,ieh0bf,"I just realised, I don‚Äôt promote my stuff as much as people do on here.",4.0
g2hpg14,ieh0bf,"Pretty cool library. After all, if hooks are useful in front-end, there should be no reason for them not to be useful in the back-end.",-8.0
g2mpbua,ieh0bf,"If hammers are useful for nails, there should be no reason for them not to be useful for screws.",1.0
g2f6jw2,ied2yt,"&gt; isComputerOn()		returns true if computer is on , otherwize false

Is this another one of these troll modules?",5.0
g2ffir8,ied2yt,*no*,3.0
g2hfp7z,ied2yt,"I don't know why a lot of this was made. If it was for learning, awesome. But some of the stuff is really weird. And some of it is duplicates of core JS stuff.

https://www.w3schools.com/jsref/jsref_isnan.asp",0.0
g2eszij,iecc7k,"If anyone is wondering how the rays work, I won't mind to explain it.

Also, the code can be found [here](https://github.com/aydencook03/aydencook03.github.io/blob/master/simulations/raycasting.html).",16.0
g2ggxlc,iecc7k,"That‚Äôs really cool, would you mind explaining how it works a little?",5.0
g2gja9r,iecc7k,"Each ray object has a method that takes in a boundary object, the boundary object has a start x and y, and an end x and y.  The ray has a start x and y, an angle, and a length.

To do the actual calculation between the two I just used the positions of the end points of the ray and boundary, found the slope between the points, and then converted their lines into a slope intercept line equation.  Then I found the solution to the two line equations to find the x and y coordinate that they would cross... If that coordinate was on the ray and the boundary, the collision happens and I shortened the length of the ray to the distance from it's start to the point of collision.",9.0
g2hzsvv,iecc7k,"Using slope intercept form breaks down for the case of vertical rays (your code has to account for this on line 395) and representing rays by angles requires computation of sin and cos in your cast function, which is run each frame. Trig functions are somewhat expensive in terms of CPU cycles and best avoided inside your main loop when possible. A simpler way to represent a ray is with a position vector `rayOrigin` (your start x and y) and a direction vector `rayDirection`. Then any point on the ray is given by `rayOrigin + t*D`, where `t` is some number &gt;= 0. If `rayDirection` is a unit vector, t will be the distance from `rayOrigin` to the point at `rayOrigin + t*rayDirection`. When you create your rays, you can get the D for a given angle by just doing `rayOrigin.x = cos(angle)` and `rayOrigin.y = sin(angle)`. This will make `rayDirection` a unit vector. You only need to do this whenever the set of rays is changed, so the trig functions aren't needed every frame.

Using this representation, you can use a method like this one: [https://stackoverflow.com/questions/53893292/how-to-calculate-ray-line-segment-intersection-preferably-in-opencv-and-get-its](https://stackoverflow.com/questions/53893292/how-to-calculate-ray-line-segment-intersection-preferably-in-opencv-and-get-its) to calculate the ray intersection without needing to convert the boundary or ray into slope intercept form, and without needing trig functions. The relevant function is:

    double GetRayToLineSegmentIntersection(Point2f rayOrigin, Point2f rayDirection, Point2f point1, Point2f point2)
    {
        Point2f v1 = rayOrigin - point1;
        Point2f v2 = point2 - point1;
        Point2f v3 = Point2f(-rayDirection.y, rayDirection.x);
    
        float dot = v2.dot(v3);
        if (abs(dot) &lt; 0.000001)
            return -1.0f;
    
        float t1 = v2.cross(v1) / dot;
        float t2 = v1.dot(v3) / dot;
    
        if (t1 &gt;= 0.0 &amp;&amp; (t2 &gt;= 0.0 &amp;&amp; t2 &lt;= 1.0))
            return t1;
    
        return -1.0f;
    }

This function is returning -1 whenever the ray and segment don't hit each other, and returning the `t` such that `rayOrigin + t*rayDirection` is the intersection point if the ray does hit the segment. Note that you'd have to rewrite this all in js, either creating a 2d vector class or just making variables to represent the vector components. For example, the line `Point2f v1 = rayOrigin - point1` in the code above would either translate to:

    const v1x = rayOriginx - point1x;
    const v1y = rayOriginy - point1y;

or

    const v1 = Vector.sub(rayOrigin, point1)

where `Vector` is some class/prototype representing 2d vectors. Also note that for 2d vectors `v1` and `v2`, the cross product is defined by `v1.x*v2.y - v2.x*v1.y`.",5.0
g2flovn,iecc7k,"That's pretty dope!

&amp;#x200B;

*Now do bounce lights*",11.0
g2g2bej,iecc7k,"Very cool, but I would max your amount of rays, your program runs out of memory when increasing the rays too much.

&amp;#x200B;

But it is a very nice project",4.0
g2g4gt3,iecc7k,This is the coolest programmed light mechanics I ever saw. Really amazing üëè,4.0
g2g60uf,iecc7k,"That's pretty cool! It didn't work on Firefox though, had to use Chrome.

You could add soft shadows by jittering the origin position of the light between samples up to a certain distance (bigger distances will give softer shadows). I expect that would also help reduce the moire artifacts from the rays. But that would only work if the rays accumulate/add and not paint over the top of each other completely.",5.0
g2gktyh,iecc7k,"What did it do when you opened it with firefox?  It seemed to work when I tried it, that was on mobile though.  And I might eventually try that",1.0
g2hcvt1,iecc7k,Worked for me. Firefox v79.0 (64-bit) on a Mac.,4.0
g2hglhx,iecc7k,"I'm on Firefox 79 on a Linux Desktop and it works fine for me.

(I do [force WebRender](https://www.omgubuntu.co.uk/2020/07/firefox-enable-webrender-linux) through about:config. Not sure if that has to do with it.)",3.0
g2jiq2v,iecc7k,"So I checked again on FF 79 and it's still not working for me - on every mousemove I get ""Uncaught ReferenceError: rect is not defined"" on line 51. I see rect is updated on line 165 in the function resize ... but no initial definition of it via var or let.",1.0
g2gqypl,iecc7k,But how did you get this to run so *smooth*??,3.0
g2fpiv2,iecc7k,That's really cool!,2.0
g2ghjut,iecc7k,This is amazing work üëè,2.0
g2gnf3d,iecc7k,"This is really really nice.  Immediately satisfying to use, and impressive looking.  Nice work dude - github star for you",2.0
g2gnyt7,iecc7k,"On Firefox 79 I get something akin to 5 fps.  I move my mouse, wait a half a second, then I get a [moire filled pattern](https://i.imgur.com/mUtWL5v.png).  In Chrome, it's about as real-time as it gets and [looks smoother](https://i.imgur.com/EgqCQFx.png) than Firefox albeit with a slight moire pattern.",2.0
g2h3e92,iecc7k,"Very cool, make the walls the same color as the background and you set the walls in a maze pattern and you have a pretty cool working game. You can even add zombies running after you when you shine a light on them or something. Could be a really fun game.",2.0
g2h3rve,iecc7k,"Yeah there's a lot that this could be used for.  Right now you could already draw your own maze with the draw mode, and you could set the wall width to zero for the same effect you described.",1.0
g2h6y9d,iecc7k,"I just spent the last few minutes doing that lol, hence my comment! (I just set the wall color to #000 though.",2.0
g2hh5gk,iecc7k,Very cool. Makes me want to make something like that and also as a demo I feel like playing with it gives me a lot of game or interface ideas.,2.0
g2hll6k,iecc7k,"This is insane! It‚Äôs crazy smooth on my phone (safari browser on iOS), and looks incredible. Only weird thing is moving fast is buttery smooth, but when I drag my thumb sloooowly it gets really choppy? That‚Äôs not a complaint, just my curious brain trying to put together how it‚Äôs working and what might cause that.",2.0
g2hvi6f,iecc7k,"If you use the impact points as vertices of a polygon you can draw a single polygon representing the lit area, instead of drawing each individual ray (which causes moire patterns).",2.0
g2hvzf9,iecc7k,Yeah I've actually been trying this out today.  I will fill the polygon with a radial gradient and see how it looks.,1.0
g2i3l5h,iecc7k,"Very cool, now add surface reflections!",2.0
g2i5ern,iecc7k,"Really nice! Is it possible to add diffusion? If the rays diffused (blurred/scattered) as a function of distance, it would look more realistic.",2.0
g2wjj16,iecc7k,This is fantastic.,2.0
g2gto83,iecc7k,"The raycasting was beautifully done and I love that you can change the settings.

If I were to recommend any improvements, it would be, the tap to change menu options (move to draw, draw to delete, delete to randomize, etc) seems unintuitive to me. Generally overall, the UI could use alot of improvements. Especially for mobile. 

Obviously the whole point of the project was to showcase raycasting in a browser and I love how smooth and perfect the actual physics work.
          I understand that you probably wanted to spend your time where it mattered (in the physics). I respect that, no point in a good GUI / UI if the stuff behind it is shit. üòÇ

Great job ü§£",1.0
g2esl4o,iecc7k,"Project Page (?): https://github.com/aydencook03/simulations

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",0.0
g2gcm48,iecc7k,Bad bot,5.0
g2hhezk,iecc7k,It tried :(,1.0
g2d21wv,ie1x9x,"I think this is a mistake. MDN is one of Mozilla's greatest products.

Experiment with ways to fund it. Start something similar to a Patreon or do what Wikipedia does and request funding from users.",144.0
g2dc0nb,ie1x9x,"Seriously, I think i use MDN almost every day at work. Always some quick thing I need to lookup and MDN is sure to give an accurate and concise answer.

I would be happy to donate.",94.0
g2dxug4,ie1x9x,[deleted],33.0
g2ew357,ie1x9x,"You need to update to [http.cat](http://http.cat) for that one. Fewer characters, cuter characters",24.0
g2fdml2,ie1x9x,Thank you for this üòÇ,3.0
g2dcfnp,ie1x9x,From the article it doesn't sound like they're getting rid of the MDN site or anything like that ... they're just not funding a lot of random programs that (virtually) no one actually cares about (but which were under the MDN umbrella).,25.0
g2e165n,ie1x9x,"&gt;	The other areas we have had to scale back on staffing and programs include: Mozilla developer programs, developer events and advocacy, **and our MDN tech writing**.

This is where the worry comes from, unless they‚Äôre using ‚Äútech writing‚Äù to mean something specific and not the general documentation everyone uses.",28.0
g2fih7r,ie1x9x,I'd definitely pay for MDN,6.0
g2gcakv,ie1x9x,"&gt;Experiment with ways to fund it

Mozilla is getting $400m/year from Google.... They don't need to experiment. They have the money.",3.0
g2nq7b2,ie1x9x,I thought the Google contract was about to expire. I've assumed that was the primary reason for all the announcements.,1.0
g2oafqx,ie1x9x,"It was re-upped until 2023 .... https://www.theverge.com/2020/8/15/21370020/mozilla-google-firefox-search-engine-browser

If using that revenue to fund MDN isn't worth it for Mozilla ... what is?",2.0
g2elk0x,ie1x9x,"A mistake? They say they are keeping it, and looking for ways to make sure it keeps up its quality.",2.0
g2eq0gz,ie1x9x,I know what I'm saying sucks but MDN is way more important than Firefox is nowadays. Their market share is super low and steadily going down while MDN is the most popular and reliable source of front end documentation.,3.0
g2gdgvj,ie1x9x,"&gt; Experiment with ways to fund it. Start something similar to a Patreon or do what Wikipedia does and request funding from users.

They did - it failed. https://hacks.mozilla.org/2018/10/a-new-way-to-support-mdn/",1.0
g2rk879,ie1x9x,they should take it down for a day and watch plenty of FAANG companies pony up money to support it when they see their developer productivity drop. You don't know what you've got til it's gone,1.0
g2df41v,ie1x9x,"I understand it‚Äôs just ‚Äúbusiness‚Äù, but when I think of MDN, it‚Äôs hard to not think about: 

&gt; we will be pausing support for DevRel sponsorship, Hacks blog and Tech Speakers. The other areas we have had to scale back on staffing and programs include: Mozilla developer programs, developer events and advocacy, and our MDN tech writing

... oh. All of those things!

And when a company that just let go a bunch of their staff says:

&gt; So we are working on a plan to keep the content up to date

It tells me it‚Äôs lower on the priority than actually firing the people who made it. 

Great, GitHub submissions for content updates. So, a wiki? 

I want to be wrong here, but this just seems like a bad plan. I read Mitchell‚Äôs note. A ‚Äúnew focus on community‚Äù after gutting the internal community seems counterproductive. 

Anyway, sorry for the rant. I‚Äôm sad about this.",62.0
g2eyofa,ie1x9x,MDN is already a community wiki.,10.0
g2d0yek,ie1x9x,One of the best resources :(,20.0
g2d7141,ie1x9x,"well, this doesn't sound like it's going to be a good thing.",21.0
g2f295i,ie1x9x,MDN has the best documentation. I usually search for things and add ‚ÄúMDN‚Äù to the end. I truly hope the docs don‚Äôt suffer.,10.0
g2f42kf,ie1x9x,"Maybe it‚Äôs foolish of me, but I‚Äôm optimistic that either A. The docs will continue to be awesome or B. Something the same if not better will take their place.",5.0
g2gguh2,ie1x9x,You're not alone. There is a necessity for such platforms. This is a huge opportunity for anyone interested in investing in this niche.,3.0
g2d46x5,ie1x9x,"I‚Äôve often wonder if it‚Äôs possible to make a chrome add on that redirects all w3school search results to mdn. For some reason they always come before the mdn result I want...

(Yes I know I can specify mdn in the search, but... ...you know... ...reasons...)",23.0
g2dlsp5,ie1x9x,I've been using [this extension](https://chrome.google.com/webstore/detail/w3schools-hider/cbifdjebjnindebojlhccdccmgfgccdo) for years now and I'm never going back.,9.0
g2f4ven,ie1x9x,Second this! I haven't seen a w3 schools result in search in \~7 years and it's a beautiful thing.,4.0
g2fq37k,ie1x9x,Thanks. Will check it out.,1.0
g2d5il1,ie1x9x,The w3schools of today is nothing like the w3schools of years past. It‚Äôs quite good for beginners.,13.0
g2dhd4i,ie1x9x,"Might be, but i want the facts, and mdn is a much better source for those, imho..",23.0
g2est2t,ie1x9x,"Exactly. I've found some top soil information if I need it from w3schools, but if I really need to understand what's happening below the surface, I head over to mdn.",3.0
g2gofvr,ie1x9x,It absolutely is not. The site is still closed for community contributions and all they work in is SEO optimization so they can lure in gullible people to sell them their useless certs.,1.0
g2gdpi1,ie1x9x,Or... A Firefox extension. Part of the reason Mozilla has to cut staff is because of Firefox's low market share. Support MDN; use Firefox.,3.0
g2dc9e3,ie1x9x,[removed],-8.0
g2dncbe,ie1x9x,Cool it Mr. soprano.,6.0
g2dzmar,ie1x9x,"Hi /u/fsdagvsrfedg, please refrain from personal attacks. Thanks.",2.0
g2fexl8,ie1x9x,"To be honest, and I recognise I may be in the minority here - I don‚Äôt use MDN at all.

The only exposure I get to MDN is Visual Studio Code trying to drive me there when I hover over something in the IDE.",-6.0
g2ffs1q,ie1x9x,What do you use instead?,1.0
g2fh911,ie1x9x,"Whatever Google pulls up first for me. Might be StackOverflow for some stuff, W3School for others, some random tutorial or blog post from some cracking a similar problem to mine.

I get that MDN may be curated and consistent, but I‚Äôd rather cast my net wider.",-9.0
g2chceh,idzy4v,"I half agree. Unfortunately, this allows access tokens to become long-lived.

The access token should never be stored. Whatever framework you‚Äôre using write a simple interceptor that does whatever you need with the data, put it back in the header for the next request and you‚Äôre done. 

Like the article says, the refresh token is a little more tricky and creates risk. The best way to handle them is an httponly cookie with a short lifespan. The auth server needs to take into account the possibility of, like the article points out, CSRF and enforce a strong anti-csrf policy. The auth server should also enforce accept/deny of tokens to remove the threat of token replay.",7.0
g2hf10g,idzy4v,[deleted],3.0
g2iy5w3,idzy4v,"I did not think this was the place for a claims conversation or signing, pretty much 90% of the use I‚Äôve seen is just wrong.  Shipping a use profile or whatever beyond the subject claim is misuse imho",2.0
g2bzn7y,idxw4f,"Apropos of nada, but thank you for not using Medium.",45.0
g2ca9iv,idxw4f,Thanks:),3.0
g2dg9h3,idxw4f,Whats apropos of nada?,2.0
g2dhp15,idxw4f,A pretentious way of saying OT (off-topic) :),9.0
g2ekcfh,idxw4f,"Doesn't sound pretentious when this guy says it!

https://www.youtube.com/watch?v=A_fMN9kFm14

:)",2.0
g2geejm,idxw4f,"Apropos is french of is english and nada is spanish

It might be pretentious but most of all it looks ridiculous, please don't use that.

Also there shouldn't be a comma followed by a ""but"" because you would want to translate that roughly to ""unrelated to the article itself, thanks for not using medium""

Src: I'm french english bilingual with some decent spanish",2.0
g2dopcf,idxw4f,"it kinda looks like the spanish expression ‚Äúa prop√≥sito de nada‚Äù, I guess it comes from there",1.0
g2dbk30,idxw4f,Why do you dont like Medium? Seems nice to me,0.0
g2ddz67,idxw4f,limit of articles you can read which then forces you into a paywall,12.0
g2dkiel,idxw4f,Authors have to agree to that scheme. I publish articles and I chose not to earn money with them so my articles are free to read for everyone.,14.0
g2gb5wn,idxw4f,I use private mode if i reached the limit.,2.0
g2gdckb,idxw4f,"me too, don‚Äôt like it",0.0
g2dgb5b,idxw4f,Code isnt colored,3.0
g2dhnl2,idxw4f,"They started putting content behind the paywall at random, without consulting the content creators who had previously published under the assumption that their content would be freely available.  Then when one large content creator who wanted to keep their content free (namely **free**CodeCamp) decided they'd had enough and started to move their content off, Medium started sending them legal threats.",2.0
g2dkplk,idxw4f,"Got any proof of that? Not that I don‚Äôt want to believe you, but I publish free articles too and never had anyone complain.",2.0
g2dz92x,idxw4f,"This is not exactly the same, but Medium is known to not pay writers while making their articles payware.

https://hackernoon.com/why-i-quit-my-medium-membership-909909657ba


Other one is this - https://ethical.net/ethical/ethical-alternatives-to-medium/


Essentially Medium, to me, is absolutely must avoid platform.",5.0
g2eaih7,idxw4f,"You can find a lot by googling ""freeCodeCamp copyright infringement"".  I probably shouldn't paint FCC as the lone good guy in this, because there's lots of shades of ... whatever.  My feeling is FCC was pretty slapdash about the port and a bit cavalier about the SEO issues, but still would have resolved what was basically a technical cockup in good faith, whereas Medium sprung the paywall on everyone by surprise and making it opt-out, i.e. on by default.  And there's plenty of reports that Medium basically pockets that paywall cash unless the authors actively try to claw it back.  These actions don't exactly scream good faith, if you catch my drift.

Medium's comment system is also just dogawful.  But we're OT enough as it is...",2.0
g2kkwo9,idxw4f,"If you're not paying for the product, either you or your audience are the product.",1.0
g2bugdz,idxw4f,"We wrote a [comprehensive list of Docker best practices](https://dev.to/nodepractices/docker-best-practices-with-node-js-4ln4) that are exemplified under the realm of Node.js. It covers the basics but goes all the way to strategic decisions like how much and where to limit the container's memory, how to prevent secrets from sticking to the image, is a process manager needed as the top process or can Node act as PID1?

Hope you find it useful:  
[https://dev.to/nodepractices/docker-best-practices-with-node-js-4ln4](https://dev.to/nodepractices/docker-best-practices-with-node-js-4ln4)",17.0
g2ce1uz,idxw4f,Thanks!,1.0
g2cncgs,idxw4f,:),1.0
g2clg1h,idxw4f,"I like the format here with what to do and what happens if you don't.

I've never used Docker but am very interested!",8.0
g2cn76b,idxw4f,"Thanks:)  


You should absolutely get into it...",3.0
g2cpqbe,idxw4f,It's on my list :) third baby is on the way though so RL stuff takes up a lot of time and we don't use it at work,2.0
g2d59mf,idxw4f,"Here's an advice - Forget docker for a year, focus on baby!",8.0
g2k348v,idxw4f,"Oh don't worry, babies take your focus regardless of your side project goals in my experience :):):) wouldn't change that though",1.0
g2k8r6n,idxw4f,:),1.0
g2cf6sz,idxw4f,I thought tini has been unnecessary for years. It got built into docker to do signal handling.,3.0
g2cnc1t,idxw4f,"Needed only If you spawn child processes - In that case, when the parent node process will get killed, nothing will take care to clean-up the child processes.",5.0
g2fq14f,idxw4f,But if parent gets killed the container exists as well tho? Or will it hang if children are still running?,2.0
g2k8qsl,idxw4f,"Container is just a process in the parent OS. Every child of this process are also processes in the parent OS. If the parent is killed, the child might still hang around.  


By the way, tiny is built into Docker but not in Kubernetes environment.",1.0
g2dm31g,idxw4f,"I use multistage builds as well, but I'm confused by your approach here.    Why ""npm install"" twice?    Why not npm install, then build, then npm prune --production and copy the build and the node_modules directory over?

Your approach seems to have 2 potential issues:

1.  Some npm packages require specific system libs on install.   Depending on your starting docker image this could require more to be installed on your ""run"" stage.    Now these types npm libs are typically dev dependencies, so it may not be an issue with --production, but it is possible.

2.   There is a slight chance an npm lib could be updated between your build and run stages.   The chance of this depends on how fast your app builds, but it is  non-zero chance that your app will be running on a different version than it built against.",3.0
g2f3lcm,idxw4f,2 is solved by using a lock file. Your package.json version ranges are just used during upgrade not install.,2.0
g2gif37,idxw4f,Yep.   That is my bad.  I was on mobile and didn't swipe far enough over to see the lock file being copied.  I thought only package.json was being copied.,1.0
g2gemev,idxw4f,"[Using `npm ci`](https://docs.npmjs.com/cli/ci) solves the second potential issue. It clears the `node_modules` directory and installs exactly what is specified in the lock file.

For some reason only the multi-stage example uses `npm install` instead of `npm ci`.

I don't think copying the `node_modules` folder is a good practice. Some packages have post install scripts. Binaries might be incompatible when using different images for the stages.

I use `npm ci` and sometimes copy the cache to avoid downloading everything twice.",1.0
g2k8lvt,idxw4f,"To which bullet are you referring?  


There are multiple examples, some were written by different authors:)",1.0
g2f8ttc,idxw4f,I'm not 15 yet so I guess I'll wait,3.0
g2fd6pg,idxw4f,üòÖ,1.0
g2obks6,idxw4f,Great write-up! Currently getting into docker and there's some good takeaways in here.,2.0
g2evnk5,idxw4f,Thanks for the link! I am deploying my first single page app to docker tomorrow. Do you have any resources you like for reference? Thank you.,1.0
g2k8gjq,idxw4f,"Good luck!  


I would suggest Google for basic Node.js/Docker tutorial, get it working, then visit our guide to refine",2.0
g2fmnfa,idxw4f,What do you use for building your source files?,1.0
g2k8eos,idxw4f,"Babel, TS - It's very project-specific",1.0
g2fpt99,idxw4f,Typo: `npm cache clean --force` not `npm clean cache --force`,1.0
g2k88l9,idxw4f,"&gt;npm cache clean --force

Good catch, fixed, thanks",1.0
g2h8h7b,idxw4f,I was going to throw something if tini didn't get a mention,1.0
g2k86jo,idxw4f,Tini got its honorable mention:),1.0
g5cqe5k,idxw4f,"Thanks for the article, some good tips.

I've been tyring to figure out how to implement a ""close-enough"" cache for `node_modules`, so during development you dont have to re-install all of your dependencies if you only change 1 dependency.

i.e. copy or mount the `node_modules` from the previous build for the new one.

Copying is slower than I would like. I've tried using cache mounts but the files aren't persisted to the container in the next steps so the dependencies would not be available at run-time, and that type of mount can only be used during build-time.

Have you ever done this?",1.0
g2bj9ul,idrkew,"interesting. What are the differences to other webcomponent ""frameworks"" like 
`lit-element"", ""stencil"" or ""slim""",1.0
g2bxhdy,idrkew,"The biggest difference would be the cli that drives development with the framework. In terms of the api, its another web component solution that is built a little different than the others.",2.0
g2btr5z,idrkew,How do you define component properties/attributes with this? Or is this up to the user?,1.0
g2bxr3i,idrkew,Thats primarily up to the user. The api does not provide a way to do that such as how other frameworks use decorators for that. The way ive been using it is setting attributes like any other html element and setting properties in the component constructor.,1.0
g2c2nri,idrkew,"I see, thanks for the explanation.",1.0
g2a2qf6,idmil2,"Exposing internal logic in a function's parameters is asking for trouble.

&amp;#x200B;

Why do it this way? What is the benefit? Am I missing something?",13.0
g2auuyv,idmil2,"I know this isn't code golf, but it seems like you're going for terseness, and I couldn't help myself...

    function rotateC(array) {
        return [...array.slice(1), array[0]];
    }

To address your question, though, I wouldn't advise abusing parameters like that. It's confusing and has a high potential for bugs.

edit, here's a backwards-compatible version:

    function rotateD(array) {
        return array.slice(1).concat(array[0]);
    }",11.0
g2aw9w1,idmil2,[deleted],5.0
g2irs1k,idmil2,"This is great, but I also think [u/Ustice's comment](https://old.reddit.com/r/javascript/comments/idmil2/askjs_what_do_you_think_about_copying_objects/g2cbe0h/) is underrated.",1.0
g29za1p,idmil2,"I think this second option is a bad idea because you cannot prevent someone from accidentally (or intentionally) calling your `rotateB(..)` function with two arguments, in which case your `copy` isn't what you think it is. IOW, there's no way to declare a function to have a second parameter but have tooling that catches as an error anyone passing that second argument -- there's no `forbidden` as an opposite of `required`.",7.0
g2a4tr2,idmil2,"the second way is super hacky... I doubt this would get past the worst linter on the planet, or the most hung-over code reviewer...",3.0
g2b054w,idmil2,"Just as a general principle, the structure of your code should reflect its intent.  When it doesn‚Äôt, this makes it more difficult to understand and maintain, and increases the chances of bugs.

In this case, you are using a parameter with a default value when you don‚Äôt seem to have any intention for somebody to call this function using that parameter.  Even if there were a benefit to doing so, it would probably not outweigh the downsides.  But here there doesn‚Äôt seem to even be any benefit at all.  Why would you do this?",3.0
g2as23m,idmil2,"I agree with everyone that the second way is strange. The only way it would ever make sense to me is if you were expecting to occasionally pass in a different copy parameter. But even then, I wouldn't do it this way.",2.0
g2ayzgz,idmil2,"For the record, I don't like the second way. Other answers here have already explained it well.

Just curious, are you asking because someone actually asserts the second way is superior? Or even acceptable?",2.0
g2bmk0s,idmil2,In general the second option is not advisable for all the reasons others already mentioned. The only time I'd use something like this is if it's some internal recursive logic that can receive a precomputed copy from the caller for optimization reasons. Bear in mind that this is a very very very specific use case. The general case is to avoid exposinf internal logic via an input parameter if you don't need to,2.0
g2cbe0h,idmil2,"```
const rotateArray = ([ first, ...rest ]) =&gt; [ ...rest, first ]
```

The rest and spread operators can be used to make this easy and terse. This basically does the same thing, but isn‚Äôt going to made future developers pull their hair out.

[Edit: I can‚Äôt get Reddit to display that arrow function correctly]",2.0
g28m6se,idd0tn,"Friendly reminder: TypeScript does not follow semver, i.e. 4.0 is not a major version release, it's just the 40th release. With the exception of maybe a few small stricter type checks, I don't expect any major breaking changes. There's also not very much exciting stuff here IMHO. The last massive version update IMHO was 3.7 with optional chaining!",167.0
g28rnad,idd0tn,"Probably too late, but they should just release whole number versions... v40 is much clearer than v4.0 because almost every other project uses semantic versioning.  Just my opinion.",78.0
g29ep2r,idd0tn,"I think most projects should use either a) semantic versioning (especially if they're primarily intended to be used as a dependency for other projects), or b) some variant of &lt;year&gt;.&lt;month&gt; versioning (especially projects with frequent releases).",32.0
g29v0m5,idd0tn,You know the world is doomed when 1 industry can't even agree on one tiny standard. What's wrong with semantic versioning? I have not found a single case that semantic versioning didn't work.,17.0
g2agtf7,idd0tn,Maybe we should invent a new version tracking method as an industry standard...,10.0
g2beotr,idd0tn,[Relevant XKCD ](https://xkcd.com/927/),5.0
g2bezig,idd0tn,You got my joke!,3.0
g2bf5f1,idd0tn,If you don't make guarantees about API compatibility between versions there's no value in semver.,2.0
g29x5jk,idd0tn,"It can discourage breaking changes.

Say the library is at \`1.18.2\`: a bump to \`1.19.0\` is more palatable than \`2.0.0\`, which means backwards-compatibility is favoured. Consumers of the library are more likely to risk an upgrade if it's a minor bump than if it's a major bump.

In some cases, this is desirable, but sometimes breaking changes are required to fix up legacy aspects and clean up technical debt.

So that's my theory on how semver increases the burden of legacy code.",2.0
g29xqme,idd0tn,I would argue that companies would be just as afraid to upgrade if there are breaking changes no matter what the numbering system. Semver only makes it more explicit where the breaking changes are.,24.0
g29xvql,idd0tn,"99% of programs will eventually have breaking changes. I think we can agree on that?

Are you saying some other versioning, that doesn't outright display major updates, will likely have more users update because they don't know it has breaking changes? I understand your point. I just don't understand how that would make some other version semantic better?",9.0
g29zfow,idd0tn,"You're right.

I do believe semver can discourage breaking changes, but I don't believe that there is a one-size-fits-all alternative, either.

Semver's `breaking.safe.patch` scheme works great for 90% of open-source projects, at least. But, purely psychologically, a `breaking.breaking.safe` scheme (like what TS seems to follow) would probably encourage more potentially-breaking upgrades.

This is because 'v2.5 -&gt; v2.7' looks friendlier than 'v25-&gt;v27'.",1.0
g2am7qo,idd0tn,"If I'm blindsided by a major backwards compatibility change that requires significant refactoring on my part when I upgraded from an arbitrary v37 to v38, I am never going to upgrade your dependency again and add replacing your library with something more reliable to the back log.

At least with semantic versions, I know when I'll need to take a deeper look before upgrading (in theory).",4.0
g2bevcx,idd0tn,"I still vote semantic versioning
 But as someone who maintains a fair amount of projects one small annoyance is a lot of very small changes can end up being breaking for a small number of folks, so you still call it a major change. Then soon your on version 95.0.0",2.0
g2armlv,idd0tn,"If nothing else, calling it 4.0 at least **implies** something like semver. Makes it quite misleading.",4.0
g28rr4k,idd0tn,Variadic Tuple Types seem pretty massive to me.,35.0
g28ssie,idd0tn,That caught my eye too. Really cool and powerful in theory but it‚Äôs not an issue I run into often.,5.0
g2991lm,idd0tn,For library authors that provide higher-order functionality it's something you run into quite a bit. Very useful to have this.,12.0
g28vx1n,idd0tn,"For implementation code, it's probably a little too much, I agree. But I'd love to see how type definitions for stuff like ramda can make use of this.",5.0
g29nqa0,idd0tn,"Wait until you need to do some location data, especially when you have two datasources that chose different long/lat sorting",1.0
g2a9gj5,idd0tn,My?.companies?.codebase?.after?.upgrading?.to?.3.7,5.0
g2aacku,idd0tn,"vs

my &amp;&amp; my.companies &amp;&amp; my.companies.codebase &amp;&amp; my.companies.codebase.after &amp;&amp; my.companies.codebase.after.upgrading &amp;&amp; my.companies.codebase.after.upgrading.to &amp;&amp; my.companies.codebase.after.upgrading.to.3.7",14.0
g2acemr,idd0tn,Sounds like a good thing to catch in code review.,1.0
g2adjci,idd0tn,Turn on `strictNullChecks`,2.0
g2b65qo,idd0tn,"If someone would give me shit for using null coalesce or optional chaining that would be the beginning of the last day of one of us on that project or company.

In reality, given my seniority, it would most likely be theirs. But either way.

If anything TC 39 is moving too slow in fixing this dumpster fire of a language, and Microsoft is even more conservative. For example, where is my pipeline operator, proper private fields in classes and when can we finally get some macros that are blessed by the powers that be.",-8.0
g2eb8ve,idd0tn,"Watch out, we've got a badass here boys.",0.0
g28bhf6,idd0tn,Great job @TypeScript team. I always look forward to reading this and the Visual Studio Code release notes.,38.0
g28himv,idd0tn,Haha! Me and you both! VS Code release notes are always welcome when I boot up for the day! üòÇ,26.0
g2a7dkc,idd0tn,As if I would close vscode so I have to restart my scripts,2.0
g28f1ip,idd0tn,Looking forward to all the improved library types with the new tuple stuff!,9.0
g28u7dm,idd0tn,nullish coalescing ü§≤üèªü§≤üèª,16.0
g29btie,idd0tn,In the last few weeks I've had to explain `nullish coalescing` so many times. In particular how it's different to just or-ing ( `||` ) two variables.  But once people get it they love it.,10.0
g29gj39,idd0tn,"My complaint about nullish coalescing is that it will pass a NaN through. I understand the reasons, it's inconvenient to deal with when parsing input, though",6.0
g2bm7kz,idd0tn,Nullish coalescing is there to prevent code explosion when object doesn't have required properties or methods. NaN has all properties and methods of a Number. It would be incorrect to treat NaN as NULL.,2.0
g2bqqym,idd0tn,"I'm aware, thanks",1.0
g2b3u61,idd0tn,"What is the reason? I assume because `typeof NaN === ""number""`",1.0
g2biqgq,idd0tn,"Sort of. Discussion about it here
https://github.com/tc39/proposal-nullish-coalescing/issues/28

It's intended use is to prevent invalid property access, which, NaN being a number, has all of the expected properties.",2.0
g2bfggh,idd0tn,# üî•,1.0
g28p8up,idd0tn,Has typescript become the most complicated garbage collected language now or is there still work to do?,-41.0
g28yp24,idd0tn,"The language has definitely grown a lot, but the important thing to keep in mind is that a lot of the features that people consider complicated are typically opt-in, and used to model libraries that lots of people use. That means most users don't use these features directly.

I do get the sentiment though. Anything you think that might help here?",35.0
g2909mr,idd0tn,"&gt; but the important thing to keep in mind is that a lot of the features that people consider complicated are typically opt-in

So when I'm reading code that uses these features I can just opt-out of them?",-38.0
g2929rl,idd0tn,"Sure, but think about the alternative. In the case of variadic tuples, how do you model JavaScript code that already exists? You can either write a lot of `any`, or you can try to write 5+ overloads to get the right behavior ""most of the time"". Trying to introduce fewer concepts in this case equates to doing nothing.",15.0
g2937fg,idd0tn,"Then don't read it. Seriously why is there always someone whining when something new pops up.

""Oh poor me, my eyes has to be laid on something new once again, my poor soul can't handle this. Please let me look at the same Java8 syntax that my eyes are used to in the past 10 years! Anything but to learn something new! Pleeeaaseeee!""",30.0
g294568,idd0tn,"&gt; Then don't read it.

Are you seriously that clueless?",-30.0
g294keq,idd0tn,"lol, I'm the clueless when you are literally throwing a fit over new language features that you *might* encounter. Do you look at a swiss army knife and seriously think ""omg what are all these things for?? I just want a knife!!""",19.0
g2960qz,idd0tn,"You know what, I do agree with you but fuck me if I could just buy torch whose button turned it off and on. None of this flashing bullshit.",1.0
g2984vg,idd0tn,Have you personally went and harassed the CEO of Torch co. that you want more simple torches and none of this flashing bullshit?,2.0
g299cm8,idd0tn,I've come closer than I care to admit lol,-1.0
g296jv7,idd0tn,"&gt; lol, I'm the clueless when you are literally throwing a fit over new language features that you might encounter.

Nobody is throwing a fit, that's your imagination

&gt; Do you look at a swiss army knife and seriously think ""omg what are all these things for?? I just want a knife!!""

Maybe you aren't a pro developer but 99% of the time you don't have a choice of what code you are reviewing or maintaining.",-4.0
g297fwf,idd0tn,Omg I can't believe you. You seriously call yourself a professional then cry about having to learn new features. I. Cannot. Believe. The irony here is so hard it's literally crushing me.,5.0
g298c3f,idd0tn,"Have you experienced years of C++ bloat?  Java bloat?  Do you not understand that languages can keep adding features until everybody runs away, or new developers abuse them and you have to fix it?",3.0
g29ar46,idd0tn,"&gt;new developers abuse them and you have to fix it?

I really fear that this means that you just can't keep up with new things that are obviously added to said language because there were a need for it. 

And when someone with a fresh mind comes and uses these to write neater code, you just refactor it back how it would've look like 20 years ago, instead of adapting.

That's sad.",10.0
_,idd0tn,,
g2bvshv,idd0tn,"I do understand the your point here. I do think there is a real danger with too many features. I've done some C++ and know you can have essentially code bases that are almost C and others that are using all the new features and they might as well be two different languages that just happen to compile together. I think right now typescript feel pretty unified with many of the more advanced type featured used to type complicated interfaces, but I could imagine stumbling upon some crazy complicated type that is very difficult to decipher.",1.0
_,idd0tn,,
g2c47yg,idd0tn,J2EE... Lol,1.0
g2b40no,idd0tn,"As a team you should agree on what syntax you do/don't use, just like would with design patterns.",1.0
g29lxv4,idd0tn,I'd agree with you but I'd get downvoted to death. Typescript is unsightly and way too strict. Great for intellisense vscode though.,-9.0
g29mckm,idd0tn,Any specific pain-points you've run into?,9.0
g29qphg,idd0tn,"If types were always optional, that'd be nice, similar to how elixir does it. I think having to define types for return statements is a huge PITA. The fact that I can't access global variables such as window.localStorage without some compiler config, also incredibly frustrating. Having post-compile guards is more useful than precompiled, esp when building libraries, because it forces good structures always, not just in dev.

And yes, I know many if these things are configurable, but my point is, it feels like it's too much. The vast majority of the time people just need to follow good conventions. 

As I understand it, JS is a general scripting language. It's intention was to NOT deal with compilers or strong typing, similar to php, ruby, python. For fast development. I am used to using good naming convention, organized project structure, and code comments explaining what's what. Adding types to absolutely everything is very cumbersome on top already good conventions. It clutters up the code heavily.",-8.0
g29t26c,idd0tn,"That's really weird - I know these things are configurable, but most of what you mentioned should work out of the box. For example, return types *are* optional, even under stricter options typically. `localStorage` *is* present in `lib.d.ts` if I recall correctly.",19.0
g29ydyo,idd0tn,"Types are cumbersome in the same way that tests are cumbersome. You can write code with:

* good naming conventions
* organized structure
* code comments

But without tests, your `Uncaught TypeError: Cannot read property 'a' of undefined` will cost your client or your company $10000's per hour.

So think of types as tests that are automatically implemented as sanity-checks to make sure you don't `obj.a` on an `obj` you didn't expect to be type `undefined`.

They go even further and make sure these following people don't make such mistakes:
* your library's consumers
* your newly-joined teammate
* you in 2 years when you go back to your own code to make some upgrades",10.0
g2atcei,idd0tn,"&gt; Types are cumbersome in the same way that tests are cumbersome.

That's true, but an advantage of tests is that they don't need to be mixed in with your implementation code everywhere. Sure, types give you intellisense, and well-organized/named types aren't *too* bad to read, but let's not pretend that the extra verbosity is *desirable* from a human perspective, in most cases. The mental overhead is in no way negligible in my experience, even just the mental parsing cost of reading implementation code while ignoring the types, especially once you start running into more complicated types and various workarounds to deal with the rough edges of the system (of which there are still plenty). Also debugging types is not a fun experience, I'd be much happier debugging a test in most cases.

All this is not to say that Typescript is *bad*, just that people's legitimate gripes with TS are often dismissed instead of acknowledging that (as with most things) there *are* tradeoffs. With that being said, maybe things would go smoother if such dissenters were a little more clear that they're just expressing a preference/opinion instead of being so assertive about it. That goes for static type tribalists too though.",-2.0
g2b4gob,idd0tn,"The mental overhead when looking at code without types, knowing fuck all about the structure of variables that you're using is much worse.",3.0
g2bd96l,idd0tn,"Well that's going to depend on how important/hard to remember the types are in a particular context, how verbose they are, and ultimately on the individual. Contrived example:

    const asyncLowercase = (str: string, callback: (str: string) =&gt; void): void =&gt; {
      setTimeout(() =&gt; {
        callback(str.toLowerCase());
      }, 0);
    };

Compared to:

    const asyncLowercase = (str, callback) =&gt; {
      setTimeout(() =&gt; {
        callback(str.toLowerCase());
      }, 0);
    };

The first line in the TS version is already 80 characters with only 2 parameters, or if you preferred to break it up, 3 extra lines of vertical space. The annotations are essentially just extra noise that you nevertheless have to parse while trying to pick out the param names. And no, syntax highlighting doesn't necessarily help much. Yes you can extract the callback type, or use non-arrow function syntax so you don't end up with multiple `=&gt;`, and have an inferred `void` return, but the point is that there is plenty of TS code out there that looks like this or far, far worse (especially when type parameters get involved).

Of course there's plenty of benefit for *consumers* of such a function, but if your tooling could hypothetically tell you what you want to know with more minimal or no annotation (without compromising on type safety) that would be preferable right? So why is it so hard for some people to accept that others might have a lower tolerance for this kind of verbosity? (to say nothing of the expressivity argument) Are people not allowed to like any aspect of dynamically-typed languages?",2.0
g2bdwkd,idd0tn,"""noImplicitAny"": false",2.0
g2beu4l,idd0tn,"Fair, that's one option such people might like as a compromise, although if anyone else looks at their code they might get told they're doing it wrong.",1.0
g2vzh98,idd0tn,"https://i.imgur.com/WWTTsf5.png

I've set up my IDE so that it de-emphasizes types by setting them to a color closer to the background color. Visually this helps my brain to ignore it when I'm trying to focus on the code. However the type information is still there if I need it.

_____

Ultimately, to me the safety of types far outweighs the cost of the verbosity. No doubt someone will eventually attempt to pass in something that isn't a string, such an `string[]`, `Promise&lt;string&gt;`, or just makes a flat out mistake.",2.0
g2w5csp,idd0tn,"&gt; I've set up my IDE so that it de-emphasizes types by setting them to a color closer to the background color. Visually this helps my brain to ignore it when I'm trying to focus on the code. However the type information is still there if I need it.

This was literally a shower thought I had after writing those comments, so I feel validated that at least one person has already put it into practice. Thanks for the example shot.",1.0
_,idd0tn,,
g29rtxa,idd0tn,Sounds like you need todo more reading on typescript. The steps to get window working are generally less than a minute within my whole setup process for a new front-end build if it even takes that long.,7.0
g2m3lln,idd0tn,"They are optional. Look up noImplicitAny.

If configured properly (which is incredibly easy), TypeScript has the least cumbersome typing system of any language I've ever used. It can be ignored/disabled when unnecessary, and applied when extra assistance in structuring your code is needed. I've been writing JavaScript for nearly a decade and have created some fairly complex pieces of software, and TypeScript hasn't placed any restrictions on how I code. It's only provided assistance.",2.0
g2bmlac,idd0tn,"Return types are optional, window.localStorage is not available in NodeJS as there is no window.",1.0
g28sjcy,idd0tn,Oh shit here we go again,-19.0
g28a4o1,idd0tn,Oh snap!,-14.0
g29xdq8,idd0tn,Great more stuff to learn,-10.0
g2ampuv,idd0tn,"That's exactly how I feel, except unironically.",8.0
g2sueto,idc09e,"Locking the thread as the AMA is over.

Thanks to the JetBrains team for stopping by!",1.0
g28kzbk,idc09e,Do you plan to support WSL2 folders? it's something that still forces me to use other editors.,28.0
g2om7zg,idc09e,"Hi, yes. There's already support for the dev workflows with WSL in WebStorm. It is possible to open projects located in the WSL2 file system and use Node.js, Git, and other tools installed in WSL from the IDE. And we continue to work on it ‚Äì the next milestone is adding our own file system watcher to WSL to get file events faster. 
Have you tried that and felt that it doesn't work right for you? Or haven't you found this functionality? Do you remember where you've looked for it? Thanks!",4.0
g28qk03,idc09e,"Is there *any chance* of **The One IDE** instead of specific ones for each language? 

IMO a lot of frontend developers sometimes need to fix an API written in Python, adjust some microservice in Go or debug 
a webapp written in Ruby...

(thx for doing this AMA btw)",29.0
g28xvh1,idc09e,"Intellij has all the webstorm features, with the php plugin all the phpstorm features, python - pycharm, ruby rubymine and the DB tools in Intellij are datagrip.

The language specific IDE's are just better setup for that language out the box but that comes at the cost of been language specific.

I know this because I've used all of the above and replaced them with Intellij and the related plugins.

There are only a couple of genuinely lanuage specific IDE's that don't have the plugins Rider and Clion I think (both of which are based on Intellij).

I use both Intellij and vscode but 95% of my programming life is in Intellij, it literally covers every language I use for work and outside work already, so good I pay out of pocket rather than deal with the hassle of getting a license sorted at work (and also I do use it a lot in my own time).",20.0
g29av96,idc09e,"AFAIK, the ones that aren‚Äôt just a subset of IDEA are 

-	Rider
-	AppCode
-	CLion",8.0
g2aq98p,idc09e,"Ah, appcode that was the one I couldn't remember.",2.0
g29oztx,idc09e,How would one set up IntelliJ to use Prettier as a default formatter on a Node project? Are those things specific to IDEs? Or are they settings that I‚Äôve just never found?,4.0
g29voty,idc09e,"You can set up a hook to run prettier every time you save a file. Google it, it's quite easy",2.0
g29w1ok,idc09e,"Yeah. I get that. But WebStorm‚Äôs newest release touts that you can set the default formatter (cmd+opt+l, I think) to use prettier. Otherwise, you have to use a completely different keystroke to manually invoke it on certain lines or files like scratches.",2.0
g29xhxf,idc09e,What if you change the keybinding to use the same as Save? CMD+S on  a mac for example,1.0
g29xyss,idc09e,,
g2otfj3,idc09e,"Hi! The difference is that WebStorm includes the Prettier plugin by default, while IntelliJ IDEA doesn't. So, you need to install the Prettier plugin in ""Preferences | Plugins"". 

Also, please note that the option to use Prettier as a default formatter is available only since 2020.2",1.0
g2on9e6,idc09e,"Hi,
As it was already mentioned in the thread, we consider IntelliJ IDEA Ultimate to be the thing closest to the ""One IDE"". It supports JavaScript, Python, Ruby, and Go as well as WebStorm, PyCharm, RubyMine, and GoLand do. 

To make it easier to enable support for different languages in IJ, in the past year, we've spent quite some time to allow installing new plugins without restarting the IDE. The next step is to make the language and frameworks plugins unload on-the-fly when they are not used in the current project.

Also, in the IDE version 2019.2, we added syntax highlighting for 20+ languages in WebStorm and other IDEs to make it a bit easier to work with code written in a different language without switching to IJ.
 
Indeed, IJ doesn't support C++, ObjC, and .NET stack. The main reason is that many projects that use these tech stacks have a project model that is quite different from the one used in IJ by default. Another reason is that we don't actually know a lot of use cases when, say, Java and C# are used in the same project.",3.0
g2bmolq,idc09e,It's called vscode + extensions,2.0
g2bmp9l,idc09e,"Happy Cake Day k4kshi! Whenever you find yourself doubting how far you can go, just remember how far you have come.",5.0
g2bh04x,idc09e,"I used to work with some of the language specific ones a few years ago but nowadays do everything in IDEA and it works perfectly fine. You don't have to use the specific ones unless you work with C/C++ or C#, as far as I know. If I wasn't telling myself that this will be the year I'm going to try my hand at C++ and openGL/Vulkan again every time I have to renew my license, I would have already switched to the IDEA only license instead of the complete pack.",1.0
g28v038,idc09e,"What does a single IDE that does it all solve?  Coming from the world of Visual Studio that just means I have three or four instances of VS running to address the various projects. If the alternative is one instance of WebStorm, one instance of IntelliJ, one instance of PHPStorm, etc then at least I can tell faster which is which without switching to an instance and realizing I wanted something else.  You're chewing up a hell of a lot of memory either way.",1.0
g2ayiik,idc09e,"You can have multiple sub-project (with different languages) in one IntelliJ project. You can search, refactor, etc. the entire code base of your company in one instance.",2.0
g2b6f3g,idc09e,"For ASP.NET Core projects, you can do that with Rider. It has all the WebStorm bits.",2.0
g28nzhk,idc09e,"Even though I assume you guys don't control the student discount stuff. But huge thanks to Jetbrains for offering their IDEs for free to students. ~~Totally didn't use my brother's edu email before I was in college because Jetbrains didn't work with Github Education Pack at the time...~~

&amp;#x200B;

1. I know you guys already have support for Vue 3's Composition API, and I expect you will add support for the new `&lt;script setup&gt;` eventually. But are there any plans to support Typescript typechecking within Vue templates? The Vue team has done some work on a CLI tool for typechecking in templates and I would love to see that added to Webstorm so I can see the errors directly in my code like type errors in normal TS code.
    1. [https://twitter.com/znck0/status/1290278773049286657](https://twitter.com/znck0/status/1290278773049286657)
2. Support for TailwindCSS autocomplete would be amazing.
3. The project attaching feature seemed great to me at first, but it feels very just thrown in there. No way to order the projects in the list was the first thing I noticed that was sad. But I was thinking about it the other day and thought that it might be kinda nice if it was possible to have multiple project tabs on the left sidebar thing.
    1. [https://i.imgur.com/ql6TkIX.png](https://i.imgur.com/ql6TkIX.png) Could be multiple ""Project"" tabs for each attached project, obviously with the name being the project name.",11.0
g2on0tj,idc09e,"Hi, you're welcome ;) 
Thanks for the feedback!

Making type checking for such a flexible framework as Vue is quite tricky. You can already benefit from our type checking support in the form of warnings where we properly infer types (e.g. properties, Vuex store symbols - getters/setters, and many more). However, we are still missing support for several kinds of constructs, like for instance slot-scope. Vue 3 makes things a lot easier but doesn't solve all of the problems. We are already gradually getting to the point where you get full type checking support. 

We are planning to start working on the Tailwind support for the next major IDE update. Please track this issue for the updates: [WEB-42792](https://youtrack.jetbrains.com/issue/WEB-42792).

Regarding your third question: at the moment, there are no major activities related to changing the way multiple projects are opened in one IDE window, sorry. It would be great if you could file a new issue on our tracker describing how you would like it to work.",2.0
g28pv5d,idc09e,"Compared to \~4 years ago, WebStorm seemed to have a lot of trouble catching up to the fastly evolving JavaScript landscape. It wasn't too pleasant to use it for ReactJS alone, let combining it with TypeScript. Also it was pretty bad for VueJS.

But now it seems that for the most part WebStorm caught up, and now handles most of the JavaScript ecosystem really well across the board.

Do you agree that the evolution of JavaScript has slowed down a bit, and now it's easier for the team that they don't have to develop so many big new features?",14.0
g2onm7e,idc09e,"Hi, thanks for the interesting question. I've been thinking about that recently. 

Short answer and my personal opinion: yes, I feel that there's less turmoil than five years ago but the new technologies are more advanced now and user expectations in terms of the IDE support are high. 

JavaScript itself is still evolving quite a bit. The process established by TC39 has definitely made it easier for us to track the status of proposals and implement support timely. It also feels like fewer people than before use JS features that are on very early stages via Babel plugins (which is good for us). 

As for the JavaScript frameworks, it's fair to say that the three major frontend frameworks are now very mature and have a well-established ecosystem. However, the maintenance cost is still rather high because of the regular (and often internal) changes in the frameworks themselves and related libs.

For us, adding first-class support for a new framework is a huge investment and it takes a couple of years to reach the level of the support we have, say, for Angular. Because of that, we try not to rush into supporting new frameworks ourselves, helping the community with developing plugins when possible. 

In general, I feel that the community is still very much open to the new frameworks, libraries and technologies in general. The recent examples include Svelte, Tailwind, and Deno. There are also lots of exciting things happening on the data layer with platforms like Apollo and Prisma.

So to sum it up, we are still pretty busy and have lots of great technologies to support!",2.0
g29uw7o,idc09e,With COVID-19 I've transitioned from pair programming in InteliJ in person to doing pairing remotely.  Is there any chance official remote pairing tools could be a possibility for InteliJ?  Something similar to the VSCode live share would be amazing.,13.0
g2onqnh,idc09e,"Yes, we are going to announce something very soon. Stay tuned!",6.0
g2btlet,idc09e,"Yeah remote live sharing tools are my biggest request as well. Ideally one that can interact with Vscode's so I can use it with my coworkers.

This is becoming a major issue for me that may unwillingly push me to have to move to Vscode like most of my team.",4.0
g2b6gcp,idc09e,I know for a fact that this is already in the works.,3.0
g2bqmt1,idc09e,Do you have any details on it?  Or is it just something you‚Äôve heard?,2.0
g2bs1xy,idc09e,"Here's the confirmation by Hadi Hariri in the JB bug tracker: https://youtrack.jetbrains.com/issue/IDEABKL-708#focus=Comments-27-3813899.0-0

It was also communicated to the Rider Insiders group which I'm part of.",2.0
g2bv4vf,idc09e,"Awesome, thanks!  Interesting it says early 2020 for a release date... hoping it is coming soon.",2.0
g28db7y,idc09e,"What IDE are you using to develop Webstorm/IntelliJ :P? (I've been using IntelliJ Ultimate for a while now, but work mostly in JS. I think it's a great product, and hope to not be disappointed in the future - as it sometimes happens with certain tools as the company tries to add more and more features and forget their way. Keep up the great work!)",26.0
g29hhql,idc09e,"They are most probably using IntelliJ IDEA: all IDE based on the IntelliJ platform (including Webstorm) are written in Java and Kotlin (Kotlin being the most used language today), and IntelliJ IDEA is the IDE for these languages. Moreover, IntelliJ has plugins for developing the platform itself and plugins for the platform, that bundle everything needed to build an IDE.

HTML, CSS, JavaScript/TypeScript and all other languages, tools and framework are just plugins for the IntelliJ platform , bundled together with some predefined settings to make WebStorm.

Source: I wrote a plug-in and contributed to the IntelliJ platform (which is open source by the way).",13.0
g28xe0t,idc09e,"Been using intellij for years and years and its only gotten better over that time so I wouldn't worry, they could occasionally do with a feature freeze and a bug fix release rather than spreading the fixes out with other stuff but they generally get major stuff fixed quickly.

Hands down the one piece of software I never think twice about paying for.",7.0
g2omcl8,idc09e,"That's an easy one ;) u/Kendos-Kenlen and u/noir_lord are right - it's IntelliJ of course!

\&gt; hope to not be disappointed in the future

I am sure you won't be disappointed. We're always trying to stay on the course for great features, usability and performance. That's why from time to time we stop making new features and spend few weeks with focus simply on the quality as it was with 2020.1.",5.0
g28jxci,idc09e,"Hi Webstorm Team,

Obviously VS Code is your primary competitor and what many/most JS developers opt to use. How is Webstorm working to compete with VS Code‚Äôs hegemony, what are it‚Äôs differentiations, and advantages over VS Code?

Related, I know something convenient with VS Code is it is open source and written in JavaScript. Will Webstorm be open in the future to making the platform more open source, and offering an easy way to use JS within the whole Jetbrains ecosystem to extend its functionality?",29.0
g2piird,idc09e,"Hi! As for your first question, we continuously monitor our users' feedback, trying to understand our weaknesses, so we could focus on improving the most important things. For example, we understand that competitive tools are faster than WebStorm and have been working on making it more lightweight.

The main reason people choose our tools is that you get all the functionality out of the box. You won't need to worry about installing and maintaining plugins as you would if you use VS Code. Among other things, our users tend to value our IDEs for their refactoring capabilities, Git integration, and the ability to work with large codebases more reliably - all of these are still our strong differentiators. If you want to read the actual feedback from users, you can check out [these](https://blog.jetbrains.com/webstorm/category/interviews/) customer interviews or explore the [Likes](https://twitter.com/WebStormIDE/likes) section of WebStorm's Twitter account ‚Äì there's quite a lot of feedback there.

As for your second question, the [platform](https://www.jetbrains.com/opensource/idea) that WebStorm is built on top of and many plugins for it are already open-source. We're trying to support those who want to develop plugins for our IDEs in multiple ways. For example, there's a [Slack channel](https://intellij-support.jetbrains.com/hc/en-us/community/posts/360006494439--ANN-JetBrains-Slack-for-plugin-developers) created for this purpose. As we have products for various languages, choosing the default language for building the plugins for those products isn't that simple as we may want it to be. At the moment, we plan to improve the documentation about our platform's API and write more comprehensive tutorials on how to build plugins. We'll try to make this information helpful for JavaScript developers too. I hope this answers your question!",8.0
g2pm1qe,idc09e,"Great answer, thanks!",1.0
g28tl5r,idc09e,"&gt;Obviously VS Code is your primary competitor

I disagree with that statement. WebStorm is a full-blown IDE -- more akin to Visual Studio -- whereas VS Code is really a souped-up version of Atom (the main souping-up being the language server innovation).

I am curious how WebStorm competes with free, both in terms of cost and license. Any chance of their being a free Community Edition of WebStorm?  I would ditch VS Code for that!",0.0
g29u65n,idc09e,"Refactoring. The refactoring features out of the box in Webstorm far outpace those in VSCode even after you install several plugins.

I can manipulate the AST so much faster using IntelliJ or Webstorm than in VSCode.",13.0
g2buefr,idc09e,"I disagree with this so strongly!  I *left* Webstorm (with a paid copy and everything) and *switched* to VS Code *because* it had more refactorings.

Serious question: what can you refactor with Webstorm that you can't with VS Code?",3.0
g2dmui0,idc09e,"The main workflows I miss when using VSCode:

* Extend Selection -&gt; Surround with [tag, conditional, etc... ]
* Extend Selection -&gt; Unwrap [tag, conditional, etc... ]
* Change function signature dialog
* Inline function / expression

In Typescript:

* Convert to destructuring
* Add property access to destructuring
* Replace ternary with optional chaining / null coalescing
* Convert between named function and arrow function assigned to variable

Clearly I'm deep in Webstorm -- I'd love to hear what you have in VSCode that you don't in Webstorm.",5.0
g2pjcik,idc09e,"Thanks for answering!  Yeah, I don't even know what those JS refactorings do (and I don't use Typescript). Is surround/unwrap like going from `Foo` =&gt; `&lt;Foo/&gt;`, or `Foo` =&gt; `if (Foo)` ... or what exactly?

I assume the function signature dialog let's you add an argument to its definition from the call to it?  That does sound handy.  And I'm unclear on inline function/expression also: is it `foo + 5` to `(() =&gt; foo +5)()` or something like that?

But really I guess all this just shows the variability of dev needs.  VS Code is definitely getting more and more refactorings daily, so I think over time more and more devs will find it can do everything WS can do (and more) ... but for every individual that point may/may not be here yet.",2.0
g2q6rcu,idc09e,"For sure -- definitely different applications for different needs.

By invoking ""unwrap tag"" on the inner tag, WS would transform `&lt;myXmlTag&gt;&lt;myInnerTag/&gt;&lt;/myXmlTag&gt;` into `&lt;myInnerTag/&gt; `. The opposite would be the ""Surround with tag"" refactoring in WS.

By invoking ""unwrap conditional"" on the dispatch call here, WS transforms `if (x == ""sentinel"") { dispatch(x); }` into `dispatch(x)`. ""Surround with conditional"" in WS does the opposite. Saves me a few keystrokes.

By invoking the ""inline"" action on this function `fn`, WS replaces the usages with the function body. So `const fn = () =&gt; foo + 5; let result = fn();` would become `let result = foo + 5`. The opposite in WS is the extract method refactoring, something I think VSCode does out of the box as well IIRC.",3.0
g2pj5k9,idc09e,"Alas, having a community edition doesn't seem feasible right now, mainly because the WebStorm functionality is included in our paid IDEs. If we made such a radical change, we‚Äôd have to restructure a lot of other things. It‚Äôs a significant commitment we aren‚Äôt ready to make at the moment.

We try to support the community in other ways, such as giving away subscriptions to open-source projects and students. You can learn more about our special offers [here](https://www.jetbrains.com/webstorm/buy/#discounts). Also, our [EAP](https://www.jetbrains.com/resources/eap/) builds are free to use (available three times a year).",5.0
g297nte,idc09e,"That's kind of the point of VS Code, though - it *is* an IDE, it just doesn't assume you want lots of features, and let's you selectively install features you want.",20.0
g29hx0m,idc09e,What‚Äôs something that WebStorm can do that VSCode can‚Äôt do?,10.0
g29zseu,idc09e,"Something many people are overlooking, is that JB products very smartly index projects - you‚Äôll notice that features like go-to-def and go-to-refs are way faster in IJ as opposed to VSC where it chugs in large projects",16.0
g2bay1a,idc09e,"Intellisense. I'm sure there is more, but when I tried switching from WS to VS code, I couldn't stand the latter. WS and JetBrains products in general have exceptional intellisense for code suggestions, completion, and subtle hints the IDE puts alongside your already written code. Once you get used to this kind of help, using VS code feels the same as using an old text editor.",7.0
g2a6bqe,idc09e,"Detachable, reattachable tabs last time I checked.",3.0
g2izvj6,idc09e,"Refactoring. See my above comment for my most used keybindings.[1]

On top of those, if you invoke the ‚Äúrefactor this‚Äù action, you can do even more fun stuff like extract super classes or pull methods up and down a class hierarchy.

As an example, on a relatively straightforward conditional, these are the ""Code actions"" I see available in Webstorm: ""Negate != to =="", ""Replace || with &amp;&amp;"", ""Split or-ed if"", ""Split and-ed if"", ""Flip ||"", ""Split else-if"", ""Flip !="", and ""Flip if-else"". In VSCode I see ""No code actions available"".


Aside from refactoring, I find the webstorm GUI to modify your color scheme to be pretty powerful if I want to call out something unusual. I can augment the highlighting color of a specific token in a specific language very quickly. 

1. [Comment](https://www.reddit.com/r/javascript/comments/idc09e/the_jetbrains_webstorm_team_is_here_to_answer/g2dmui0/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf)",2.0
g2pjvhy,idc09e,"As a former WS user who left for VS Code *because* VS Code had a refactoring I wanted that WS didn't ... I think it's fair to say refactorings are a mixed bag at this point, and it's not as simple as ""WS has better refactorings than VS"" (although that used to be true!)

Now it's more like ""both editors have different sets of refactorings: they share many in common, and then each has some the other doesn't."" (And so which is better just depends on the individual dev's needs.)

What I will say though is getting WS's refactorings (whatever their limits compared to VS Code ones) is *easier*: it's all just there, and you don't have to try out different plug-ins.  It's not too hard (at all) to experiment with VSC plug-ins, but WS is definitely simpler.",1.0
g2sfpen,idc09e,Which refactoring was that?,1.0
g29p9eg,idc09e,Integrated test debugging is unparalleled imho,6.0
g2shqts,idc09e,"It's funny, I'm recording that today for an upcoming WebStorm Fundamentals video. (I'm a JetBrains developer advocate.)",2.0
g29lijf,idc09e,,
g28oapl,idc09e,Why should I use WebStorm over VSCode? (or why should/shouldn‚Äôt I switch to WebStorm in your opinion),7.0
g2pau6g,idc09e,"You should use WebStorm if you don't like installing and maintaining plugins or spending too much time on setting up your development environment and prefer having out-of-the-box experience instead. Also, WebStorm will help you work on large, complex projects, where you'd need to regularly refactor code, actively use Git, and the like. Many users consider WebStorm to be a more reliable solution for work than VS Code.

VS Code may be a better choice if you don't mind spending time on configuring your tool and maintaining that configuration. It can be a great tool for working on smaller projects. Lots of our users use VS Code along with WebStorm for tasks like modifying single files quickly. We'd recommend trying both tools and choosing the one that suits your needs better :)

If you want to read the actual feedback from users, you can check out [these](https://blog.jetbrains.com/webstorm/category/interviews/) customer interviews or explore the [Likes](https://twitter.com/WebStormIDE/likes) section of WebStorm's Twitter account ‚Äì there's quite a lot of feedback there.",5.0
g293xdt,idc09e,"I think being an IDE, they're pushing more for a cohesive development environment for both nodejs/JavaScript. That might be very usefull. For example, a console.",2.0
g2buqk2,idc09e,"VS Code *is* an IDE.  Or if it's not, the distinction between the two has long since been buried.",-1.0
g28u891,idc09e,,
g28fhxo,idc09e,"How do I setup module path aliases, so that intellij knows where my libraries are located? For example, I import '@ember/object' or 'my-app/util' and while the build system (ember) knows where these are located based on my project name, intellij is unable to find them and give intellisense our automatic imports. I've used a gitignored webpack config previously to get this to work a bit, and it was a bit slow, but it seems like I should be able to just tell Intelij directly about these module path aliases. When a better ember plugin is released this might be a little better, but it doesn't solve it for cases outside of ember.",8.0
g2oo5ak,idc09e,"Hi! WebStorm doesn‚Äôt have any UI settings for path aliases, but there are several ways to configure them. 
The most convenient way is to use jsconfig.json (and tsconfig.json for TypeScript) and configure path mappings accordingly to the documentation: [tsconfig#paths](https://www.typescriptlang.org/tsconfig#paths). 
Also, WebStorm supports aliases from Webpack config as you mentioned, and maps from System.js",3.0
g28ftxn,idc09e,I just want to personally thank you for the soft margins feature.,7.0
g2pcz6i,idc09e,Happy to hear that you like it!,2.0
g29pqbf,idc09e,"Is there any interest internally on supporting JavaScript (TypeScript) for webstorm plugins? It would really reduce the barrier to entry to create a new plugin (as seen in the vscode ecosystem). 

&amp;#x200B;

Long time user, Keep up the good work!",4.0
g2p2re2,idc09e,"Short answer: It would be great, but at this moment we don't have a good solution.

First of all, WebStorm is written in Java and Kotlin. While JavaScript can be used as a JVM language along with Java and Kotlin (e.g. using GraalVM) you still need to read Java code and understand how Java works. 

Another approach would be to extract some IDE API as a language server and provide access to the server through any kind of client (JS / Python / etc). The main issue with this approach is that in any case, it will cover a couple of percent of all IDE functionality and any extended language support still will require writing a plugin with Java/Kotlin.",4.0
g29vvh8,idc09e,I would also love this,2.0
g2butq4,idc09e,I would not hold your breath waiting.,1.0
g28juin,idc09e,"I prefer to use the formatter and linter native to WebStorm rather than an external package primarily because the native formatter is faster and linting happens at a more intelligent time (like when I've finished typing the word).

I've always loved having the StandardJS format but I still have to make all the manual setting changes for linting - some of which are not available as options and this causes an uncomfortable development flow.

&amp;#x200B;

With the recent push to support Prettier I was hoping to see more support for third-party configs. Prettier's config is well defined and default rules are stable. Is there any way (now or planned for the future) we could ""import"" config like a \` .prettierrc \` and have it configure WebStorm instead of installing and running the Prettier package?

Similar question for linting? Any plans to support additional configs or popular packages?",3.0
g2pfrou,idc09e,"Hi! You can import Code Style settings from Prettier, ESLint, and TSLint using the context menu for the config file (or package.json if the project doesn't have a configuration file) in the Project View and choosing ""Apply Code Style Rules"".",3.0
g2py016,idc09e,This is exactly what I wanted. Thank you!,1.0
g2bvaft,idc09e,,
g29ie62,idc09e,"Any chance you guys could work on remote development over SSH or through WSL, to compete with VSCode?",3.0
g2oo7gf,idc09e,"Hi, yes, we are working in that direction. Please follow this [issue](https://youtrack.jetbrains.com/issue/IDEA-226455) for the updates.",2.0
g2bmqgs,idc09e,"Hi!

Just one question, why is the database plugin not available for WebStorm, but it is for every othet JetBrains IDE? It's really annoying having to open PyCharm or GoLand just to check some tables in a friendly way. I don't get why only WebStorm is different",3.0
g2oq2ue,idc09e,"Hi! Although we don't bundle the database plugin with WebStorm, there has long been a way to get database and SQL support. For this, you need to have an active DataGrip or All Products Pack subscription. This would allow you to install the database plugin and use it inside WebStorm.   
We understand that this option isn't optimal as it requires you to pay for the more expensive DataGrip or All Products Pack subscriptions, so we thought about the alternative ways to do that. We decided not to bundle the database plugin with the IDE because it would increase the WebStorm's price. Given that our statistics say that the majority of WebStorm users don't need support for databases, we thought that this decision wouldn't be met well.   
Instead, we plan to start selling the database plugin separately for those who want to use it inside WebStorm. There will be an announcement about it on [our blog](https://blog.jetbrains.com/webstorm) soon, please stay tuned and share your feedback with us.",3.0
g2os824,idc09e,Thanks!,1.0
g2lh4ui,idc09e,[deleted],1.0
g2oqga4,idc09e,"Not necessarily, you should be able to install it from Preferences/Settings | Plugins &gt; Marketplace tab too (an active DataGrip or All Products Pack license is required).",2.0
g2orayp,idc09e,[deleted],1.0
g2ozxqk,idc09e,"If the problem persists, please let our support team know about that, they'll check what it could be related to. To inform them, please create a new ticket [here](https://intellij-support.jetbrains.com/hc/en-us/requests/new).",2.0
g29b8aa,idc09e,"Hello,  


I primarily switch between Vim and VSCode. I have used Webstorm for 1 month, but have to migrate back because, it was too cluttered with million settings and options.   
It makes sense when I see it as an IDE but when comes to usability I don't like to have million buttons.  


What does the team thinks about these many settings and deep linked options considering Javascript application mostly don't need that much of abstraction.",3.0
g2op0ls,idc09e,"Hello /u/f00l_of_a_took!

&gt;I don't like to have million buttons.

We have special modes, called distraction-free and zen, which leave you with just an editor - [https://www.jetbrains.com/help/idea/ide-viewing-modes.html](https://www.jetbrains.com/help/idea/ide-viewing-modes.html), have you tried? 

&gt;What does the team thinks about these many settings and deep linked  options considering Javascript application mostly don't need that much  of abstraction.

As far as options are concerned, our aim is to provide defaults, which do not require any tweaking, but there are always some exceptions. Could you elaborate why were you forced to tweak anything?",3.0
g29ed72,idc09e,What is your opinion of other free editors like Emacs?,3.0
g2oomid,idc09e,It's great that there are great free tools on the market and devs can choose what works best for them :),3.0
g2bv6d6,idc09e,"LOL, I doubt *any* modern editor (ie. *any* of the IntelliJ ones, VS Code, Eclipse, NetBeans etc.) even has an opinion of emacs ... or even thinks about it at all, except to port keyboard shortcuts over.

The two are on completely opposite ends of the tooling spectrum (and I say this as a current emacs/VS Code user and former Webstorm user).",1.0
g29n3ap,idc09e,why would I choose PHP Storm over VS Code these days?,3.0
g2p5tdm,idc09e,"The main reason people choose our tools is that you get all the functionality out of the box. You won‚Äôt need to worry about installing and maintaining plugins as you would if you used VS Code. Among other things, our users tend to value our IDEs for their refactoring capabilities, Git integration, and the ability to work with large codebases more reliably. 

If you want to read the actual feedback from users, you can check out [these](https://blog.jetbrains.com/webstorm/category/interviews/) customer interviews or explore the [Likes](https://twitter.com/WebStormIDE/likes) section of WebStorm‚Äôs Twitter account ‚Äì there‚Äôs quite a lot of feedback there (valid for PhpStorm too).",3.0
g2ar8hu,idc09e,Planning to add support for dual monitors?,3.0
g2g82aq,idc09e,What do you mean by support for dual monitor? You can pop-out almost any window/tab and have it on another monitor. Am I missing something?,3.0
g2ozgzj,idc09e,"Hi u/aleksashyn, can you please tell us a bit more what exactly do you have in mind?",2.0
g2blltc,idc09e,What did you have in mind?,1.0
g2bbdm8,idc09e,"I use PyCharm, Webstorm and PhpStorm. Why are the commands to find a file not standard across all jetbrains software?!",3.0
g2ooru9,idc09e,"Hi, the default keymap should be the same in all these IDEs. The Go to file action is by default assigned to Cmd-Shift-O on macOS and Ctrl-Shift-N on Windows. Could it be possible that you have different keymap layouts selected in different IDEs (Preferences | Keymap)?",4.0
g2op8kj,idc09e,"Hey thanks for replying! Yes I realize now they are different from Mac to PC, that‚Äôs my issue. That was really my only issue, I love all the jetbrains software. Keep on kickin ass :)",2.0
g2bepfz,idc09e,What are the plans for Deno?,3.0
g2opr5v,idc09e,"We added support for Deno for v2020.1+ this June. You can get it through the corresponding plugin (see [this](https://blog.jetbrains.com/webstorm/2020/06/deno-support-in-jetbrains-ides/) blog post for more info), which is maintained and supported by us. We plan to make this plugin more discoverable by adding it to the list of featured plugins. At the moment, the plugin isn't bundled with WebStorm and other JetBrains IDEs. This may change later depending on the popularity of Deno and the feedback we'll get from users.",3.0
g2bujnk,idc09e,"Are there are plans to support a JavaScript based plugin system like VS Code? I'm not a fan of VS Code, but not having to know multiple languages had enabled developers to very easily create a ton of useful plugins.",3.0
g2p35pp,idc09e,"Hi! I have answered a similar question [there](https://www.reddit.com/r/javascript/comments/idc09e/the_jetbrains_webstorm_team_is_here_to_answer/g2p2re2/).

&gt;Short answer: It would be great, but at this moment we don't have a good solution.",3.0
g28t0wv,idc09e,"Hey team, I've been using WebStorm for a few years now and have a few different questions.

1. I use WebStorm on multiple different OSes every day, including Windows/Linux at home and Mac at work. I backup changes to my settings via import/export which works fine between Linux/Windows (which have the standard Alt/Ctrl/Super buttons), but this leaves the Mac in the dust due to their Ctrl-Cmd reversal. Is there any plan in the future to auto-detect which settings should have Ctrl-Cmd swapped vs settings that shouldn't?

2. I notice WebStorm has relatively poor support for config files located anywhere other than root (e.g. in config/folder) even when package.json specifies where each config file is. I have to manually make changes in preferences to fix this, but then, because it was a change in preferences, I have to change it back when opening a different project that puts them in a different location. Are there any plans to make WebStorm automatically search for common config files so we don't have to do this? (Including reading said configs for a NODE_PATH entry so I don't have to manually mark src/ as ""resources root.)

3. Why is there a community edition for almost all IDEs you offer but not for WebStorm? Can you please offer a community version?

Thanks!",4.0
g2p1q0d,idc09e,"Hi,
&gt;I use WebStorm on multiple different OSes every day, including Windows/Linux at home and Mac at work. I backup changes to my settings via import/export which works fine between Linux/Windows (which have the standard Alt/Ctrl/Super buttons), but this leaves the Mac in the dust due to their Ctrl-Cmd reversal. Is there any plan in the future to auto-detect which settings should have Ctrl-Cmd swapped vs settings that shouldn't?

We have a request https://youtrack.jetbrains.com/issue/IDEA-147906 about it and it would be great if you can share your use-case there. 


&gt;I notice WebStorm has relatively poor support for config files located anywhere other than root (e.g. in config/folder) even when package.json specifies where each config file is. I have to manually make changes in preferences to fix this, but then, because it was a change in preferences, I have to change it back when opening a different project that puts them in a different location. Are there any plans to make WebStorm automatically search for common config files so we don't have to do this? (Including reading said configs for a NODE_PATH entry so I don't have to manually mark src/ as ""resources root.)


Which configs do you mean? We are constantly working on improving config detection and some changes are implemented in the new 2020.2 version (including ESLint and Webpack).

Thank you for the questions!

&gt;Why is there a community edition for almost all IDEs you offer but not for WebStorm? Can you please offer a community version?

as [/u/piotrtomiak](https://www.reddit.com/user/piotrtomiak) mentioned in [this](https://www.reddit.com/r/javascript/comments/idc09e/the_jetbrains_webstorm_team_is_here_to_answer/g2oy0ww/) comment, at this moment we don't have any plans to release a community edition of WebStorm but we are trying to support the community in other ways",2.0
g28p6k9,idc09e,"What is JB using Kotlin for? Do you use it in production, perhaps on the IDEs themselves? If not, are there plans to change this?",2.0
g2orxwa,idc09e,"We're using Kotlin as much as possible :) Our IDEs have a lot of Kotlin code and we're constantly migrating from Java to Kotlin. Some of the plugins, like VueJS, are written entirely in Kotlin. We are not limiting usage of Kotlin to IDEs only though. Our new cloud product - Space ([https://www.jetbrains.com/space/](https://www.jetbrains.com/space/)), which is an Integreated Team Environment - is written entirely in Kotlin and that includes front-end (Kotlin/JS), back-end (Kotlin) and mobile applications (Kotlin/Native). We're doing a lot of Kotlin dog-fooding :)",3.0
g29i0vu,idc09e,"They use Kotlin to develop their IDE, Space, YouTrack, and probably a huge part of their projects from what I read in their blog posts.

What I am personally curious about is their use of Kotlin/JS and Kotlin/Native: are they heavily used now or are still considered as not yet ready for production ?",2.0
g2bhvvi,idc09e,Happy cake day!,2.0
g2osjlg,idc09e,"&gt;are they heavily used now or are still considered as not yet ready for production 

JetBrains is using both Kotlin/JS and Kotlin/Native in Space in production. I think it's a good time to start looking into these technologies.",2.0
g292p4a,idc09e,"I have had a few discussions with colleagues about whether or not WebStorm and PhpStorm have differences, please settle it for me",2.0
g29ijs7,idc09e,"WebStorm is for JS (and its variants) development (JS frameworks, NodeJS, TypeScript and other front end techs), whereas PHPStorm is for PHP.

PHPStorm is basically WebStorm + support for the PHP ecosystem. Not every features of WebStorm are bundled by default with PHPStorm, but they are available as plugins and offer the exact same set of features.

This also apply to all other JetBrains IDE (with the exception of DataGrip): they all integrate WebStorm features and add the support of the ecosystem they target.",7.0
g29veka,idc09e,"&gt;This also apply to all other JetBrains IDE (with the exception of DataGrip): they all integrate WebStorm features

Is that actually true? I'm surprised if, say, CLion integrates WebStorm features",2.0
g2b03a8,idc09e,"CLion actually comes with WebStorm features ! You can freely create JS files, react projects, ...

I never used it tho, but it‚Äôs bundled.",3.0
g2opysf,idc09e,"Hi /u/rico041998! 

u/Kendos-Kenlen got it right - PhpStorm includes WebStorm core and almost all of it's bundled plugins plus tons of additional plugins to support PHP, databases, SQL, PHP frameworks, etc. 

However, there are small differences mostly in UI, like in the new project wizard, as PHP Storm is more tailored for PHP development and WebStorm for JavaScript and HTML development.",2.0
g29ml5i,idc09e,"Love ya work.

Where‚Äôs the best place to submit feature requests?

Any ideas on how to get autocomplete to always work for objects in an Angular template? (PHPStorm)",2.0
g2oo42e,idc09e,"Hey u/kenzor!

&gt;Love ya work.

Thanks!

&gt;Where‚Äôs the best place to submit feature requests?

It's best to submit feature requests and issues through our issue tracker:  [https://youtrack.jetbrains.com/issues/WEB](https://youtrack.jetbrains.com/issues/WEB)

&gt;Any ideas on how to get autocomplete to always work for objects in an Angular template? (PHPStorm)

If you have troubles with getting autocompletion in an Angular template it's probably our fault ;) Please file an issue with an example.",3.0
g29zn7q,idc09e,"I think WebStorm is great but your recent updates to Git ""compare with current"" make me super sad. I use the feature a lot, now it sucks ;-(",2.0
g2p02fa,idc09e,"Hi, sorry to hear that. We would very much appreciate your feedback. Are there any specific scenarios worked better for you before than now? Any specific parts of the feature that you feel unhappy about?",2.0
g2qc1vu,idc09e,"Hey, thank you for responding. It has too much detail and is hard to follow. I don't need to know the commit history of each branch. I liked that I could easily pull in diffs from the branch I was comparing it to. I would mainly use it for selectively merging in changes from other branches.


edit: I take it all back!! Just discovered Show diff with working tree! - I apologize",2.0
g2a4xqw,idc09e,"[/u/noir\_lord/](https://www.reddit.com/user/noir_lord/) I like Jetbrains IDEs, but I wonder how Webstorm differ from VSCode + plugins?",2.0
g2p4h02,idc09e,"The main difference is that with WebStorm, you get all the functionality out of the box. You won't need to worry about installing and maintaining plugins as you would if you used VS Code. Among other things, our users tend to value WebStorm for its refactoring capabilities, Git integration, and the ability to work with large codebases more reliably.

If you want to read the actual feedback from users, you can check out [these](https://blog.jetbrains.com/webstorm/category/interviews/) customer interviews or explore the [Likes](https://twitter.com/WebStormIDE/likes) section of WebStorm's Twitter account ‚Äì there's quite a lot of feedback there.",2.0
g2bwn9g,idc09e,"Webstorm is proprietary and VS Code is open source.  Both have a big company supporting them, but Microsoft is like 10,000x the size of JetBrains.

Webstorm is older and has some features that VS Code doesn't ... but those features are dropping by the day, and meanwhile VS Code is getting new features all the time that Webstorm doesn't have (both in the tool itself, and via plug-ins ... which are all but non-existent in WebStorm, compared to VS Code's *giant* ecosystem).  Again, basically that's a function of VS Code having a bigger company, and on top of that thousands of OSS coders helping it.

Ultimately Webstorm can never keep up with its very limited pool of paid employees, which is why so many devs have switched away from it despite it formerly being the ""premium"" editor (and I say this as someone who not only used to use Webstorm, but *used to* go through the hassle of getting free licences for all my students so they could use it too).",1.0
g2on0uk,idc09e,"Hmmm, rather than view from the perspective of quantity, why not see in term of quality ? Price aside, does those quantity translate to overall better and efficient user experience  (eg performance, satisfaction, ) ? How many vscode plugins are really useful ?

Though I do find vscode tempting as most developers use it (especially in conference, meeting, probably they find it good enough) but I always end up going back to webstorm for large projects. Jetbrains'IDEs are especially enticing for multi-language projects due to cohesive design and consistent experience.

Not to say that vscode is bad, I just feel that something amiss whenever I develop code in it when project reach certain code scale.

Anyway to each their own as it always great to have people share their own thought and opinion.",2.0
g2p3f3y,idc09e,"I think I hear what you're saying: VS Code (and OSS in general) has lots of options ... and many are crap.  Webstorm (proprietary software) is curated, so it has less crap.

For me personally, I *used to* feel that curation was worth it ... but then I tried VS Code, and learned that I could get way more power by wading through just a bit of crap.  Now the idea of not having that power makes me never want to go back.

But it *is* a ""crap vs. power"" spectrum and everyone *should* use the best tool for them based on where things fall on that spectrum for them.  Maybe right now WS still has some cool refactoring that you rely on that no VS Code plug-in has: that's a completely legit reason to stay with proprietary software!

I'd just suggest that you keep an eye on VS Code.  As more and more OSS devs add more and more features ... I think over time you're going to see the crap/power ratio swing more and more in VS Code's favor.",1.0
g2aausc,idc09e,Are there any plans to allow full remote environments? VSCode does this so well at the moment. I love having a dev box in the cloud.,2.0
g2on6k6,idc09e,"Yes, we're working on that. Please watch [https://youtrack.jetbrains.com/issue/IDEA-226455](https://youtrack.jetbrains.com/issue/IDEA-226455) for updates.",3.0
g2ac0xh,idc09e,"With Dart already supported, can we expect a full support for Flutter development soon?",2.0
g2oqt20,idc09e,"Unfortunately no, we don‚Äôt plan to add Flutter support for WebStorm. 

There is an official plugin for Flutter from Google, but Flutter itself uses some technologies that are out of scope for WebStorm so the plugin is available only for IntelliJ IDEA and Android Studio.",4.0
g2bx6jh,idc09e,"I've never even heard of Flutter, but serious question: people still use Dart?  In 2020?",2.0
g2bxv67,idc09e,"With Flutter, Dart has found its true meaning yes.

It would require a bit of mobile dev background to get the idea, but in short, Dart has this rare ability to support both JIT compilation (debug mode, slow but allows hot-reload, live-reload, dev tooling) and AOT compilation (release mode, blazing fast native binaries). More info: https://hackernoon.com/why-flutter-uses-dart-dd635a054ebf",3.0
g2bau9j,idc09e,Why did JetBrains feel it was necessary to create Kotlin to write your IDEs?,2.0
g2p2ss7,idc09e,"We did not feel it was necessary. We saw an opportunity to release a new JVM language, with one of the expected benefits being the increased productivity of our own IDE developers.",3.0
g2pbz1k,idc09e,Are there any plans for further improvements for Vue3 in the upcoming releases?,2.0
g2ptv0o,idc09e,"Yes, a lot! We want to implement support for all of the new features introduced in Vue 3 and enhance our Vue application model with new information available in TS typings for components, so that we can show precise auto-completion and perform type checking within the Vue template expressions.",3.0
g28rqzt,idc09e,Just want to say thanks and that I'm a big fan. I posted it to Hacker News for visibility: [https://news.ycombinator.com/item?id=24227268](https://news.ycombinator.com/item?id=24227268),4.0
g2pm1li,idc09e,Thank you for such kind words! Let me know if you'd like to talk about your experience with WebStorm in more detail and have an interview with us :) You can find some examples here: [https://blog.jetbrains.com/webstorm/category/interviews/.](https://blog.jetbrains.com/webstorm/category/interviews/),3.0
g2r55zf,idc09e,"Sure, so many stories over 8ish years of using it haha. We're also building [America's newest stock exchange](https://ltse.com/) on JetBrains. Ping me here or on LinkedIn.",1.0
g28vcst,idc09e,And I found it through your link there. Thank you!,3.0
g29andx,idc09e,"Any plans to start supporting standardized (I use that term loosely) shortcuts, like ctrl-p? Browser devtools, vscode, atom, sublime, among some platforms are pretty synchronized in what the most common hotkeys do. Webstorm stands out with a more obscure set of keybindings.",2.0
g2pafsh,idc09e,"Hi,
Thanks for the question!
Our current approach is to offer users different keymaps with the shortcuts similar to other tools. There are VS Code, Sublime Text, Visual Studio, and Eclipse keymaps and they can be configured in Preferences | Keymaps.
We believe that it's the right way to go for us and we don't plan to change the default keymap layout that we currently have in IntelliJ IDEA and WebStorm because it's already used by millions of users across the IntelliJ platform.",2.0
g29k54d,idc09e,You can change keybindings to whatever you want,1.0
g28oj9z,idc09e,"Hey guys, I loved using webstorm. Is there any geographical discount for individual accounts you can provide?",1.0
g2p2hbg,idc09e,"Hi, alas, there are no geographical discounts, but there are quite a few special offers that one can take advantage of. You can check them out [here](https://www.jetbrains.com/webstorm/buy/#discounts). Besides that, we have the [Early Access Program](https://www.jetbrains.com/resources/eap/) that allows you to use the latest WebStorm versions for free three times a year. I hope this helps!",3.0
g2buy6x,idc09e,"Become a student, get a student email, get a free copy ;)",1.0
g28qxd6,idc09e,What's your favourite recent WebStorm feature? However big or small :),1.0
g2p0pya,idc09e,For me it's the documentation popup shown on hover. We've only recently enabled this behavior by default.,3.0
g2p49ge,idc09e,Definitely new [intentions](https://blog.jetbrains.com/webstorm/2020/07/webstorm-2020-2/#javascript_and_typescript) for convertion for / .forEach / .map loops,2.0
g2p88du,idc09e,"[Doc comments rendered in the editor](https://blog.jetbrains.com/webstorm/2020/07/webstorm-2020-2/#render_jsdoc_comments_right_in_the_editor), no need for a popup to read formatted comment anymore.",2.0
g28v64r,idc09e,[deleted],1.0
g2ase1q,idc09e,Isn‚Äôt that an eslint configuration instead of a webstorm one?,1.0
g29i8lz,idc09e,"Hey gals and guys! Awesome work y'all are doing! I've only heard great things about WebStorm from my fellow web developers.

I've always wanted to try using WebStorm but have always been intimidated by the 30-day trial thing. Will you guys ever consider a community edition like PyCharm?",1.0
g2oy0ww,idc09e,"&gt;I've only heard great things about WebStorm from my fellow web developers.  

Great to hear that!  

&gt;intimidated by the 30-day trial thing  

You should not be :D It might look scary indeed, but 30-days seems to be more than enough. After all you just need to decide whether WebStorm's worth 3 cappuccinos per month or not   

&gt;Will you guys ever consider a community edition like PyCharm? 

We try to support the community in other ways, such as giving away subscriptions to open-source projects and students. You can learn more about our special offers here: http://jetbrains.com/webstorm/buy/#discounts. Also, if you like working with the latest versions, our Early Access Program version are free-of-charge. The EAP for 2020.2 has just been finished with the release, but 2020.3 should start pretty soon, so stay tuned!",4.0
g29itcd,idc09e,"In the 2020 Roadmap, it was announced that work would be done to definitively fix the issues with shortcut for non QWERTY keyboard (such as commenting shortcuts and tool windows shortcuts that do not work on AZERTY).

Is there any progress being done on this? Haven‚Äôt read anything new for a while in the issue on YouTrack.",1.0
g2p0049,idc09e,"Hi, 
yes, we've been working on that a lot lately and we hope to deliver some solution later this year. 
The task consists of 2 big parts. First, we need to make sure that the IDE gets the correct key events (unfortunately, that was not always the case) on all OSs for different keyboard layouts ‚Äì and we've done quite some progress in that direction in the 2020.2 release with more fixes to come in 2020.3.

Second part is that we need to choose a new strategy for the shortcuts that include symbols that are not present or not reachable without extra modifiers ‚Äì this proved to be harder than we thought. 

We would love to hear your thoughts on that. Would you be satisfied with the approach when the IDE provides separate keymaps for, say, German or French keyboard layouts for users to choose from?",5.0
g2p6nis,idc09e,"I think it's the solution adopted by most games, right? They detect the keyboard locale, and adapt the mapping based on this. So having an initial auto-detect, and the possibility to select a variant for the keymap would be ideal: I'd select the keymap (default or macos for example), and then in a second select, I could select the variant (French, german, english, ‚Ä¶).

Another solution is to mix key events source: one would be the letter used (so CTRL+A remain the same for all keymaps), and keycode used for non-alpha keys so it's always the same key used, no matter the character it produces. For example, to open the project tool window, alt+1 would be the shortcut in English, and alt+&amp; would be the french one.

This way, CTRL+A does not become CTRL+Q in French, but ALT+1 always use the key of 1, or ctrl+/ always use the key / key (? in French), and it avoid the need of distributing keymaps for each language. Does this solution seem possible?",1.0
g2bvkyi,idc09e,"This has been one of the hugest differences I've noticed between Webstorm and VS Code.  In Webstorm I felt I had a million issues I was waiting to see fixed ... and they all just sat there.

I know this is subjective, and I know my issues aren't everyone else's, but ... subjectively it feels completely different with VS Code.  At least half the time when I go looking for something missing ... it's already in the editor, or available as a plug-in.  In more than half of the remaining cases, the ticket is actively being worked on, and is released 1-3 months later.

The ""my issue is going to sit there never getting worked on"" thing was 90% of my Webstorm issues, and &lt;20% of my VS Code ones.  But again, YMMV.",1.0
g29m6z1,idc09e,"There is of course a lot more e.g.

1.Vertical/Horizontal editor window
2. Powerful refectoring e.g. Rename types, extract function, variables etc.
3. Search of usages of a symbol
4. Automatic imports",1.0
g2bwdd6,idc09e,"A lot more what?  This looks like a reply to a thread, but it's sitting on its own.

P.S. Again, not sure the context, but FYI VS Code has everything you listed, except symbol usage search (it might even have that, but I only use global find/replace personally).",1.0
g2gzipb,idc09e,Can you perhaps list the plugins you use for refactoring code? I doubt they are as powerful as WS's refactoring but I would mind trying them out,1.0
g2h5kgb,idc09e,"Just to qualify,  obviously the refactorings I use/value might be different then the ones you do.  But personally ... in VS Code I *was* using the JS refactorings extension plus some smaller ones, and that gave me more than Webstorm had (*that I cared about*) when I left.

But then I recently discovered: **Abracadabra** (https://marketplace.visualstudio.com/items?itemName=nicoespeon.abracadabra).  I'm *loving* Abra: it integrates with VS Code much better than the other extensions, and has tons of great refactorings in one package.

Since I work with React I also use VS Code React Refactor for some JSX-specific stuff.  Those, together with Prettier and VS Code's built-in features, give me a really great editor ... and again, I say that as a former long-time WS user, and even as a teacher who used to help students attain free copies through their program.",1.0
g2b3922,idc09e,"I have seen a comment about you refactoring your products architecture to implement and offer users similar options of remote development as VSCode does. Is that true? Can you shine a bit of light? What we can expect in the future as users? What are the major reasons that you have to refactor the products architecture to accommodate such feature? 


Thanks, looking forward to know more! Huge fan btw.",1.0
g2om7po,idc09e,"Yes, this is true. IntelliJ IDEA was initially created as a monolithic application with tight coupling between UI and the logic that analyzes the source code of your project. In Visual Studio Code, the architecture is different: all the knowledge about the source code of your project is held by a separate process, communicating with the editor frontend over the language server protocol and not coupled with UI. The refactoring we're working on involves introducing a similar separation between language backends and the UI into the IntelliJ Platform codebase.

As for what you can expect, the simple answer is that all major scenarios for remote development will be covered. However, we aren't ready to announce specific features and timeframes.",4.0
g2b457n,idc09e,"Is there a way to exclude files while searching for symbols/classes by a regex pattern?  Currently, I only see the option to filter based on file extension and in a particular scope. In this setup I generally create a lot of scopes (feature sources, testing sources, architecture sources, coverage reports, etc) to get the same effect, but I would like to be able to search for symbols and add a regex pattern to exclude certain files or paths from the search results.  Is this doable and I'm just a terrible Webstorm user for not figuring this out by now?

My apologies if this is easy and I've just been missing it somehow. I've been using JB tools for almost a decade, and can't live without them.   I've just never found a ""no-hassle"" way to do this.

Webstorm is my primary IDE currently. The refactoring tools are second to none.  Thank you for making such a great product!",1.0
g2ooj2t,idc09e,"Thanks for using our tools! Unfortunately there is no option to quickly set a path filter in ""Go to symbol/class"" popups. So using [scopes](https://www.jetbrains.com/help/webstorm/2020.2/settings-scopes.html) is justified. ""Find in path"" has it, but it's another case of course.",3.0
g2bgizf,idc09e,"The file mask support glob and multiple values separated with `,`",2.0
g2bahms,idc09e,What's up with that svelte support?,1.0
g2om5tu,idc09e,"We don‚Äôt plan to add out-of-the-box support for it at the moment, but we‚Äôve started collaborating with the author of the [popular Svelte plugin](https://plugins.jetbrains.com/plugin/12375-svelte), who has already done outstanding work on it, to help enhance Svelte support available with this plugin. We‚Äôll keep helping with that. Here's the related feature request that you can follow for updates: [https://youtrack.jetbrains.com/issue/WEB-27366.](https://youtrack.jetbrains.com/issue/WEB-27366.)",4.0
g2boqfp,idc09e,"I've been a happy paying user of JetBrains IDEs since 2005. So rest assured my question is very candid, no hard feeling here üòÄ.

I found instances throughout the years where your layer on top of the Typescript language service is bailing or failing to provide good completion where VS Code would work properly. Here is a non exhaustive list of the (now mostly fixed) issues I've been involved with:

* [https://youtrack.jetbrains.com/issue/WEB-36868](https://youtrack.jetbrains.com/issue/WEB-36868)
* [https://youtrack.jetbrains.com/issue/WEB-36849](https://youtrack.jetbrains.com/issue/WEB-36849)
* [https://youtrack.jetbrains.com/issue/WEB-34084](https://youtrack.jetbrains.com/issue/WEB-34084)
* [https://youtrack.jetbrains.com/issue/WEB-46680](https://youtrack.jetbrains.com/issue/WEB-46680) (the latest one, very frustrating day to day)

It's seems to be a lot of work to maintain and keep right and when it fails it actually degrades the baseline experience. So, I was wondering what's the rational for it and it which case it does a better job than the native TS service?",1.0
g2ore7l,idc09e,"TypeScript service API is very limited and for providing smart JavaScript and TypeScript support with inspections and refactorings we have to keep our own TypeScript model.


Also, without the model, it is impossible to support e.g. cross-languages integration (e.g. when we inject¬†css in some tsx constructions) and other smart IDE features.


Of course, as a result, sometimes types in our internal TypeScript implementation differ from TS service types but we are trying to fix such issues and to keep our model as close as possible to the service model.",3.0
g2bpfg6,idc09e,What‚Äôs about new design for all of your ideas?)),1.0
g2p2i9a,idc09e,"Hi,
Thanks for the question. 
We don't have plans for a full redesign of the UI. First, it would be rather impossible to implement and deliver a complete redesign for a product this big. Second, it will definitely make quite a lot of users very unhappy.

What we do instead is refreshing, redesigning and improving parts of the UI one by one.

Here are some of the recent examples of the UI components in the core platform that were updated: inspection widget on the top-right corner of the editor (v2020.2), updated light theme and the new editor [font](https://www.jetbrains.com/lp/mono/), and new find fields.

We also do some OS-specific UI updates. For example, we are planning to implement a bunch of changes for the macOS Big Sur release.",2.0
g2brj9w,idc09e,So that merchandise store... super duper close yet? :P I've been dying for a Webstorm/IntelliJ hat for 6 years now.,1.0
g2opii3,idc09e,"Unfortunately, no, this project ended up being much more complicated than we expected, so there is still no ETA :( As soon as there is any news, we'll share them through our social media channels.",3.0
g2bvtqu,idc09e,"&gt;We‚Äôve never done anything like this before, but we feel the time has come to try something new.

Are you doing it now because VS Code is eating your lunch?

Seriously: what made you decide ""we don't need to bother engaging with our community"" before ... but decide you should now?  I ask as a (former) long-time Webstorm user who would have *loved* to see you just engage with your own bug threads more, let alone come talk to the community.",1.0
g2ove0r,idc09e,"The short answer is no, it's not about it :)  
First, we've been working from home for quite a long time, without the possibility to talk to our users that we previously had (we used to go to various conferences across the globe). Online conferences don't provide the same experience, unfortunately. As usual, we've been actively communicating with users on Twitter all this time, but we still felt like we needed more. Second, some changes inside the team inspired us to try new things.   
As for our bug threads, we're sorry to hear that you felt this way. We understand that this problem exists and have been trying to update some issues more actively, especially when it comes to the [WebStorm issue tracker](https://youtrack.jetbrains.com/issues/WEB).",2.0
g2p2l3g,idc09e,,
g2c01ih,idc09e,Still not able to use prettier on save file. Instead I am using cmd + alt + L to format code. The file watcher setting are not working for me dont know why maybe its to confusing.,1.0
g2pe5rd,idc09e,"Hi, 
Yes, as [u/SuperTare21](https://www.reddit.com/user/SuperTare21) mentioned, in the new 2020.2 version you can configure Prettier as the default IDE formatter in the settings ""Preferences | Languages &amp; Frameworks | JavaScript | Prettier""",2.0
g2gaphu,idc09e,Upgrade to 2020.2. You can have prettier as your default formatter and it also has an option to run it on save. No need to manually set up file watchers.,1.0
g2c0yg8,idc09e,Why was the EAP version removed?,1.0
g2on8d4,idc09e,"Hi, the Early Access Program is closed at the moment. As soon as we reopen it, you'll be able to download the EAP builds from [this](https://jetbrains.com/webstorm/nextversion) page on our website (you won't be able to open it at the moment as the EAP is closed) or using the Toolbox App. Please monitor our social media for the EAP 2020.3 announcements (you can expect them on our blog [here](https://blog.jetbrains.com/webstorm/category/eap) and [Twitter](https://twitter.com/WebStormIDE)).",2.0
g2p6cc3,idc09e,How come y'all closed it though? :I,1.0
g2p927h,idc09e,"Not sure I understood your question. We open the EAP and then close it three times a year, for a limited period of time.",2.0
g2pb2ii,idc09e,"ohhh I see, sorry, didn't know that",1.0
g2cdnap,idc09e,Do you have some plans with the implementation of Imba language? It has maybe more potential than Svelte.,1.0
g2p2yk8,idc09e,"Hi,
At the moment we don't have plans to add Imba support, sorry.
If you're interested in creating a plugin for it, let us know ‚Äì we'd be glad to answer your questions.",2.0
g2ctxxm,idc09e,Where are you headed with support of the typescript language server? My company uses an in-house fork of TS that supports custom resolution and I‚Äôd really love to be able to use it with webstorm,1.0
g2p6qzq,idc09e,"Hi,¬†You can specify¬†the fork in the TypeScript settings: ""Preferences | Languages &amp; Frameworks | TypeScript -&gt; TypeScript"". 

We've tested it with *ttypescript*, and it works¬†fine.",2.0
g2g6c7o,idc09e,"I have two questions regarding some requested features and if there are any plans on actually implementing them

1. IDEABKL-708 Collaborative development

This issue was created 16 (SIXTEEN) years ago and has more than 2k votes on it. We would love to have something like VSCode's Live Sharing feature. To be honest everytime I need to share something with my colleagues, especially in this day and age where most of us work from home I find myself (actually the entire team) switching to VSCode just for this one thing that Webstorm is missing. 

2. WEB-35215 CSS modules, SASS/Less: provide completion for selectors created using &amp;_suffix

Since we are using (S)CSS Modules this is part of our daily routine and its a bit annoying that webstorm is not able understand it.

We love Webstorm and even though I tried all the Ides out there I keep coming back to it.

Thanks for taking the time to answer (if you do)",1.0
g2p3yd4,idc09e,"Hi u/SuperTare21,
Thank you for sticking with us!

&gt; IDEABKL-708 Collaborative development

We are currently working on that and we will announce an early preview program soon. Please stay tuned!

&gt; WEB-35215 CSS modules, SASS/Less: provide completion for selectors created using &amp;_suffix

We are planning to implement it in the WebStorm 2020.3.",3.0
g2gyjt2,idc09e,"I basically have two questions:

1.How complicated it would be to allow us to build plugins using javascript?

2. Is there any plan for better support for (S)CSS Modules auto-completion for nested classes using the ampersand (ie: &amp;__element or &amp;__element--modifier) 

If the answer to the first question would be that it is on the road map than building the functionality from the second question would be trivial to implement. Its a bit frustrating that auto-complition for nested classes is not a thing since SCSS/LESS has been here for ages and most people use it on a daily basis.

Ending on a positive note, I've been a WS user for 10 years and I love everything about it. I tried a few times to convert to VSCode but there are (still) a few things that WS does 10x better.

Thanks WS team for building such a great product and making my life easier!",1.0
g2on5py,idc09e,"Hi u/ovidb!

IntelliJ IDEs run on Java Virtual Machine, so it's pretty hard to support JavaScript code. However, you can use Kotlin (https://kotlinlang.org/), which has a much more familar TypeScript-likeish type syntax and tons of syntax sugars to simlify coding. It is also compilable to both JVM and JavaScript and thus, when you fell in love with Kotlin, you can use it for Web development as well. A good example of an IJ plugin written in Kotlin is VueJS (https://github.com/JetBrains/intellij-plugins/tree/master/vuejs).     


As far as SCSS/LESS completion support is concerned we have that issue on our radar - [https://youtrack.jetbrains.com/issue/WEB-35215](https://youtrack.jetbrains.com/issue/WEB-35215) . You can vote it up.   


\&gt; Thanks WS team for building such a great product and making my life easier!

  
It's great to hear that :) Thanks!",3.0
g2hgmw1,idc09e,"Currently the ""Collaborative development"" feature is [the most requested one on YouTrack](https://youtrack.jetbrains.com/issues?q=order%20by:%20votes%20desc&amp;u=1) and it's been in progress since March. Do you have any planned release date for it?",1.0
g2oyz2u,idc09e,"Hi, the development is still in progress. We don't have a release date yet but we will announce the EAP very soon. Stay tuned!",3.0
g2lnil8,idc09e,"Hi Webstorm Team.  


I'm using the Webstorm part from PyCharm and want to try learning Vuejs.   


I manage to get the default project to work, but do not understand how to make routing work in this structure. Can you give a simple example for a single page webapp that accepts from input on the first page, does a http POST request with that input to get some JSON and then displays this on a second page?  


Or are there example projects or any beginner-friendly ressources out there on how to get started with vuejs &amp; webstorm?",1.0
g2psvbe,idc09e,"Hi u/576p! 

&gt;Can you give a simple example for a single page webapp that accepts from  input on the first page, does a http POST request with that input to  get some JSON and then displays this on a second page?

To achieve that, you need to create a back-end server (e.g. using Node.js Express), which will be handling your requests. Here is a pretty good tutorial, which can be a starting point for you: [https://bezkoder.com/vue-js-node-js-express-mysql-crud-example/](https://bezkoder.com/vue-js-node-js-express-mysql-crud-example/). There is plenty of resources you can find out there to learn Vue, a lot of them are free - e.g. [https://www.tutorialspoint.com/vuejs/index.htm](https://www.tutorialspoint.com/vuejs/index.htm) . I think it's good to start with a single page application, which doesn't really communicate with the server to get familiar with the framework itself. 

To get more familiar with WebStorm you can watch tips &amp; tricks videos on youtube (e.g. [https://www.youtube.com/watch?v=x8y\_6Gg28GI](https://www.youtube.com/watch?v=x8y_6Gg28GI)) or our guides [https://www.jetbrains.com/webstorm/guide/topics/](https://www.jetbrains.com/webstorm/guide/topics/)",3.0
g2n1uhj,idc09e,"Hello, this is my first time trying to write a code, can you show me how? Im still in school and during quarintine it gets boring so I was thinking of making a game, can you help me?",1.0
g2omy1x,idc09e,"Hello, there are quite a few learning platforms out there that you can try, some of them, e.g. https://www.freecodecamp.org/, are free. You may want to try asking for advice or looking for the related threads in these subreddits: https://www.reddit.com/r/learnjavascript/ and https://www.reddit.com/r/learnprogramming/. From our side, I can suggest trying what JetBrains Academy has to offer. You can learn more about it [here](https://www.jetbrains.com/academy/). I hope this helps :)",3.0
g2nt9il,idc09e,"1.  At what level do the different IDE's made by jetbrains share development, features and code?

2. If a new platform improvement is developed for one IDE, is it generally a drop in feature for the other IDE's by jetbrains or does it usually require a lot of tweaking or extra development to implement?

3. What do you believe are the benefits of Jetbrain's approach of having many different IDE's vs having one IDE to do it all?  What are the drawbacks of this approach?",1.0
g2op9pi,idc09e,"Hi,
We have a common core that is called *IntelliJ Platform* and all our IDEs are built on top of that platform and consist of a set of plugins. For example:

* WebStorm = Platform + JavaSript and TypeScript + CSS + ~ 20 plugins related to web dev; 
* PhpStorm = Platform + JavaSript and TypeScript + CSS + PHP + Database tools + ~ 30 plugins related to PHP and web dev;

There might be some small additional customizations, mosty UI, e.g. what tool windows are shown by default or what keymaps are bundled, that are specific to the IDE and its target audience.

So PhpStorm includes all JS / TS features that WebStorm has because it uses the same JavaScript and TypeScript plugin, and the same is true for all other IDEs.

The platform and the plugins for all IDEs are stored in a monorepo and all developers have access to (and can modify) all code in the repo.


Regarding the third part of the comment: 
&gt;What do you third are the benefits of Jetbrain's approach of having many different IDE's vs having one IDE to do it all? What are the drawbacks of this approach?

We have a *polyglot* IDE that supports lots of types of development, and it is called IntelliJ IDEA, and the IDE includes almost all other IDE by default or via official plugins. If you have to work with several languages at the same time it is the best choice, but if you use one language it is more convenient to use a more specific IDE for the language because it includes all necessary plugins by default and its UI is configured to work with the technologies and nothing else. 

For example, IntelliJ IDEA Ultimate includes JavaScript and TypeScript plugin, but for Vue support, you have to install a plugin from the plugin repository unlike WebStorm which includes the Vue plugin by default.""",2.0
g2ox07a,idc09e,[deleted],1.0
g2pg1ik,idc09e,"Hi, 
Yes, it is a problem and, unfortunately, we aren‚Äôt sure how to solve it because we don‚Äôt have enough options to cover some settings that can be specified in Prettier. So we can suggest doing the following:

- Apply prettier code style from package.json
- Enable prettier as the default formatter in Preferences/Settings | Languages &amp; Frameworks | JavaScript | Prettier",2.0
g28y6bt,idc09e,"How do you test webstorm as an application in development?

What are your KPI's as a project?

Love Webstorm btw, great job.",0.0
g2oxuwb,idc09e,,
g28rk1m,idc09e,,
g2b1tey,id8se9,Wait... Are you affiliated with Alibaba and/or Taobao? Or are you a separate entity and using their names in your products?,2.0
g2fn4c3,id8se9,"Yes, we work in Alibaba, Taobao's technical department. Midway is a Node.js technology product of Alibaba.",2.0
g2g2ov3,id8se9,"It looks interesting and easy to use at first glance. In what way would you say midwayjs differs from like serverless.com?
As far as I can tell from the introduction both seem to want to do the same thing: deploy serverless functions in a cloud provider agnostic way.
For instance with serverless.com I could use the exact same function code and only need to change config to deploy to different providers. In your getting started guide I seem to have to create a configuration but also write a wrapper class.

Maybe you can explain the main unique selling points of midwayjs to me.",1.0
g3d86rs,id8se9,"In serverless, our goal is the same. We solve the problem from the the framework, which is the same as koa/express. We provide a light runtime to wipe out existing aws, aliyun fc, tencent and other cloud platform.So that user codes can run on different cloud platforms, and even now we have realized the migration of traditional applications to this platform without modifying the code by our tools and runtime. Serverless.com does not do anything at the code level, which is also the biggest difference from them.",1.0
g27fp1a,id8oq9,"The vibe of your article seems to be that you felt you must go with the ""general flow"" of react/js community to try all the new things. But i tell you the secret - you dont need to. Just use subset which solves your problems.

For example styles

&gt; In Svelte, you scope your styles with your components. The compiler cleverly renames your classes and CSS pointers so that your instructions don‚Äôt leak into other elements.

we have been writing css in https://github.com/css-modules/css-modules in React for years by now and its exactly what are you experiencing in svelte now. Or you could use shadow dom in React.

But if svelte solves your problems? Good.",110.0
g27p8gm,id8oq9,"I think one perceived advantage of Svelte's approach is that you get the benefits of single-file components, whereas with CSS Modules, your CSS lives in its own separate `.css` file. Although, you could always use some new fancy 5th-gen CSS-in-JS solution.

Personally, I love CSS Modules (specifically m-css, since I use rollup mainly) and use it on my non-Svelte projects. :)",11.0
g27s7t9,id8oq9,"JSS (a CSS-in-JS option) isn‚Äôt really _that_ fancy. Esp if you are using MaterialUI in React. Using MaterialUI, JSS is a pretty natural fit and not much diff than CSS all things considered.",4.0
g27t2j6,id8oq9,"Yes, I did not mean to say the concept of CSS-in-JS is in itself ""fancy,"" just that there are newer fancy libraries that aim to eliminate the JS runtime of having to dynamically create &amp; add CSS to the DOM for performance reasons (callstack/linaria is one such library that claims to have zero runtime).",3.0
g28bw8h,id8oq9,You can use [astroturf](https://github.com/4Catalyzer/astroturf) which is basically single-file CSS modules.,0.0
g27ro53,id8oq9,Sounds like `styled-components` or `emotion` is the closest to what they like,9.0
g282xcs,id8oq9,Styled-jsx would probably be the closest equivalent.,0.0
g285n3b,id8oq9,"Yes as far as matching both the syntax style, and the scoping. Styled JSX would definitely be the closest üëç",1.0
g28coqs,id8oq9,"Yeah, all of the issues that he is mentioning are already solved in existing frameworks. 

In Vue for example the scoped styles in single file components were there since as far as I remember having single file components. SSR is also easy.",3.0
g28mwjx,id8oq9,"&gt; we have been writing css in https://github.com/css-modules/css-modules in React for years by now and its exactly what are you experiencing in svelte now. Or you could use shadow dom in React.

1. it's not exactly the same. a simple example: the svelte styles are co-located with the component, not in a separate file.
2. svelte has first-class support for this styling method, this means tooling is actively built around supporting it. react support for the various accepted styling methods is fragmented.
3. the react community is constantly evolving ""best practices"" which means the third-party libraries are evolving as well. some component frameworks are in css modules, some are using different css-in-js solutions (styled components, styled-jsx, jss, etc), now css utility frameworks such as tailwind are being pushed (along with its new, but still in early access, tailwind ui).

Honestly, the react ecosystem is in constant whiplash _especially_ when it comes to styling and it's a very frustrating environment to be productive in.",1.0
g28d5jy,id8oq9,"Rant with negative energy:

I've seen quite a few comparisons between vue/react/ svelte and so many of them are just bad. 

Typical problems:

* author has experience with one framework and very limited experience with the others
* advertising features based on marketing by the framework that when you dive into it can be good or bad
* related to the previous point, but using frameworks for different types of projects. Especially on very greenfield projects that are barebones and don't require the amount of code a project with dozens of devs might need
* Worrying about pointless optimizations. Pointless because they can be solved using smarter architecture like asynchronously loading content, or pointless because the metric is situational and unlikely to be the bottle neck. 

Like the thing about scoped css, that's available in vue and probably in react as well with some library. 

I see so many posts about how great svelte is so let me add a counterpoint: I don't really like svelte. It's alright, but I don't see how it's so much better. In fact, if Richard Harris is anything to go by, it's going to get more complicated with time as he sees svelte as not just a framework but a language for reactive applictations. 

The tooling wasn't there, and the overall ecosystem was behind with svelte as well. 

There's also so much bullshit about the vdom and things like ""disappearing"" framework. The diffing has to happen at some point. Whether or not the vdom is going to be slower will depend on the implementation, and on that matter, the code quality of the framework. 

If someone likes svelte, that's great for them. But the amount of misinformation that gets spread around in these comparisons annoys me.",23.0
g290ei3,id8oq9,[deleted],0.0
g29qpae,id8oq9,How would that be possible? Isnt the purpose of the vdom to reduce dom modifications for live interactions? How could you do that at build time?,4.0
g27hg5b,id8oq9,"Svelte, just like Vue, invents a new mini-language inside the pseudo-HTML, which you have to learn. And it's very bizarre to my eyes:

    {#if x &gt; 10}
        &lt;p&gt;{x} is greater than 10&lt;/p&gt;
    {:else}
        {#if 5 &gt; x}
            &lt;p&gt;{x} is less than 5&lt;/p&gt;
        {:else}
            &lt;p&gt;{x} is between 5 and 10&lt;/p&gt;
        {/if}
    {/if}

Svelte is cool &amp; new, but I'd rather stay with JSX and CSS modules. Plus, React is battle-tested, and not a novelty anymore. Experience will teach you that being boring is a good thing when it comes to long-term maintenance.",61.0
g27irw2,id8oq9,"To be fair, in Vue you can just as easily use JSX. I don't, because I prefer the temple syntax.  But this isn't really a weakness in vue, it's an option.",14.0
g27qoim,id8oq9,"Do you bring functionality into HTML - giving you markup like Angular, Vue, Svelte

Or do you bring HTML markup into JS - giving you JSX.

I think this depends heavily on the team and project.  If you have designers or junior devs who are great with HTML, they can often pick up the new markup syntax.  If a lot of your code in the project is HTML pages with very little functionality, adding a bit of extra code is pretty easy.  


If you have a bunch of JS programmers who write HTML out of necessity, then JSX is great.  If your project is heavy on functionality and not design or content, JSX is a nice choice.

I never saw one as better than the other, just different and easier for some people to understand, or better fits for certain projects.",11.0
g27lw9z,id8oq9,"Angular did this first! Oh wait, template engines for Backbone were first!

I have never understood how templating languages are that appealing for people for writing dynamic application. Want list some items? You have for loop in language ffs, no need to create some template pseudo code written in attributes (ng-for i am looking at you!). For simple quick static templating? probably good.",18.0
g27rt4n,id8oq9,"Tell that to the PHP community, using template languages in a language that was literally designed to be a templating language for C.",10.0
g4qv8dp,id8oq9,for \*Perl,1.0
g27uqqa,id8oq9,"The point is, Svelte templates are declarative and the logic is handled at compile time. Change a value at runtime, the appropriate updates just happen, no reconciler involved.

If you want to use JS to manage your updates you'll have to run that JS at runtime whenever something changes, and Svelte will win on performance by a mile.",3.0
g28d07l,id8oq9,"Svelte is only marginally faster than Preact in runtime and startup benchmarks https://krausest.github.io/js-framework-benchmark/2020/table_chrome_84.0.4147.89.html from this suite. And theoretically, no amount of precompilation will help when a user interacts with the site and an update needs to happen, which is the majority of the time. What am I missing?",2.0
g28dojo,id8oq9,"&gt;And theoretically, no amount of precompilation will help when a user interacts with the site and an update needs to happen, which is the majority of the time.

That's true for the update itself, but determining whether the update needs to happen, i.e. reconciliation, is the (substantial) piece of work that svelte sidesteps completely.",1.0
g294avj,id8oq9,"Preact, Inferno and other vdom libraries do it and Inferno for example is faster than Svelte by every metric. So I doubt skipping it is really as magical as Rich Harris says.",2.0
g28o231,id8oq9,"&gt; I have never understood how templating languages are that appealing for people for writing dynamic application.

Because in many cases a reduced language is a plus _as long as_ you can still do the things you need to do. It allows for reduced code complexity which is good both for coders (for obvious reasons) and computers (compilers and runtimes).",1.0
g27j05o,id8oq9,"To be fair, JSX is somewhat of a new mini-language inside pseudo-HTML.

But JSX is not a procedural language, as this seems to be. JSX is descriptive, which lends well to HTML. Looking at this syntax, I don't see why someone go use it instead of the Javascript you already have available.",36.0
g27m3lo,id8oq9,"JSX is syntactic sugar for javascrtipt. Which means, it has full capability of javascript language.

Template language is subset of funcionality of programming language (for example javascript)",24.0
g27xix8,id8oq9,"&gt;JSX is syntactic sugar for javascrtipt. Which means, it has full capability of javascript language.

I believe that is not the case. For instance, what is the syntax for an if-else statement in JSX?",-6.0
g281ypk,id8oq9,"That's a bit like asking what the syntax for an if/else statement is in a function call - it's not really a question that makes sense.

JSX is literally just syntax sugar for creating a bunch of objects representing the HTML tree. You could replace all JSX directly with function calls, and not even lose much expressiveness. For example, the following two samples are identical:

    const html = (
        &lt;div&gt;
            My name is
            &lt;span id=""name""&gt;{name}&lt;/span&gt;
        &lt;/div&gt;
    )

(is equivalent to)

    const html = createElement('div', {}, [
        ""My name is"",
        createElement('span', {id: ""name""}, [
            name
        ]),
    ])

So when you ask how to write an if-statement in JSX, what you're really asking is how do you put an if-statement when calling a function, and the answer to that is the same as it would be in JavaScript - you can use the ternary operator, you can pull out a variable and use if/else statements, you can invent some over-complicated solution involving more function calls, or anything else you want - but it's always just JavaScript.

This is in contrast to many templating languages, that are usually a subtly different language built on top of JavaScript, that compiles to JavaScript. One of my favourite examples of this is the old AngularJS templating language, which basically parsed all expressions in templates by hand. This meant that you could use any JavaScript construct that the AngularJS team had coded into template compiler (which was pretty much the whole of JavaScript at the time), but anything newer was impossible to use, and would cause the parser to reject the template, even if it were perfectly valid (albeit new) JavaScript syntax.",20.0
g283dry,id8oq9,"That is exactly my point. This statement:

&gt;it has full capability of javascript language.

is what I was disputing. JSX does not have the full capability of Javascript because those capabilities are not in its scope. Nor are promises, I/O, or a host of other things.

Anyway, we're churning water. Have a great day!",-12.0
g289unv,id8oq9,"&gt; promises, I/O, or a host of other things

you definitely *can* use those things in JSX, it just doesn't make much sense to do so.",8.0
g28eb9s,id8oq9,"Promises, I/O, and other features can be used *with* JSX, not *in* JSX.",-10.0
g28g8tx,id8oq9,"I understand the point you are trying to make but it seems to be only technically correct and pedantic. As we all know, JSX is just JS which returns html. I think we would be fine to say ‚Äúyou can use all JavaScript functions in jsx‚Äù and we all understand what we are talking about. Further, you can use them _in_ jsx as you can write js functions and return them inside the jsx by wrapping them with {}.",7.0
g28sj1j,id8oq9,"It seems to me that many people here do not understand with the JSX ends and the JavaScript begins, where the boundaries are between the two.

This is three JavaScript statements, that happen to have two JSX expressions in them.
```
if ( foo ) {
   return &lt;h1&gt;Foo!&lt;/h1&gt;;
} else {
   return &lt;h1&gt;Bar!&lt;/h1&gt;;
}
```

JSX does not have an if-else statement, nor a return statement, but JavaScript does. Therefore JSX does not ""has full capability of javascript language"". Rather, JSX compliments JavaScript and can be easily used inside JavaScript.",-2.0
_,id8oq9,,
g281g5h,id8oq9,"What he meant was JSX is syntactic sugar ""for writing certain kind of javascript code"" its not that JSX can be used to write all javascript programs.",7.0
g2858pv,id8oq9,"Agreed completely. JSX is great ""for writing certain kind of javascript code"" but does not ""has full capability of javascript language"". We are in agreement.",-6.0
g28eko6,id8oq9,"Well, since you write JSX as part of JavaScript, you won't believe it, but it's https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else

You don't need if...else, Promises or for loops because you already have them. JavaScript has them.",3.0
g28fu5q,id8oq9,"Right, those are parts of Javascript, not JSX. JSX does not have (nor need) an if-else statement because Javascript already provides that.

Hence, JSX does not ""has full capability of javascript language"".",-2.0
g28gr3h,id8oq9,"You're just deliberately misunderstanding the person you've replied to.

If you're trying to say that Vue/Angular templates do provide full capability of a language, you would be wrong. It takes the whole Angular compiler and special syntax to actually do what languages do. With React it's JSX and... JavaScript.",3.0
g28rupy,id8oq9,"I'm making no comparison to Vue or Angular. Is that what everyone here is on about, is there some sort of competition between React and Vue or Angular so people think I'm taking sides?

&gt; With React it's JSX and... JavaScript.

You're proving my point. JSX is complimented by JavaScript to provide the features it doesn't. That's the right way to do it.

I actually very much dislike ""templating languages"" that just ""provide"" the same features (for-each, if-else, etc) that the core language provides. JSX doesn't do that: JSX just wraps (syntactic sugar) the createElement() method in a fashion that lends itself very with the hierarchical organization of elements. That's why it is so revolutionary and so good.",-1.0
g29obxc,id8oq9,"Aside from ternaries, you can set up the babel plugin fir the do {} blocks proposal",1.0
g29un81,id8oq9,"That's JavaScript, not JSX.",1.0
g2ef1tz,id8oq9,"I've done it with an IIFE just fine in one of my projects.

{
(()=&gt; {if(derp) return &lt;Derp /&gt;})()
}",1.0
g2g8bpv,id8oq9,"That's a JSX expression inside a JavaScript expression. The if() statement is not part of JSX.

But I've figured out the problem. Apparently, other ""competing"" systems, such as Angular, do have if() statements inside their templating language. I did not realize that the React community would feel attacked by my pointing out that the if() statements are part of JavaScript, not JSX, and others have said that I'm pedantic for stating such. 

In the context of comparing JSX to Angular templates, then I agree that stating the presence of an if() statement in Angular and the lack thereof may be considered pedantic. JSX doesn't have an if() statement because it doesn't need one: JavaScript has a perfectly fine if() statement that can be seamlessly used with JSX.",1.0
g2hqb5a,id8oq9,"&gt; That's a JSX expression inside a JavaScript expression.

That is also inside of a jsx expression.",1.0
g2iximy,id8oq9,"I see where you're going, and you're not wrong.

JSX allows any JavaScript expression (but not statements) to be used as a a props value. I personally don't see this as ""blurring the lines"" but I'll accept if somebody else does. However, the ability to use JavaScript expressions does not mean that JSX ""has full capability of javascript language"" which is what I was disputing.

Anyway, that's the great thing about JSX. Instead of inventing another redundant templating language it allows us to use the JavaScript that we already know.",1.0
g280x0c,id8oq9,"There is none: you literally cannot express an `if`/`else` in JSX (without creating your own custom components that simulate `if` and `else`).

You can however ""drop into Javascript"", and render a JS expression (and that expression can include ternaries, which are `if`/`else`-like) ... or you can use regular old Javascript `if`/`else` to build a variable, and drop it into your JSX.",1.0
g28533g,id8oq9,"Right, that is why JSX does **not** have the ""full capability of javascript language"". You support my position.",-6.0
g286cht,id8oq9,"Whoops; I misread things a little.

ArcanisCz is like half wrong/half right. They're mostly right, but the bit about ""full capability of JS"" seems off because of how they said it (it *is* true in the sense that you can say ""`if(foo) return &lt;div/&gt;`"" ... but then one could also argue that `if` is ""outside"" the JSX, so in that sense you're right).

After that I saw you disagree, and thought you were disagreeing with their overall point (although now I can see you disagreed *with that bit*).  And yeah, I did wind up agreeing with you on that bit :)",3.0
g27n1xt,id8oq9,"Jsx is not a mini language of any kind, its just an easier way to write React.createElement. So no, thats not to be fair.",18.0
g27xozm,id8oq9,Of course JSX is a language. It's name is even an acronym for **J**`ava`**S**`cript e`**X**`tensible Markup Language`.,-7.0
g27ynf1,id8oq9,"No, you added the ""Markup Language"" part yourself. Check the official react page to find the official definition of JSX.",6.0
g284y1y,id8oq9,"Interestingly, neither the [Introducing JSX](https://reactjs.org/docs/introducing-jsx.html) page nor the [JSX In Depth](https://reactjs.org/docs/jsx-in-depth.html) page expand the acronym. However it is [widely accepted](https://stackoverflow.com/questions/39461805/what-does-jsx-stand-for) to be JavaScript XML. If you have another official resource that does expand the acronym I'd love to see it.",-1.0
g285w67,id8oq9,"No, its only widely accepted within people reading that question on Stack Overflow. Not to mention that its wrong, JSX does not stand for ""JavaScript XML"" like that Stack Overflow answer is saying.

The abbreviation stands for what you said in the previous post, but we're not debating what the abbreviation stands for, we're debating what JSX is. Read the official react page, it tells you what JSX is.",4.0
g286uxd,id8oq9,"Thank you, it's also JavaScript XML among the people I know. What does JSX in fact stand for? Thanks.

The Wikipedia page for [React](https://en.wikipedia.org/wiki/React_(web_framework)) also mentions that the acronym stands for JavaScript XML, so I've added a note to the [React Talk Page](https://en.wikipedia.org/wiki/Talk:React_(web_framework)).",1.0
g28e1ng,id8oq9,"I don't think I've even seen an official acronym, but in my mind it's always been ""JavaScript extension""/""extended JavaScript"". Since it's really a _very_ small extension to JavaScript syntax, roughly as impactful as the object spread operator.",4.0
g28bmut,id8oq9,"JS means JavaScript, X is whatever the X in XML is. You can call it JavaScript XML if thats better for communication purposes, it's honestly just a name, BUT no authoritative source will claim that's a language, because it will seriously hurt one's credibility saying that in the docs or in a book, hence you cant find any mention of that sort in the docs about JSX  as a language.

As a side note, its an abbreviation not an acronym.",2.0
g28fg2w,id8oq9,"Well, first of all, JSX stands just for ""JavaScript eXtension"". And secondly, even if it did stand for JavaScript XML, it wouldn't make much difference because XML is not a language either, no matter what the name implies.",1.0
g28fmx9,id8oq9,"&gt;Well, first of all, JSX stands just for ""JavaScript eXtension""

‚ÄéThank you very much. Where is this documented? I'm not the only one who has this wrong.",1.0
g27wcvl,id8oq9,Every language besides binary is just an easier way to write lower-level code. JSX absolutely is a language.,-7.0
g280b4n,id8oq9,"Every language is an easier way to write lower level code, but not every easier way to write lower level code a language. 

JSX is not a language. If JSX is a language, my homebrew function foo() that relies on React.createElement is a language too, because it does the exact same thing JSX does. If a syntactic construct has an exact one to one mapping with another construct, its not a new language. Its doesn't become a new language just because you change colons to equal signs, parentheses to angular brackets.

You wont be able to find any official statement declaring JSX as a language, because it's absolutely not a language, no one from the react team would make a mistake of saying something so obviously misleading and wrong.",1.0
g288p95,id8oq9,"Your example is just javascript, so of course it's not a new language. However, JSX by itself is not javascript and will not run until it's compiled into javascript. To me, if the syntax you write is not useful on it's own until it's compiled into something else, it's a language.",1.0
g28cw3o,id8oq9,"I didnt say jsx is javascript, i didnt say it doesnt need to be compiled. These are not the point of discussion.

What im saying is just because something looks different and requires compilation doesn't make it a new language.

Building on my previous example, what if the function name is not foo, but !, which isnt a legal function name, and then i create a little compiler to convert every instance of  !(  into React.createElement(. Per your definition, thats a new language? The JavaScript eXclamation point markup language?",1.0
g298moy,id8oq9,"&gt;Building on my previous example, what if the function name is not foo, but !, which isnt a legal function name, and then i create a little compiler to convert every instance of  !(  into React.createElement(. Per your definition, thats a new language? The JavaScript eXclamation point markup language?

Yeah, I'd say you've just created your own DSL. Of course it's super tiny in scope and doesn't do much, but a language nonetheless.",1.0
g29ccq3,id8oq9,"DSL is independent of being compiled or not, so if this is a DSL, the function foo in my example is a DSL too, then we'll be getting into a rabbit hole of everything is a DSL, which means the term DSL has no meaning.",1.0
g28fg6i,id8oq9,"JSX has a specific syntax and a set of rules for that syntax that have to be interpreted into ""lower"" level code in order to function. That screams language to me. In your example, I would argue that you created a custom syntax and a compiler (which enforces rules on that syntax) and is in fact your own language. Albeit a derivative of JavaScript, but still. It might not be a complete language, but it is a language.",1.0
g28h0k5,id8oq9,"Ok, i guess we have a different definition of language. But objectively speaking, you won't find any official source claiming JSX is a language. If its a language, why doesn't the creators say that? If you go to ruby's official home page, it says its a language, if you go to python's official home page, it says its a language, if you go to the react's official site, you wont find anything about jsx being a language.",1.0
g28ij1r,id8oq9,"That's true. Ultimately we're arguing over semantics, so I guess it's not a big deal. Like other programmers, I like arguing over minutia lol.",2.0
g27krvb,id8oq9,"&gt; To be fair, JSX is somewhat of a new mini-language inside pseudo-HTML.

JSX is just JavaScript. The difference from ordinary JS is that HTML tags are treated as objects.",1.0
g27lr1s,id8oq9,"Slight nitpick, but JSX is transformed into function calls. :)

Also, I'd disagree that it's ""just JavaScript,"" because it quite literally isn't valid JavaScript. You require some kind of compilation step to transform your JSX into `React.createElement`/hyperscript function calls for it to be ""just JavaScript."" JSX has its own weird quirks you have to learn, regardless if you're familiar with HTML or JS.",23.0
g27uqyu,id8oq9,Slight nitpick but in JS functions are objects :),10.0
g27w2fx,id8oq9,"Haha, touch√©.",7.0
g27vibb,id8oq9,If it is just JavaScript how come browsers can't parse JSX?,0.0
g28gt2n,id8oq9,Because the decision was made to undo the syntactic sugar at build time and not runtime? It could easily have gone the other way.,2.0
g28mqgv,id8oq9,"No, it's because JSX is not part of the EcmaScript spec.",-1.0
g27nycx,id8oq9,"This new ""mini-language"" isn't all that different or bizarre if you've used any other templating library like Pug, Jinja, Plates, etc. It's relatively easy to get used to, and arguably cleaner than using ternary operators everywhere in your views.",6.0
g27mhbp,id8oq9,"&gt;Svelte, just like Vue, invents a new mini-language inside the pseudo-HTML,

OK this sounds unnecessary because I can already do that with plain JS and template literals. 

I am out of the loop regarding modern JS frameworks. Are there any that do not rely on unnecessarily invented pseudo-languages?",3.0
g27ob0b,id8oq9,"React. Though many people associate JSX with React:

1. JSX is just syntactic sugar for JavaScript.
2. [You don't have to use JSX to use React.](https://reactjs.org/docs/react-without-jsx.html)",8.0
g27ne32,id8oq9,LitElement is probably the closest. It's just js literals and native custom elements.,2.0
g27oivb,id8oq9,"Another user pointed out LitElement which is a great option, but there are other frameworks/libraries as well. For React/Preact, you can use https://github.com/developit/htm.

There are also libs like lighterhtml, or hyperHTML. Another option is Hyperapp with something like https://github.com/jorgebucaran/hyperapp/tree/master/pkg/html

EDIT: Also, forgot to respond to this:
&gt; OK this sounds unnecessary because I can already do that with plain JS and template literals. 

Svelte is a compiler as much as it is a framework. You don't have to rope in any extra dependencies for this templating DSL -- the Svelte compiler takes care of it for you anyway!",2.0
g27t6d5,id8oq9,JSX is also a mini language with its own rules but you're so used to it that it feels natural.,3.0
g280igl,id8oq9,"Except it's almost not (a separate language): it's basically just XHTML with a few extra rules ... or if you want to get technical *really* it's just Javascript, with a few bits of syntactic sugar to convert XHTML into function calls.

The point is, it takes pains to give some ""HTML in JS"" functionality, while being as far from a ""new"" language as possible.",1.0
g28mmhk,id8oq9,"&gt; with a few bits of syntactic sugar to convert XHTML into function calls

Well then it's not just JavaScript, is it?",1.0
g27mi9y,id8oq9,"That looks a lot like handlebars js.

Also, SvelteJS is not really a framework, it's a separate language sort of speak it just compiles into javascript.",2.0
g286vzo,id8oq9,"One good reason for this sort of templating (and the one I saw Evan You talk about in regards to Vue 3) is that these kinds of templates are more static, and, as such, a smart framework can use that to not redo any work computing the difference in inherently static nodes.

Evan [talks about it here](https://youtu.be/WLpLYhnGqPA?t=1360). He says that Vue 3 uses that to split the tree into dynamic and non-dynamic chunks, skipping any work over non-dynamic chunks. It's actually a good part about templates vs JSX. 

I believe svelte achieves the same goal because of those static templates, but in a different way from Vue 3, of course.",2.0
g27yc03,id8oq9,"JSX conditionals are bizarre to the eyes too. Thats not the problem with svelte. Its that it doesn't solve any new significant problem, it's just that ""Its faster."" Also the lack of a FANG backing doesn't help, it'd be like backbone or at best ember. It wont be the next big thing.",2.0
g285mgn,id8oq9,"&gt; It wont be the next big thing.

And that's okay, too.  Even if they just prove the concept can work (and I think they have), then that can be a meaningful contribution.

Svelte is really just one more tool for the job.  For some it might be the best tool for the job.  It's good that we have that option.",1.0
g28e45p,id8oq9,"What ""can work?"" i don see any revolutionary ideas brought to the table. I might be missing something here if you can elaborate it.",1.0
g28kehd,id8oq9,"Svelte works differently than React or Vue.  It isn't just a virtual DOM library, but a transpiler.  It runs as part of the build process rather than in the browser.

We've seen this in tools like Coffeescript or Typescript before, but as an approach to the vDom it's a new solution.  That's what I was referring to.",1.0
g28ua4i,id8oq9,"I am aware of what it does, but what does transpilation bring to the table thats so revolutionary in svelt's case?",1.0
g27ivzu,id8oq9,"It's bizarre yet powerful. Svelte implements reactivity in the Excel sense of the term; so that you can directly modify a value downstream in your component, and the component will get re-rendered with the new value.

It looks like magic, and I am sure there is a lot to say against this approach (hidden magic makes things harder to debug), but it's certainly cool.",2.0
g28azwe,id8oq9,"That's precisely my problem with Svelte: it does magic, which looks cool. As if we hadn't learned from angular just how bad an idea that is.",2.0
g2a5w1g,id8oq9,"You can do else if (the same tutorial that you pulled this from)

I'm not sure how you see it as bizarre, it's the same pattern as almost any other language. For me personally it was very intuitive.",1.0
g4vlflc,id8oq9,"Being boring comes down to what your values are goals are. If you are a big corporation, then boring is great, like you say, maintainability is most important. If you are a startup or personal project, wanting to be cutting edge and cool...then someone has to make the sacrifice of being the first.",1.0
g28984d,id8oq9,"Check out Surplus + S.js if you like Svelte but don't want weird new DSLs.

I use it for just about everything now.

E: Downvoters, care to explain?",-1.0
g27fs8e,id8oq9,"While I fancy the idea of shifting work to compile time the reason I prefer react is because you are literally doing javascript - no ng-ifs, v-models, script and style tags. It is true that hooks are a brain twister but once you understand the underlying mechanics and what it attempts to solve they are suddenly not that hard.",35.0
g27nkd4,id8oq9,You can use JSX/TSX with Vue as well,15.0
g27ozgv,id8oq9,this is why i don't do Vue. i need to write JS. nothing new to learn just to use the framework and this in my opinion what makes react powerful.,-4.0
g27pamr,id8oq9,Vue is just JS through an API. Which is also what React is.,9.0
g28mld6,id8oq9,"You can use JSX with Vue FYI, templates are optional",1.0
g281jso,id8oq9,This,0.0
g27llgs,id8oq9,"Can't overstate how good Svelte really is - I've been using it for the past year whenever I had the chance, only small projects though.
 
What really sold me was the way transitions work for elements that are not yet in the DOM.. just glorious compared to React/Angular.",22.0
g27olyv,id8oq9,How transitions work for elements? Can you elaborate?,9.0
g27oq9o,id8oq9,What's better about transitions in Svelte?,7.0
g27ro44,id8oq9,Svelte has a built-in transition and motion module [link to documentation ](https://svelte.dev/docs#svelte_transition),4.0
g281uta,id8oq9,"Just to add to this: Angular also supports such transitions without 3rd-party packages, but in direct comparison Svelte is just so much easier. Worth trying for sure..",3.0
g28djpu,id8oq9,"&gt; glorious compared to React/Angular.

Compared to... which React transition library? There are dozens. React itself doesn't have transitions.",4.0
g28g4d6,id8oq9,We've used *react-transition-group* in most of our projects. Any suggestions on better alternatives?,1.0
g28u9w0,id8oq9,"[https://www.react-spring.io/](https://www.react-spring.io/)

[https://www.framer.com/motion/](https://www.framer.com/motion/)",4.0
g2ha0hm,id8oq9,Any idea about Vue?,1.0
g2l3l1d,id8oq9,Haven't used Vue for way too long to have a valid opinion on that tbh,1.0
g27bzq0,id8oq9,"Friend link for those who do not have medium membership:

[https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5?source=friends\_link&amp;sk=32c95b6eb405e174eb3d80ff70ca4351](https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5?source=friends_link&amp;sk=32c95b6eb405e174eb3d80ff70ca4351)",13.0
g280bxn,id8oq9,"Can we please just stop linking to Medium articles in general?  And authors: *why* are you still using a host that blocks half your readers, when there are tons of hosts who don't?",26.0
g282kos,id8oq9,Wasn't the case that the author of post need to enable paywall?,6.0
g283py8,id8oq9,"I stopped using Medium because of this, but even if it is optional, **A)** it's opt-out, not opt-in, and **B)** Medium themselves pressures users to enable it.

There was a story not too long ago about some non-profit org (I forget who; **EDIT:** Free Code Camp) talking about how they had to leave Medium because Medium kept pressuring them to turn the paywall on (https://wptavern.com/freecodecamp-moves-off-of-medium-after-being-pressured-to-put-articles-behind-paywalls).",8.0
g28fszv,id8oq9,Svelte syntax is garbagio,6.0
g29b8sv,id8oq9,Yeah I do not like the non javascripty syntax either,2.0
g28g9nz,id8oq9,Why no one use stencil,2.0
g27winl,id8oq9,"We started a new project with Svelte mainly to reduce our bundle size and we're loving it.

Its best feature IMO is that you do write *a lot* less code. I now look at React and Vue code and it all feels so unnecessarily convoluted.

Yeah it has some weird aesthetic things but you get used to those pretty quickly and the benefits greatly surpass the drawbacks IMO.",4.0
g290pgx,id8oq9,"As a hobby programmer, I used React for several years, always asking myself why coding in the browser should be so difficult. So I  tried Svelte to rewrite a former SPA app.

I feel a real difference : the ""language"" is easy to learn, and my code is shorter and cleaner, without using tons of npm packages. That's all I want, and it really changes my life.",4.0
g27j7gy,id8oq9,"Not gonna lie, my interest was piqued. But flipping through the first few pages of the intro/tutorial is about as enticing as three day old bacon to a vegan.",-1.0
g28nga9,id8oq9,"I made a podcast episode about Svelte's story, with Rich Harris, it's creator:[https://www.wix.engineering/podcast/episode/8fd2ff59/wix-engineering-podcast-outmatched-how-svelte-beats-the-odds](https://www.wix.engineering/podcast/episode/8fd2ff59/wix-engineering-podcast-outmatched-how-svelte-beats-the-odds)",1.0
g28oa6w,id8oq9,Lol,1.0
g27xjhg,id8oq9,"Can anyone ever switch to svelte without declaring it to the world? It made me feel like you're switching to svelte because you thought its cool and you can brag about it.

We don't need that extra performance boost, we just want to get the job done. Hence svelte will never become a popular framework. (Also the name svelte doesn't help either.)",-4.0
g280s1i,id8oq9,How would you know if someone switched without declaring it to the world.,2.0
g281vgg,id8oq9,"Maybe i don't need to know that information, or maybe only share that information when someone is asking for it.",-5.0
g27ds1g,id7izq,Or you could have used [debug](https://www.npmjs.com/package/debug),23.0
g275u62,id7izq,"While working on web projects in the past i've found myself using console.log a lot for easy debugging, because i couldn't be bothered setting up and learning an extensive logging library.

The problem with console.log however, is that you have to clean them up after you're done (and maybe add them back later) or the console fills up with all manner of messages you don't care about right now.

So i made a small module that allows you to leave the log messages in the code, with a string as a tag, and then turn on\off the tags you want to see directly from the developer console. This way when you think you are done debugging your networking code, just turn off the ""networking"" tag, and the messages no longer clutter your console. If you later on need to see the messages again, just add the ""networking"" tag back.

The module also supports switching functions, so you can use it with console.table, console.error or any custom function you want.",6.0
g27orc4,id7izq,This is the most common problem created to need a solution for that I've seen on this subreddit.,1.0
g28swic,id7izq,"Looks awesome - good work!

There is a typo in your docs: ""permanenely"" :)",1.0
g27recr,id7izq,"And in what regard is this better than just console.log(""keyword, "", x) and then piping the output through grep \^keyword ?",0.0
g2djxs5,icxvwu,"    const emojis = ""üòÇüòÇüíØ"".match(/\p{Emoji_Presentation}/gu);

I wonder what the browser support matrix for this is.",3.0
g2gvvru,icxvwu,"You can check here [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\_Objects/RegExp#Browser\_compatibility](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Browser_compatibility) \- look for ""Unicode property escapes"". All recent desktop browsers support it. It seems to be new for Firefox and Edge, but Chrome and Opera had it a while ago.",2.0
g2j5kou,icxvwu,Thank you!,1.0
g25ewic,icxkt7,"I had posted this a year ago as well, but it is now developed to a point where it can run quite a lot of programs. I have included some sample ones for you to try out if you want to.",7.0
g25yv0k,icxkt7,This is incredible. Congratulations!,1.0
g27c5l5,icxkt7,Thank you!,1.0
g24zet2,icul6f,It's 2005 and I'm writing JavaScript that works on all browsers. I reach into the nightstand and I get the gun...,159.0
g24zu4i,icul6f,The horror,25.0
g258j4b,icul6f,Shut up. You've just reminded me of my first job.,18.0
g25wt98,icul6f,"It is time to work on the design. I have received a Stuffit archive with a PSD template from the designer. The fonts and colors are tuned for an iMac. It's exactly 1024 pixels wide and the header has a curve that goes down slightly from left to right. The target audience are IE6 Windows users and Safari Mac users. Every link has a custom ""glow"" hover effect which needs to be retained as pictured in the design.",8.0
g25yefr,icul6f,"Ah the good ol' ""designer with a big screen"" problem.",2.0
g268r15,icul6f,Still happens today üòÇ You can also tell when the designer has a badly calibrated display because the colors are fucked up,2.0
g256394,icul6f,[deleted],17.0
g256hr4,icul6f,"Mozilla, Netscape, opera, konquerer, galeon, safari... why are you making me rehash this in my brain!?",26.0
g25b6o5,icul6f,[deleted],7.0
g25bun2,icul6f,I‚Äôve never had a customer who said ‚Äújust ie will do‚Äù,25.0
g26bfsu,icul6f,I have. Unfortunately,8.0
g2790sp,icul6f,Believe it or not some customers have said this... in 2020.,6.0
g25o8jw,icul6f,This makes me wanna see an r/dataisbeautiful of market share over time until Firefox and chrome take over.,3.0
g25qd7b,icul6f,"Yeah, if by Firefox and Chrome you mean Chrome",14.0
g25qpp9,icul6f,"So true. Even I am using Chrome these days and I used to be a diehard Firefox user. Ever since I started web development, I've had to use the debugger a lot and firefox's debugger is just not up to par. Also, the googling speed is way better on Chrome.",7.0
g26ryeb,icul6f,"Lifetime Firefox dev here,  I totally get why you made the switch, but Ive been with Mozilla since tabs were added, sometimes it‚Äôs hard to let go",9.0
g27redm,icul6f,[deleted],3.0
g287ljm,icul6f,Ohh yes. Completely blocked that memory out of my mind haha,4.0
g2bf92k,icul6f,"I was a die-hard Chrome user until I got sick of how much RAM it was eating. Now, even though I'm in a web dev course and would like to have Chrome's dev tools, I've now learned to value my privacy a bit more, so I'm reluctant to switch back.",2.0
g26rhlu,icul6f,#netscape2022,5.0
g253ged,icul6f,"I did a job where they started me doing data entry. Day in, day out copy and pasting excel cells from one page to another. I wasn‚Äôt allowed to code a solution because a ‚Äúhuman has to verify it all‚Äù. 

Anyways I had a dream where I was the cursor being dragged around this excel sheet against my will. Then woke up the next day to work on the copy pasta.... it was horrific",42.0
g254qm2,icul6f,"First, get them comfortable with a bookmarklet or two. Something simple that saves 10 seconds a handful of times every day. Next, find a totally average colleague to bless with the bookmarklet. Make sure they use it correctly and ask if there‚Äôs ‚Äúanything else like that which would be helpful‚Äù. It‚Äôs likely something wildly simple so sling a few lines of JS-in-DOM in a few minutes and say ‚Äúyou‚Äôre welcome‚Äù. 

Now is a good time to encourage them to tell your boss if they think it‚Äôs helpful. Make sure to emphasize that all of this is a quality of life improvement. Less time on busy work means more time on CUSTOMER OUTCOMES. 

Just like that you‚Äôve established that a.) automation does not mean a black box b.) colleagues benefit c.) it‚Äôs already happening. If you can scrape together some crude projections of aggregate time savings if 100 people used the bookmarklet 20 times a day then youre set. 

The hardest part is next: waiting for an engineering job to open up and finally cashing in on your office rep while being gracious the whole time. Enjoy your 5-hour work week until then. 

Sincerely, someone who literally did all of that in your situation.",21.0
g254vay,icul6f,Kinda forgot to mention: I automate whatever I damn please now.,12.0
g25gb05,icul6f,My rule of thumb: anything I have to do more than twice goes into my automation machine.,11.0
g25y9jv,icul6f,"I remember back in high school, I had an exam that was basically asking to find the solution of the same problem multiple times in different scenarios. Once I realized that I spent 3/4 of the exam writing a program on my CASIO graph calculator (Casio Basic) it was printing the intermediate steps to make it look like it was calculated by hand too! Then I solved the whole exam in mere seconds. Done! A+. That was my first experience with coding.",12.0
g26j5zg,icul6f,Badass,3.0
g27oayk,icul6f,Are... are you me from the future? What do I do next,3.0
g280mvq,icul6f,"Continue to automate anyhow but quietly for your own benefit while parroting the notion that ‚Äúa human touch is needed‚Äù. These are not mutually exclusive - you just need to prove that and this is one way to do it. If you‚Äôre half as talented as you suggest then by doing this you‚Äôll become objectively one of the most valuable employees on your team simply by virtue of throughput. Your bosses WILL notice. Your bosses WILL be curious about your methods. When they eventually ask, show them your toolset and suggest training the team on how to use it.",2.0
g281la5,icul6f,"Also, go right ahead and dive into some of those ‚Äúnormal office‚Äù soft skills like Excel macros or whatever intranet platform you may use. If you‚Äôre writing back office automations they‚Äôll struggle to find a user base unless they integrate with laymen tools. 

TL;DR - Add a download as CSV button to everything.",2.0
g26anr7,icul6f,I trust computers way more than I trust myself,6.0
g27bekn,icul6f,I can guarantee that that process introduced way more errors from the human factor than were caught by the human oversight. People are *really* bad at doing mundane repetitive tasks like that. It just shuts the brain down and makes stupid mistakes a guarantee.,3.0
g259a5c,icul6f,"Used to work on some personal project about 20 hours a day. Nothing was worse than the one day I would try to get a full night sleep, and instead my mind spent 8 hours just scanning lines of the codebase I had memorized by heart. I would wake up feeling like I got no sleep, but would have a literal list of like 10-15 refactors I could do to improve the codebase etched into my mind.

It was really bitter sweet.",33.0
g25gaky,icul6f,"That's been my biggest problem with programming. I have to hard stop what I'm working on at 7 or 8pm if I don't want to have nonsense sleep thoughts like ""how I can find things I have in common with my fiancee with a regular expression"". I don't understand the trope of programmers working late into the night solely for this reason",24.0
g2stvrb,icul6f,"Haha, this is also totally me. My mind will just produce random bullshit dreams for like 8 hours. Luckily this only happens, when I'm really excited for a project.",3.0
g2510o5,icul6f,"I had a nightmare that I‚Äôd accidentally broken the trial expiration on one of the apps I worked on. I woke up in a cold sweat thinking I‚Äôd cost the company hundreds of thousands.

Thankfully not real!",29.0
g251bai,icul6f,Oof! The best ones are rooted in real life consequences. I can tell that was a legit fear of yours.,6.0
g2526g0,icul6f,I‚Äôve never dreamt about coding that I can recall except the few times I woke up with solutions to issues that had been haunting me in the day.,46.0
g252sds,icul6f,"Ah that's the best!

Such a good feeling starting work with a quick win.",13.0
g25xpb5,icul6f,wakes up in the middle of the night ‚ÄúEureka!‚Äù I better write it down. In the morning *reading gibberish on a piece of paper* ‚Äúwell f***k.‚Äù,10.0
g260nw5,icul6f,Are you me?,6.0
g25thj8,icul6f,Definitely done this though it wasn't exactly a proof of concept üôÉ,2.0
g24ymee,icul6f,"""Don't forget to block the \`--force\`""",15.0
g24zh7y,icul6f,Where can one learn this power?,7.0
g255um9,icul6f,Not from an EDI,5.0
g25d829,icul6f,"&gt;EDI

[https://docs.github.com/en/enterprise/2.16/admin/developer-workflow/blocking-force-pushes-to-a-repository](https://docs.github.com/en/enterprise/2.16/admin/developer-workflow/blocking-force-pushes-to-a-repository)",2.0
g26rzkk,icul6f,https://docs.github.com/en/github/administering-a-repository/about-protected-branches,2.0
g25i9fi,icul6f,"Done it once. I was developing an iOS app in a team of 3, all out of college, and we barely understood git. My coworker wanted to change name of our iOS app from Xcode, somehow messed up his entire computer.

He didn't want to lose his local commits, but when we tried to push it we got tons of conflicts due to app name change. I used --force and it overwrote our commit history worth of 3 months. Felt like a cold shower, but luckily no one else cared. GitHub was really only useful for sharing changes with each other, we didn't really care about history, blames and PRs...

Thankfully my current company has strict rules and --force is blocked by our Git backend.",2.0
g2576gd,icul6f,"In 2011, while debugging a new feature I accidentally sent emails from the test system to the entire customer base. Eveything went out of hand, got escalated up to CIO level and finally my manager had to send apology emails to all customers individually. 
Thank God I woke up at 4am realizing that it was a nightmare.",13.0
g25b8rw,icul6f,"I have watched this happen to a coworker first-hand with a customer base of 60,000. It was a catastrophe, but he can laugh about it now.",3.0
g25bp0l,icul6f,OMG!,2.0
g25p855,icul6f,A friend of mine did that while testing a newsletter implementation. A night full of vulgar short eMails to every customer. He didn‚Äôt even notice until he had to call the manager the next day and apologize that he didn‚Äôt finish the feature request.,3.0
g27g2el,icul6f,"Similar thing happened to a guy at my last job. He forgot to erase a bunch of swearwords he had written to test something (I guess?) on the homepage of a customers site when deploying into production.

Don't think anyone except the customer noticed, though.",3.0
g24zl8h,icul6f,if you don't have rogue actors and disgruntled employees there's no fun in life,13.0
g261w5z,icul6f,"How about a waking nightmare with a nap/dream solution? Late night OS maintenance of a Solaris server by Oracle techs. We paid the company at least $250k/year to do basic monitoring and management of the OS and hardware. 

I was monitoring their progress when everything went sideways. The system wouldn't boot. You could hear the panic in their voices.

I worked with them for 5 hours until my eyes started crossing at about 3AM. I told the techs that I was going to take a 90 minute nap, and woke up with a solution in mind. 10 minutes later, the system was fully operational.

These were techs *employed* by Oracle. And I literally dreamed up a solution that wasn't in their knowledge base or on the web.

Those are the best kind of dreams. 

We canceled the contract with them as soon as we could.

Edit: Sorry the story wasn't JS related, but I wanted to share it. Nightmares would mostly be related to IE development. Try writing a cross-browser XML parser before AJAX was a thing.",12.0
g2su0ow,icul6f,Damn that's amazing. What was the solution if I may ask?,1.0
g2t2ccy,icul6f,"It involved getting the colo provider to hook up a remotely accessible serial console, using that to wipe the firmware settings, getting it to boot past the BIOS, then twiddling with things to make it boot off the right ZFS clone. The details are a little fuzzy, as I was running on too little sleep. But it worked!

Another story, but also not a nightmare. We were evaluating different colo providers, and I wanted to test their security processes. I found a popular tech website that hosted with them, found a QA subdomain, found contact information for their IT lead, and called him.

I explained that I was testing the colo's security, and asked his permission to see if I could get them to open a port to the QA server. He said OK!

I started playing a clip of airport noises, called their support line, claimed to be the IT lead guy, and asked them to change the firewall rules for me, as I was about to board a flight. They did.

When I called the colo's CEO, and explained what I did, he was pissed. But the next day, they added a requirement that all accounts needed a pass phrase. After seeing how responsive they were, we decided to host with them for 4 years.

I have tons of random tech war stories, and with the pandemic, no one to share them with in person. Sorry for rambling.",1.0
g3c6p87,icul6f,"Ah, hey if it works it ain't stupid. Hahah nice one! You should try sharing these stories at [Devrant.com](https://Devrant.com). Im not active anymore, but it can be a fun platform. (Not only for developers)",1.0
g25680p,icul6f,"I used to have dreams that I was late to class, but I was lost in a hallway that *looked* familiar, but wasn't *exactly* like the hallways I knew in school. I'd wander around, always feeling like I was *almost* there, but not quite able to zero in on where I needed to be. 

Anyway, I don't get those nightmares anymore. Now, someone I respect is standing over my shoulder and watching me code as I keep getting an error message telling me that variable.toJS() is not a function, as I desperately struggle to explain that I know how to use the Immutable library, I'm just having a bit of a brain fart right now and oh God don't fire me just because I'm a fraud!!!!",10.0
g2563ao,icul6f,"Production release going smooth like sandpaper with no reasonable way to roll back. No wait, that was real life",9.0
g257sb5,icul6f,"Sounds like you're living the dream... 

^^...just ^^the ^^bad ^^kind.",3.0
g259yva,icul6f,Realizing that if a super specific set of conditions are met then the whole app will fail,7.0
g25xqbp,icul6f,"Mostly just memories from previous jobs. Had one in 2009 where floppy disks were the only data storage device approved by our security team to transmit information. The server was airgapped from the internet and our dev network as well. We also had an internal only deployment of a custom build of google maps which had an API that differed *slightly* from the official online one, with very little documentation showing the deltas. This deployment was also only available on the production network. Security reviews for pushes to production would take approximately 1 week. This meant our work flow was basically:

1. Write the app with five different attempts to do the same thing on every page. Since we didn't know what the exact API call was, we would just try name variants that seemed to make sense for what it could be. 
2. Once we had a production candidate, take it and split it up between 20 floppies.
3. Deliver the box of floppies to the security team, who would review and deploy it.
4. Approximately one week later, we'd get a confirmation that it was deployed and we could request access to the production environment.
5. Once past security and in the production environment, we could debug the app with IE6. 

A project that should have taken around a month or two to complete ended up taking around a year and a half.",5.0
g25zk4u,icul6f,#D:,3.0
g2539og,icul6f,"I think that if you've got the spaghettification down, your project is already halfway there.",5.0
g26fi9g,icul6f,Often times when I momentarily take down an environment I‚Äôll immediately get an email or two ‚ÄúI can‚Äôt access ipaddress:port/app‚Äù. So I had a dream where I pushed a commit in git and the line output was like ‚Äúdeleting entire repo success‚Äù. So then I went to the repo and everything was blank but said that the last merge was me deleting everything. Then I started getting tons of email notifications progressing from ‚Äúhey what happened to the repo‚Äù to ‚ÄúWhat have you done. Everyone knows what you did. You have lost everyone‚Äôs jobs and ruined the company‚Äù. The emails kept coming in faster and angrier until I was breathing very fast and crying. I woke up out of breath and very upset. Still remember the dream clearly because of how traumatizing it was.,6.0
g2su453,icul6f,"Damn, sounds like a horror scenario",1.0
g26ibe4,icul6f,"I used to work at a place where I was tasked with developing HTML/JS pages that would only run on the ultra dirt cheap Android tablets one of our clients had bought. The chrome and Android versions were from 2011,and we couldn't upgrade because the manufacturers of the tablet didn't want to support upgrading as a feature. 

&amp;#x200B;

Simple things would randomly break. Do you want to start a timer? Ok. Do you want to start 2 timers? Fuck you!

But not just any kind of fuck you. The kind of fuck you where you don't get any kind of log report, or any hint at all about what might be going wrong. No. Elements that had events triggered by JavaScript functions would just start to disappear for no reason.

And that's just one example. I could go on.

It took 6 months after I quit that job before I stopped having occasional nightmares about QA tickets being sent my way because of random crashes on those tablets.",4.0
g25ng3t,icul6f,"The opposite: I was having a real-life nightmare with a bug I couldn‚Äôt figure out. Dreamt that the problem was that there were crumbs on my keyboard. Brushed them off and, tada! no more bug! It was very sad to wake up and realize it wasn‚Äôt true.",3.0
g25npo8,icul6f,Oh nooooo!,1.0
g25y09n,icul6f,"Actionscript in 2020, haven't woke up yet",3.0
g26csx2,icul6f,I once solved a bug in a school project in my dream. This was a month after the project had been graded with an A.,3.0
g26u1xs,icul6f,"The whole dream I was tweaking my CSS to get margins and paddings right, it didn't work",3.0
g26xevc,icul6f,"Asleep, I suddenly realize my alarm didn't ring because it actually was set asynchronously.",3.0
g25feet,icul6f,I dream in UBB exclusively.,2.0
g25s9wd,icul6f,"I always have a dream where I'm writing a small js app and I just can't get it to work. I double, triple, quadruple check my code. Rubber duck debug, step through it, and all is well. But at runtime it just doesn't work.  The worst part is it's always something I've done previously and I KNOW how to do it",2.0
g25t01r,icul6f,I had to make something work in IE3. It‚Äôs 2013.,2.0
g261e70,icul6f,"I had a dream that I was tasked with allowing users to user our website without logging in, but still tracking what user they are (app is heavily built around the user). In my head I had worked out a solution but then got hit with multiple users on the same device and just spent the rest of the night fretting over that.",2.0
g2649th,icul6f,Holy shit is this a thing? I know that I've dreamed with coding but nightmares? Oh man...,2.0
g267fzw,icul6f,An easier question to answer would be: What coding nightmares have *not* woken you up at night?,2.0
g26ap5r,icul6f,Honestly it's not code that gives me nightmares these days.,2.0
g26ax1n,icul6f,I've been programming for more than half my life and don't think I've ever dreamt I was coding. Not sure what that says about me tbh,2.0
g26jere,icul6f,You have good work/life balance! Way to go!,2.0
g26ddpy,icul6f,I was kidnapped and my captor forced me to learn C# visual,2.0
g26dh0q,icul6f,"Not JS specific, just your typical ‚Äúdrop database‚Äù nightmares. 

Funny story, an old boss did this on the first week of my job. I didn‚Äôt laugh at the time, but Now I laugh so hard when I think about the face he made when he realized he did that. It was like in slow-mo. At first he didn‚Äôt realize it. Then didn‚Äôt believe it. Then dread. Then embarrassment. Then wtf do i do?!? All within 5 seconds. 

He would go on to make many more embarrassing moves. Such a horrible developer, but great guy and boss. Miss him dearly.",2.0
g26qoqj,icul6f,Mine was probably common. Commit to production a very buggy feature branch that immediately got deployed,2.0
g26s02l,icul6f,are you sure it was a dream? js feels like that,2.0
g26vzdi,icul6f,"No nightmares about coding yet, but I had some rather bad ones involving one of our past deployment processes.. probably because the process in itself was a pure nightmare.",2.0
g27080b,icul6f,I've been having nightmares about promises because I will never understand them and it's a source of suffering that my brain enjoys putting me through.,2.0
g27bo94,icul6f,2013.. Flashback to the time I came in as a Junior Dev to work with Angular.. Angular 1.3 *shudder*,2.0
g27gf72,icul6f,"I am not a deep sleeper, a sudden change in air pressure and I can feel it. I have a tendency to sleep with laptop beside me in case I think of any solutions to my problem I've been facing.",2.0
g27udm6,icul6f,"6 months out of school my company had me learn Unity and eventually signed a large deal with a Fortune 500 company to develop an Augmented Reality app for them. I was the only developer and felt like our company reputation was on the line. I was having a tough time sleeping at night, often dreamt in code. When I hit walls I would feel nauseous and get really anxious. Sometimes it‚Äôd take me 3 or so days to solve it, those were the worst days. 

Needless to say I finished the project and it turned out great! I try not to get siloed on projects like that from now on.",2.0
g286dng,icul6f,I dream about punching chickens in zero gravity - I have no idea why!,2.0
g28bzei,icul6f,#D:,1.0
g25j7bt,icul6f,For some reason I have frequent dreams of not being able to solve a problem. Sometimes it's same problem different nights... Kinda annoying.,2.0
g28xcxu,icul6f,"End of a mad sprint, pushing to deliver new features etc etc. Started to dream of colleagues and friends as react components, specifically in JSX form. So each person would have a set of props being passed to them. Each one appeared highly structured from a distance but on inspection blurred and dissolved into chaos.",1.0
g25bsy9,icul6f,I had nightmares that I had to use typescript. All my js code had to be converted and couldn't write vanilla js anymore.,1.0
g25vp13,icul6f,"If you can‚Äôt convert it to TS because there‚Äôs type errors, chances are there will be errors anyway. Otherwise TS will just complain about implicit any‚Äôs and no return types on functions.",1.0
g25v6oq,ictpno,"I'd argue that it's important to at least know how to read and use both, even if you aren't working in both all the time.

Not all code is going to be new code. Legacy code needs to be maintained and completely rewriting isn't always an option.

Are bare minimum there should be a lesson comparing each of the functionalities so developers taking the course can meander their way through legacy code.

Class based implementations aren't going to disappear over night and ignoring them isn't going to help anything.",3.0
g2g3xiv,ictpno,"Idk, if you're already familiar with classes in Javascript it's not bad to figure out what class based legacy code is doing if you know hooks. I Iearned hooks first.",1.0
g2hgbtk,ictpno,"I'm a full time React developer who started with classes and moved to hooks.

Hooks is definitely easier, but there are some caveats in the functionality. Though, it's all really edge case stuff.

All I was saying, is that it would be good to have something touch on it so people are also prepared for jobs in classes.",1.0
g291f61,ictpno,"We do teach both! I'm not sure if this the article didn't make this clear, the only difference is which one we *start* teaching with, and which syntax we provide the most code in -- that is, the prevalent coding standard of our curriculum.

As another example, we start teaching using `let` and `const`, but we also mention that `var` exists and how it behaves differently.",0.0
g294h59,ictpno,"Nice! That's good to hear.

I recently started helping a friend find good coding courses and you'd be surprised how many don't even talk about let and const. Or just brush over them and don't talk about how using var isn't standard anymore.

Thanks for the clarification!",1.0
g295ppj,ictpno,"Tell me about it! This is such a big issue. I've run into this issue constantly as an instructor in recommending supplementary readings. Most tutorials and courses out there still are using fairly old JavaScript coding standards.  Some courses will have a ""here's the modern stuff"" lesson at the end (including a school I used to teach at), which is better than nothing, but still frustrating for new students.

(This is one of the reasons I actually even wrote this curriculum in the first place, but that's another story, hahah.)",1.0
g2iaump,ictpno,"If you teach Redux, do you have an opinion about Redux-hooks vs Containers? Rn i'm in the process of proposing react-hook implementations over an older class-blased for our React curriculum. However Redux-Hooks is now a point of contention.

I think Redux-Hooks is more intuitive, but Containers are better for de-coupling and testing. Containers also have better optimization initially, I hear. But Redux-hooks leads to less overall code too.",1.0
g24k344,icrc7u,"well, that's a nice jazzmaster",2.0
g24t51q,icrc7u,That‚Äôs a Stratocaster.,1.0
g24vhbt,icrc7u,"Oh shit, you are right",2.0
g23o7qg,ico08u,"We also offer a Chrome extension to let users safely run legacy Java applets without any plugin

[https://chrome.google.com/webstore/detail/cheerpj-applet-runner/bbmolahhldcbngedljfadjlognfaaein](https://chrome.google.com/webstore/detail/cheerpj-applet-runner/bbmolahhldcbngedljfadjlognfaaein)",3.0
g25g626,ico08u,But can it run Minecraft?,2.0
g26tg6n,ico08u,"CheerpJ can run any \_pure\_ Java application. Minecraft, and most other games in Java, have JNI (native) components that obviously won't work out-of-the-box in the browser. CheerpJ allows to implement native methods directly in JS, so it is always possible to port games by manually implementing the native methods.",3.0
g29m8gz,ico08u,Thank you for answering my silly question with a real answer üòä,1.0
g23gu4j,iclbt6,I'd say stick with RN. Job wise.,1.0
g23r2bj,iclbt6,"The problem with native script is the lack of community, the company develops the language and a few basic things and there are a few members that offer components OOB but it's limited and for a price, react has the support and community abd flutter has the OOB components and is gaining community too",1.0
g236z4q,icl7ag,Check [Slides](https://docs.google.com/presentation/d/e/2PACX-1vQJwvPd1R4bPD_626ScR2rIUGmaXdmSp58VSfqm-7zYPVxH1UytUotF-YOSmgkZ1SOXnD7UwWovtWpF/pub?start=true&amp;loop=true&amp;delayms=30000) for a few demos,1.0
g22xi96,icjfzf,playwright looks pretty cool.,2.0
g26atp7,icjfzf,"Does playwright have

* Record and Replay built-in?
* dashboards/reports like Cypress and TestCafe?",1.0
g22ygl5,icjfzf,It is quite cool. Especially if you come from Selenium or things like Nightmare.js,1.0
g22zdua,icjfzf,used selenium years ago. been using puppeteer lately.,2.0
g230bk7,icjfzf,"The differences between Puppeteer and Playwright are subtle, except of course for the browser support. And one is from Google and the other from Microsoft...",1.0
g230ckd,icjfzf,ahh shit. i hate both companies.,1.0
g231bqy,icjfzf,"ha ha, well they are BIG companies and I've interacted with a bunch of the folks on the respective teams. They are really easy going and supportive.",1.0
g24lrnl,icjfzf,great domain,2.0
g2boz97,icjfzf,"was looking for something like this, I've used selenium with python a ton but wanted to move into using Puppeteer at some point",1.0
g22s3ip,ich4c1,Thank you for sharing it. Is it something that takes place on the monthly basis or once a year?,17.0
g22szl3,ich4c1,Js13k happens once every year!,13.0
g24ghxq,ich4c1,"Is there a special reason for the 13kb limit? I can understand a limit, but why 13?",7.0
g24htfx,ich4c1,"Their rules page says this:

&gt; Why exactly 13 kB?

&gt;   Well... why not? :)

I'm guessing its a size they picked that seemed to give room for a decent game (too small would make it too difficult for all but the top JS people). 13KB seems reasonable while still providing some challenge.",10.0
g24owtf,ich4c1,"Maybe there is a relation with that:  
[https://www.tunetheweb.com/blog/critical-resources-and-the-first-14kb/](https://www.tunetheweb.com/blog/critical-resources-and-the-first-14kb/)",7.0
g24jh5c,ich4c1,Thanks!,1.0
g259l1q,ich4c1,"The longer story is, around 2012, when the compo started, there was js1k, but it seemes too small for a game. On the other side, there were some competitions to squeeze a website within 10k - I thought this is a good limit, but ""another 10k, but for games"" wasn't enough, so... I thought: well, why not 13 then? And it kind of stuck: the first theme was bad luck, the compo ran between Aug 13th and September 13th, etc.",7.0
g24lu4f,ich4c1,"Oh, cool, I might enter this. I had to desperately hack together a path finding demonstration for an interview. If I have time, I want to give it some additional features and make it a game. I can make that work.",1.0
g2ffj1x,icglpl,Nice article. Thank you for sharing. Any idea when ReactJs will support native JavaScript modules.,1.0
g21kbqu,icbxl1,"Hi everyone! Hope this is ok to post here.


A couple of months ago I set out to learn the ropes on Deno by building a tiny file server CLI with an awful name called Denoliver. 

Today I'm happy to release version 2.0.0 which comes with an array of features and bugfixes, including, but not limited to:


 ‚Ä¢ Dependency free! No third party dependencies.

 ‚Ä¢ Live reload of modified files.

 ‚Ä¢ Supports client side routing for Single Page Applications.

 ‚Ä¢ Directory listing with a neat interface

 ‚Ä¢ HTTPS

 ‚Ä¢ Programmatic use as a module

 ‚Ä¢ Boilerplating for rapid prototyping.

You can find the project here: https://github.com/joakimunge/denoliver

I'd be stoked if you wanted to try it out, report dumb mistakes I have missed or open a PR yourself!

Thanks!",1.0
g21nrau,icbxl1,I have a question about deno if you wouldn't mind answering. If I used your module in a production app. And you deleted your github account. Unless I made a backup of your module would I no longer be able to install it? Or does deno have some centralised way to keep the modules available like npm?,1.0
g23fxfl,icbxl1,"If you‚Äôre worried about the project disappearing, you can fork the repo so that a copy of it (as is stands currently) is created under your account...then it will exists forever until you delete it yourself.",1.0
g23hv21,icbxl1,Wasn't worried about this project particularly but more worried about using Deno for development if new projects if dependencies can be lost so easily.,1.0
g21bfpm,icam18,"Wish assertions could write themselves? Have 20-30 minutes to spend giving me feedback on a prototype for an assertion generation study?
We're looking for developers to give us their input on their test writing process, give feedback on a prototype tool, and enter for a chance to win one of several $50 Amazon gift cards. There is a short survey, an interactive tool demo, and a quick feedback survey about the prototype. If you're interested, you can find the study at https://se.cs.ubc.ca/AutoAssertSurvey.
The principal investigator on this study is Dr. Reid Holmes.",1.0
g21p0p8,ic7nln,"The blog mostly talks about using it to migrate front-end code. I'm curious, how well does it work on backend Node files?",4.0
g21pnme,ic7nln,"It will probably not generate as many types as for frontend (react) codebase, but it should make the project compilable in any way. Do not forget to include node types + any other libraries types before converting.",3.0
g24otzn,ic7nln,Now I just have to wait for a plugin for this to convert flow types to typescript types,2.0
g210odu,ic693w,Sounds like taking on an intern. It takes tremendous time and dedication to manage an intern. So personally I wouldn't take this task upon me as I already have so little personal time outside of work.,4.0
g210zra,ic693w,"Intern seems to be work-oriented.  


The idea of this was to do so outside of work, as a personal thing. But I see you say you're too busy for that! That's okay - I appreciate the response",2.0
g210m06,ic693w,"Maybe I‚Äôm misunderstanding your post, but aren‚Äôt there already a slew of subreddits and sites devoted to that?

https://www.reddit.com/r/mentors/
https://www.reddit.com/r/CodeMentors/
https://www.reddit.com/r/ProgrammingBuddies/
https://www.reddit.com/r/ProgrammingPals/

Where as this is more for general, non-commitment browsing and fly by answers to specifics?",2.0
g21158f,ic693w,"I did mean for long-term commitment to a specific individual, so big commitment, non-fly-by. Thanks for these!",2.0
g22qabr,ic693w,"...so, I'm an intermediate developer. I've been using JavaScript for a few years and have experience in some other languages as well (Golang and C# mostly). I've been working professionally for almost a year. I think that I could help you get to a point where you'll become independent. And this could be mutually beneficial; any questions I can't answer with certainty would me a chance to do research and expand my own knowledge!

To be clear, I am NOT an expert, so if that's what you're looking for, I'm not your guy. However, I have a lot of knowledge to share and have a passion for sharing my knowledge...and I have a lot of free time :)

If we get along well enough I'd be open to doing ""sessions"" together if that's something you think you'd benefit from.

No hard feelings if you're looking for someone more experienced! Let me know if you're interested :)",1.0
g206rm3,ic4qpx,1: spellcheck,5.0
g2088pa,ic4qpx,"&gt;spellcheck

anything remarkable? appreciate that",1.0
g20c6h1,ic4qpx,Javasript -&gt; javasCript,3.0
g20zurm,ic4qpx,javasCript -&gt; javaScript,3.0
g25vio7,ic4qpx,"I feel like this article should be titled ""11 things to know before starting JavaScript"".

Not trying to knock the article, but all the concepts aren't only needed for React, they're all basic JS concepts that are good to know regardless.

You're not wrong with the title, but it's like saying ""Things you should know how to do before you go for a drive. 1) How to use your feet.""",1.0
g204mtw,ic4qpx,nicely covered.,0.0
g204xsm,ic4qpx,thanks,1.0
g1zgtzb,ic245i,"Dont know if this belongs here. Please remove it if it doesn't.

Hi everyone!

I created a template to use when creating samsung smart tv apps with react native.

I did not found a lot about this so that is why I made it.

I'm still a student and I obviously make mistakes XD so if you see something wrong please let me know!

Hope this will help you!",10.0
g20a0li,ic245i,Interesting. Do they have something like an App Store  you have to get your app approved for?,5.0
g20hdg6,ic245i,Yes!,0.0
g20br57,ic245i,What kind of deployment process do you use for local development for this?,3.0
g20hmwe,ic245i,"Everything is explained in the wiki I created =D 

&amp;#x200B;

It is basically running your build folder in Tizen Studio.

&amp;#x200B;

I plan to get rid of Tizen Studio to make it better and quicker.",2.0
g20iezt,ic245i,"Great, thanks for posting this!

Quick link for anyone else: https://github.com/IssamElNass/React-Native-Samsung-Smart-TV-Template/wiki",3.0
g217ky4,ic245i,"If finally you are not going to embed any kind of native code as it looks like ( react, react-router, spatial navigation ) I don‚Äôt see the point of using react native for this project...you can directly use an htm5 app template from tizen studio ( usual way of developing apps on tizen )",1.0
g218w0f,ic245i,"Yes, you're correct you're better off using React for example I just created this project to mainly use the react native components. But you can also create an app with any other framework (I think)",1.0
g22ibzw,ic245i,"This submission has been randomly featured in /r/serendipity, a bot-driven subreddit discovery engine. More here: /r/Serendipity/comments/icgw5f/i_made_a_react_native_samsung_smart_tv_template/",1.0
g27atcf,ic245i,"I'm not really sure what you're trying to achieve, afaik reactNative isn't supported (yet) on tizen, so you can't really run it, right?",1.0
g27cozy,ic245i,"You can create apps on tv's with Tizen by using html and css. In this case This is just a template to use react native components on the web and use that on your tv. 

Hope you'll understand as English is not my main language =)",1.0
g1zhhxe,ic20rv,"Simple reason: SEO. When crawlers come they want their content to be read and indexed. In the greater picture, the people finding articles that way and end up paying by far outnumber people like you. If you personally weren't able to sneak around a paywall like that, you probably just wouldn't read it instead of paying. So people like you simply aren't the target group and since you don't produce any relevant cost they don't care.",95.0
g1zultg,ic20rv,"I think this makes the most sense, I didn't think of the SEO angle. Thanks.",17.0
g207dec,ic20rv,"&gt;Simple reason: SEO. When crawlers come they want their content to be read and indexed. 

I wonder how the SEO angle works for them now that Googlebot executes javascript. If the content before executing javascript differs from the content after executing javascript, which one wins? I would expect the latter.",5.0
g20fa0t,ic20rv,"Well, it's not that bots would stop seeing what's behind the paywall layer. But yes, they might see the paywall as well and potentially index it's content. However, that chance is slim due measurements like meta-fields, ld+Json, sitemaps and all the other SEO stuff even the most basic WordPress blog provides.",3.0
g21xl08,ic20rv,"Some sites physically remove the DOM, so possibly.",1.0
g27ld39,ic20rv,&gt;physically,2.0
g21t62n,ic20rv,"Google bot has a different user agent, so they can always put up the paywall after checking the UA",5.0
g25fnrs,ic20rv,So I should be able to read every article by changing my user agent?,1.0
g1zuwto,ic20rv,This is not entirely correct. You can just add bots to your allow list.,4.0
g203noq,ic20rv,Sure you can. And there is something to be said about why it's easier for adnetworks to offer an independent js-solution rather than countless integrations for various server side CMSes. But not interfering with SEO is probably simply the most prevalent reason. You don't want to lose customers because they aren't able to set up walls correctly. The existing solutions are simply most effective.,2.0
g1zvlvr,ic20rv,"There are many reasons, here are some:

* storage cost - if you have a metered thing (like X Articles free per month), you need to store how many someone has read - easy to do client side without extra cost for DB
* disabled js is really uncommon (&lt;1.5% have JS disabled)
* better SEO (all crawler can read that content)
* doing it server based is hard (google tells you that it's a google crawler, but not every search engine does and you can also just fake that)
* there are production tested librarys you can just throw at that problem for cheap",14.0
g21tg9t,ic20rv,"Cookies work on the server so you could still keep track of views that way, but then you lose a lot of caching benefits if each user view has to go to the server.",2.0
g231jib,ic20rv,Also you have problems if you're publishing anything directed at the European market because you're not allowed to store any cookies without consent of the user.,1.0
g23ff8n,ic20rv,"This is a good answer, as well. It's better to offload some of the work to the client, if you can.",1.0
g20605r,ic20rv,"We may know that removing a paywall is easy, but most people have no idea that it's even possible. The average user immediately zones off once you say the word ""JavaScript"", as that's beyond their comprehension of the internet

I'd say at least 90% of the audience of a news site doesn't know they can bypass a paywall easily, so they will never try. If it works for 90% of visitors, that paywall is rather effective",10.0
g1zq8dv,ic20rv,"Because server side paywalls mean longer response times, more cpu usage and less caching. Plus more of those client side paywalls are vendor based solutions that they can implement in a few weeks instead of building their own.",3.0
g209j24,ic20rv,"It‚Äôs a lot easier to implement and most likely these teams had committed to client-rendered apps before they needed to implement the paywall üòÇ

The reality is that they don‚Äôt need to stop you from getting around it - just the vast majority of people who won‚Äôt",3.0
g20fvcn,ic20rv,Because devs are bros? I like this unreal possibility even tho I don't believe in it.,3.0
g20ssje,ic20rv,I didn't know you could turn off JS to hide those paywalls! Thanks for the info :),3.0
g1zp02j,ic20rv,"Articles fall into a few categories: free, metered and locked.

Most companies do a (mostly metered, some free) approach. When you're offering metered articles (X limit per Y) then ensuring people can only read X is not a top priority. They're not dumb they know people can circumvent the paywall, but surprisingly only a very small percentage of users actually do. You can circumvent this no matter whether it is JS or server based. So why not offload the processing to the client instead of storing it on the server?

Unlike metered companies, where the state of an article can be paywalled or not paywalled, FT takes a (few free &amp; most locked) approach. Most articles are locked (can't read, no matter how many articles you've read) until you subscribe. For locked articles, they never have to send more than the teaser data until you're subscribed. They can be certain that nobody can circumvent it as you would need a logged in subscriber account. And there's an additional benefit of not sending bytes over the wire.",2.0
g23g20f,ic20rv,Shhh...,2.0
g204g27,ic20rv,Tangent: how does one disable JS in modern browsers? Hopefully on a case-by-case basis...,1.0
g23fmlt,ic20rv,"I use Firefox, and Firefox has [a set of instructions](https://www.technipages.com/firefox-enable-disable-javascript) to turn off all JS. That said, I got a plugin for it that disables/enables JS for a single tab.",2.0
g23ubuu,ic20rv,What plugin is that?,1.0
g20744j,ic20rv,"\&gt; Only the Financial Times (MAYBE Bloomberg now??) have server-based paywalls.

The Times in the UK does so as well.",1.0
g20pt1e,ic20rv,"This post made me think about how I used to read most of my local media website on looking at the source code directly, simple yet effective.  
Now recently (2 months ago ) they made it impossible to do so with my technique.",1.0
g223b04,ic20rv,"probably only 1% if not less of the general population know what javascript even is, let alone how to turn it off in their browser. Alternatives aren't worth the tradeoffs",1.0
g22f7gh,ic20rv,Because they get poor seo if they don't,1.0
g2ok8co,ic20rv,"\- SEO as other mentioned by others

\- The value proposition of increased user engagement. Showing a preview of the content with some annoying ad covering it gets the content to the user and makes them more willing to view the ad in the first place.",1.0
g201at2,ic1hqr,Neat that it's from the Babylon.js team. Babylon is such an underrated project. Three.js gets all the hype.,1.0
g212dc7,ic1hqr,"I think there is a reason for that. A lot of projects that use web as a medium to deploy 3d content value download size and startup time over other things, and Three seems to be one of the lightest options available. At least that's the reason I ended up going with it for my moderately large project earlier this year, and it has worked really well for me. 

Babylon looks like a great platform, but the last time I checked, it was a lot heavier than Three. I dumped Unity WegGL to move to Three, and I wanted to keep things as lightweight as possible without directly going to WebGL.",1.0
g217ccj,ic1hqr,"Possibly. In terms of the file size on the full library yeah Babylon is bigger. Could you get around that via code splitting though?

I would be more inclined to use three.js if I was not actually working with pre made 3D assets. I made some photo panorama viewers with it back in the day.

But with assets In my experience Babylon tends to have better rendering performance with the same assets. I recently did a project working with a 3D animator who sent me a gltf file that was like 250mb (obviously we had a few rounds of optimizations before going live)

But Babylon loaded the model and all its animations at 60 fps. Three was getting like 10 fps and this is just the bare minimum load gltf and play the animations code with each. Plus a bunch of meshes where out of place. 

I‚Äôve had this pattern of starting with three.js and dumping it for Babylon several times now on commercial projects.",1.0
g21cjmq,ic1hqr,"Interesting thoughts. I didn't look at code splitting to reduce file size, but it would be great if that is a viable option.

Did you you figure out why Three was rendering your scene at 10fps vs 60 in Babylon? It sounds like a bug in Three or some other issue. I haven't had any performance issues in Three, but I am also not loading giant 250mb files in my web app.

My project also uses  pre made 3d assets. The interesting thing is that I am using Unity as my scene editor. I ended up writing an exporter that takes an entire Unity scene along with my custom level data, meshes, textures, splines (bezier, catmull, etc.), camera system (custom), and exports it to a GLTF file that I load into my Three based engine.

This lets me use assets  bought from the Unity Asset store, and I have been adding support for any feature as needed. I also modified Three's GLTF loader to support additional features I needed (multiple shader types, etc.). It is more work than an off the shelf solution, but I am loving the flexibility of this approach. I am in control of the entire pipeline, which has helped a lot when I need to add features specific to my project, or when I need to optimize anything for runtime. This also lets me use Unity as my primary editor, which is a lot better than any JavaScript based editor option. The exporter itself was a substantial project, but I had fun writing it.",1.0
g223ydr,ic1hqr,"It probably is a bug. The three.js docs do say to report any differences between their drag and drop scene viewer and babylons as bug. But I never got around to it.

The assets I was using where made in cinema4d, which is probably sub optimal. I figure there‚Äôs a reason cinema doesn‚Äôt have much market share in real time rendering. Unity store assets are probably much more optimized. We did ultimately get the assets down to ~8mb by replacing some stock assets the artist used. People who work in cinema aren‚Äôt used to caring about polygon count.

I‚Äôm curious what you had to add support for in the exporter? I did have some problems with the artist using a lot of toon and sketch shaders in cinema. They did not export and there was no easy way to replace them with threes toon shader or babylons cel shader as they just where not the same as cinemas proprietary shaders. It was more of a post effect in cinema.",1.0
g2exyh7,ic1hqr,"The files I export out of unity are standard and 100% compliant GLTF files, with a ton of custom data exported using GLTF ""extras"" (imported as UserData). This includes full support for Curvy Splines, my own custom camera spline system, custom properties with multiple data types, JSON, etc. I can attach any of these to the objects I export from Unity. I also export full lighting data, including shadow casting/receiving, multiple light types, etc. 

In terms of Three's GLTF importer, the main change I made was to add the ability to load more than just the standard PBR material. Three's standard GLTF loader just supports one material type, which is okay for small scenes, but it can get pretty heavy if everything in your scene is rendered using the Standard material. Since I am targeting mobile, I can make do with the Lamber material on most of the objects, so I added support for that. I can add more material/shader types as needed.

Did you export your file in GLB format, or was it a GLTF text format? I support both in my Unity exporter. GLB can be considerably smaller if you have a lot of meshes or embedded textures.",1.0
g209je8,ic1g9w,Applets are back baby!,64.0
g20akp0,ic1g9w,*grabs rope and stool*,43.0
g1zmq4z,ic1g9w,That is really cool. But I got to ask why,127.0
g20bk57,ic1g9w,"To properly emulate RuneScape circa 2005, of course.",92.0
g219h2i,ic1g9w,I miss my dragon Scimitar...,9.0
g22q29q,ic1g9w,I'll trim your armor for free. Meet me in the wilderness,2.0
g21eora,ic1g9w,We got tired of people confusing Java and Javascript so we just put em together,35.0
g24t7q0,ic1g9w,"Surely no one has thought of this before.

[Oh wait...](https://en.wikipedia.org/wiki/Rhino_%28JavaScript_engine%29)",1.0
g20m5v4,ic1g9w,"[Their paper](https://plasma-umass.org/doppio-demo/paper.pdf) and its Abstract / Introduction give a good answer to this:

&gt;Web browsers have become a _de facto_ universal operating system, and JavaScript its instruction set. Unfortunately, running other languages in the browser is not generally possible. Translation to JavaScript is not enough because browsers are a hostile environment for other languages. Previous approaches are either non-portable or require extensive modifications for programs to work in a browser.
&gt;
&gt;This paper presents **DOPPIO**, a JavaScript-based runtime system that makes it possible to run unaltered applications written in general-purpose languages directly inside the browser.**DOPPIO** provides a wide range of runtime services, including a file system that enables local and external (cloud-based) storage, an unmanaged heap, sockets, blocking I/O, and multiple threads. We demonstrate **DOPPIO‚Äôs** usefulness with two case studies: we extend Emscripten with **DOPPIO**, letting it run an unmodified C++ application in the browser with full functionality, and present **DOPPIOJVM**, an interpreter that runs unmodified JVM programs directly in the browser. While substantially slower than a native JVM (between 24√ó and 42√ó slower on CPU-intensive benchmarks in GoogleChrome), **DOPPIOJVM** makes it feasible to directly reuse existing, non compute-intensive code.",22.0
g223fr5,ic1g9w,"&gt;between 24√ó and 42√ó slower

What.",9.0
g22huns,ic1g9w,Shocked not shocked,8.0
g22tj3x,ic1g9w,zero cost abstractions,5.0
g24tfen,ic1g9w,What else would you need your 16-32 CPU cores for?,1.0
g23k12w,ic1g9w,But what about web assembly?,3.0
g1zoc3n,ic1g9w,"Ah yes, one of life's most often asked questions. I have nothing to respond with but a simple, why not? üòÅ",20.0
g1zpnwp,ic1g9w,"I mean don‚Äôt get me wrong it is cool but when writing a website/read me that question should be answered. I looked at the paper and read the abstract and it seems there reasoning came down to:
JavaScript is the language of the web, other languages aren‚Äôt allowed - let‚Äôs create a way for other languages to be allowed. 

But I can‚Äôt help but say isn‚Äôt this problem already being solved with Wasm? As long as you can compile to something Wasm compatible you can write in any language. 

Not to diminish these people‚Äôs work because obviously they spent a lot of time porting Java over.",12.0
g203s1y,ic1g9w,As far as I can tell this was just a research project with not much business value.,20.0
g2150co,ic1g9w,"&gt; But I can‚Äôt help but say isn‚Äôt this problem already being solved with Wasm? As long as you can compile to something Wasm compatible you can write in any language.

Not only that, but a JVM in WASM would most likely be much more efficient *and* easier to write.",3.0
g217ak2,ic1g9w,"Or you can just compile Java code to WASM. I think this was the point, wasn't it?",4.0
g217zgm,ic1g9w,"The JVM can do more than Java, there's also languages like Clojure, Haxe, Groovy, Kotlin, etc. that compile to it.

Additionally, just compiling the language to another platform isn't the same. You also want to support the tons of existing libraries for it, and by implementing a JVM you ensure maximum compatibility. You can simply drop a jar into it and have a chance that it works.",7.0
g21t7pj,ic1g9w,Does WASM actually expose DOM / Browser APIs? I didn't think it was a replacement for JS in that sense.,1.0
g222izr,ic1g9w,"It doesn't, but you can call JS functions from WASM and manipulate the DOM that way.",1.0
g21z4x4,ic1g9w,Resume-based development,4.0
g21n3fr,ic1g9w,"Server environments running NodeJS is probably where the biggest gain would be. Interfacing ""natively"" with Java libraries would be easier to integrate than running a process and being only to read the exit code. 

The same way we use [ffi](https://github.com/node-ffi/node-ffi) to communicate with C/C++ binaries, I can imagine this can be used for Java.",2.0
g20d11l,ic1g9w,Atwood‚Äôs Law,1.0
g22e56k,ic1g9w,Why do anything?,1.0
g20h2xe,ic1g9w,Why would you write TS then transpile that to JS then run that outside a browser?,0.0
g228yrp,ic1g9w,Type-definitions and cross-platform code?,0.0
g30y78d,ic1g9w,"TypeScript brings advanced programming features to JavaScript, because it does not have them.  Node brings JavaScript outside of browsers for people who only know JavaScript.  

But when you combine the two, you achieve a level of practical absurdity, which requires a lack of understanding the big picture and wanton obtuseness, to not see.  If you do not see the absurdity, I'm sorry.

If you're thinking ""But so many people think Deno is cool!  They can't all be wrong!  That means you must be!"" then I am even sorrier.

With the boom in webdev as a trade for kids has come an acceptance of Rube Goldberg machine technologies into the mainstream.  Following the crowd is not the path to Awesomeville.  I recommend fostering a healthy dose of skepticism about groupthink into your webdev worldview as you choose your path going forward.",0.0
g3176wj,ic1g9w,You asked why and I gave you the answer. I never claimed it was practical üòÇ,1.0
g1zxk42,ic1g9w,"So in the VM we run a browser with javascript, which runs a JVM, which runs a browser, which runs a JVM, which runs.....",39.0
g20blg4,ic1g9w,"A browser, which runs...",17.0
g20i3do,ic1g9w,...away,36.0
g210pn2,ic1g9w,So the question is finally answered. Java === Javascript,18.0
g2178up,ic1g9w,"`""javascript"".includes(""java"")`",13.0
g20cv7v,ic1g9w,Is this a JoJo reference?,23.0
g20gntt,ic1g9w,"Doppio means double (espresso)

*pururururururu*",18.0
g21o3wu,ic1g9w,"Why not both?

But also Doppio has &gt;!multiple personalities!&lt;, so maybe it makes sense in the context of Java VM and Javascript?

Ok, I'm just grabbing at straws here.",2.0
g20hgaz,ic1g9w,Yes bossu,10.0
g217ktk,ic1g9w,"Oh no, we finally deprecated Java in the browser and here you are bringing it back.",8.0
g20e2n9,ic1g9w,Doubt : will it run MINECRAFT? The server only,13.0
g21qldh,ic1g9w,Did you just ask a question and answered it? Or are you doubting that it will run the server? Questions and doubts are two different things.,1.0
g22v0d2,ic1g9w,Yes,1.0
g20cbhf,ic1g9w,does it hog your ram like the original jvm? :p,4.0
g2156zl,ic1g9w,"Probably not, since browsers currently restrict RAM usage per tab to 2GB. It's either going to work or crash with an out of memory error, but it's not going to hog your RAM.",5.0
g20uiy6,ic1g9w,why?,4.0
g210bwn,ic1g9w,Sheer masochism.,9.0
g20ivdz,ic1g9w,Some men just want to watch the world burn.,2.0
g23o9u2,ic1g9w,"Can it run Rhino/Nashorn, and then run itself running Rhino/Nashorn running itself running...",2.0
g1zn9gx,ic1g9w,"The academic paper that this project was based on was published in 2014. In JS terms, that's Jurassic. How many of those assumptions on page 1 still hold true of the language? And how many of those assumptions betrayed an ignorance of browser / internet constraints back in the 90s when the language was created?

Any project that so readily introduces synchronous APIs to the browser should be taken with a huge bucket of salt. See the storm of debate that TC39 presided over regarding top-level await. 

JS is very far from being the perfect language, but backend devs and academics who have little appreciation of front-end resource constraints, history, and environmental and user complexities need to stay far away from talking about it.",1.0
g21v3li,ic1g9w,[deleted],1.0
g21zbmh,ic1g9w,"I‚Äôm going to be honest. I would almost never use this on the frontend except for a small tool for me, myself and I.

This seems better suited for backend integration with NodeJS",1.0
g207exd,ic1g9w,It includes a Clojure repl too. Neat.,1.0
g210xem,ic1g9w,Don't even know what's more disturbing.. this project or OPs username. Impressive work though.,1.0
g21ep6g,ic1g9w,Seems that the project has been abandoned.. any idea if this is being used in a production environment or was it purely a  thought experiment?,1.0
g22sb25,ic1g9w,"That's cool, now make JavaScript run inside the JVM",1.0
g232805,ic1g9w,Next project would be x86 emulator written in JavaScript and run window 20 or macOS on Chrome,1.0
g201kzc,ic1g9w,Create one virtual machine in Js? Is amazing work.... I do curiosity how it works,-2.0
g1yr223,ibxm2t,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g21dt43,ibxi2f,"An in-depth article about quite a complex subject without any noticeable errors. There's quite a few concepts written in a simple, understandable and straightforward style that makes them easy to learn for beginners, but the sheer amount of patterns might overwhelm the beginners if they try to go too fast.

The patterns are quiet different from my preferred code style, but they're still good to know.",2.0
g1xlusk,ibr1ng,"Project Page (?): https://github.com/diegosanchezp/blog

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g1yexu9,ibt2sp,This is really cool and thanks for sharing. Slightly unrelated: the website has some really rough edges in user experience and mobile friendliness. I couldn‚Äôt even use it to deploy the package because it forces you to go through a ‚Äòtour‚Äô which  doesn‚Äôt show the next button on mobile.,4.0
g1ylmpu,ibt2sp,Thanks for the feedback! Autocode is not yet optimized for mobile but we‚Äôre aware of the issues and we‚Äôd like to tackle them very soon :).,1.0
g1yz7o9,ibt2sp,Why would anyone send COVID-19 data to themselves daily via SMS unless they work in medicine or government? That is not a good thing for anyone‚Äôs mental health.,1.0
g1xdkh9,ibpnus,"Gauging interest is usually something you do *before* you build a product. If you have already built the product, you may as well just launch it as an alpha version with highly limited invite-only access. Also, you may have better luck, and get better advice, if you ask this question in any ""growth hacking"" community. Just search that term here on Reddit and you should find yourself in the right place eventually.",4.0
g1xe2lx,ibpnus,"‚ÄúGauging interest‚Äù were the wrong words, I apologize. I know this is a very necessary product that I‚Äôm working on and know it will benefit the companies / workers that will use it. What I‚Äôm worried about is launching and people see one user and then go away from it. I was thinking about launching a landing page and creating a list from people that ‚Äúsign up‚Äù from the landing page and then a couple months after that I would release the product. That way people will already know about me and then would get rolled over when I release the product to the public. Is that a common practice? The invite only also sounds like a good idea. Definitely a lot to think about, I‚Äôve just never launched a product before and don‚Äôt really have someone to go to so I figured reddit was a good start lol",0.0
g1xfqnv,ibpnus,"That is a common practice, yes. Whether or not it is a good practice is debatable. In the past I have filled in the ""Type your email address to be notified when we launch"" numerous times, only to then be bombarded with spam much later. Now I don't know what the intentions of that are, whether the businesses I gave my email to failed and they sold their mailing list to turn a little profit out of their failure or any other reasons, all I know is I hate it and as a result of that I typically *never* give my email address to such campaigns. I'm sure I speak for a large portion of people who've had the same happen to them, but your mileage may vary.

If I were to be excited about an upcoming product or service, I would absolutely love it if they had a blog with an RSS/Atom feed. That way they could announce their release on their blog and I could be notified via RSS/Atom without having to give my email address. The problem with that solution is that most millenials and gen Z'ers don't really mess with RSS/Atom. So, it depends on your target market I suppose.",1.0
g1xpm68,ibpfhf,"But how will I know how long to roast a potato without a 3,000 word story about how someone‚Äôs nephew found four pebbles in a stream behind the  old family farmhouse?

Also ‚Äúhowlongdoifuckingcookit.com‚Äù is probably available just saying.",158.0
g1ye4y1,ibpfhf,"God I hate articles that do that.

""Looking for the best way to cook rice? Well let's start with a 2 page essay of filler text to describe what rice is""

It gives me flashbacks to writing papers for school and using the most words I possibly can to fill up the space",26.0
g1yff4l,ibpfhf,Blame Google. It‚Äôs all a space-race-sequel battle to please the search engine overlord.,26.0
g1yw8s4,ibpfhf,"&gt; search engine overlord

From now on, whenever someone asks me what SEO stands for I'm going to tell them this.",13.0
g1ywgvl,ibpfhf,[deleted],6.0
g1z9dx6,ibpfhf,Porque no los dos?,2.0
g1yob62,ibpfhf,"Unfortunately I cannot give more than one upvote. Stormfield, you speak my mind :D",3.0
g1z36dx,ibpfhf,"It turns out that, ‚Äúopining about the roast potatoes of my youth‚Äù essay at the top of every recipe is mostly Google‚Äôs fault. They don‚Äôt consider, ‚ÄúPoke some holes in it and toss it in the hot box for a while‚Äù unique content, since there‚Äôs a lot of roast potato recipes out there. If you want any hope of your site getting a good ranking, your page on how to make fluffy white rice has to be notably different than other fluffy white rice guides.",4.0
g1yyvz4,ibpfhf,Or the unabridged version of the author's honeymoon in Greece.,2.0
g1yvihl,ibpfhf,"howdo.cooking, nothingbut.cooking, and nostoriesjust.recipes are also available, although a bit more expensive.",1.0
g1xo9ue,ibpfhf,"Found this on Hacker News a while ago: https://plainoldrecipe.com/

Apparently you're not the only one that's frustrated...",27.0
g1ywahp,ibpfhf,"There have been a few, here are some:

[https://news.ycombinator.com/item?id=23142220](https://news.ycombinator.com/item?id=23142220)  
[https://news.ycombinator.com/item?id=23648864](https://news.ycombinator.com/item?id=23648864)  
[https://news.ycombinator.com/item?id=14794949](https://news.ycombinator.com/item?id=14794949)  
[https://news.ycombinator.com/item?id=2734536](https://news.ycombinator.com/item?id=2734536)  


Maybe they should all collaborate to make one that actually works :p",1.0
g1zy45o,ibpfhf,"Agreed, it's not a unique idea, but a fun one to practice. Saffron has done it best, but my goals still differ a bit. Saffron has a nice write-up of how they do it, and I have what they call their ""75%"" method implemented.

I'll be working to achieve that other 25%, but the main goal was to make it so you could easily have this up on your phone, and be given the ingredients or instructions in one easy to read column.",2.0
g20mc2k,ibpfhf,Do you have a link to the saffron write up? Sounds like it would be an interesting read,1.0
g20muna,ibpfhf,"I do, and it is!

[here](https://www.benawad.com/scraping-recipe-websites/) ya go! For reference, I'm currently using the SEO metadata method, I'm currently fleshing this out to reduce the amount of recipes that fail. I have some other methods I use outside this, but these will get most of what you'd need for something like this.

The backend is a little gnarly, and is the oldest part of my codebase, so will need some love here soon lol.",3.0
g1xbycx,ibpfhf,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",27.0
g1xrim1,ibpfhf,Love this. Which I would have thought to make it myself a long time ago. Good stuff.,5.0
g1xrom2,ibpfhf,Much appreciated. :) Let me know if you have any feedback.,3.0
g1xfwvi,ibpfhf,Cool. I did something similar for the same reason except I'm using eleventy SSG. https://github.com/egomadking/no-stories,3.0
g1xgddj,ibpfhf,looks real nice - and sounds like our motivation is exactly the same. i had a feeling i wasnt the only one pursuing this.,4.0
g1y3e8w,ibpfhf,THANK you!,2.0
g1xr32q,ibpfhf,Let me know if you have any suggestions! Was real excited about this one.,1.0
g1xrovu,ibpfhf,"I can‚Äôt seem to get this to work on iOS Safari, but I like the idea!",1.0
g1xrthc,ibpfhf,"I'll see if I can reproduce that locally, thank you! The pains of not having an apple device.",1.0
g1xsdsl,ibpfhf,Give [Android iOS Emulator](https://marketplace.visualstudio.com/items?itemName=DiemasMichiels.emulate) a shot if you use VS Code. You can bring up developer tools for iOS devices to debug.,2.0
g1xsrqc,ibpfhf,"wow, this is fantastic, thank you so much!",1.0
g1y5dfy,ibpfhf,A screenshot of the error that I got. I don‚Äôt know if this helps but anyway. https://i.imgur.com/BbKrN8P.jpg,1.0
g1xuj8v,ibpfhf,Doesn't work with Brave... otherwise a neat concept,1.0
g1xuwte,ibpfhf,Thanks!! I'll file this as an issue on the repo. Much appreciated.,1.0
g20odfc,ibpfhf,"hey hey, I just tried it out on Brave and it worked:

https://shorter.recipes/search?url=https://sallysbakingaddiction.com/master-muffin-recipe/

Do you know what recipe you tried?",1.0
g1yaxql,ibpfhf,"I used: https://www.allrecipes.com/recipe/6865/to-die-for-blueberry-muffins/

It says error while searching.

i just want my blueberry muffin recipe :(",1.0
g1ybyye,ibpfhf,"There is a semi-rare case that it cannot parse out a recipe, and this looks like one of those after inspecting the page. I'll see if I can find additional ways to extract it though :)",2.0
g1ycgnf,ibpfhf,:),1.0
g1yjglz,ibpfhf,Neat. But this would fail if the site doesn't have JSON-LD,1.0
g1zabv7,ibpfhf,"Not getting any errors, but also not getting any response from this url: http://allrecipes.co.uk/recipe/6770/english-muffins.aspx 

Maybe because it's .aspx?

Love the idea though",1.0
g1zoeae,ibpfhf,"Thank you! That'd be my guess. The parser isn't incredibly intelligent right now, but I'm working on ways to expand it.",2.0
g1yma4l,ibpfhf,Aren't there any recipes yet?,-2.0
g1zofuq,ibpfhf,"The goal of the project is to extract recipes from websites, not be a recipe host.",1.0
g1yj54j,ibpfhf,"I recently tried my hands with JS and made few changes and tweaks to improve my website speed for mobile users.

Its http://www.wetechfreaks.com/

I am getting 99/100 speed score for now in web and 72 for mobile.",-9.0
g1xbd79,ibomc3,Sneaker heads? I prefer them on my feet.,2.0
g1zcbcn,ibomc3,Super niche market,1.0
g1x3w1a,ibknq6,Our of curiosity why are you promisifying FS instead of using FS.promise?,2.0
g1x4fym,ibknq6,Oh nice catch! I did the promisifying out of habit. The last time I checked fs.promise it was not stable and I forgot about it. Thanks! Will update tomorrow :),2.0
g1x8xf9,ibjl9j,This is an excellent job. I can only congratulate you!!üéâ,9.0
g1xkns8,ibjl9j,I will definitely be checking this out!,1.0
g1xmer5,ibjl9j,Really cool idea,1.0
g1xzboo,ibjl9j,What a great idea. I will forward this to my mentees. I see iOS files. Will this come to iOS App Store?,1.0
g1y0qmx,ibjl9j,Yeah soon enough,1.0
g1yub9x,ibjl9j,i really like this idea! why only react native and not a browser based app you can use in a desktop (without installing anything),1.0
g1zcxvn,ibjl9j,I was thinking of it sure in future will do but there are many web based SQL runners,1.0
g1xjugx,ibjl9j,Now do one for mongo!,1.0
g1y0vup,ibjl9j,Sure it won't take much long I will see how can I do that,3.0
g1y34wi,ibjl9j,"I‚Äôve got a mongoose builder I‚Äôd be glad to share if your interested, it‚Äôs in react but it should be possible to port",1.0
g1y3cbz,ibjl9j,Sure I will see if I can use it in my project,1.0
g1xkqtc,ibjl9j,[deleted],1.0
g1y0y23,ibjl9j,Yeah and also to those who wants to learn SQL without doing any setup,2.0
g1xj1og,ibjkhm,"Just learned about proxies a few weeks ago when waiting to make an object available to arbitrary functions in a framework but not wanting it to be mutated. 

Pretty fun stuff.",3.0
g1yt0xa,ibjkhm,There is a lib that does that. Checkout Immer,3.0
g205da7,ibjkhm,I checked out immer first but it was overkill for my needs and in two places didnt support my usecase. Either way great library/recc.,1.0
g2073rd,ibjkhm,"Fair enough. 

I would love to see your implementation of the proxy üëå",1.0
g20k10g,ibjkhm,"I‚Äôm mobile but here is the function

```

function createReadOnlyProxy(obj) {
¬†¬†// proxies only work on objects/arrays.
¬†¬†try {
¬†¬†¬†¬†if (typeof obj !== ‚Äòobject‚Äô &amp;&amp; !Array.isArray(obj)) return obj;
¬†¬†¬†¬†return new Proxy(obj, {
¬†¬†¬†¬†¬†¬†set() {
¬†¬†¬†¬†¬†¬†¬†¬†return false;
¬†¬†¬†¬†¬†¬†},
¬†¬†¬†¬†});
¬†¬†} catch (e) {
¬†¬†¬†¬†return obj;
¬†¬†}
}

export default createReadOnlyProxy;
```",1.0
g279j9f,ibjkhm,"Check out Object.freeze and utilities based on it. Using proxies for enforcing immutability looks overkill. 

https://www.30secondsofcode.org/js/s/deep-freeze",1.0
g2gkngt,ibjkhm,Went there first. Only way to unfreeze something is to deep clone it and then it is a duplicate not the same object. We had a very specific usecase where arbitrary functions were able to mutate some state but not all state. This is how we managed it.,1.0
g1uj38a,ib9pw3,I have it in production since v1 and can only recommend it,31.0
g1ujct3,ib9pw3,Thanks a lot for sharing this üôèüèª! I‚Äôm glad you like it.,9.0
g1te21x,ib9pw3,"üëâüèª Edit: [Go to examples directly here](https://davidcetinkaya.github.io/embla-carousel/examples)

Hello all,

I've been working really hard on [Embla Carousel v.3](https://davidcetinkaya.github.io/embla-carousel/) and it's finally here. Here's how it turned out:

* üëâ Even better swipe accuracy
* ‚¨ÜÔ∏è Support for vertical carousels
* üöÄ Exposing its core for maximum extensibility
* üì¶ Reduced bundle size
* üìã Brand new [documentation &amp; examples page](https://davidcetinkaya.github.io/embla-carousel)
* üíª CodeSandboxes for every example

**For those of you** **not familiar with** [Embla Carousel](https://davidcetinkaya.github.io/embla-carousel), it's a carousel I created because I was frustrated about the large bundle sizes and quality that the existing javascript carousels had to offer. Stuff like poor touch/swipe accuracy and slow loop effects pushed me to try solve this challenges.

Feedback is much appreciated!

David",26.0
g1u1t9d,ib9pw3,"Some feedback: The color scheme of code on the docs is extremely light, my eyes couldn't handle the lightness!

Is there some sort of benchmark of fluidity so that you can compare yours with other carousel packages?",11.0
g1uaqq4,ib9pw3,"About the color scheme: So switching to a scheme with higher contrast would do right?

If you by benchmark mean some sort of convention when it comes to measuring fluidity, the answer is no, not that I know of.

What I mean by this is that Embla will always be responsive to input, regardless of previous input. So whether you‚Äôre dragging across the loop joint or if the carousel is in motion, it will respond to dragging, previous or next navigation and any other input. Many other libraries throttle nav buttons and wait for the animation to finish before you can continue pressing any nav button or provide new drag input, especially when looping, or start behaving weirdly. 

Another aspect is that Embla will react proportionally to how vigorous your drag input is in contrast to many other libs just checking the direction of your drag input. In other words Embla will respond to the force provided by your pointer and not just the direction.

Thanks for your feedback and feel free to compare Embla with other carousel libs.",4.0
g1xggpx,ib9pw3,The colors would also likely fail any WCAG test: https://webaim.org/resources/linkcontrastchecker/?fcolor=000000&amp;bcolor=FFFFFF&amp;lcolor=1BCACD,2.0
g1ylkl7,ib9pw3,"Yep, lighthouse is bashing me about this. I'll see what I can do =).",1.0
g1wpp7f,ib9pw3,testing on android browser and its amazing,2.0
g1ylj8g,ib9pw3,Thank you very much!,2.0
g1uhrrw,ib9pw3,"Does it work with vertically scrolling content within the panels? I built [this](https://spacejack.github.io/panel-slider/) a few years ago, but at some point it stopped working in iOS Safari and I haven't figured out a solution.",1.0
g1urgt2,ib9pw3,I haven‚Äôt tried! But I will try it and get back to you =}.,1.0
g1untg9,ib9pw3,A nested example?  does it support that?,1.0
g1url27,ib9pw3,I‚Äôve been wondering the same for the last one or two days. I will try it out and let you know how it goes =}.,1.0
g1xglsc,ib9pw3,Are there any examples with dynamically loaded images / infinite swipe?,1.0
g1yl9kh,ib9pw3,"Hello u/m1sta,

By infinite swipe, do you mean a looping carousel? And by dynamically loaded images, do you mean lazy loaded images or populating the carousel with images after it has been initialized?",1.0
g1yt8ey,ib9pw3,"Adding images after it has been initialised, based on scrolling behaviour.",1.0
g20i60d,ib9pw3,"You can add or remove images and reinitialize it so the carousel picks up the new images/slides, but at the time of writing if the carousel will stop if it's in motion upon reinitialization.

I'm not sure if this is what you're asking about though?",1.0
g1uo6x5,ib9pw3,"‚Äú It's library agnostic, dependency free and 100% open source.‚Äù

Say no more. I‚Äôll be messing with this today. Thank you!",15.0
g1u6eld,ib9pw3,Brilliant hands. üôåüèæ,7.0
g1uatdf,ib9pw3,Thanks a lot =}.,5.0
g1ucz9g,ib9pw3,It works so nice and fluid on iPhone Safari (usually pain in the ass for animated stuff) that I want to cry. Thank you.,14.0
g1uddg4,ib9pw3,Thank you! I‚Äôm glad you like it.,3.0
g1ueehn,ib9pw3,"It's so fluid I can't believe it, it even beats flickity slider in fluidity. Definitely gonna give it a try on my next project :)",7.0
g1uf6fp,ib9pw3,Thank you! I hope that you will like it. Another benefit (I hope ;-)) if you compare it to Flickity is that you don‚Äôt need position absolute applied to your slides. Let me know if you have any questions about getting started. I‚Äôd be happy to help.,3.0
g1ujcth,ib9pw3,You should put a link to the examples on this page you have linked in OP,5.0
g1ujlc8,ib9pw3,OP üòä?,1.0
g1ujvo4,ib9pw3,Original post. So just the link you posted.,2.0
g1ujzs9,ib9pw3,"Ah, good idea! Will do. Thanks =}.",1.0
g1ul8wa,ib9pw3,"I‚Äôm on mobile and I‚Äôve just realised now the + in the bottom right activates the menu and there‚Äôs a link to examples there. I didn‚Äôt think that would be a menu tbh, seems like non standard UI. If I were you I‚Äôd use a standard hamburger menu. The + seems to imply an ‚Äúadd‚Äù action or something.

Love the carousel!",5.0
g1ulh0d,ib9pw3,Makes a lot of sense! Thanks for the feedback. I‚Äôll change this as soon as possible =}.,1.0
g24u5z4,ib9pw3,"Hello again u/jb2386,

I've updated the menu button to a hamburger. See it in action [here](https://davidcetinkaya.github.io/embla-carousel/). Thank you for your feedback.",1.0
g25kkce,ib9pw3,Nice! :) definitely looks more like a menu now.,2.0
g1up45f,ib9pw3,This looks really similar to [Keen Slider](https://github.com/rcbyr/keen-slider) which has recently become my goto for touch-based sliders. Could you outline what makes your library different and/or better? Curious if you know of Keen and found any deficiencies.,9.0
g1vbte8,ib9pw3,"Hi u/syropian,

Yes I know of **keen-slider**. There are some things that I think are worth mentioning that differs in my opinion (please note that these are my opinions):

\- keen-slider doesn't have any code tests to protect its core functionality. Now I know that Embla Carousel doesn't have 100% coverage, but it has a lot of tests for core parts of the carousel. By all means, the author of keen-slider may be the best developer in the world and maybe won't break anything, but I would generally trust a lib with decent tests more than one without.

\- Some unexpected things happens with it. For example, if you have drag free mode enabled and drag the carousel with force and then put your pointer down to stop it from scrolling, the carousel stops. So far so good. But when you make a drag move after stopping it, it won't respond the first time. You have to make two drag moves to start scrolling it again. This might be intentional, but I don't think it's intuitive. Another thing happens with the IOS picker without loop is when you drag the carousel with enough force, the carousel disappears and won't pull back, rendering it unusable afterwards. This may be related to [this issue](https://github.com/rcbyr/keen-slider/issues/27).

\- A design choice that I'm not sure is scalable from a performance perspective, is that keen-slider animates its scrolling by transforming every single slide (even slides not in viewport).  Now this probably won't lead to any issues when you only have some slides, but what happens when you have a lot? In contrast, Embla Carousel only animates one element, the container wrapping the slides.  If you have loop enabled it will move around slides each one at a time only when necessary to cover the loop gap and make the loop effect work. Another design choice that I personally don't prefer with carousels in general, which also applies to keen-slider is that every slide is positioned absolute.

\- I also don't think the swipe accuracy is great at all times. Snap modes feel a bit stiff because the scroll speed isn't proportional to how vigorous the drag gesture is. Free mode feels very very slippery which doesn't feel so UX friendly and once again not so proportional to how vigorous the drag gesture is.

According to Bundlephobia Embla Carousel is 5.9kb gzipped and keen-slider is 3.8kb gzipped. I think this is because Embla Carousel has more features, like variable widths are supported out of the box for example.

Please feel free to compare Embla Carousel and keen-slider further if you're interested. I hope this answer gives you some stuff to consider =).",10.0
g1vq2ft,ib9pw3,"Hey fantastic response, thank you very much!",3.0
g1vw1yj,ib9pw3,Thank you for reading =)!,1.0
g1x8j1r,ib9pw3,"Great response, very informative, thank you!",2.0
g1ustrq,ib9pw3,Please answer OP.,-8.0
g1urdo9,ib9pw3,"[Should I use a carousel?](http://shouldiuseacarousel.com/) Not being entirely serious with my response, but carousels as a design pattern tend to be overused and abused by marketing to dump all their shit on a single page. 

As far as carousels go, this is probably among the least awful I've tried. No insult meant to the author, I just really dislike carousels.",11.0
g1vdvyl,ib9pw3,"I came here to ask how this library handles accessibility concerns up to WCAG 2.1 AA specifically, considering that‚Äôs a default target these days in many areas of the industry and growing due to legal liability concerns and advancing best practices.

Carousels are notoriously bad at surfacing information for screen readers without getting in the way of the overall content beyond it. I‚Äôve seen them infuriate non-sighted users more than once.",5.0
g1w361h,ib9pw3,"Hi u/duvallg,

Please take a look at [this answer](https://www.reddit.com/r/javascript/comments/ib9pw3/embla_carousel_the_most_fluid_carousel_library/g1vxoxj?utm_source=share&amp;utm_medium=web2x). I hope it helps.",1.0
g1w0cjm,ib9pw3,"Hi u/TheAceOfHearts,

Thanks. I hear this a lot and I actually agree to some extent. Now this might come across as I'm kicking myself but I like to see carousels (and many other UX/UI design choices) as tools. In some contexts they will harm your site and in others work wonders.

Now the [Should I use a carousel](http://shouldiuseacarousel.com/) and others claiming carousels are always a bad choice no matter what often refer to quite old studies. And you know how fast frontend and devices have changed the last 10 years right? User behaviors have also changed. So where am I going with this? I think when used correctly, carousels can actually work wonders. One good example is e-commerce sites. If you're interested, take a look at [this article](https://smashingmagazine.com/2015/02/carousel-usage-exploration-on-mobile-e-commerce-websites/) that describes it with numbers. Amazon uses a lot of carousels (probably based on a lot of user tests) and they're doing pretty well.

Cheers!",1.0
g1vo6dh,ib9pw3,"As another commenter also asked, how is the accessibility with this?",4.0
g1vxqnn,ib9pw3,Please take a look at [this answer](https://www.reddit.com/r/javascript/comments/ib9pw3/embla_carousel_the_most_fluid_carousel_library/g1vxoxj?utm_source=share&amp;utm_medium=web2x) and let me know if it helps.,1.0
g1uswcd,ib9pw3,Looks really good. How does it do from an accessibility standpoint? I'm still burned from SlickJS.,3.0
g1vxoxj,ib9pw3,"Hi u/Atlfitguy,

Thanks! Embla Carousel is a bare bones library that comes with an extensible API that's useful for extending the carousel. Because of this, it doesn't provide the accessibility out of the box, but the API can easily be used to make Embla accessible according to [this guide](https://www.w3.org/WAI/tutorials/carousels/).

So just a brief example demonstrating the **aria-hidden** implementation:

    const slides = embla.slideNodes()
    
    // The select event triggers when new slides are selected
    embla.on('select', () =&gt; {  
      embla.slidesInView().forEach(indexInView =&gt; {
        slides[indexInView].removeAttribute('aria-hidden')
      })
      embla.slidesNotInView().forEach(indexNotInView =&gt; {
        slides[indexNotInView].setAttribute('aria-hidden', 'true')
      })
    }

Let me know if this answer is helpful.",4.0
g1uvz0i,ib9pw3,This is so beautiful,2.0
g1v7is0,ib9pw3,Thanks =).,1.0
g1vdcu2,ib9pw3,"This looks really great. I appreciate your approach.

Would you say there's a performance-based limit to how many slides one could have? I'm considering how I could use this for a project, and the slides would each be components (containing a few nodes themselves).",2.0
g1vexn6,ib9pw3,"Hi u/waitingonmyclone,

Thanks! I think it works with a lot of slides. One of my users [wrote this](https://www.reddit.com/r/reactjs/comments/i8kept/embla_carousel_the_most_fluid_carousel_library/g1bverj?utm_source=share&amp;utm_medium=web2x) about using Embla with a lot of slides in production. I hope this answers your question?",2.0
g1vof72,ib9pw3,"Thanks, that helps!",2.0
g1vjopu,ib9pw3,"Checked out the github since your last post, very good stuff :) Thanks for the great work.

Going to share it with some people!

I‚Äôm hoping I never have to implement a carousel again, but I won‚Äôt hate it if I do üòÇ",2.0
g1vzbam,ib9pw3,Thanks a lot =).,1.0
g1vomfv,ib9pw3,"Very nice and fluid, great job! You're kicking yourself by not using this in your header on the main page, though.",2.0
g1vxyfm,ib9pw3,Thanks! I'm not following I think. How should I use it in my header? Cheers!,1.0
g1w96d9,ib9pw3,"As in, just include it in the header or near the top of the page that demonstrates how it looks! I know you can go to an examples page, but I've always thought it's counter-intuitive to visit a website about a plugin when the plugin doesn't immediately demonstrate how it looks.

E.g. The 'get started' button sends you down like 50px and probably doesn't need to exist - instead you could just some fun little messages on other slides to replace the hero :)",1.0
g1vwap4,ib9pw3,looks really well made; will use it in my next project that needs a slider,2.0
g1vxvw6,ib9pw3,Thanks a lot =).,1.0
g1vzwwr,ib9pw3,"How does it compare to existing carousel libraries?

I‚Äôve been using swiper for a while with good results and am curious to see how it could be improved.",2.0
g1w2nxs,ib9pw3,"Hi u/davl3232,

The answer to this question depends on what features/properties you want to compare. In general, I think most of the existing carousel libs don't actually solve some of the hard challenges that you will face when building a carousel.

Take the **loop feature** as an example, many libs just add a throttle to the previous and next button, which leads to a non responsive carousel until the loop effect has finished. Or even worse, always throttling the previous and next button even when just animating, resulting in bad UX. In my opinion this isn't good enough if you're to meet todays UX expectations. I've worked hard on creating a seamless loop effect and smooth transitions without compromising on the UX with throttles and pauses.

Another aspect is **swipe accuracy**. Most libs just measure swipe direction and ignore how vigorous the swipe interaction was, which results in a stiff carousel that feels unnatural to interact with. In contrast, Embla tracks your pointer movement and reacts to both direction and force. In other words, the speed of the transition/animation is determined by how vigorous the swipe interaction was.

Some of the popular carousel libs also come with a rather **large footprint**. Take Swiper for example, it's 35.5 kb gzipped. By all means, it's convenient when you get everything served, but you will probably not use most of the features that the bundle includes. Embla Carousel's bundle size is 5.9 kb gzipped, and offers you an extensible API instead. With the API, you can extend it to your liking and cover most of the use cases with a carousel.

There's much more I could tell you but it would be great to know what aspects of a carousel lib you find interesting.

Cheers!",2.0
g1w21ig,ib9pw3,Does it have spring physics like Flickity?,2.0
g1w2a68,ib9pw3,Does [this piece of code](https://github.com/davidcetinkaya/embla-carousel/blob/master/src/vanilla/components/scrollBody.ts) answer your question?,2.0
g1wbimr,ib9pw3,"It's definitely physics based! I'll read up more when I have the time.

Have you seen Dave Desandro's blog where he goes over his math? It's 6 years old already:

1. [https://metafizzy.co/blog/initial-demos/](https://metafizzy.co/blog/initial-demos/)
2. [https://metafizzy.co/blog/math-time-resting-position/](https://metafizzy.co/blog/math-time-resting-position/)
3.  [https://metafizzy.co/blog/particle-to-slider/](https://metafizzy.co/blog/particle-to-slider/)",2.0
g1yl1r2,ib9pw3,Yes I have. It's nice of him to share that and I like those posts =).,2.0
g1w40vi,ib9pw3,Wow. These are *incredible*,2.0
g1w4all,ib9pw3,Thanks a lot!,1.0
g1w91n7,ib9pw3,Does this work in react-native?,2.0
g1ykuhu,ib9pw3,"Hello u/nuttz207,

Probably not, but couldn't tell. I haven't tried it.",1.0
g1waeo7,ib9pw3,"Is this accessible? I have to redo a carrousel now, and been looking for something like this. 

But I have no idea how to approach accessibility for this.",2.0
g1ykzzi,ib9pw3,"Hello u/aonghasan,

Please take a look at [this comment](https://www.reddit.com/r/javascript/comments/ib9pw3/embla_carousel_the_most_fluid_carousel_library/g1vxoxj?utm_source=share&amp;utm_medium=web2x) and let me know if it helps/answers your question.",1.0
g1x04bh,ib9pw3,"That looks really good. The only comment I have is that vertical swiping is not paused while scrolling so if used as a full screen thing it might feel wonky. Apologies if there's an option for that, I didn't read the docs.",2.0
g1ykt18,ib9pw3,"Hello u/i-am-r00t,

Strange. Vertical scrolling should be paused. Which browser including version and device are you using?",1.0
g1yxbys,ib9pw3,Sent you a PM with a demo. Chrome on Android.,2.0
g1xkak6,ib9pw3,"Great work! My only comment is in regards to design: for vertical carousel, any reason why the arrows are not up and down? Would make the scrolling more intuitive!",2.0
g1ylgum,ib9pw3,"Thanks a lot. Yes, this has been mentioned a couple of times [in the comments](https://www.reddit.com/r/Frontend/comments/ib9ri6/embla_carousel_the_most_fluid_carousel_library/g1w5cw2?utm_source=share&amp;utm_medium=web2x) and I understand that its confusing. I'll change this as soon as possible =).",2.0
g1xl36y,ib9pw3,Been on the lookout of a good carousel recently and have been too busy to build my own. Can‚Äôt wait to try this out.,2.0
g1ykqg2,ib9pw3,I hope that it will suit your needs =).,1.0
g1te05w,ib9pw3,"Project Page (?): https://github.com/davidcetinkaya/embla-carousel

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g1vwn7f,ib9pw3,[Splidejs](https://github.com/Splidejs/splide) is better in terms of the accessibility.,2.0
g1vycj2,ib9pw3,"Hmm...Embla Carousel provides an API that can be used to make it accessible, so it's not accessible by default no. SplideJs may be accessible by default, but that just a different design approach because the author/authors chose to implement it into the carousel core. If you haven't tried the Embla Carousel API to implement accessibility according to [this guide](https://www.w3.org/WAI/tutorials/carousels/), you can't really say which one is the best. Or am I missing something?",1.0
g1w64oq,ib9pw3,It's a little to sensitive with the mouse. I jumped over a picture multiple times while swiping.,1.0
g1w80yf,ib9pw3,"Thanks for your feedback. If you want to change this, you can use the Embla engine and write a couple lines of code like so:

      const { scrollTo, target, location } = embla.dangerouslyGetEngine();
    
      embla.on(""pointerUp"", () =&gt; {
        scrollTo.distance((target.get() - location.get()) * 0.1, true);
      });

By doing this you reduce the force applied when a drag event ends. Change the 0.1 factor to anything you like. I hope this helps.",2.0
g1waj87,ib9pw3,Planning on doing a config that‚Äôs not ‚Äúdangerous‚Äù?,1.0
g1ykxrk,ib9pw3,I'm considering exposing an option to control the friction or similar. But at the time of writing these are just loose plans so I haven't started implementing anything yet.,2.0
g20tqaj,ib9pw3,A gui library that doesnt show a demo??,1.0
g23bup9,ib9pw3,"u/usedocker not sure what I understand what you mean. The first line in the OP is a link to demo page:

üëâüèª Edit: Go to examples directly here

...which takes you to:
https://davidcetinkaya.github.io/embla-carousel/examples

?",1.0
g23n91e,ib9pw3,Couldn't find any example link from your project home page.,2.0
g24dl8k,ib9pw3,I see. Thanks for confirming that the link is hard to find. This has been raised before that the mobile menu isn't intuitive. A fix is on its way.,1.0
g26yw6w,ib9pw3,"Hello u/usedocker,

I've added a hamburger to the mobile menu button and the button on the hero area now links to the example page. Thanks.",1.0
g1wb4nu,ibf4gc,[deleted],10.0
g1wilbz,ibf4gc,"More or less, it looks like images instead of a true font and it has pdf export.",4.0
g1xbqm7,ibf4gc,Just use a freaking font. No reason to convert it to unreadable vector lines.,6.0
g22carx,ibf4gc,That‚Äôs pretty neat,1.0
g1vxtmr,ibd60r,looks like you got the reddit hug of death,12.0
g1w0vpw,ibd60r,Yep. I used all of my daily quota. It will work again tommorow,3.0
g1ugqub,ibd60r,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",11.0
g1ugi6s,ibd60r,"It also features an option that users can add new bike lanes and places, as well as social-media like feature to share your ride.

It was made with react.js, mapbox-gl and other libraries on the front-end and firebase for the database, user-auth, and hosting.

The website is not in English, but if you want to see it [mktocak.web.app](https://mktocak.web.app/)",2.0
g1vonvl,ibd60r,i am making an application for a company with Leaflet. You should try it. Mapbox is used to generate the map but then Leaflet lets you apply a ton of layers on top.,2.0
g1vr3tz,ibd60r,Maybe that will be much easier. It was pain in the butt to write a 20 line geo-json code for every line on the map I want to be displayed. I will definitely try that,1.0
g1vzdrr,ibd60r,"One nice thing with geoJSON is you can often generate it directly from a geospatial DB. So its nice when a map api works with it directly cuz you can just request it via api and throw it in there.

I used to hate working with geojson directly until I got more into geospatial DBs",1.0
g1uz8rp,ibd60r,Nice. I like this 1,2.0
g1w1894,ibd60r,overloaded...,1.0
g1w1e72,ibd60r,Yeah sorry. All of the daily quota has been used. The reaction has been massive. It should work again tommorow,1.0
g1w4ye0,ibd60r,nice job between,1.0
g1xiyp7,ibd60r,Lol PR for cops parking in the bike lanes,1.0
g1v01wy,ibcspk,"Article is much more of a basic 'difference' between the two, and not nearly an experiential motivations. Protobuf vs json philosophy is much more than just message size and parsing speed, but also 'formalizing messages and interfaces between components as first class citizens.'",11.0
g1v5q0y,ibcspk,"Yep, Protobuf is more binary data for machines while JSON is more for readable data for humans.

I remember, years ago, reverse-engineering Google Voice and working out ProtoBuf by hand with a Java decompiler. It's super weird and tedious to work out the deserializer. Then they moved the internal Google Voice API to JSON which made my life easier.

But now it's public stuff, and Google provides the libraries for runtime. I haven't taken a stab at it, but I don't have any projects that deal with much binary data. JSON is still ""good enough"" for now.",2.0
g1uu5rs,ibcspk,I thought flatbuffers was the new thing? Maybe just not ready for main stream yet?,2.0
g3l1yij,ibcspk,"Flatbuffers have a slightly different use-case than proto does. I think for most people outside of a high performance env like games, or some kind of needle in a haystack object fetch, proto and the grpc implementation on top of proto makes far more sense for service to service communication",1.0
g1uhhz7,ibbikj,"Oh god, it will just produce more pain.",9.0
g1usxno,ibbikj,"Half the stuff posted to /r/javascript just feels like why and just because you can do it, doesn't mean you should.

When debugging, having two different versions could lead to looking at one file, seeing how something works, trying it somewhere else and getting a different result.  Not realizing the imported package is a different version.

Although I think your article is well done, I feel this in the conclusion sums up the opposite of multiple version imports:

&gt; Keep it simple and clean and remember that your future self will thank you when the time comes. Cheers!!",10.0
g1w70x4,ibbikj,Yeap. I wanted to point out that this is doable because some people out there think it is not and they pm me regarding this. This doesn't mean that I am a fan of this approach. I have some concerns like the ones you mentioned above that's why I added this in the conclusion section,2.0
g1v8rd6,ibbikj,"&gt; Half the stuff posted to /r/javascript just feels like why and just because you can do it, doesn't mean you should.

100% agreed. You tend to get downvoted a lot when you ask why on here though.",1.0
g1x1uym,ibbikj,"It certainly has real world usage. We had an issue with a newer version of a library, but it was very hard to reproduce. So we deployed the stable version to the majority of users, and the new version to a small subset of users (internal tool so we're in close contact).

With the ability to feature flag a library version, we would have spent hours trying to reproduce the issue, while this way it could happen organically.",1.0
g1x9hi2,ibbikj,"Could thorough unit testing have caught this?  Maybe it‚Äôd have to be E2E?  As for having an internal tool could this just have been some deployed staging version with the bumped up package version?

Of course, this depends on different environments and different workplaces.  So the answer depends on that too.",1.0
g1yip75,ibbikj,"It's a WebRTC SDK, so quite challenging to e2e test without setting up a SIPp server. It was cheaper to deploy 2 versions. Although one negative side effect was a huge bundle, as it was a chunky package.",1.0
g1uvjri,ibbikj,"Note that it isn't a silver bullet. In particular, peer dependencies may break in very subtle and annoying ways, as packages will still wire them on the `react` name, not `react17` or whatever else you'll be using.",2.0
g1u1lqm,ibbikj,But why?,3.0
g1udqnn,ibbikj,New ways to make your executables larger.,8.0
g1ua6rk,ibbikj,Incremental adoption.,3.0
g1uwvtt,ibbikj,Dependency hell üòà,1.0
g1tme4c,ibanpt,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g1s4aez,ib23cg,The basis for this project was to replicate in-person games that required verbal discussion. In this demo you can move a little avatar around and hear directional audio up to a certain distance from other players. This allows for users to walk away from discussions or simply be hooligans and whisper creepy things in your left ear.,24.0
g1t4ucg,ib23cg,I may stand corrected but I've seen something similar from gather.town,4.0
g1uvnsj,ib23cg,"That's awesome! Definitely looks like some of the use cases I imagined

It doesn't look open source due to being a licensed product.

Also looks like they don't use directional audio as they probably don't want their users being nuisances (it's more of a gimmick than a meaningful feature)

Thanks for sharing! Here's hoping my post spurs some competition :)",1.0
g1v1otu,ib23cg,"I've found https://github.com/capnmidnight/Calla, which is much more than a demo.

It uses [resonance audio](https://resonance-audio.github.io/resonance-audio/) for spatial audio and [jitsi meet](https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-quickstart) for video.",1.0
g1vwkm5,ib23cg,"&gt; proximity based voice chat

We just call that ""talking.""

Also, the poor man's jQuery

    const $ = document.querySelector.bind(document);

gave me a good laugh, that's definitely going in my mental toolbox!",2.0
g1vyt10,ib23cg,"it's lovely :)

You can also use `const $$ = q =&gt; Array.from(document.querySelectorAll(q));` if you need more than one element. (`Array.from` because `NodeList` doesn't have `.map`)",2.0
g1rcadh,iavekj,Well done :),5.0
g1rlyy8,iavekj,Really nice,6.0
g1rp4cd,iavekj,That is amazing well done,4.0
g1sukzq,iavekj,bounce back is fun!,3.0
g1sxdt9,iavekj,"Thanks! I won 2nd place in last years JS13k with bounce back, going to try to top it this year!",2.0
g1tey0h,iavekj,This is excellent stuff. I was looking for something like this.,3.0
g1v9vzr,iavekj,"WOW, that's fun!",2.0
g1rjp1b,iasi8a,"Seems like the menu navigation is a bit buggy on mobile. When you select a link it jumps to the relevant div in the background, but it doesn't close the navigation menu that's layered on top of the content.",2.0
g1rmwg4,iasi8a,I'll add it to the list of things to be fixed/done. Thanks!,2.0
g1qee85,iaro7d,"Why would you call a bunch of top-level components ""domain""?",1.0
g1qjq98,iaro7d,"Thanks for asking :   
Because it was more meant to show how I would organize the code in a bigger project rather than to put everything in a component folder as usually done with boilerplate code.

It's more ""DDD style"" than a true DDD project (the same way as most FP is only ""FP style""). 

What would be your choice?",1.0
g1qb9cl,iaro7d,"A few weeks ago I had a coding task assignment for a front end position so I made this shopping cart thing.  

After looking at it back today I was thinking that maybe someone could get some idea out of it so I made it publicly available (MIT License).  

Feel free to look at it, ask questions or criticize the code (it's far from perfect).",0.0
g1qc0s2,iaqs2p,Cool idea,3.0
g1qcu55,iaqs2p,Thanks - came to me when having multiple tabs open with various environments of same product - which one was I looking at again?...,2.0
g1u1avk,iaqs2p,Was talking about the same thing with my team 3 days ago,1.0
g1q3bgk,iaq572,"GitHub: [https://github.com/ct-js/ct-js](https://github.com/ct-js/ct-js)

I think ct.js is a hidden gem amongst open source game tooling. Pixi is among the most mature and popular game engines available for 2D game development, but it doesn‚Äôt have an official editor. ct.js simply layers a whole suite of graphical interfaces on top of Pixi to make it accessible to a wider audience.

The author is a classic ‚Äúwould rather spend time coding than doing PR‚Äù open source dev. I hope r/javascript can  show  some appreciation for their work!",35.0
g1ra0a7,iaq572,"&gt; The author is a classic ‚Äúwould rather spend time coding than doing PR‚Äù open source dev.

Yeah, I had never heard of this before, even as a longtime Pixi user.  Judging purely by the website, it's amazing.",5.0
g1rd7o0,iaq572,Then again the website is so great that he definitely spent some effort on marketing,2.0
g1tgwfn,iaq572,"Just a small correction ‚Äî PixiJS is not a game engine, but a rendering engine.",1.0
g1yurjw,iaq572,Out of curiosity what format does this save the tilemaps in. Do you have a sample?,1.0
g1qshef,iaq572,"Nice! I've been a professional web developer for the past 6 years. Fiddled with making games on the web in high-school but didn't like the tools/languages I had to use (actionscript/flash). This seems perfect for me as it can get complex if I want it to be, especially with javascript. Let's see what i can whip up :)",10.0
g1rmjlw,iaq572,I really enjoyed looking at pixi yet even there homepage has outdated links to examples and it seems like a one and done project is it really a good engine? [https://www.pixijs.com/](https://www.pixijs.com/),3.0
g1r433g,iaq572,looks epic!!!,2.0
g1rdc8l,iaq572,"Ohh this is so cool! I totally want to give this a try, I can't believe I'd never heard of it before",2.0
g1qmdnj,iaq572,This is great! Thank you for sharing! üôèüôèüôè,2.0
g1sai73,iaq572,"Thanks, looks epic! Hopefully will find time to play with that!",1.0
g3mt2q1,iaq572,"almost used Pixi a few years back for my game, decided on Unity but I looked thru my Pixi code the other day, it was definitely up to it, my coding ability was not though, great lib.",1.0
g1qdl2q,iap776,Does it support sharing code between frontend and backend?,1.0
g1qhupa,iap776,Code sharing such as? Currently no codesharing apart for graphql operations and codegen,1.0
g1qjcyq,iap776,For example I've a pure function that I want to run on the frontend and on the backend. Or a type that's manually defined.,2.0
g1qjw7h,iap776,"That‚Äôs not available yet, But It would be really cool of you can open an issue on github with some examples and we can discuss and add this feature/improvement?",1.0
g1py98k,iap776,"First of all, I want to thank everyone who tried out this starter kit, I've received a lot of positive feedback. Just wanted to update the community on what's been added/updated this month to the starter kit as per requests and contributions from the community:

- Added PWA support out of the box (community contribution)
- React graphql codegen has been added to reduce duplicate query declarations, [details here](https://github.com/karanpratapsingh/fullstack-starterkit/pull/16)
- update apollo client to v3
- update Prisma to 2.4.1
- fix test cleanup issues
- general dependency updates/bugfixes

Github: [https://github.com/karanpratapsingh/fullstack-starterkit](https://github.com/karanpratapsingh/fullstack-starterkit)",1.0
g1pljtt,iak5ns,I like this ambition. However I'd need to dig deeper to understand how memory is serialised between the different workers.  A shared array buffer could really help here and realise the performance increases and reduced blocking.,16.0
g1q8j8h,iak5ns,"So far, neo.mjs is not using SABs. One reason is Safari:

[https://caniuse.com/#search=sharedarraybuffer](https://caniuse.com/#search=sharedarraybuffer)

The other reason is, that I don't think it is really needed at this point.

Example: the vdom worker is ""dumb"" =&gt; you send 2 vdom trees and compare them for deltas, which will get sent back. So there is no need to share data directly.

The main thread delegates UI events and applies deltas, so it is not aware of Apps &amp; their components.

The data worker will create stores at some point (e.g. you load a huge data set, so the local filtering &amp; sorting can happen there) and then forwards the required data to app.

There are some exceptions, where SABs would make sense right now: e.g. in case you want to do drag&amp;drop, you can (optionally) register the dragProxy node id to main, so that mouseMove events can adjust the position directly without pinging the App Worker first. So sharing this id could make sense.

Once the SAB support is in place for all browsers, we could think about multiple App workers for one App. For this use case SABs would be mandatory.",2.0
g1qicyn,iak5ns,"&gt;you send 2 vdom trees 

Which means you have to make full copies of 2 trees just to compare them. Instead of having them in shared memory.",3.0
g1qjpz3,iak5ns,"We actually do need 2 trees anyway.

Each Component has a vdom and a vnode tree.

Once you render &amp; mount a component, it will send its vdom tree to the vdom worker and get a vnode back.

Then you can change your vdom as much as you want. Once you trigger an update call to create &amp; apply the deltas, the app worker will send the vdom &amp; vonde objects to the vdom worker. This one will convert the new (changed) vdom object into a vnode again and then has 2 vnode trees, which can get compared.

It will send the vnode tree back to its owner and then you can trigger the next update. You can still edit the vdom, before the new vnode gets back and there are checks in place to prevent update calls before the vnode is there. Of course you can trigger updates for different component trees in parallel.

TL-BR: we need 2 trees for state changes (to figure out what changed). The vdom worker does not store any vdom or vnode trees on its own (we could do this with SABs to prevent some post messages, but messages are very fast).

Side Note: in case you know exactly what needs to change, you can manually create the deltas inside the app worker and send them to main =&gt; using the engine for delta updates is optional.",1.0
g1qrsft,iak5ns,I understand that you need 2 trees. But without shared memory you have to copy both trees every time you want to do a diff.,2.0
g1qkuso,iak5ns,"maybe an easier way to describe it:

vdom =&gt; current state

vnode =&gt; last mounted state (current state of the DOM)",1.0
g1q2ul9,iak5ns,"I have faced a huge challenge with some similar kind of implementation. Eventually too many web workers is also a problem and few web browsers will just kill the process. 

In my react app I decided to make all network calls go through web workers and also anything other than the dom including entire redux. Things were looking really great and performance was also good. Main thread was least active and web workers were doing a lot of work but that was the story in chrome only. But on safari the app used to crash completely randomly, without any clue. The tab will reload with a message ‚Äúthis website was reloaded due to some problem‚Äù. And unfortunately we discovered it on almost a week before delivery. Well lo and behold it was project converting an angular app into react for a major e-commerce app. Can‚Äôt tell you how many sleepless nights I had to spend for figuring that out. 

In the end had to reduce the number of workers that can be fired at a given time using thread pools. The app is relatively slower but much stable.

Learning, though the intention of web standards team is to really make it a platform for many possibilities but it can only provide specifications and it is completely up to browser vendors how they want to implement it. It is not like a standard JVM model where if it runs on one place it will run everywhere. To be frank it killed my excitement little bit into the whole web is cool movement, don‚Äôt get me wrong it is cool for sure but far from stable.",16.0
g1q60oa,iak5ns,That's horrifying.  Thanks for sharing and preventing me from ever getting into that situation myself!,5.0
g1q67t2,iak5ns," Thank you for sharing your experience, this story just kicked up all sorts of repressed Safari stress. A week before golive my team discovered the Microsoft‚Äôs MSIL JS library ‚Äújust didn‚Äôt work in Safari.‚Äù.

Safari is the new IE",7.0
g1qckz3,iak5ns,"Thanks for sharing your experience, do you think theses kind of optimization is really necessary for an ecommerce website, what type of product do they sell ?",3.0
g1qdwfl,iak5ns,That was my first thought. What the hell kind of e-commerce site would require so many web workers it crashed Safari?,3.0
g1quxj7,iak5ns,"Hi thanks for the comment, I had mentioned that I was making all the network calls using web workers and all the redux logic too. My motivation was if something is not interacting with DOM it should not be on main thread. To have the smoothest experience as possible.",2.0
g1ro0t8,iak5ns,"I see, and did It work can you tell the diference ?",1.0
g1sp955,iak5ns,Network requests are done asynchronously. They're not blocking the main thread. You would probably gain more performance if you just rewrote your code to use promises on the main thread and get rid of your web workers altogether.,1.0
g1sw1k1,iak5ns,"Hi I do use promises, how else you would make the api requests. Using web workers you can parallelize the network calls and also they can used for caching. There is a noticeable difference with and without web workers in the performance of it.",1.0
g1t1bva,iak5ns,"&gt;Using web workers you can parallelize the network calls and also they can used for caching.

The requests are done asynchronously so you can have multiple requests going on at once with a single thread. You can dispatch a bunch at once and handle them individually or use something like Promise.all. 

So you could do something like have one web worker in the background handling requests in parallel, but you don't need to spread all of your requests out onto their own web workers.",1.0
g1r9gda,iak5ns,Why did you make web workers for network calls? Network calls don't block the main thread. They're done asynchronously.,3.0
g1pjc2a,iak5ns,This is beyond science,10.0
g1pliqi,iak5ns,Also beyond webscale,10.0
g1q28qf,iak5ns,I don't even know why this is the case but I wil upvote nevertheless.,5.0
g1pxr1f,iak5ns,I like it!,3.0
g1py0t5,iak5ns,"Great idea! Suspect it would only give perf benefits in v complex apps, but would love to play with it!",3.0
g1q9x5e,iak5ns,"Agreed, in case you want to create ""small"" or mostly static apps, using Angular, React or Vue makes more sense.

Simply put: you don't need a sports car to drive to the supermarket.

In case you have small Apps with a massive amount of dynamic changes (e.g. a socket connection to push in stock value data), it can make sense here too.

One other benefit not related to the workers setup is the way to construct your components =&gt; instead of templates using a persistent JSON-like tree structure. This makes creating complex components (which need to change a lot at run-time) very easy.

You could create framework agnostic components which you use in Angular, React or Vue Apps as well.",1.0
g1qs9mw,iak5ns,"It might also be good for some v data heavy, table manipulation stuff - or anything else where the DOM is taking a hammering?",3.0
g1ufcfb,iak5ns,"This is a very old example for table updates:

[https://neomjs.github.io/pages/node\_modules/neo.mjs/dist/production/examples/tableStore/](https://neomjs.github.io/pages/node_modules/neo.mjs/dist/production/examples/tableStore/)

In case you hit the ""refresh 100X"" button, each cell will get changed 100x. So we end up with 1800 deltas (each sent via its own postMessage from app to main. Of course we could bundle them, just for testing the worker performance).

For me it takes 3-4 animation Frames, so you only see a little fraction of the real changes.

Try it with an open and closed console (there are logs which slow it down if open).

Inside the Helix demo, I got &gt; 30.000 delta updates per second, in case i scroll horizontally (rotate). This is bound to the wheel event, so i am not sure if this is the limit.

We should add some non ui event driven benchmark tests, would be fun to see the numbers.",1.0
g1q7wtm,iak5ns,"Since this was probably the first not self written blog post on neo.mjs, I thought it was worth sharing. Thanks for your feedback!

Some background infos: the framework is using the MIT license (including all examples &amp; demo apps), so you can use it for free.

It is very disruptive in the way to use it (the Javascript side is in charge), so there definitely is a learning curve. Apart from diving into the code base, I strongly recommend to take a look into the blog posts, in case you want to dive into it:

[https://neomjs.github.io/pages/node\_modules/neo.mjs/dist/production/apps/website/index.html#mainview=blog](https://neomjs.github.io/pages/node_modules/neo.mjs/dist/production/apps/website/index.html#mainview=blog)

All links to Medium are friend links to ensure you won't hit a paywall. There are 2 tutorials on how to create the Covid Dashboard, which can help with building a first App.

Feel free to jump into the Slack Channel, in case you have questions.

**Roadmap:**

For the 1.4 release, the new Calendar is the main focus. This one requires a drag&amp;drop implementation, which is getting similar to the Shopify one (Kudos!). The difference is, that drag handlers live inside the App worker &amp; it is using css rules as identifiers, rather than a fixed set of DOM nodes. The MouseSensor is in place, the TouchSensor will follow soon.

I am also working on polishing in App Dialogs, which require DD (grabbing Dialogs by the header to move them around or resizing them). For the Calendar, moving weekly events around already works, resizing events &amp; dragging on columns to create new ones are on my todo list).

Once this is finished, I will create a demo for dragging elements across different browser windows (multi screen app context =&gt; you can switch to a SharedWorkers env with changing a single framework config). It should be a visually stunning demo.

The next item is to enhance the support for mobile. While the core &amp; workers setup run fine there already, the themes need some adjustments (e.g. switching all px based rules to em, to ensure all widgets can scale).

On the widget side, a buffered grid has a high prio (epic though).

While WebWorkers can not access the DOM directly, they can access Canvas nodes (take a look at Google Maps or MapboxGL). So, we could enhance the setup and add a Canvas Worker, once working on Charts starts.

I would love to get neo.mjs running in node as well. This way, we can easily trigger the unit tests on each commit. We can also create an optional mode where the app, data and/or vdom workers run inside node (server-side delta updates for low end client devices). A middleware layer is on the todo list as well, long term though.

On the build process side, I would like to add a non-bundled build soon (just copying the app &amp; framework source structure and minifying each file on its own). Should get interesting once 5G gets more popular.

**This is just a tiny fraction of the real todo list. Feel free to comment on existing tickets or create new ones as needed to influence the roadmap.**

A big problem is that I started the project with a friend (Rich Waters), who literally vanished out of existence. At this point, I am not even sure if he is still alive. So I am mostly on my own now, with a roadmap which could easily keep me busy for another 2 years.

While I deeply enjoy pushing the project as much as I can and contributing it to the open source community, the project itself is not yet sustainable. So I am in need to catch up on the financial side of things, which will slow down the development a bit. It would be ideal to help clients getting their first neo.mjs Apps into production (this way the framework would at least indirectly benefit). No worries, I will figure this out.

Best regards,  
Tobias",2.0
g1q8gt2,iak5ns,"I thought JavaScript allows single thread only. Forgive me, I don't know much. :(",2.0
g1q9hkj,iak5ns,"Take a look at:
https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers

If available, each Worker will run inside its own thread. Strictly speaking, it is a HTML5 feature.

Workers are available inside nodejs as well, with a very similar API.",3.0
g1pvl17,iak5ns,Extreme performance,2.0
g1wr7gv,iak5ns,"Finished the drag&amp;drop implementation for dialogs (desktop only, the TouchSensor is still on my todo list).

For those of you who are wondering if drag&amp;drop can be fast inside a multithreading env, here is the answer:

[https://youtu.be/UT0Gyy3cjl0](https://youtu.be/UT0Gyy3cjl0)

[https://neomjs.github.io/pages/node\_modules/neo.mjs/dist/production/examples/dialog/index.html](https://neomjs.github.io/pages/node_modules/neo.mjs/dist/production/examples/dialog/index.html)

Best regards,  
Tobias",1.0
g1qlbq2,iak5ns,"What does ""beyond web worker"" in the title of the post mean?",1.0
g1mu4oj,iab7zb,"In one of your code snippets you have `for (id of ids) {` which will throw a `ReferenceError: id is not defined`, unless you have a `let id;` somewhere in scope.

Recently one of my personal projects required limited concurrency, and instead of pulling in a library, I made my own solution:

    async function concurrentWorker(context, callback) {
      const { queue } = context;
      while (context.ok) {
        const { done, value } = queue.next();
        if (done) {
          context.ok = false;
          return;
        }
    
        await callback(value, context.index++);
      }
    }
    
    export async function concurrentForEach(iterable, concurrency, callback) {
      if (!(concurrency &gt;= 1)) {
        // concurrency is not greater than 1, run operations in series
        let i = 0;
        for (const value of iterable) {
          await callback(value, i++);
        }
        return;
      }
    
      const queue = iterable[Symbol.iterator]();
      const context = { queue, ok: true, index: 0 };
      const workers = [];
      for (let i = 0; i &lt; concurrency &amp;&amp; context.ok; ++i) {
        workers.push(concurrentWorker(context, callback));
      }
      try {
        await Promise.all(workers);
      } catch (e) {
        context.ok = false;
        throw e;
      }
    }",2.0
g1nl0nr,iab7zb,"Aha, indeed! Fixed thnx. I didn't notice the typo as for `for (id of ids)` is valid in non-strict mode..

Nice solution you've got there!

It is similar to my ""[workers solution](https://timtech.blog/posts/limiting-async-operations-promise-concurrency-javascript/#the-solution%3A-limiting-concurrency-using-workers)"" described in the blog post.

I like the \`Symbol.iterator\` touch which makes for a fine addition on multiple accounts though a little bit more advanced.

Anyhow, I think it's really cool to try and roll our own solutions in such cases and learn a few things along the way, instead of jumping to 3rd party packages in the name of ""not reinventing the wheel"" :)

In the same vein, a next blog post will cover how to create a simple async queue, hope you'll like it and that I won't leave a typo in this time ;)",2.0
g1olopk,iab7zb,"Thank you for this! I was inspired to write a version that doesn't use async/await, and somewhat abuses destructuring, rest/spread, and a couple of helpers, `makePromise` and `unzip`:

```js
// Helpers

function makePromise() {
  let _resolve
  let _reject
  const promise = new Promise((resolve, reject) =&gt; {
    _resolve = resolve
    _reject = reject
  })
  return [promise, _resolve, _reject]
}

// Does the opposite of zip()
// http://api.prototypejs.org/language/Enumerable/prototype/zip/
function unzip(arr) {
  return arr.reduce(
    (acc, [first, second]) =&gt; [
      [...acc[0], first],
      [...acc[1], second],
    ],
    [[], []],
  )
}

// Throttle-specific stuff

function makeThrottleAwarePromise(context, promiseMakerFn) {
  let started = false

  const { canStart, bumpRunCount, unbump } = context
  const [promise, resolve, reject] = makePromise()

  const startPromiseIfAllowed = () =&gt; {
    if (!started &amp;&amp; canStart()) {
      started = true
      bumpRunCount()
      promiseMakerFn().then(
        value =&gt; { resolve(value); unbump() },
        reason =&gt; { reject(reason); unbump() },
      )
    }
  }
  return [promise, startPromiseIfAllowed]
}

function throttlePromises(limit, ...promiseMakerFns) {
  let running = 0

  const context = {
    canStart: () =&gt; running &lt; Math.max(1, limit),
    bumpRunCount: () =&gt; { running += 1; console.log('running next...') },
    unbump: () =&gt; { running -= 1; checkAll() },
  }
  const [throttledPromises, promiseStarterFns] = unzip(
    promiseMakerFns.map(fn =&gt; makeThrottleAwarePromise(context, fn)),
  )
  const checkAll = () =&gt; {
    promiseStarterFns.map(fn =&gt; fn())
  }
  checkAll()
  return Promise.all(throttledPromises)
}

// Implementation example

function seconds(n) {
  return n * 1000
}

function delay(ms) {
  const [promise, resolve] = makePromise()
  setTimeout(resolve, ms)
  return promise
}

console.time('throttlePromises')

throttlePromises(
  2,
  () =&gt; delay(seconds(2)).then(() =&gt; 1),
  () =&gt; delay(seconds(1)).then(() =&gt; 2),
  () =&gt; delay(seconds(1)).then(() =&gt; 3),
  () =&gt; delay(seconds(1)).then(() =&gt; 4),
  () =&gt; delay(seconds(1)).then(() =&gt; 5),
)
.then(results =&gt; {
  console.log('results = ', results)
  console.timeEnd('throttlePromises')
})
```

It's longer than the other examples posted here, but I had fun writing it and wanted to share.

EDITED - Hopefully added a little clarity!",1.0
g1qclhg,iab7zb,"Aaha, doing this without using `async`/`await` can be a fun challenge :)

To be honest, your implementation hurt my brain a little bit though :P

I tried playing along and re-implementing it from scratch, ended up with a good-enough ""batching"" solution using recursion:

```javascript
""use strict"";

function performAsyncOperation(id) {
  return new Promise((resolve) =&gt; {
    setTimeout(() =&gt; {
      console.log(`Performed operation for resource ${id}.`);
      resolve(`result-${id}`);
    }, 300);
  });
}

const BATCH_LIMIT = 3;

function batch(concurrency, handlers, previous = []) {
  const remaining = handlers.slice();
  const current = remaining.splice(0, BATCH_LIMIT);
  if (current.length &gt; 0) {
    return Promise.all(current.map((handler) =&gt; handler())).then((results) =&gt;
      batch(BATCH_LIMIT, remaining, previous.concat(results))
    );
  }
  return Promise.resolve(previous);
}

function run() {
  const start = Date.now();
  const ids = Array.from(Array(99), (_, i) =&gt; i + 1);

  batch(
    BATCH_LIMIT,
    ids.map((id) =&gt; performAsyncOperation.bind(null, id))
  ).then((results) =&gt; {
    const end = Date.now();
    console.log(results);
    console.log(
      `All operations performed in ${
        end - start
      }ms, moving on to something else now.`
    );
  });
}

run();

```",2.0
g1qqu9e,iab7zb,"Nice! I like the recursion, and the batching method you're using means you don't unnecessarily check all promises each time one has completed, as in my example (which incidentally, also hurt my brain to write, lol).

It's not exactly a slow operation, but each time a promise completes all `startPromiseIfAllowed` functions will be run again! The `started` flag guards against anything being done for already started promises, but still, it's a potential optimisation, especially for hundreds/thousands of tasks.

However, there is a benefit to a ""non-batching"" technique.

Take this situation:
```js
throttlePromises(
  2, // concurrency limit of 2
  () =&gt; delay(seconds(2)).then(() =&gt; 1),
  () =&gt; delay(seconds(1)).then(() =&gt; 2),
  () =&gt; delay(seconds(1)).then(() =&gt; 3),
).then(results =&gt; {
  console.log('results = ', results)
})
```
If this was ""batched"" we'd have to wait for both the first and second promises to complete before starting the third (2 seconds), taking 3 seconds to run everything:

```
Batched:
1. |s------|-------|d      |
2. |s------|d      |       |
3. | - - - | - - - |s------|d+a
   0       1       2       3

(Legend: [s]tarted, [d]one, [a]ll complete)
```
A non-batched version would start the third promise immediately after the second completes (1 second), at which point the first promise has just 1 more second to go. So 2 seconds total:

```
Non-batched:
1. |s------|-------|d      |
2. |s------|d      |       |
3. | - - - |s------|d+a    |
   0       1       2       3
```

EDITED - Tweaked after updating previous example.",1.0
g1qwman,iab7zb,"Thanks :)

Yup, both our solutions without \`async/\`await\` come with a fair amount of performance/readability overhead, though probably less than polyfilling :P

Yes, you're absolutely right, I'm aware the ""batching"" solution is sub-optimal.

In the blog post, I mention both ""non-batching"" (which I refer to as ""worker"" and consider the optimal solution), as well as ""batching"" as a bonus solution because I believe it may be easier to reason about, and really good enough in a wide variety of cases.

The visual representation of each solution is nice, I might steal that :P",1.0
g1r0o3r,iab7zb,"Steal away! :D Really happy to have seen this article, so thanks for posting!",1.0
g1pf0ah,ia7yl1,Google is going to require login to use translate soon - does this library support (or require) an API key?,1.0
g1l758s,ia5y2t,"I've made a website that matches your Spotify profile with music festivals. You select a playlist and it recommends you festivals that have matching artists with the playlist as well as similar genres.

Link: https://spotifest.app

Frontend was written in React with Typescript and Redux store.

Feedback is much appreciated :)

Edit:
Code at https://github.com/OskarAsplin/spotifest",7.0
g1nzmnk,ia5y2t,"Looks amazing bro! I would recommend Improving the UI/Design of the initial page. When I first saw it I didn't find it very appealing, but when I logged in the UI was super clean. I would recommend using the same style you used in the logged in portion of the website as the initial page!",3.0
g1o9cj4,ia5y2t,"Thanks! Nice to hear :) Yes, I've considered doing some changes to the login page. Will look into it",1.0
g205h8y,ia5y2t,"That's funny...i was brainstorming the exact reverse, an app that gets your festival/concert plans from songkick or whatever, then generates playlists of those artists to help get you hyped up.",2.0
g1kw78l,ia5y2t,"I made a simple static site generator using JS/Node.js, Webpack, and Browersync.

I made this to make it easier to maintain my portfolio. It has custom scripts to dynamcially build markup, watch for page changes, hot reload, and optimize assets to improve performance. Everything else you would expect from a general build workflow is all pre configured for you.

I'm open to feedback/ideas for improvement! 

[https://github.com/waldronmatt/bowman](https://github.com/waldronmatt/bowman)",2.0
g1kzsbn,ia5y2t,"Built Stock Portfolio Tracker with react hooks/reactstrap. Ideally wanted to create trading platform, but didn't want to pay for real time quotes API. This app is not responsive yet. Any feedback would be appreciated. 

[https://stock-portfolio-tracker.netlify.app/](https://stock-portfolio-tracker.netlify.app/) 

[https://github.com/JudoboyAlex/stock\_portfolio\_tracker\_react\_hooks](https://github.com/JudoboyAlex/stock_portfolio_tracker_react_hooks)",2.0
g1l1t7h,ia5y2t,"Considering you did the research, what kind of cost would it incur to track real time stats for even a single stock?",1.0
g1lfkyv,ia5y2t,"Minimum $14/per month. Not sure if you can get real time quote for only one stock, but I could be wrong. There are many that offers real time quotes API and their price varies widely too.",2.0
g1lrd2a,ia5y2t,"Thanks.  I was interested in this a while ago and decided to work on a cutting edge knowledge building app instead.  Figuring out how to track real time stats and execute market transactions based on that, and wrapping it in a neat desktop app (or browser app) and allowing for a seamless usage based transaction fees would be big.  Or perhaps just a subscription that passes through to the end distributor of the analytics, where you can get some cut.

Know of any packages that do that already (open source)?  I recall a few of varying quality / ease of installation

And do you intend to get there yourself?",1.0
g1mfvvx,ia5y2t,"There should be as stock trading is very popular theme. Not now, but maybe down the road, I'll get there.",1.0
g1lf23g,ia5y2t,"I made an open-source network mocking system that I find much more user-friendly than most other libraries out there.

It supports static mocks, dynamic mocks (based off both request body and query parameters), activation via terminal (e.g. `MOCK=true npm start`), and single function-call configuration that ""just works"" throughout the entire app.

Feel free to check out the in-depth ReadMe and [install](https://www.npmjs.com/package/mock-requests), see the [JSDoc](https://d-pow.github.io/MockRequests/module-mock-requests-MockRequests.html), [source code](https://github.com/D-Pow/MockRequests), or try out the [React demo](https://d-pow.github.io/MockRequests/demo/).

Edit: added links",2.0
g1mdyb1,ia5y2t,"A few months ago, I built a visualizer for the network graph of Spotify related artists. You search for artists and click on their nodes to expand the graph further.

Website: [https://vibe-graph.com/](https://vibe-graph.com/)

Github Repo: [https://github.com/cjdellomes/vibe-graph](https://github.com/cjdellomes/vibe-graph)",2.0
g1x04n7,ia5y2t,"Sneaks API: An API for sneaker heads!


The Sneaks App is a [website](https://sneaks-app.com) that allows users to search sneakers, get product information and compare prices from StockX, Flight Club, Goat and Stadium Goods through the [Sneaks API](https://github.com/druv5319/Sneaks-API)

The reason I built this API is so developers are able to create sneaker based programs and websites without having to fumble with scrapping information on all 4 resell websites. 

Here‚Äôs a [demo](https://sneaks-app.com) of the Sneaks App using the [Sneaks API](https://github.com/druv5319/Sneaks-API)

I‚Äôd love to see what projects you guys can come up with this API! I always looking for improvements within the API so feel free to fork, edit, then submit a pull request. If you have any issues, submit an issue through the github",2.0
g1xucjc,ia5y2t,"I'm a 17 year old dev and I just created hoddit - a webapp that tracks and ranks the fastest growing reddit posts by upvotes per minute!

Check out out: [https://www.hoddit.com](https://www.hoddit.com)

Feedback is appreciated!",2.0
g26phmz,ia5y2t,"Good job! Next, try pagination (paginating the results).",1.0
g1maj2m,ia5y2t,"Created a simple way to start and show multiple commands in a console dashboard. To simplify starting and monitoring our multi-service app

https://github.com/artursvonda/dashing-console

Hope somebody finds it useful.",1.0
g1ngqap,ia5y2t,"Started building an unstyled a11y conform component library for Vue3: https://github.com/visualjerk/ari

The idea is to use it as a base for building your own component library, without doing the heavy lifting regarding screenreader and keyboard accessibility.",1.0
g1nqbqq,ia5y2t,[Apollo-Graphql-Subscription-Example](https://github.com/hemanth/Apollo-Graphql-Subscription-Example),1.0
g1nyw6v,ia5y2t,"I just finished a Pinterest Clone in ReactJS with GraphQL and Node!

[I made a youtube video showcasing it!](https://www.youtube.com/watch?v=zbCTh97ijTE)

Link to Website: [https://trusting-euler-8aafb8.netlify.app/](https://trusting-euler-8aafb8.netlify.app/)

Front-End Repository: https://github.com/machadop1407/pinterest-clone-frontend Back-End Repository: [https://github.com/machadop1407/pinterest-clone-backend](https://github.com/machadop1407/pinterest-clone-backend)

&amp;#x200B;

I would love feedback!",1.0
g1qgcu2,ia5y2t,"Swipe is a simple and beautiful mobile application one page Bootstrap 5 Template that you can use to showcase your mobile application.

Link: [https://github.com/themesberg/swipe-one-page-bootstrap-5](https://github.com/themesberg/swipe-one-page-bootstrap-5)",1.0
g24rae3,ia5y2t,This is awesome. Great work!,2.0
g1txqpx,ia5y2t,"I created a pokemon theme quiz app using gatsby and material-ui, the project was then deployed to netlify. Check it out if you're interested

Github link:  [https://github.com/ngockhiem27/pokemon-quiz](https://github.com/ngockhiem27/pokemon-quiz) 

Demo link:  [http://pokemons-quiz.netlify.app/](http://pokemons-quiz.netlify.app/)",1.0
g1x8vru,ia5y2t,I just open-sourced my Discord Bot [I.R.I.S. Utilities](https://iris-utilities.com/) today!,1.0
g1ytzao,ia5y2t,"I built my own tiny 3d engine (mapping 3d points to 2d points) 


https://github.com/mithi/hello-tiny-box",1.0
g2302x9,ia5y2t,"Hi,

I started writing a Ninja Guidebook for Lambda-based APIs. Specifically Javascript ones. I would appreciate feedback and input and the github page still requires more work this week. However, I'd really love to share about the automation section of it.

&amp;#x200B;

 [https://github.com/allanchua101/serverless-ninja/tree/master/002-automation](https://github.com/allanchua101/serverless-ninja/tree/master/002-automation)",1.0
g1pqpoz,ia5jcm,"I don't want this to sound negative or anything, this looks like a well written article, and I'm sure it can be helpful, so overall good job to the author. **But**....

I looked up `Promise.all` on MDN. First few paragraphs :

&gt; The **Promise.all()** method takes an iterable of promises as an input, and returns a single Promise that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error. 

Then I looked up `Promise.allSettled` on MDN. First few paragraphs there:

&gt;The **Promise.allSettled()** method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.  
&gt;  
&gt;In comparison, the Promise returned by [Promise.all()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all) may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting.

And maybe it's because I already have some experience with JS (and articles aimed at beginners have their place, don't get me wrong), but it doesn't seem like the subject matter required an ""in depth explanation"" article. I feel like I got everything I needed to know in those few sentences.

&amp;#x200B;

Feel free to yell at me for being jaded and wrong, there's a good chance you're justified in doing so.",18.0
g1qcxly,ia5jcm,"The author here.

I don't really disagree with you. It definitely is a very basic article :)

But I think that a lot of JS newbies hearing ""write polyfill for Promise.allSettled, using Promise.all"" would be still lost and confused.

My hope is that after reading this article such task would be easy and clear for everyone. :)

Thanks for the comment!",2.0
g1m4s1o,ia5jcm,Perfect timing! I was just learning more about Promises!,10.0
g1oakw4,ia5jcm,Promises &gt; callbacks,1.0
g1olhhw,ia5jcm,Yes. Way easier to read,3.0
g1opurk,ia5jcm,"What, you don't like reading 7 callbacks in a chain like comments on reddit?!",5.0
g39fhpi,ia5jcm,"Lmao now I want to set up my VS Code to automatically code fold anything nested 4 layers deep, and say:  ""Continue this thread...""",2.0
g1prpkd,ia5jcm,Callbacks are not meant to be used by mere mortals.,1.0
g1lva6l,ia5jcm,Nice article. Thanks.,5.0
g1omw14,ia5jcm,"This is a really good and well explained guide on an important tool, Greta job!",1.0
g1kjmwf,ia4crc,"I use promises for custom dialogs all of the time. To me, a cancellation is as expected as a dialog 'result' so I use resolve for both. The resolved value for a cancellation is usually a `null`, versus a result object for an 'OK'. Works well, especially with the appropriate TypeScript definitions (to stop you using the result without checking for the cancellation case).",5.0
g1kqoyh,ia4crc,"So, null insted of {}, right?",2.0
g1kuksb,ia4crc,I'd say so. Checking for null is easier than 'is this object empty'.,3.0
g1q0cku,ia4crc,"Unexpected ton of downvotes... someone must have been offended in his own personal faith by this question, otherwise i can't explain.",2.0
g1rv3hk,ia4crc,You have bad grammar.,0.0
g1sl1xe,ia4crc,"I use promises to manage waiting for user input all the time (like you, typically modal operations).

I simply resolve() in cases of cancellation.

After the await or in the then handler, I check for a truthy value and proceed if one is found. I don't use reject as it's not an error to cancel.

I find this pattern allows for very simple flows and prevents lots of nested callbacks.

From the calling code, using a promise to wait for user input is exactly like making an async call to a database or other I/O function, so I see absolutely no reason they shouldn't be used in cases of user input. They simplify things greatly.",1.0
g1k3v82,ia4crc,"I don't think promises should be used to wait for the user, only for operations like waiting for the network. Couldn't tell you the right alternative without more context - maybe state management?",1.0
g1k5oj4,ia4crc,"Why not? Waiting for user is the same as waiting for I/O.

If you don't use a Promise you get into callback hell, so using a Promise is better.

State management is worse than simply avoiding state and if you use a Promise you don't have any state at all.",0.0
g1k6uwo,ia4crc,"You don't get into callback hell, because you just have two events - cancel or submit.

An instance of a promise for user input sounds like too much logic to me. Just asking for bugs. What happens when you navigate away from the form, for instance? Is that rolled into the promise logic? Suddenly parts of your application that shouldn't be aware of each other now are.

User input for a form doesn't really fit the model of ""sent off an asynchronous operation, waiting for result"" unless you jump through some mental hoops.",4.0
g1k8j89,ia4crc,"I should have probably told that the form is modal, so the user cannot ""navigate away"".

&gt;User input for a form doesn't really fit the model of ""sent off an  asynchronous operation, waiting for result"" unless you jump through some  mental hoops. 

I beg to differ in this one, user input is asynchronous and you need to wait it anyway (if it is modal), there aren't any mental hops needed.",-3.0
g1kdzy1,ia4crc,"No. Events are not the same thing as asynchronous operations. 

Another example:

A UDP socket listening for packets is not an asynchronous operation. Opening a TCP socket to issue an HTTP request and get the result is.",1.0
g1k6v77,ia4crc,Is this react or something else?,1.0
g1k8rda,ia4crc,"It is a theorical question, framework-independent",0.0
g1kcbez,ia4crc,Well in react for example it's better to have two callbacks passed to the component called `onSubmit` and `onCancelled`.,1.0
g1khum1,ia4crc,"I am not sure about this particular use case, but in general I'd suggest to use the cancellation source/token approach which I coincidentally just talked about [here](https://www.reddit.com/r/javascript/comments/i9xun2/a_discussion_about_cancellation_and_promises_with/). This way, the promise would be rejected with `new CancelError()`, but you'd rather want to check `token.isCancelled` than handling specific promise rejection errors.",1.0
g1kraid,ia4crc,"Thank you for your input, it is interesting but isn't it in proposal status? Every proposal change you would need to change your own code.

After it is ratified i would gladly use it.",1.0
g1ktevh,ia4crc,"Given [the previous proposal](https://github.com/tc39/proposal-cancelable-promises) was withdrawn 5 years ago, and the current one just has reached stage 1, it may take *a while* until it is ratified, if ever. That said, I'd personally stick with something that is out there even as a proposal. OTOH, I know teams who've been happily using Bluebird for its cancellation features for years. I'm sure their code will live and work well in its current form longer after anything gets standardized in this area.",1.0
g1l12dk,ia4crc,That seems more suitable for cancellation of the form by the 'caller' of the form rather than form itself?,1.0
g1l2u0o,ia4crc,"This might not be the best design, but it should be possible to pass an instance of `CancellationTokenSource` to the code that creates the form and and returns a promise for it. In which case, that code can just call  `CancellationTokenSource.cancel()` if the user cancels the form.",1.0
g1oa3r7,ia4crc,"On a semantic level, it's better to let errors be errors. 

A form being cancelled is still part of the expected states of the form. 

A better solution is to use a `Result` pattern:

Success looks like this:

```
{ success: true,
  data: { ... }
}
```

And errors like that:

```
{ success: false,
  reason: ""form is empty""
}
```

Discrimination becomes very easy:

```
  useFunc().then(({success, reason, data})=&gt;{  
    if(!sucess){  
        // do something with ""reason"" 
    }  
      // do something with ""data""  
  })
```",1.0
g1jjypa,ia33hj,"Project Page (?): https://github.com/keithclark/ZzFXM

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g1m9nyt,ia33hj,This is refreshing and cool. Thanks!,2.0
g1kfs57,ia0dkc,I don't get it. What does this do other than query the backend for a list of permissions for the current user? Seems like it adds next to nothing over a simple fetch.,1.0
g1p4ngf,ia0dkc,"For short, Casbin.js is an addon that extend Casbin access management to the frontend. It provides a toolbox for client-side developers to handle the permission of the current user. Casbin.js itself doesn't support the functionalities like diverse access-control models, authorization enforcement, etc.  


Why Casbin.js?  
Normally, it is not proper to directly build up a Casbin service and do the authorization/enforcement tasks at a web frontend application due to the following problems:  
1. When someone turn on the client, the enforcer will be initialized, and it will pull all the policies from the backend persistent layers. A high concurrency could bring tough pressure on the databases and cost a lot of network throughput.¬†  
2. Loading all policies to the client sides could bring secure risks.  


We wish to a tool that eases the process of using Casbin at the frontend. Actually, the core of Casbin.js is the manipulation of current user's permission at the client side. As you mentioned, Casbin.js does a fetch from a specified endpoint. This procedure will sync the permission of the user with the backend Casbin service. After having the permission data, developers can use Casbin.js interfaces to manage the behaviors of the user at the frontend side.  


Casbin.js avoid the two problems that mentioned above: Casbin service will no longer be pulled up repeatedly, and the size of passing messages between the client and the server are reduced. We also avoid to store all the policies at the frontend. User can only accessible to his own permission, but have no idea about anything about things like the access-control model and other users' permissions.  


We believe Casbin.js can efficiently decouple the client and the server in authorization management.  


The development of Casbin.js is still on going, and many features are under discussion. It would be greatly appreciated if you could raise issues in the repo or share your opinions with us.",1.0
g1i8kmh,i9xun2,Important topic. Thanks for the pointer!,8.0
g1i8yp2,i9xun2,"Agreed and you're welcome. I'm really looking forward to the progress with [the current TC39 proposal](https://github.com/tc39/proposal-cancellation), of which Rob is one of the authors.",10.0
g1ih3ie,i9xun2,Username almost Nosferatu,1.0
g1ij1pl,i9xun2, I'd rather prefer Signal-to-noise ratio,4.0
g1inh6z,i9xun2,Can I get an ELI5,6.0
g1iy75p,i9xun2,"&gt; Can I get an ELI5

Here's my take. 

A proper cancellation framework for asynchronous operations is a useful tool for development of front-end workflows. It may also improve scalability of the back-end. 

For example, consider Autocomplete:

- user types a character 
- we start an async delay (e.g., via `setTimeout`); 
- when the delay is completed, we start an async HTTP fetch that returns a promise;
- meanwhile, the user may have typed another character, while we still haven't received the server's response for the previous fetch; 
- ideally, we now need to cancel the fetch (or the delay, whatever is pending), before we start a new sequence of async calls. E.g., see [`delayWithCancellation`](https://github.com/rbuckton/prex/issues/3#issuecomment-674306701) from the topic link;
- on the server, we may also want to cancel a pending API call to another micro-service that we use as the auto-completion provider;
- now we can start another delay and the fetch for the newly entered text, and so on.

Thus, cancellation is pervasive through all code layers, similar to `async`/`await` itself.
  
Yet, currently there is no standard framework for cancellation in JavaScript. It's been a bumpy road, check Ben Lesh's [""Promise Cancellation Is Dead ‚Äî Long Live Promise Cancellation!""](https://medium.com/@benlesh/promise-cancellation-is-dead-long-live-promise-cancellation-c6601f1f5082) for some insights.

The [current TC39 proposal](https://github.com/tc39/proposal-cancellation) is modelled after [Cancellation in Managed Threads](https://docs.microsoft.com/en-us/dotnet/standard/threading/cancellation-in-managed-threads), the approach taken by the .NET ecosystem long ago. It may very well be applied to asynchronous JavaScript, too, albeit it is a single-threaded language.

In a nutshell, it deals with two concepts:

- the Cancellation Source. This is the *producer* part of the API, the code which triggers cancellation and which normally is external to the asynchronous operation itself.
- the Cancellation Token. This is the *consumer* part of the API, that lets the code conducting the async operation to observe the cancellation request and act upon it properly. Think of `addEventListener` for the hypothetical `cancel` event. Back to the Autocomplete example, there we may want to call `clearTimer()` for the delay, or `AbortController.abort()` for the HTTP fetch.

Hope this makes sense. There are many ways to tackle it, and there have been many great takes at implementing cancellation in JavaScript and how to marry it with Promises. One notable example is [Bluebird Library](http://bluebirdjs.com/docs/api/cancellation.html).

The [GitHub issue](https://github.com/rbuckton/prex/issues/3#issuecomment-674185791) I referenced here is just yet another attempt at that, my own modest take to make a custom class `CancellablePromise` that extends the standard [`Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) and uses Rob's `Prex` library for its [`CancellationTokenSource`](https://github.com/rbuckton/prex/blob/master/docs/cancellation.md#class-cancellationtokensource), [`CancellationToken`](https://github.com/rbuckton/prex/blob/master/docs/cancellation.md#class-cancellationtoken) and [Deferred](https://github.com/rbuckton/prex/blob/master/docs/coordination.md#class-deferred). It's been great to get some feedback from Rob, and I hope the discussion will continue.

For a simple example, [here's a RunKit](https://runkit.com/noseratio/cancellablepromise/0.1.7).",36.0
g1lbl2g,i9xun2,Amazing explanation. Thanks mate,2.0
g1lxjxf,i9xun2,"As long as it‚Äôs an improvement on cancel tokens, I‚Äôm on board!",3.0
g1n3ezz,i9xun2,"[I want to point people towards the awesome fluture project](https://github.com/fluture-js/Fluture) - which is basically another async abstraction, similar to promises, but better thought out. It supports cancelation out of the box, as well as being lazily executed (no more promise returning functions to delay execution!). 

It's author has written [quite extensively](https://medium.com/@avaq/broken-promises-2ae92780f33) about the shortcomings of the Promise specification, and he's definitely an expert on the subject. It's really something worth looking in to.",3.0
g1nlxw8,i9xun2,"Thanks for pointing at Futures, it looks like a pretty powerful and well-thought library.",1.0
g1i5gio,i9xu70,"Hi all, I've made a website that matches your Spotify profile with music festivals. You select a playlist and it recommends you festivals that have matching artists with the playlist as well as similar genres.

Link: https://spotifest.app

Front end was written in React with Typescript and Redux store. I also used hooks (https://reactjs.org/docs/hooks-intro.html) in some of the React components. The design is based on Material UI (https://material-ui.com/) which I highly recommend due to it's ease of use and giving your site a coherent style. I've been working on this project on and off for six months now with very little prior experience with front end programming. I have learned a lot these months and am happy to answer any questions about the site.

Feedback is much appreciated :)",2.0
g1imu12,i9xu70,What API did you use to get festival info?,2.0
g1jbyqz,i9xu70,Currently I'm using a web crawler written in Scrapy (a Python framework) which collects information from musicfestivalwizard.com. I do want to switch to an API but haven't found anything obvious to use yet. So open to suggestions :),1.0
g2cldx1,i9xu70,"that was insanely a good idea!

I just want to leave 1 more vote so that it also integrates with Songkick. That's because he has a much larger register of festivals, especially those of local artists, as for example here in Brazil, where we have gigantic festivals of only artists who sing in Portuguese.

Also, if you want help to translate the interface, I'm down!",2.0
g2guggm,i9xu70,"Thanks a lot! I have some stuff I need to finish and improve first, but then I will definitely check out the songkick api. Will let you know if I need help :)",1.0
g1hv00g,i9w5gk,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g1j9yvg,i9w5gk,Whats the use case of an in-browser console? Why not just use an actual console?,1.0
g1jxulu,i9w5gk,"This isn't made with a particular use case in mind, just for demonstration purposes for other peoples' use cases.

That being said, there are [many, many](https://github.com/microsoft/node-pty#real-world-uses) reasons you might want to do this. As mentioned in the link, VS Code being one of the most prominent.",1.0
g1lyb20,i9w5gk,"Ok, thanks.",1.0
g1mhrzv,i9pgrp,Would be cool if I didn't need to make an account to read it.,1.0
g1kkry7,i9p5kw,"I'm still salty that the author scraped emails of developers that used his project (not sure if it was from GitHub repositories or NPM packages) and signed them up for a newsletter list and sent out donation requests.

https://github.com/ajv-validator/ajv/issues/1202",2.0
g1g8ejz,i9o1od,"This small but powerful library provides a simple, one-stop-shop configuration for mocking network responses for any URL.

\~ \~ \~ \~ \~

Quick background: The company I work for has regular network outages about twice a week during company-wide deployments. During this time, the entire back-end is inaccessible which stifles front-end development. Originally, we were manually replacing `fetch(apiUrl, options)` with `Promise.resolve(mockResponse)` in any src file that made a network request. I knew there had to be a better way, but after searching around, the only solutions were:

1. Continue replacing `fetch` calls in src code.
2. Using a third-party JSON hosting service, which would still result in changing src code to swap URLs from `company.com/api/X` to `thirdparty.com/mockApi/X`.
3. Running an additional node server locally, which would involve either the same issue as (2) with replacing `company.com/api/X` with `localhost/api/X`, or lots of complex setup with proxy interception, which wouldn't be an easy one-size-fits-all based on different teams' setups.

\~ \~ \~ \~ \~

Essentially, what I wanted was a quick, single point of entry that I could call once and it would just work throughout the entire app. I didn't ever want to have to change the src code (neither `fetch` calls nor URLs), and wanted something that I could distribute to all other teams that would require little to no setup on their end other than the obviously required URL-response mapping.

Having found nothing that met all those requirements, I made this library, which still to this day I find simpler to use and more feature-filled than others in the field. So I just wanted to share with all of you in hopes that someone else would also find it as helpful as my coworkers and I did.

A quick rundown of the features this provides:

* **No changing source code**! With this library, you don't need to replace either the URL called (e.g. `https://real.url/api` \-&gt; `(localhost|third-party-mock.com)/mockApi`) or the fetch call (e.g. `fetch(url)` \-&gt; `Promise.resolve(mock)`).
* **No painful configuration** of complex node servers, proxies, or anything else! Simply install, configure URL-response mappings once, and mocks will work automatically for your entire app.
* Full support for **use along with third-party libraries**, such as `Axios` and `jest`.
* **Dynamic response modifications** to mimic back-end alterations of data, even after multiple API calls.
* Query parameter parsing to optionally **mock all URLs with the same pathname** using the same dynamic response function.
* Mock **response resolution times** for different URLs individually.
* Simple configuration to **split mock code from production code** and/or **activate mocks via terminal** (e.g. `MOCK=true npm start`).
* Use in **both front-end and back-end** \- anywhere `fetch/XHR` are defined, MockRequests has your back!
* Configure all URLs you desire to mock within one single `MockRequests.configure()` function call and the **entire app will use mocks** even without importing MockRequests.
   * A side effect of the one-stop-shop configuration offered is the ability to easily **switch app-wide mocks between different logins**. Just nest each login mock inside a single object and choose which one you want within the configure call, e.g. `MockRequests.configure(loginMocks.alice)`.
* **Mix mock responses with real API calls** by only configuring the URLs you need mocked (in the event that some URLs are working but others aren't/haven't been developed by back-end teams yet).
* It's all open-source, so anyone can contribute or fork to modify as they see fit.

Feel free to check out the in-depth ReadMe and [install](https://www.npmjs.com/package/mock-requests), see the [JSDoc](https://d-pow.github.io/MockRequests/module-mock-requests-MockRequests.html), [source code](https://github.com/D-Pow/MockRequests), or check out the [React demo](https://d-pow.github.io/MockRequests/demo/).",2.0
g1gj224,i9nwzx,"GA are fairly simple to implement. So I guess it doesn't really matter most of the time. Although, one case I can think of based on personal experience is that of of needing to do concurrent computations. Some problems are just to hard to solve using a single thread, even for GA, in that case you should choose something else.",1.0
g1r1voh,i9nwzx,"Genetic algorithms are computationally expensive. Javascript is an interpreted language and even with a high end JIT like the V8 engine it's still much slower than other languages like C or even Java which is why it's strange to write such an algorithm in javascript. If you don't intend on running it for many generations though, it doesn't really matter.",1.0
g1g6kyu,i9n5xu,pretty cool!,3.0
g1gmni9,i9n5xu,[deleted],2.0
g1gr5vs,i9n5xu,"Thanks for all the details, I had problems with dat.gui and undefined properties or arrays, they needed many changes that were a mess for me.
It all started with a single tsParticles editor but I created some reusable code so I decided to move it away, if someone needs it.
It‚Äôs an early stage so it can have some bugs and thanks again for reporting, I‚Äôll have a look on them ASAP. I forgot some cross browser testing.",2.0
g1g20p3,i9n5xu,You can see a simpler sample here: https://codepen.io/matteobruni/pen/oNxNvja,1.0
g1h7qvi,i9n53d,"You'll find a lot of tutorials on YouTube and its quality stuff. Channels like Traversy Media, The Net Ninja, Web Dev Simplified,Academind, Fireship (this is quite advanced) are great. Apart from this you can listen to podcasts like Syntax.fm on Spotify or on your podcast player. They're great. 

These tutorials complement well with reading the famous You Don't Know JS series by Kyle Simpson!
[YDKJS](https://github.com/getify/You-Dont-Know-JS/tree/1st-ed)
This series of books will take a lot of time to finish as even I'm yet to finish it. It's been great reading so far. Highly recommended! 

You might want to start off with some introduction to framework (Angular, React or Vue) and see which one you like and what suits your goals. Based on that you might want to buy a course on a learning platform or just try to learn on your own with the docs and/or free tutorials.",3.0
g1nr1ot,i9n53d,This is another good javascript book https://eloquentjavascript.net/,1.0
g1ohgj9,i9n53d,"I really like the stuff I've seen so far from [Steve Griffith](https://www.youtube.com/c/SteveGriffith-Prof3ssorSt3v3/playlists)

His playlist covers many topics related to Web Development (Javascript, HTML, CSS, Node, toolings) should provide good foundations for moving into learning JS frameworks",1.0
g1ghan6,i9myd8,related [https://gss.github.io/](https://gss.github.io/),1.0
g1fwxmu,i9mceh,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",2.0
g1yvoal,i9mceh,"i made a similar one! but in rust 

https://github.com/mithi/rusty-genes",1.0
g1gnntm,i9lqdr,I found the GitHub issue where they‚Äôre trying to decide the default [https://github.com/nodejs/node/pull/33021](https://github.com/nodejs/node/pull/33021). Lots of tone policing and arguments about what constitutes ‚Äúconsensus‚Äù for an issue which really (IMO) should be non-controversial.,4.0
g1j5s0m,i9lqdr,"I can probably live with any decision as long as long as it isn't `none` - it was like that in some old versions and made debugging a pain (until you inevitably added the global handler to log them).

`throw` or `warn-with-error-code` seem like the most sensible options though.",2.0
g1fsuq8,i9lqdr,https://yarn.co/yarn-clip/4ec775aa-8604-4b59-8600-3bf8d627106a,-4.0
g1fmh8e,i9jor9,"My biggest issue with testing sagas has always been that you largely end up with tests that mirror your implementation and so need to be updated with every logic change. The best approaches that I have seen test that actions are fired *at some point* as a result of the saga running and not necessarily testing that things happen in a particular order. There are cases where you do need to enforce order, but usually not

For example, if I have a saga that handles making an API request, I need to really test two things: 1) that the request is actually dispatched and 2) that it fires an action to either store data or set an error condition based on the result.

If I later decide to pull in state via selector rather than passing it in the action payload, my test shouldn‚Äôt fail because how the saga gets the data it needs to run is inconsequential.

If I have to manually move the saga to its next step by calling a function in my test, then it will always enforce at least the number of yield statements, which again is inconsequential.

I wish I had a great solution to fix these issues, but as is what tends to happen is that your tests don‚Äôt really catch bugs and need to be frequently updated, so the most they really offer is forcing you to review your implementation twice.",2.0
g1fv01t,i9jor9,"Yep, that's exactly the same problem I encountered the first time decided to test my side effects. There are great libraries for unit testing. However, I chose redux-saga-test-plan as it the only that providers flexibility in writing integration tests.",2.0
g1gosac,i9jor9,"Yeah, I see that you covered that in the code example. I think you should consider explicitly calling out that in your write up (unless I just missed it) as a common problem with testing sagas and how the testing library choice helps solve it.

I completely overlooked your comments in the code because your write up didn‚Äôt mention it.",2.0
g1goyyf,i9jor9,Thanks for advice,2.0
g1hjepo,i9jor9,"I initially was lost at how to unit test my sagas as well.  What you've got clearly works, but it seems a lot more verbose and fragile than what I ended up doing, so I want to share that strategy here.

[https://redux-saga.js.org/docs/api/#external-api](https://redux-saga.js.org/docs/api/#external-api) defines `runSaga`, which takes in an an options object where you pass in your dispatch and getState (both of which normally hang off of the redux store), and then your saga, and optionally the action that gets passed in.

So what you do is mock out (via jest.fn) both dispatch and getState.  You're able to clearly define the state that goes into the saga, as well as make assertions of what gets dispatched after invoking the saga with that state.",2.0
g1ioqge,i9jor9,"I see what you're pointing at. I must say I was awake of the function, though I didn't know it can be used that way. It seems to be a better option than redux-saga-test-plan provides.",1.0
g1fltcb,i9jjpf,"This is a ""fuck yea!"" repo in my opinion.  

Just one change, I'd recommend using SQL parameterization instead of JS String interpolation.  

Forex: 

```
    const sqlRes = await db.query(
      `SELECT * FROM Todolist ORDER BY ${orderBy} ${direction}`
    );
```

try changing to: 

```
    const sqlRes = await db.query(
      `SELECT * FROM Todolist ORDER BY $1 $2`,
      [orderBy, direction]
    );
```

Reason being, most DB libraries have automatic validation so that someone can't put in a url like: 
```
""/getTodos?orderBy=""age;);%20DROP%20TABLE%20Todolist;--""
```",32.0
g1fmjo5,i9jjpf,Not validation but the latter sends the parameters to database using [parameterized query](https://node-postgres.com/features/queries#parameterized-query) where the input is separate from the query itself. This avoids the problem of injecting user input to the query altogether.,21.0
g1fv1d1,i9jjpf,"i see your point thanks,  sql is not happy with assigning variables as identifiers. and for a good reason, tho its used as a proof of concept for the demo project, the correct way will be a paramterized query ill fix that Thanks.

\*\* FIXED \*\*",5.0
g1hjwqq,i9jjpf,"Swap out React with Ember, so you can call it PEEN stack. Lol",11.0
g1hns2y,i9jjpf,"I prefer TypeScript, ExpressJS, React, and Docker. The TERD stack has served me well over the years and I'm not going to flush it away now.",5.0
g1jjadn,i9jjpf,"Maybe Postgres, Ember, .Net, IIS?",3.0
g1jvg0n,i9jjpf,I see what you did there,2.0
g1hk8su,i9jjpf,LOLL the combinations are endless!,2.0
g1gd5lf,i9jjpf,Is it possible to share code with the frontend and the backend?,1.0
g1fgby5,i9jjpf,Koa &gt; Express any day,0.0
g1fmb7l,i9jjpf,"Good to know, I‚Äôll look in to it",4.0
g1jaj8f,i9jjpf,Been looking into MarbleJS too - it's a layer of FRP built on top of Express that makes it so you're dealing with observables. Good if you're familiar (and like) the RxJS way of doing things. I am trying it out in my latest project.,2.0
g1fqiai,i9jjpf,"I really, _REALLY_ wish Koa would gain more traction and overtake express. It is _way_ better. But Express continues to be way more popular because, for whatever reason, people aren't willing to move away from it and I don't understand why.",5.0
g1frdyi,i9jjpf,"Could you (or anyone) give some examples why Koa is better? I was trying out Svelte/Sapper recently, and one of the first things I did in their suggested template was swap out Koa for Express. Obviously there's some merit to ""Koa &gt; Express"" but why?",5.0
g1fspf3,i9jjpf,"There's  lots of reasons I prefer it. In general, it's just much simpler and intuitive.

* It doesn't pollute/modify the underlying¬†node request and response objects. 
* Gets rid of callbacks in favor of async/await (or generators) which makes code logic much clearer and easier to write. 
* It's a much, much nicer experience if you're using Typescript because it's much easier to type your context object (I've struggled so many times trying to augment Express's request/response/application types. It's virtually impossible to type the `locals` properties for express)

To me, Koa is to Express as React is to Angular. Koa doesn't include routing, templating, and tons of middleware (in fact it seems express is pulling a lot of middleware out, too), and it's a very simple, intuitive, straight-forward API. And so it's very lightweight, which means there's less surface area for bugs. But it's still super-simple to plugin any middleware that's needed.",13.0
g1h66im,i9jjpf,"And to add, Koa‚Äôs middleware syntax is the bomb. It uses generators to unwind, so it is super-easy to write request and response middleware.",1.0
g1ge52g,i9jjpf,"I just took a look at Koa, and i have to disagree. I think its the opposite, express is like react and koa is like angular.",-5.0
g1ghfpd,i9jjpf,"In what way? Koa was made by the creator of Express and was originally meant to be the next version of Express, but because the changes were so different they just made it into its own library.",5.0
g1gkj1e,i9jjpf,why does it not have a router? i just don't get that. why would i want to do even more work? i would prefer hapi over koa because atleast it has a router,0.0
g1gku3f,i9jjpf,"Angular has all the batteries included, React is a view library. I reckon that is what meant with Koa is like React.",6.0
g1gl9be,i9jjpf,"React is simple, as is express. Angular there is more to learn, as is my initial impression of koa. too much to learn and for what benefit? its not clear to me there is any value to the proposition of migrating from express to koa.",0.0
g1i5fhp,i9jjpf,"Hmm, are you sure? Koa seems like it is just like the middleware in Express (https://github.com/koajs/koa/blob/master/docs/koa-vs-express.md#koa-is-barebones). While Express has a whole load of other stuff.

In that sense Koa is way simpler. Not easier, simpler. It takes one component that Express offers, and makes it a whole lot better.

Subjectively Express might be easier because you‚Äôre used to it.

Btw, I‚Äôm not here to sell Koa. I‚Äôm just totally disagreeing with you when you compare Koa to Angular. Koa is one thing (a bit like how React is just the view layer, Koa is just the middleware), Angular is a beast of a framework (Express is more of a framework, providing routing, templating and more).",2.0
g1i7a7m,i9jjpf,"&gt; too much to learn and for what benefit?

Well I think the main reason I prefer Koa over Express is that it wasn't too much to learn.

Instead of:


    app.use(function(req, res, next) {
  
    })


You do

    app.use(async function(ctx, next) {

    })

And that's pretty much 99% of what you need to learn lol. For most major express libraries there are koa equivalents.",1.0
g1i6sad,i9jjpf,"I actually agree with you regarding that lol, 99% of the time you install `@koa/router` whenever you use `koa`, it would be nicer if the router was just included imo. But that's why I'm not sure why you're saying express = react and koa = angular. Seems like it's the opposite, no?

The idea was that it was supposed to be a very barebones framework for web servers with *zero* middleware pre-installed. I think there's value in that though as express probably has stuff baked in that people don't use.",1.0
g1gjtwj,i9jjpf,"See, you can just blurt out your opinion all day long, but for anyone to really care you need to actually explain _why_.",1.0
g1gkbru,i9jjpf,Koa doesn't even have a router. what purpose is a web framework without a router.,-2.0
g1gmvtp,i9jjpf,"LOL yet you think it's more like Angular? React doesn't have a router. React doesn't have a ton additional functionality. You get to choose what router you want to use. You get to choose how to make AJAX calls. You get to choose how to handle styles. This is why it's more like React. With Koa you choose your router - and all your other middleware. 

There are plenty of router middlewares for Koa. There's also plenty for Express. So choose which one fits your use-case best.",3.0
g1hmtnx,i9jjpf,Koa was also developed by the same dev team that made express. It's seen been known as the way express should have been developed. Favors much more modern approaches with async/await and a number of other reasons people already mentioned but it's more of a simple framework with the ability to extend it easily.,1.0
g1g7im5,i9jjpf,"&gt;But Express continues to be way more popular because, for whatever reason, people aren't willing to move away from it and I don't understand why.

I'm new to Node, so I could be wrong here. But my guess is that it's an established and well understood framework in a platform that seems to aquire a new framework every week, so many of the others just get lost in the noise, and people default to Express because they already know it and don't have time to keep up with all of the others. From the perspective of someone who recently started looking at Node frameworks, it kind of seemed like was Express vs everything else. So much so that, while it's inaccurate, many people use Node as a synonym for Express. It just has enough momentum and enough of a track record that other frameworks won't (quickly) over take it simply through better design.",3.0
g1hx95q,i9jjpf,It's because an E is way more useful in an acronym... üòâ,0.0
g1itz6k,i9jjpf,"Because ""PKRN stack"" sounds ewwwww...... üòÇ",0.0
g1lrlty,i9jjpf,"Meh... check out Hapi Pal Boilerplate.... its this but with a decent ORM, knexjs, and the robustness of Hapi. Express is trash in comparison.",0.0
g1fhnov,i9jjpf,[deleted],-1.0
g1fl94g,i9jjpf,Did you just discover your own post?,3.0
g1fldlc,i9jjpf,LOLL was replying the men comment,1.0
g1nnggz,i9jjpf,"Oh sorry, my bad",1.0
g1g1g42,i9j303,What kind of awards do testing libraries win? I didn't see anything on the page about it and I'm curious.,42.0
g1g4h8v,i9j303,"Hey there. The project has been lucky to get nominated and win in the ""Most exciting use of technology"" of JavaScript Open Source Awards 2020: https://osawards.com/javascript/2020",25.0
g1hr8zl,i9j303,"I've been using a testing library from Morgan Stanley recently called ts-mockingbird. It's really cool. 

https://github.com/Morgan-Stanley/ts-mocking-bird",5.0
g1jrezv,i9j303,"Looks indeed interesting. However, it still resembles implementation mocking, as in giving you too much details about HTTP communication in your test. That is a huge reason people catch a type of thinking to ""how do I check this function gets called"", or ""how do I know I call my mock with the right arguments"".

This is something we are trying to avoid and discourage with MSW. Requests should happen, and you should describe how they should be handled, without diving into stubbing the client, or mocking external methods' implementations.",3.0
g1jsnrl,i9j303,Do you have an example of this?,2.0
g1ju66u,i9j303,"I'm not sure what examples you are talking about, could you clarify?

You can take a look at this usage example in Node: https://mswjs.io/docs/api/setup-server#examples

There are also many others, depending on what's on your mind. The core philosophy should be clear from the example above. 

I also highly recommend reading through the Getting Started tutorial (https://mswjs.io/docs/getting-started/install). It will give you a lot of context, showcase how the integration of MSW looks on practice, and I'm sure will answer some of your questions.",2.0
g1juqx5,i9j303,"Ok think we have crossed wires, the library I linked can be used for any internal dependency. This looks it's focused on network related mocking.",1.0
g1jvihc,i9j303,"Thanks for clarifying! I didn't know that lib can be used for any kind of dependency mocking. Whether to mock or not is an entirely different question, but I respect the possibilities it brings!",1.0
g1ikjld,i9j303,"Looks interesting, but looks a little boilerplatey. Check out [ts-mockito](https://github.com/NagRock/ts-mockito) if you haven‚Äôt already.",2.0
g1fck9u,i9j303,"Hey, Reddit! I'm excited to finally share this project with you.

One of the first things you may have in mind is ""How is this different?"" You can find a detailed comparison with other solutions here: [https://mswjs.io/docs/comparison](https://mswjs.io/docs/comparison)

The main purpose of this project is to help you write clean and reliable tests. Tests where you don't have to mock fetch, or axios ([https://kentcdodds.com/blog/stop-mocking-fetch](https://kentcdodds.com/blog/stop-mocking-fetch)). Tests where you can make HTTP communication a pre-requisite, emulating various request/response scenarios to test your app with confidence.

I would love to hear your opinion and constructive feedback!",21.0
g1fo89k,i9j303,I personally like to use nock but that might be node only and not for a browser. Do you known how yours compares to nock?,9.0
g1g4kom,i9j303,"MSW operates almost identically to nock. There are implementation differences between the libraries, but for the user what differs is the API.",3.0
g1gp23o,i9j303,"Could you elaborate on the differences? Based on this comment, if one already knows nock then there's no need to dig further, since nock is fairly widely adopted.

Is the MSW solution less complex? Do you believe that there is a meaningful difference in the learning curves? Does one option offer more flexibility with configuration and/or type-of-API?",5.0
g1h5iyz,i9j303,"My comment addressed an implementational difference between two libraries. I'll elaborate on the usage difference below.

\- Nock runs only in Node. MSW runs in both browser and Node, allowing you to reuse the same API mock definition for multiple levels of testing having a single source of truth (as opposed to adapting Nock for unit tests, and a few other tools  for integration/E2E tests).

\- API: Nock utilizes mock definition through methods chaining. MSW prefers functional composition.

\- MSW provides support for mocking GraphQL API.

\- MSW has recently shipped a React Native support. I don't know if Nock can run in RN, unfortunately. 

\- Nock is purely a testing tool. MSW is an API mocking tool, which you can use for development and debugging as well as testing. Moreover, you will reuse the very same mock definition across all those processes.

\- Nock may require adapters to mock certain request issuing libraries (i.e. axios). MSW intercepts API communication regardless of origin, in both browser and Node.

I lack familiarity with Nock and have too much familiarity with MSW to reason about the learning curve, I'm afraid. Take a look at the REST API usage example ([https://github.com/mswjs/examples/tree/master/examples/rest-react](https://github.com/mswjs/examples/tree/master/examples/rest-react)) that includes unit and integration tests and compare the setup and API to what you would've done in Nock to gain more perspective.

Hope this helps.",11.0
g1j8pps,i9j303,"Probably need to make it clearer on the site that it works in Node, I presumed it was browser only with all these mentions of service workers, etc.",2.0
g1mq74p,i9j303,Thanks for this awesome library üèÜ,2.0
g1g6frr,i9j303,I am so excited to try this ... currently do our infrastructure limitations we're not able to run integration tests on our CD pipeline.  This is something I'm definitely looking forward to trying out.,4.0
g1g86tm,i9j303,"Looking forward to hearing your feedback! Don't hesitate to reach out in Twitter (https://twitter.com/ApiMocking) or GitHub, we'd be glad to support you.",3.0
g1gil57,i9j303,Currently using it only for node but planning to use it for frontend soon too and it's been quite nice so far.,5.0
g1h5s4d,i9j303,Let me know how that goes!,1.0
g1h3p9h,i9j303,Is there a comparison of this tool with something like MirageJS?,5.0
g1h61qy,i9j303,"Hey. Of course there is. You can see a detailed comparison in MSW docs: https://mswjs.io/docs/comparison#miragejs

There's also an MSW section in MirageJS docs: https://miragejs.com/docs/comparison-with-other-tools/#msw",2.0
g1he1x5,i9j303,"Started using this a couple of weeks ago, the backend for our current project is not running yet and we only have some of the API contracts. Got to say it's pretty great, no more mocking requests with Jest and works wonders with Storybook. Nice work!",4.0
g1jr25i,i9j303,"So happy to hear that! Storybook integration was an interesting task to approach, and I'm glad that it helps people to test and develop their software with more comfort. You rock!",3.0
g1jep9j,i9j303,I've been using this recently and it really is a game changer especially compared to something like jest fetch mock. Tests are so much easier to reason about now and it really helps to push tests reflecting how the user is going to use your UI approach,3.0
g1jqy55,i9j303,"Thank you so much for such a kind feedback!

Our team is working hard to make sure you get that crucial confidence in testing. It's such an essential feature to allow your app to perform network request as it normally would, giving you automatic assurance in both proper request dispatch and mocked response handling.

I highly recommend trying out MSW with React Testing Library (https://testing-library.com/docs/react-testing-library/intro) to skyrocket your test quality. You can find a brief usage example in the docs, or anywhere we use integration tests in the examples repo (https://github.com/mswjs/examples).",1.0
g1jvwcw,i9j303,Well ahead of you ‚ò∫Ô∏è I noticed the reference to MSW in the testing library docs a while ago and I picked it up there. Planning to start using it on node apis soon.,2.0
g1fgmv0,i9j303,This is awesome for testing purposes! Thanks.,2.0
g1g96kp,i9j303,"Thank you for the feedback! You can also reuse the same request handlers for local development, making it ridiculously simple to get into certain API-related scenarios (i.e. getting a network error, or mocking an unexpected response).",2.0
g1mqxhj,i9j303,"Can it also mock network issues? For example, the browser blocking a request due to Adblock or losing internet connectivity is something I‚Äôm interested in testing too.",1.0
g1muxvy,i9j303,"Hey there. We are constantly working on extending the API to allow testing of various scenarios.

Current'y MSW supports emulation of network errors (https://mswjs.io/docs/api/response/network-error), take a look. Please, if you have concrete usage examples in mind, report them in the repo, we will be glad to work on an API that would suit such cases. Thanks.",2.0
g1e2svp,i98xqi,Number 1 for myself. And as much of the framework in CSS as is possible.,3.0
g1e3m6b,i98xqi,I intend to use TailwindCSS as peer dependency for styles and theming in my library. Which makes the bundle size even smaller and package can easily adapt the users' design system.,2.0
g1f7uw8,i98xqi,"Since UI library leverages two components: markup and styling, and both can be achieved in any framework/library, it makes sense to go with the first option.

At the same time, unless you combine all those frameworks in one product, I'd lean towards framework-specific library, as it may be better tailored towards it. Regardless of the framework support, I'd rather look at these criteria:

1. Accessibility. Pay attention to the markup a UI library produces. Is it semantic? Is it accessible?
2. Maintenance status.
3. Components. All UI libraries tend to vary in the selection of components. The closer you can match those against your needs, the less pain and struggle you'll experience when adopting that solution.
4. Extendability. The extent you can modify the library so it suits your product better (visually, functionally).",2.0
g1emua8,i98xqi,"1, of course. Unless you do 2 and do it for every single framework.",1.0
g1fhe4z,i98xqi,"If your company already uses vue and needs a ui-kit. Well. Then there's not much to fight about IMO

But if you're planning on building something for the general public. I would probably go with #1 and then just make wrappers for vue/react/angular/svelte/whatevers hot next week",1.0
g1f12ct,i98q3w,"This is very cool, well done!",1.0
g1lseow,i98q3w,This is great!,1.0
g1dinl2,i9534o,Can't wait to try the setting sync!,7.0
g1e5ios,i9534o,Setting sync has been out for over a year.,-8.0
g1eelr5,i9534o,"&gt; Setting sync has been out for over a year.

Settings Sync only came to stable with today's release: https://code.visualstudio.com/updates/v1_48#_settings-sync

It first came to the Insiders build in the March 2020 release (apparently released around April 8): https://code.visualstudio.com/updates/v1_44#_settings-sync

Also/separately, it appears that the July 2020 release came out now, in mid August, and the March 2020 release announcement was on April 8? I'm not upset about it, but how does their release naming work? https://twitter.com/code/status/1247966976951058433",5.0
g1ekg5s,i9534o,I've been using setting sync on the insider edition for well over a year.,-4.0
g1f6dnw,i9534o,"Perhaps you are referring to the Setting Sync extension by Shan Khan, which was last updated in 2019 and is different from the Settings Sync included in the current release? https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync",2.0
g1h5w22,i9534o,"Lmao you're totally right, I totally forgot. I'm pretty sure when they first released setting sync on insiders, that it automatically imported settings from the extension from it if you had it. 

Or maybe this year has just all been one big blur. :0",2.0
g1edw7a,i9534o,On preview no? Had no idea if it's been on stable.,3.0
g1d9l0g,i9534o,That port debugging though,3.0
g1chg7o,i930y2,"If it's JS *in general* my go to resource to recommend has to be [Eloquent JavaScript](https://eloquentjavascript.net/).If you already know JS to some degree you should scan the table of contents and pick what you're interested in.

If you want a reference for very specific parts of the language then th [MDN web docs on JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript) are probably a better choice.",3.0
g1doyua,i930y2,thank you,1.0
g1cpz9u,i930y2,"Hey, I keep a collection of free JavaScript books on my blog (among other books). See: https://keb.now.sh/books/#javascript

I recommend Eloquent JavaScript like most people, but if it's too wordy for you (because it *is* also an introduction to general programming), I recommend the Modern JavaScript Tutorial, and MDN to supplement. MDN's ""Re-introduction to JavaScript"" is a very succinct tour of JS. Kyle Simpson's YDKJS series is also great if you want something more in depth.",3.0
g1drvu2,i930y2,thanks for the suggestion and sharing your blog,1.0
g1cknc0,i930y2,The odin project,4.0
g1dsa93,i930y2,"&gt;The odin project

thanks man",1.0
g1fpbog,i930y2,"I recommend https://learnjavascript.online. I love that it breaks ideas down into chapters, building on existing concepts and adding new ones as you move forward. Importantly it gives you direct feedback as you practice what you‚Äôve learned.",1.0
g1cuuyp,i930y2," [https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS)   
2nd edition not finished yet, click on the first edition. Best in-depth  book about JS",1.0
g1ej066,i92aq1,"You should also allow a skip exercise feature to next exercise , or maybe just do any exercise at any time",7.0
g1e3n7c,i92aq1,This couldn't have come at a more perfect time for me. I just got started on the basics of TS yesterday. Much appreciated.,4.0
g1e61g0,i92aq1,Hive fun :),3.0
g1ez57v,i92aq1,What course or documentation are you following? Interested in getting into it more myself.,1.0
g1f07t6,i92aq1,"At the moment, I'm following [this](https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html). It's the documentation from their recently updated official site.",1.0
g1clbwi,i92aq1,This looks really neat. I just finished the first one and I'll definitely use the rest. Thank you!,3.0
g1ee5ww,i92aq1,"Looks good, I got stuck at Exercise 5 though, I guess I just am too beginner for this.",1.0
g1emngu,i92aq1,"Key to that one is just knowing Partial exists. I've only used it a few times, it doesn't come up a ton

https://www.typescriptlang.org/docs/handbook/utility-types.html",2.0
g1ezekt,i92aq1,"&gt;I've only used it a few times, it doesn't come up a ton

In real life coding? I use it quite often (though I prefer `DeepPartial` from  [https://github.com/piotrwitek/utility-types](https://github.com/piotrwitek/utility-types)

For example, let's say I have a model `User` represented by TypeScript's interface containing `id`, `password`, `name`, `age` etc. Data transfer object (DTO) would naturally be `type UserDto = Omit&lt;Partial&lt;User&gt;, 'password' | 'id'&gt;`. Using this I can update user with only select fields in the object and `password` and `id` excluded. Whenever base model is modified, `UserDto` type gets new fields added automatically to its definition based on inheritance. Utility types are very useful once you get hang of them.",2.0
g1hawdr,i92aq1,"Hey
I really like this. Very well done and even though i am working with typescript for about half a year now, i have learned several new things.
Thank you very much for this.

Currently i am on Excercise 12 and i think, that the solution (and the test) is incorrect.

The getAverageValue function can return null (see its implementation and the readme).
But the type expected does not include null as a possible return value. It only expectes number as the return type.",1.0
g1jxvou,i92aq1,"Good point, thanks, I'm going to fix it.",1.0
g1f0xbp,i92aq1,"Ugh, this has got to be one of the most mobile-unfriendly layouts I've seen all year.",1.0
g1f0x75,i92aq1,Vim keybindings option would be neat.,0.0
g1bmb4s,i8z6yt,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",35.0
g1bu4hx,i8z6yt,good bot,17.0
g1bu5es,i8z6yt,[removed],7.0
g1clhrn,i8z6yt,Bad bot,7.0
g1d3r3r,i8z6yt,Bad bot,1.0
g1bwr6s,i8z6yt,J√ºrgen Klopp's github account huh,11.0
g1cnfm6,i8z6yt,"What software did you use to make the database diagram?

I like how the arrows for relationships aren‚Äôt rigid :)",1.0
g1dbibj,i8z6yt,"Not sure what tool, but the source of the diagram is in there too: https://github.com/lucassus/bookshelf/blob/master/docs/database.puml",1.0
g1em4lw,i8z6yt,"Sounds like PlantUML.
https://plantuml.com/",2.0
g1f6qc8,i8z6yt,"u/Fingebimus u/bleafman the diagram was made with [https://plantuml.com/](https://plantuml.com/) plus some custom macros for describing database entities.

The cool stuff about that you don't have to draw anything because everything lives in a relatively simple to manage code.",2.0
g1dq29l,i8z6yt,Looks like we're getting javascript advice from Rand Miller.,1.0
g1drk65,i8z6yt,Jurgen Klopp,1.0
g1d7ham,i8z6yt,"I can't believe people are still using learna these days. Other than that, looks nice",0.0
g1dbzbx,i8z6yt,"What do you use instead? Just curious, it's been a necessary evil for me",6.0
g1dh4e0,i8z6yt,"Straight yarn workspaces for libraries. I've started playing with Nx for PoCs, and it's about like Gradle for JS/TS, which is really nice. But, I don't fully trust it yet.",1.0
g1dyjyp,i8z6yt,Lerna and Yarn workspaces are a good combo. Lerna provides tools for versioning and publishing that Yarn does not.,2.0
g1e1s2t,i8z6yt,"Managing versioning and publishing with learna is 10 times more obtuse that just writing 20 lines of bash. Seriously, you'll save yourself a ton of time, now and in the future, by just writing a script that will loop through the packages directory call npm publish.",0.0
g1f7fvy,i8z6yt,"u/general_dispondency well, it's a playground dedicated for experimenting. Maybe one of these days I will replace lerna with something less verbose.

Cheers!",2.0
g1axvlh,i8upnd,"ii, iii, iv - get all roman numerals about it",18.0
g1b0p1c,i8upnd,"It‚Äôs terrible, but I love it. I‚Äôm doing this from now on",10.0
g1c8aqj,i8upnd,"wait till you get really deep in the loop - mmxviii, mmxix, mmxx",3.0
g1ecpca,i8upnd,that's horrifying but good for you,2.0
g1awbdc,i8upnd,"I usually start with ""i"" continuing with ""j"", ""k"", ""l"", ""m"".....
But I recommend using these only in math or algorithm problems. In most cases, I would recommend something that have sense and every other programmer would understand it. For example ""index"" or ""numberIndex"".",16.0
g1axpyq,i8upnd,m?.. How nested are your loops getting?,6.0
g1ayvth,i8upnd,I just wanted to make sure everyone get the point that it's traditional to use alphabet.,6.0
g1ax7f8,i8upnd,"Semantically meaningful names.

Something like `documentIndex`, not `i`.

Typically, code is run the most, read a bunch, and written once-ish. Optimize accordingly.",8.0
g1c5e5x,i8upnd,"Plus, my code minimizer is going to do a lot better for minimizing the code that actually gets sent in production.  So there's no savings for short names in the source code.",1.0
g1azdna,i8upnd,"I try to avoid indexes by iterating over objects by using 

``` 
for(const &lt; meaningfulName &gt; of &lt; descriptiveArrayName &gt;){
    ...
}
```

If I'm indexing, it's always i,j,k

If I'm working with pixels or positioning, 

x,y,z,w",6.0
g1ecxwh,i8upnd,why not use .forEach ?,2.0
g1eidf1,i8upnd,I use .forEach if I want to iterate over both indexes and objects,2.0
g1d3r2u,i8upnd,"I always used: i, j, k
However, the last few years I've been trying to be more verbose with all variable names. Much easier on everyone concerned.",3.0
g1axrfy,i8upnd,"The standard pattern for loops is i, j, k, etc.

However as others said, choose variable names that mean something, that show intention/expectation for that value.

Anyone can program. Only a few can engineer software. If I see someone using a single letter variable, they‚Äôre not getting hired. That‚Äôs a massive red flag. (Barring some very special exceptions.)",2.0
g1frlfj,i8upnd,Asking the important questions,2.0
g1awtj1,i8upnd,... depends how much I care at the time of writing the code and what the code is used for but it is along the lines of ‚Äòj‚Äô for no care / throwaway code / it is obvious what is going on or something meaningful and succinct in relation to the collection,1.0
g1ihr5k,i8upnd,"i and j in the past. Although I think they're terrible variables and shouldn't be used together like that for dyslexic people.

I generally use array methods nowadays, so it's not that big of an issue anymore.",1.0
g1awgew,i8upnd,"I often see people use ""i"" then ""j"". You could go with something more intuitive like ""f"" and ""s"" for ""first"" and ""second.""",-6.0
g1ay175,i8upnd,"That's only intuitive to the person who writes it - you. To everybody else on the planet it's extremely unintuitive because it breaks from convention (i, j) and a good software engineer will think ""f and s must have special meaning in this domain and I should stop and ponder what it is"".",7.0
g1awjnz,i8upnd,"What happens when you get to ""**F**""ourth?",3.0
g1awvah,i8upnd,"Everyone knows what hapoens. You die.

But seriously, if you're nesting 3 loops in a single function, there's probably a better way to do it.",4.0
g1bun6v,i8upnd,Exactly. Like call a function with 1 loop that calls another function with 1 loop that calls another function with 1 loop that..,1.0
g19vyy0,i8mkbt,artifactory or nexus,5.0
g19ig48,i8mkbt,"Best practice is unfortunately the monorepo that is ""out of the question.""

Verdaccio's a nice way to get started with the private registry or make a POC, but for a large org probably want to look at one of the managed solutions (artifactory etc).",5.0
g19m7yt,i8mkbt,"I used artifactory for my personal JVM and Android libraries. I will look into that, I completely forgot about that!",2.0
g1a4kph,i8mkbt,You can install directly from url which can include github private repos. We've tested a package where we use git tags to semvar. All are engineers already have ssh keys and we setup are CI to also acquire those keys before installing js dependencies. Not going to say it's optimal but it's another possibility.,4.0
g1a5meg,i8mkbt,"Okay, so I just need to figure out the CI scripts. I think that's reasonable, I don't think I'll be able to pull off a thing like artifactory, that would only be required for something used org-wide. I'm just looking for something shared between 3-5 repos",1.0
g19d0lz,i8mkbt,Does this work https://verdaccio.org/,3.0
g1ahtbn,i8mkbt,"What are the reasons for a monorepo being ""out of the question""?",3.0
g1buj80,i8mkbt,Separate git repos already. Would you recommend trying submodules?,1.0
g1bwr7v,i8mkbt,git submodules would be the worst possible option. Don't even consider using them. They will make your life a living hell.,1.0
g1al3hm,i8mkbt,single spa?,1.0
g19mvd6,i8lsrm,"Hi /u/gevorggalstyan, this post is staying, but the other 2 have been removed. You can post them later, one-at-a-time, if you wish. Please do not submit multiple posts at the same time. Thank you.",1.0
g1p8z8u,i8iiwk,"What are the benefits of using react-konva over just Konva?  Using 2 libraries together like this could get convoluted, so would it not be better to just use Konva to do stuff on Canvas?",2.0
g1rt2e9,i8iiwk,"You can make the app with just Konva (or even with the pure canvas). Similar to building web app without any frameworks with just DOM access. But after some level of complexity, it is going too hard to maintain the code.  So react and react-konva are helping to reduce and control complexity and maintability.",1.0
g1yvwxs,i8iiwk,"i made something similar, but with svg!


https://github.com/mithi/bare-minimum-2d",1.0
g1bi2ts,i8gf7s,https://github.com/mithi/hexapod,3.0
g1969bd,i8gf7s,"https://github.com/matteobruni/object-gui/

https://github.com/matteobruni/tsparticles",1.0
g1at94k,i8gf7s,https://github.com/karanpratapsingh/fullstack-starterkit,1.0
g1m3njh,i8gf7s,Https://github.com/austrowGC/spool,1.0
g18bt8q,i8fqdz,"That is some well-commented code. I like your general coding style too. Usually, I see other people's JavaScript and I want to vomit. It is a side effect of being a JS coder since way back in 1997. If you are interested, I could make this a ReactJS app in about 15m. Let me know.  


Great job! Thanks for sharing.",4.0
g18ich4,i8fqdz,"But the comments are behind the line, how is that good. &lt;:\^)",1.0
g1bq2ko,i8fqdz,I usually use a comment behind the line to comment a block of code,1.0
g1bqfp9,i8fqdz,"Thanks! I tried my best to document. Also React is what I want to learn next, so seeing this as a React app would be awesome.",1.0
g183777,i8fqdz,Great work!,3.0
g180d6y,i8fqdz,"Here's a video explaining some of the code:

[https://www.youtube.com/watch?v=UPHwqTfDnpw](https://www.youtube.com/watch?v=UPHwqTfDnpw)

Here's the code:

[https://github.com/benrbowers/sticky-notes](https://github.com/benrbowers/sticky-notes)",1.0
g1gq7os,i8fqdz,Would be good to store the notes in a cookie or local storage.,1.0
g17xmig,i8faqy,"**TLDR:** Storybook was retooled for professional frontend teams that work on UI component libraries at scale. Basically, the team researched a bunch of best practices used by leading teams and built them into Storybook.

üíé Zero config setup + TS support  
üß¨ Next-gen story format  
üéõ Live edit components (auto-generates gui for props, slots, \`@inputs\`, etc )  
üåê Combine Storybooks  
üìö Documentation overhaul",11.0
g18s6nc,i8faqy,The boot time improvements were incredibly surprising too,3.0
g1imdgs,i8faqy,For the record we went from 10 minutes to 23 seconds,1.0
g18ue6y,i8faqy,"Do they still use frames (poorly)?

The last time I tried to use it I did something pretty basic, and I couldn't even inspect my ""story"" in the dev tools, because whatever frame wackiness they were using made it impossible to get to my component's DOM (I kept getting an element from the wrapping frame).

It'd be great if this new version got rid of all that.",4.0
g190pw1,i8faqy,"Idk about new version, but I have been using storybook in my job for almost two years now, and you can inspect the DOM normally... 

the iframe is anoying I agree, but its two clicks...",12.0
g197fs3,i8faqy,"It does kind of mess with dev tools, but I believe it's something that can be (and might already be) fixed on the tool side.",2.0
g19epbz,i8faqy,"When I used it a few months back I literally couldn't right-click and inspect elements in my story.  And it wasn't a crazy story either (eg. it didn't have frames or anything, it was just some divs and inputs).

YMMV .. and obviously lots of people don't have my problem, as the library is quite successful.  But for me personally, it'd be great if this new version ditched the frames, or used them better.",-1.0
g19vzjv,i8faqy,"Are you using Chrome? I usually don't have problems inspecting elements in iframes. If worse comes to worst you can just dig in using the element panel.

However I believe Storybook also has a button to open the current story without the UI/iframe, so you can also just use that.

Edit: In 5.3 it's in the top right, icon of an up arrow coming out of a square, hover says ""Open canvas in new tab"".",5.0
g1ad6b4,i8faqy,"I was working with an older version today and had no issues with ""Inspect Element"", console logging, etc. It all worked as expected",2.0
g1b2xq2,i8faqy,"We just started using it and I really like it. Especially to see several states of the same components. 

So my question to practitioner : how granular are your stories ? (Say a story = 1 item in the hierarchy  on the left) 

Are you keeping them super granular (calendar empty, calendar date selected, calendar error...) (so you will need to click to see the different states) or are you doing stories with severval components in the same story so that you can see them all at once on the same page 

Sorry for newbie question but this has been bugging me for 2 days I can‚Äôt decide what is best.",1.0
g1cjgre,i8faqy,"Maybe my case does noy apply to everyone, but we do 3 levels of stories: 1 - the basic components which are displayed isolated, usually lots of stories here 2 - components aggregators, which normally have 2/3 stories, depending on the optional properties they have - 3 page stories - they combine aggregators and display how the final page will look like.

In adition, all the components are stateless. Those states like errors, emtpy.. etc are controlled at a higher level. The components receive those things via props. Because of this, the first level components can have lots of stories, depending on their complexity. 

Hope it helps",3.0
g1bq3ue,i8faqy,"If you treat Storybook as a tool to help you test components you want as many possibilities as you can think of. Think of components as functions and how'd you go about testing one.

This means you could use a combination of snapshots, visual regression/comparison, and even randomized inputs to test various states. So add all the states you want to test or a designer specifically designed.",2.0
g1cmea0,i8faqy,Wow this is an amazing update to drop right before my team was about to start a component library,1.0
g1805va,i8el06,"If you haven't already. Look at Web Assembly for your more math heavy operations. You can use C++, C#, Rust, Go, or other languages to compile a WASM module. They run in a separate thread and are significantly more efficient. I'm not sure if they can communicate with a GPU in WASM though.",21.0
g18fpi7,i8el06,"WASM modules run on the main thread by default and call directly to/from JS. Multithreading is done just with pthreads in the code and it will spawn another worker for it. Only chromium based browsers have support for multithreading in WASM.  And lastly, yes you can use webgl from it",11.0
g18amw2,i8el06,"I will look into implementing Hydraulic Erosion using WASM and/or Web Workers as I can‚Äôt do it on the GPU currently. The displacement is mighty fast running on shaders and GLSL already.

I might also implement a toggle to switch between wasm based CPU mode and shaders based GPU mode, thanks for the suggestion!",6.0
g199jyq,i8el06,"Wait, you can do local multi-threading in web apps? Well, this is blowing my mind.",1.0
g19ctji,i8el06,Check our Web Workers on MDN. They are the easiest way to get started with multi threading,3.0
g1bc2zt,i8el06,"I started with the web when a:hover was considered a bit too much power. Funny how far we got, which each step still making sense.",2.0
g1b1dya,i8el06,Separate thread? Not sure if this is true.,1.0
g18k4hz,i8el06,Why not just incorporate a backend?,-2.0
g17sj87,i8el06,"## What's New?

* üöÄ Now uses your ***GPU*** to produce realtime results.
* ‚öõÔ∏è Rewritten Entirely in ***React*** using ***MVC***.
* üíª Brand new ***UI***.
* üìÄ ***Download*** your generated height maps!
* ‚öôÔ∏è Change ***Map resolution*** and ***Terrain resolution*** independently.
* ‚õ∞ ***Better*** Terrain Generation.

## Upcoming

* üèî ***EROSION ON THE GPU.***
* üå† ***Texture Splatting.***
* ‚ùì Tool tips for each slider.
* ‚ÑπÔ∏è Scene Information (Number of vertices, render times, etc.).
* üíΩ Saving and loading projects from disk.
* ü§ñ Micro-Animations for UI elements.
* üé® Custom UI Color palettes.",12.0
g17stbz,i8el06,"This is super cool! Do you have a practical use case for this in mind, or is this more like a poc?",5.0
g17t0s2,i8el06,"Thank you very much!! One of the new features is the ability to Download the generated height map, let‚Äôs see how far I can take this but my goal for it is to be something like Terragen or World Machine, but you won‚Äôt have to install a large program and would be free!",10.0
g183jnu,i8el06,"Man the memories of playing with terragen years ago. Good times. That thing has been around for a minute now!

Edit: Spelling",3.0
g183u72,i8el06,"Yes it has! Terrain is a good start for graphics programming atleats it was for me, 3D has always fascinated me",2.0
g1847a2,i8el06,"It looks super cool, i hope you get some great feedback.",2.0
g17t7iz,i8el06,"I see, ty. I will keep this in my radar.",2.0
g192f4a,i8el06,"Nice, I have a similar project but was more geared towards simulating water flow, it‚Äôs temporarily hosted here: www.aperocky.com/hydrosim",4.0
g1afxew,i8el06,"Nice! I will look into this, is it open source?",1.0
g1bxaa4,i8el06,"Yeah, the source link is on the page.",1.0
g17vdsz,i8el06,"Nice! I built something similar once but I could never get hydraulic erosion working, I look forward to seeing if you can crack it",2.0
g17vm9d,i8el06,"It‚Äôs been very difficult to be honest, that‚Äôs why I couldn‚Äôt include it in this release, it‚Äôs next to impossible to do on GPU without some features that aren‚Äôt supported in my 3D framework (Three.js), so I‚Äôll probably end up doing it in the CPU till support is added.",4.0
g17xb9m,i8el06,You could probably do the maths in a webworker to keep it off the main thread at least!,2.0
g183plr,i8el06,"Yes! That‚Äôs a good idea, the math for the erosion is almost already done and implemented in release 1.0 I just need to refine it a lot and put it into web workers! Thanks!",3.0
g18eomk,i8el06,"Np, I very much look forward to seeing how you do it!",2.0
g188ugp,i8el06,How does one code for a gpu?,2.0
g18aek8,i8el06,"With a language called GLSL, a subset of C, these programs are called Shaders and can process massive amounts of data at once in parallel! (Massive oversimplification lol)",6.0
g18owqk,i8el06,"Cool stuff! I did something similar a while back making islands, it's not as nice as this one tho https://ruurd.dev/mapgen/",1.0
g18p5ld,i8el06,That map looks better than what I am generating lol! What noise algorithm did you use?,1.0
g18shzh,i8el06,"Simplex noise, I used some library for it I think. The source code is in the website it's not minified or anything if you're interested",1.0
g18u02t,i8el06,"I see, I‚Äôll take a look, thank you!",1.0
g19la79,i8el06,It looks great.,1.0
g1afyah,i8el06,Thanks mate! :),1.0
g19njla,i8el06,"Looks awesome, congrats",1.0
g1afyne,i8el06,Thank you!,1.0
g1awdqt,i8el06,Depth maps always give me this fuzzy feeling inside,1.0
g1b15n5,i8el06,"Nice project, terrain generation is quite interesting. Made this with friends some years ago as a school project http://vrap.github.io/mission-mars/ not as good as yours I think but maybe this can interest you :)

Edit : The code can be found here: https://github.com/vrap/mission-mars ;)",1.0
g1b1cp1,i8el06,That‚Äôs a really cool demo!,1.0
g1b1rai,i8el06,Thanks I've added the code URL if you want but it can be easily guessed as it's hosted with github pages :),1.0
g1fss29,i8el06,always impressed by passion projects like this,1.0
g18h3nw,i8el06,Really cool project! Have you looked at Netlify for cheaper hosting?,0.0
g18h8ww,i8el06,Thank you very much! I am currently using Heroku and it‚Äôs free!,1.0
g1d78vn,i8ekrc,How fast it is if you have to generate like 1000 pages?,1.0
g19srne,i8cvwo,"I haven't had a chance to check out the app myself but assuming all of the screenshots are your own, great job. 

I did want to chime in, however, and say that as someone who used to be peripherally involved with Spotify, they are *very* particular with any of their branding being used for unofficial purposes. Even though I imagine you just built this as a challenge to yourself, this could be misconstrued as an attempt to misrepresent the company and, at worst, an attempt to maliciously secure payment info. 

I'd just make sure you're within all branding and API usage T&amp;C's cause I'd hate for your hard work to come under fire are any sort of legal action be taken. A quick fix might be to change the app name to ""Spotifaux"" and use a different logo, but even that may be a violation.",8.0
g184al0,i8cvwo,That's cool project man. Big up!,3.0
g186ub5,i8cvwo,Thanks man I appreciate that!,4.0
g1av4st,i8cvwo,"that's cool man..

how long u create it?",1.0
g1ayp65,i8cvwo,"Only 2 days into making. That's why so many functionalities are not implemented yet. Just wanted to kinda show the progress I made so far. I will try to add more and more functionalities each day now that I have design set up.   


That being said, I might do the whole design again using bootstrap 5 when I get the time for it",1.0
g1b3ldt,i8cvwo,Did you use redux as well?,1.0
g1b59t1,i8cvwo,"No I decided to go with React Context I think it is actually a lot easier to implement.  


It came down to preference, and as someone new to React, React Context

 seemed easier",1.0
g1bdu1i,i8cvwo,"thank you, good job on your project",1.0
g17gbcr,i8cet0,"Typescript saves you time.  There's less fumbling around with what you've already wrote, and it helps reveal / prevent bugs.",30.0
g184o2j,i8cet0,"And refactoring.
From my experience, TS saved me so much time when refactoring my code",2.0
g17k5wa,i8cet0,"&gt; It seems like it would make my code slower to write and more difficult to understand

The whole point of Typescript is that it makes your code easier to understand :)

Have you ever looked at your code and forgotten what sort of value a specific variable held? With Typescript you just look at the type and know exactly what it is.

Have you been unsure what type a parameter is to a function? You would have to read through the function and determine what type that parameter is, but with Typescript you just look at the types on the function signature. Plus if you do try to pass in the wrong type, Typescript will tell you right away that you can't do that.",10.0
g18buwx,i8cet0,"&gt; With Typescript you just look at the type and know exactly what it is.

I think this sort of fails to sell the idea to someone who doesn't know TS.  I mean, even back in '99 when I first learned JS, I could write a JSDoc comment like:

    /**
     * @type Foo
     * @property bar integer
     */

... and then ""just look at the type and know exactly what it is"" :)

What someone who doesn't know TS may not get is that *unlike* that JS Doc comment, TS is *codified documentation*, and that ""codification"" allows your editor to connect the dots between it and your code.

That means that when you type `new Foo({`, your editor can pop up something that (essentially) says ""Foo expects an integer called bar"" ... and *that* truly is something both new and valuable!

(Although also, as I note in my wall of text comment below, there is some nuance as to who it's more/less valuable for).",1.0
g18dmci,i8cet0,"I'm not sure if this sells it either, doesn't most of the intellisense come from JSDoc in the generated .d.ts file?",2.0
g18itb4,i8cet0,"Where the documentation literally lives in the filesystem isn't the point: the point is ""documentation you have to go look at it"" &lt; ""documentation that magically appears when you type relevant code"".",2.0
g18quqx,i8cet0,"Yeah that's what I was referring to. The documentation that magically appears when you type code is mostly inferred by the editor from the JSDoc in the generated .d.ts file, no?  So using plan JSDoc will give you the benefit of documentation that appears when you type code, just like TS that generates JSDoc will. [https://docs.microsoft.com/en-us/visualstudio/ide/create-jsdoc-comments-for-javascript-intellisense?view=vs-2015](https://docs.microsoft.com/en-us/visualstudio/ide/create-jsdoc-comments-for-javascript-intellisense?view=vs-2015)",3.0
g18sa22,i8cet0,"Ah, I get you now.

I think without Typescript you *will* be able to write JSDoc on untyped JS code, and in most cases the type inference *will* be enough to connect the dots between that documentation and your type-using code ... but without explicit types there will be limits to which dots can be connected.

As someone who has used pure-JS with inferred-Typescript features, I can attest there are definitely cases (eg. using functions/classes as React components in JSX) where the inference *sometimes* has trouble connecting things.  But that being said, you're absolutely right: the inference is pretty damn good!

It's still cooler (although debatably valuable) to type ""`new Foo(`"" and have the exact parameter pop-up ... vs. typing the same thing and having to read through a pile of JSDoc to see what your first arg should be.  Plus of course, without Typescript you don't get type checking, and while I think the tooling benefits are significantly greater ... type checking itself isn't worthless.

As I say in my wall of text below, TS *is* a great tool, but I don't think it's the best tool for everyone.  Depending on your situation, JSDoc might be better.",2.0
g17gueh,i8cet0,"It will slow you down - at first. But once you learn it, it‚Äôs a real blessing - even for small projects. Plus I think it will continue to gain adoption - especially if Deno really takes off.

I‚Äôm currently migrating my open source project from Svelte/JS to Svelte/TS - and wish I could have done it sooner.",12.0
g17hkp3,i8cet0,"Agree with this sentiment. It will slow you down and frustrate you at first, but once you get the hang of it, it does help and speeds you up by allowing IDEs to suggest more accurate suggestions.
If you are doing a very small side project, maybe it‚Äôs too much (because you have to put a build pipeline in place), but if you already have a build pipeline in place, then adding typescript be a natural transition.",5.0
g17kzgq,i8cet0,"Yeah I always loved the idea of TS but found working with it frustrating. Then I finally dove in and made myself write a big project with it, and I haven't looked back. Probably the thing I realized that helped me the most was that types are optional. TS uses type inference to enforce it's typing rules, it'll infer the type wherever possible. This made it so much easier to write.

I'm not saying I use any, I refuse to use that. But I won't write the type annotations wherever it can infer the type, and then the amount of code I have to write goes down drastically while still getting type safety.",3.0
g18a2vx,i8cet0,"&gt;TS uses type inference to enforce it's typing rules, it'll infer the type wherever possible.

Honestly, I think this is an argument *against* TS for some people.  Wait, put the pitchforks down!

What I mean is, non-TS (VS Code-using) devs can get so many of the TS benefits just by putting `checkJS: true` into their `jsconfig.json`.  If they do, VS Code will use TS's inference abilities to treat all your untyped code the same as TS code, so you can autocomplete, automatically import, etc.  And you can even be explicit about types in a one-off way, by using JSDoc to make them.

Now *OBVIOUSLY* you have more control of your types when you ... well ... control them.  And *obviously* TS's inference capabilities aren't perfect, and *obviously* teams gain a huge deal from the documentation aspect of types.  But if an individual dev can get 80% of the benefits of a tool with 0% of the effort .... I think there's something compelling about that.",4.0
g1834mh,i8cet0,You already may use TS with nodejs. Even if Deno become popular it‚Äôs still the same thing.,1.0
g184ae4,i8cet0,"Totally,  but the tooling setup is a barrier to entry for many newbies, where Deno does it out of the box.",3.0
g1r36n5,i8cet0,"My ""tooling setup"" for using node with ts consists of  `yarn global add ts-node` followed by `ts-node index.ts`.",1.0
g1864lz,i8cet0,"Absolutely not true. I can really only use TypeScript anymore, because I've had way too many JavAscript type issues, if you're good at TypeScript, there's really only logical errors. If you have to refactor code and change something in JavaScript, it is BUG HELL. But in TypeScript, the compiler tells you everything that's wrong, it's awesome.  
  
That, and intellisense witg TypeScript is amazing. I can type my function parameters, type the objects I get from API's, it's amazing.",2.0
g184in1,i8cet0,"**TLDR;** Typescript has great benefits (*well beyond* type safety) for teams and individuals, but for individuals the fact that VS Code can [give you most TS benefits without using TS](https://github.com/Microsoft/TypeScript/wiki/Type-Checking-JavaScript-Files) makes it a less compelling value.

Apologies for the giant wall of text!  I really wanted to offer the OP a more nuanced answer, and unfortunately wound up writing an essay in the process (I'll understand if no one but the OP reads it).

**Costs of Typescript**

To state the obvious, you should *always* use the right tool for the job.  Every tool has costs and benefits, and you should only use a tool if the benefits outweigh those costs.

If all you plan to do is small hobby projects, and you don't already know Typescript, then your costs are A) that you have to learn Typescript (that's *not* insignificant) and B) it *will* slow down your development.  That is just a fact: writing typesm, dealing with mistakes in your types, changing types when you refactor ... it all takes time.

**Benefits (The Real Benefit *Isn't* Type Safety)**

So then what are those benefits?  Type safety is the classic answer, but I'd argue the worst one.  Typescript *isn't* great because it will save you when you forget to `parseFloat` a string into a number!  99% of the time when you do that you'll get an error *whether you use Typescript or not*; either way, you'll fix it in two seconds.

The true benefits of TypeScript aren't from trivial stuff like that: they're what your system/institution gains.  For instance, (in the right editor, eg. VS Code) if you use TypeScript you can autocomplete your properties, functions, and the inputs to those functions, and that's huge!

Imagine if there was a programming tool that let you instantly load information about your codebase directly into your brain, saving you from having to go look at the relevant code or it's documentation: *that* is what autocomplete gives you.  But it doesn't stop there: editors that understand type information can also do other useful time-saving things, like automatically creating imports for you.

**Teams Benefit *More* From Typescript**

On top of that, types *are* documentation, and on big projects that documentation is *very* valuable.  Also, in bigger/team projects, all of the previous benefits ... even just basic type safety ... matter more.  When you're using your co-worker Bob's code, you're more likely to accidentally pass a number when he was expecting an object (or whatever), and if you give it the wrong input it's more likely to have a hard-to-diagnose error. Having a command line tool that tells you your type is wrong (or better yet, having your editor tell you *as you type* that wrong argument) is huge.

Thus, I think it's pretty clear that *on a team*, or when *you're developing a library for others to use*, that Typescript has huge benefits.  Not 100% ""every team everywhere must use Typescript"", but for a great number of teams the benefits will outweigh the costs.

**Individual Devs Can Get Most TS Benefits Without TS**

But for a personal dev working on a small hobby project?  Well as it turns out, if you put VS Code into ""typed"" mode (eg. `""checkJs"": true` in `jsconfig.json`) you can actually get most of the editor benefits (eg. autocompletion) I just mentioned, *without Typescript*.

This works because most of the major libraries these days do provide types, so you can get the benefits of their effort without using Typescript yourself.  Also, VS Code will infer some things about your code from JS (eg. it can usually automatically import your untyped files).  Furthermore, if you do want to type something, you can ""dip your toe in the water"" and add one-off types using the JSDoc syntax.

**Should You Use It?**

At the end of the day Typescript is an awesome and powerful tool, with a whole lot to offer teams.  It also has a lot to offer individual devs, and if those individual devs ever plan to work on a team, build a public library, or craft a very large/long-term project (remember, your own code looks like someone else wrote it after a year, so documentation will matter more) then learning Typescript will provide value in the future, beyond just their current project.

But if you don't know Typescript and only plan on working on personal projects, *especially* one-off stuff like Hackathon challenges?  Right now I truly feel the ""sweet spot"" for that dev is to leverage all of VS Code's great Typescript-using features ... but not waste the time and effort of both learning the library, and having to type your code.  IMHO, the practical benefits you'll get for doing so (""saving yourself"" from a JS error when you forget to `parseFloat`) just won't outweigh the costs.",3.0
g18nkpp,i8cet0,"Thank you very much for such an amazing reply!

Maybe my experience isn't normal, but I really don't feel like in the years of working on personal projects I've encountered that many type issues. People keep mentioning not knowing your variable type or having type-related bugs in your code, but I have trouble relating to this.

Ii can remember 2 or 3 times in the last few years when javascript has accidentally saved number as a string, and it took me a few minutes to figure out that I need to use parseFloat, but that's about it.

One more issue is that I'm not using VSCode, I'm using Emacs. Which seems to have pretty horrible support for all the fancy modern webdev tools (graphql, styled components, jsx, etc). It's still faster and more convenient to me than VSCode, so I keep using it. I don't know if Emacs works well with typecript, and how much that'll help.

Either way, thank you very much for a nuanced and well written reply, this is helpful!",3.0
g18q1tn,i8cet0,"I'm glad it helped :)

&gt;People keep mentioning not knowing your variable type or having type-related bugs in your code, but I have trouble relating to this.

Yeah, I truly feel the type-checking gets oversold.  Honestly, I was very anti-TS for a long time because I thought that was all it offered, but then I started thinking ""why don't I have the same support from my tools that I used to have when I coded Java?"" I soon came to understand that the real value of typing wasn't the checking it enabled ... it was the *tooling* it enabled.

&gt;One more issue is that I'm not using VSCode, I'm using Emacs.

As a fellow emacs user ... but only at the command line for Git commit messages and such ... I'm often impressed by how much support the editor still has.  For instance, there's not one but two different Typescript modes (maybe more; this was just with two seconds of Googling):

* https://github.com/emacs-typescript/typescript.el
* https://github.com/ananthakumaran/tide

So on some level you 100% could benefit from Typescript in emacs.  That being said, I can't imagine (even with those modes) that emacs could have the level of support that VS Code has.  Forget the command-line vs. windowed thing: VS Code has a whole *team* at Microsoft building out its JS features, whereas emacs just has some fans/hobbyists.

So ... I honestly can't say how much benefit you'd get, but it's certainly going to be less than a VS Code-using dev.  And while I'd encourage you to someday try VS Code just for all it's great other features ... until you do I think that'd be yet another strike against Typescript being the right tool for you right now.",2.0
g18ciz7,i8cet0,"Yeah the autocomplete/error checking stuff in VS Code is the big one, I wasn‚Äôt even sure if it was Typescript doing it or if a VS Code plugin could do that with any JS. But that is huge.",2.0
g17oui7,i8cet0,"Project size doesn't matter as much. Biggest caveat is when you want to integrate third-party code that's not conforming to typescript standards and/or has no type data. If you write typescript yourself you can easily bend it to be super forgiving (and easy to read). 

At this point i personally prefer .ts in my private projects, but i often go easy on the actual types when experimenting and just put down interfaces when i am confident the code will survive a few iterations.

Kids and business responsibilities have left me with only a meager amount of hobby projects so it might be a week between hobby code sessions.. This is where TypeScript and especially the IDE integration really really help me to pick up where i left.",2.0
g197g99,i8cet0,The only type I need is ‚Äòany‚Äô,1.0
g199ajp,i8cet0,It's good for everything,1.0
g1a6jvw,i8cet0,It's good for refactoring code.  What no one is telling you is 3rd party library support is still all over the place.  Even libraries that are written in it routinely have bugs in their types and creates a nightmare to sort out.  People who write bad js will write bad ts.,1.0
g1aqnk3,i8cet0,"Goal of typescript is to convert long term tech debt into much cheaper up front thought and decision making.

You don't benefit from typescript much until you need to change or refactor something. Much like tests, long term investment.",1.0
g17fl99,i8cet0,"Hackathon no anything that requires more typing will slow you down. Everything else its probably worth at least trying out if you haven't used it. It will not slow you down a whole lot and will save time debugging. If your just doing hackathon style project and not actual events I personally would use it. I just would not use the complex types, basic string number array things like that.",1.0
g17kjvz,i8cet0,Complex types get easier once you understand it,1.0
g17t38p,i8cet0,They are not quick though if you are doing a hackathon those are definitely Overkill.,3.0
g1b2g1c,i8cet0,[deleted],1.0
g1bhof2,i8cet0,"If I am doing a hackathon or a timed competition, I am definitely not going to be using any of those features. Every one has a opinion and a right  to code how ever the want though. What works for me may not for others. When I am doing a competition I turn off all intellisense  that its self will slow me down and break my concentration. At my regular job I use all those things. Except generics at that point I am just going to use any and be done with it.",1.0
g1879kt,i8cet0,"""It's not *as* slow as you think it is"" is not a good answer to ""X is slower than not doing X"".  Even if what you say is true, ""X is *still* slower than not doing X.""",1.0
g17prs6,i8cet0,"Typescript makes you fast at the small scale, and makes you even faster at the large scale. When you master Typescript, you'll find that plain Javascript only slows you down.

The only time Javascript is faster is when you're writing a piece of code under 20 lines.",1.0
g17uv7f,i8cet0,"The point of typescript is to help catch mistakes early through a type system and to make javascript development more efficient. Typescript is not necessary, but adds a lot of value.

It's worth learning simply because you will find yourself working in it one day.  Do your small hobby projects need it?  No, but the sooner you start learning it, the better off you will be when it comes to future employment.

[Understanding TypeScript - 2020 Edition ](https://www.udemy.com/course/understanding-typescript/) by Maximilian Schwarzm√ºller is a good course to get you started.  Wait for it to go no sale, though, just leave that page open in a browser tab and refresh it every day. Pick it up when it goes on sale for $10 or $15 - udemy courses go on sale all the time.  You can also try purchasing it in incognito mode where you might see that $10 or $15 price.",1.0
g18po2o,i8cet0,Typescript complicates everything.,-1.0
g17ny21,i8c1zv,Cool! Does is support lists as a query parameter?,5.0
g1801ff,i8c1zv,"Ooh, that's a good idea, I've added support for that! It was super easy to add on top of optional query params, and added very little to bundle size, definitely seems worth it. Thanks for the suggestion!

[https://github.com/philipnilsson/teki#list-query-parameters](https://github.com/philipnilsson/teki#list-query-parameters)

(Keep in mind that though I've added a bunch of tests for it, list params so far has no production usage on my end.)",3.0
g181uum,i8c1zv,"Will it do bracket-style lists as well?  See ""arrayFormat"" here:  https://github.com/sindresorhus/query-string",1.0
g1831y4,i8c1zv,"Yes, it works fine. I've added that to the documentation. Thanks for pointing that out! :)",2.0
g18a19x,i8c1zv,One question I have. What is the reason for parsing URL query strings? The URLSearchParams interface is a pretty ergonomic way to read the query already.,3.0
g18gxqt,i8c1zv,"This uses URLSearchParams under the hood. 

Matching on query params let‚Äôs you fail a route match if a query parameter is not present, or is present but not matching a regex. 

You can also match on parameter lists, see above discussion.",3.0
g196i9d,i8c1zv,"I think if you're going to have claims such as ""unreasonably efficient"" you should show that w/a jsperf test to compare performance of the other most efficient solutions out there. I'll say that seeing that claim, only to see that it just uses the native URL API, was a bit of a let down tbh but if it truly outperforms other solutions that's awesome",3.0
g17ogel,i8c1zv,Beautiful little library.,1.0
g17ev5y,i8bipq,"Not going to make one, but that was an interesting read, thank you for sharing. Can someone elaborate on how those platforms even get the raw data from the first place?",4.0
g18dj6y,i8bipq,The US national weather service gives away the model data.,2.0
g16nuqc,i86oto,"A) Perhaps yes, but they wouldn't. Because frameworks allow to deliver quality result much faster than with vanilla js.

B) Compiled languages are faster. This matters if software does intensive math.

C) Yes, a lot of JS inconveniences were addressed in ES6

C1) That depends. Being fullstack can give you more vision and impact in *some* projects. Other projects may require you being focused. So it really depends on environment.",5.0
g16kdhz,i86oto,"a) seniority is about how long you've been working, not how good you are.  that said, usually, yes.

b) it doesn't generally matter.  generally no, but, it really isn't important.

c) no, not even close.  there are no languages without flaws, though.",2.0
g16wrl2,i86oto,"Weird that this is the top comment... Am I getting this straight...

This sub thinks building a large app without a framework is faster, that node is slow, and JavaScript is fundamentally flawed?",1.0
g17sxod,i86oto,"&gt; This sub thinks building a large app without a framework is faster, that node is slow, and JavaScript is fundamentally flawed?

Hi, I'm one person, not this sub.

.

&gt; building a large app without a framework is faster

When you've got enough experience, you learn that yes, this is typically the case.

""Frameworks"" are generally nice for mid-sized projects, but they have expenses, and they don't generally save you very much.

When the world doesn't stop for your project, you have to count on your framework to keep up.  All those people who built under jQuery, dojo, ext.js, meteor, GWT, apache royale, enyo, MooTools, knockout, OpenUI5, qooxdoo, prototype, sproutcore, wakanda, and so on have all had to learn this.

In the meantime, they don't actually gain you much.

The typical thing to do is to get individual libraries that do these parts, and put them together yourself.  That way, when one of them falls out of fashion or the maintainer goes to jail over a bike accident, you can switch that one small piece.

Sure, it saves you 20 hours, but it costs you hundreds.

Many people have made entire careers out of going to startups and saving them from the frameworks that their junior ""senior developers"" used, especially Drupal and Joomla

.

&gt; that node is slow

Speed isn't the right way to make the choice.  That's like choosing a car based on how well it stays waterproof when sinking into a lake.  Sure, it's a measurable fact, but it's not relevant to whether this was the right language choice.

That said, if you insist on looking at speed, yes, no surprise, [Javascript is quite slow](https://www.techempower.com/benchmarks/#section=data-r19).  Techempower sees node as capping out around 1/6 of C++, which is quite a bit faster than I would have expected.

If we were doing this for speed we'd be using Fortran, Forth, or machine assembly.  Notice how nobody is doing that.

That's how important speed is.

.

&gt; and JavaScript is fundamentally flawed?

All languages are flawed.

If you can't name any of JS' flaws, you must be absolutely brand new to JS, because quite a few of JS' features are added to cope with its old flaws.

JS doesn't even have its basic containers, datastructures, and functional predicates.

I love this language and write a lot of it, but yes, it's very very flawed.  Very.",1.0
g16ma0s,i86oto,"&gt;**B)** Do you think that Node can hold it's own vs the other backend tech stack like Java/C# etc in term of performance ? or it doesn't really matters all the time ? (maybe except in the finance industry)

They aren't really comparable, and they're good at different things. Node is good at handling a large number of requests that mostly involve asynchronous operations. Other languages are better at parallel, blocking work. 

&gt;**C)** Do you feel that most flaws of JS have been solved with ES6 or hidden ?

Mostly yes, although it's still a dynamically-typed language. Typescript has done a lot to alleviate the issues that brings, although it srill sometimes feels like trying to fit a square peg into a round hole.",1.0
g16szqx,i86oto,"A) I doubt it. Assuming that by senior you actually mean skilled, say that dev creates an app that performs better but take significantly longer to create due to the amount of code that has to be written and then optimised. It's just easier to use a framework.

B) Maybe, but I doubt it. It'll be significantly easier to get better performance out of Java/C# than NodeJS.
But it generally doesn't matter.

C)
&gt; Do you feel that most flaws of JS have been solved with ES6 or hidden ?

No, but ES6 isn't a bad language.

&gt; is it possible to have a good career being just frontend instead of fullstack ?

Absolutely, good frontend people are very valuable.

&gt; What the frontend will not understand compared the fullstack guy in term of big picture and planning ?

I suspect a reasonably experienced fullstack developer will have a better understanding of more optimum solutions to problems. As in the backend APIs will better serve what the frontend needs and the frontend expose what the backend's capable of better.
That said, I think good communication between frontend/backend developers makes that a moot point.

IMO it's better to have a frontend dev and a backend dev rather than two fullstack devs.",1.0
g1h96ar,i86oto,"A) Frameworks often have additional overhead, so you can build a faster application without a framework. You're kind of missing the point of using a framework though.

B) The database is usually the bottleneck for most applications, so whether the language is slow or not isn't that big of an issue.

C) I don't know. I've been full stack since the first day of my first dev job.",1.0
g16m7ni,i86oto,"**A)** No, frameworks add useful features, reduce or eliminate boilerplate code, and cover edge cases. They usually have years of development by the community and have been vetted through tests, validation, and usage in production environments. It's impossible for any one person to match the amount of knowledge and productivity of an entire community. Also, while it's possible to write faster code that's tailored to the application, the vast majority of the time execution speed isn't the limiting factor, but speed of development is (a.k.a. how fast you can crank out new features). And it's not an either-or situation; if you need the speed boost you can always step outside of the framework, while using it for everything else.

**B)** While Java and C# are faster at raw execution speed, for the vast majority of applications, speed isn't the primary concern. Node can definitely hold its own against other frameworks and is arguably easier to scale. I also feel that JavaScript and Node/JS libraries are much easier to use than the Java/C# equivalents, requiring significantly less code to do the same thing, and going back to point A, speed of development is usually the primary concern, not code execution speed.

**C)** So this is a personal opinion/rant, but I feel that JS doesn't really have any flaws, just widely misunderstood. People often learn Java/C# as their first language in college, use JS expecting it to work the same, then get upset when it doesn't do what they expect. The changes made in ES6 to add features such as block scoping, arrow functions, and classes are nice conveniences, but I feel that they were added more because people don't understand function scoping, `this` binding, and prototypical inheritance. If you understand these concepts, then it'll also be pretty clear that these aren't flaws but language features, but people would rather JS behave like the first language they learned rather than actually learn how JS works.

As for FE vs. full stack, you can definitely have a good career being frontend only. In the past when MVC architecture was king, you didn't really have a choice because the frontend was so coupled with the backend and everyone was full stack with a focus on either FE or BE, but nowadays where the frontend is standalone and only communicates with the backend through APIs, it's perfectly viable to focus on only one or the other. This is why many companies nowadays are splitting up their job openings into distinct FE/BE positions. FE nowadays is just as complicated, if not more so than the BE, and rather than hiring someone that's fair/good at both, you can hire someone who can focus on one end and do it excellently. It's like that Bruce Lee quote where he doesn't fear the person who has practiced a thousand kicks, but fears the person that practiced one kick a thousand times.

&gt;What the frontend will not understand compared the fullstack guy in term of big picture and planning ?

If APIs are used to communicate between the FE and BE, then not much. It's like how when you use a library/framework, you don't usually need to understand how it works internally, as long as it does what it's supposed to at the API level.",1.0
g16mshk,i85sm8,"React Hooks and Redux don't replace each other. They are in two different categories. React Hooks enable Functional components to replace React Class components.

Edit: I also talked with a senior engineer at my company about abstracting logic so you can more easily migrate in the future. The verdict was that it's better to lean into the strengths of your current tools because that makes it easier to on-board new engineers since it'll be standard and eventually you'll need to rewrite it all anyway.",31.0
g173gw4,i85sm8,"100%.


I can't believe this post even. Hooks are for component level state. You should still have app level, redux. These tools aren't competitors.",14.0
g17dgnp,i85sm8,You *could* use hooks for app level state. I've done it as a proof-of-concept... but it's not exactly straight forward.,3.0
g17t54k,i85sm8,"100% a fun idea as an experiment and to stretch the functionality for fun. But, on a practical level there is no reason to be arguing redux vs hooks. They aren't competing functionalities.",1.0
g17ihdk,i85sm8,Recoil.js works very well.,1.0
g19434s,i85sm8,"I mean this post exists because I see many people recommend hooks + context as a drop in replacement for Redux. There was someone further down who was touting how they never use Redux anymore because they only use hooks and context, so I wanted to see if they're viable replacements for each other.",2.0
g1947cr,i85sm8,"At my current company people seem to lean towards abstracting logic for future codebase moves so, maybe I'm just biased from that!",1.0
g16l3xs,i85sm8,"Apps that have large complex data flows can benefit from Redux. It can also be useful on large teams, as long as everyone understands redux and there are solid team agreements on how to use it correctly.",11.0
g170jj4,i85sm8,"Only semi-related, but in my 20something years of making web apps I've **never** seen a company move an app from one framework to another. I've no doubt it does happen but it's incredibly rare, and if you're choosing your tech to make that process easier I think you're going to make some of the much more common bits of dev work harder.

I suspect your experience moving from angular to React is the reason why portability is a priority, but that probably won't happen again. 

Choose your tech to solve the problem you actually have, not some possible problem that might never happen.",13.0
g175w0h,i85sm8,"Code bases never move, they die while being rewritten.",5.0
g178lwi,i85sm8,"Give redux toolkit a try. Redux toolkit makes redux easier to get started, removes boilerplate and makes your code leaner.

Context API doesn't scale well so you will need to change when the product gets larger, and the lack of middleware like devtools and thunk makes it hard to debug and lacks standards flows.",5.0
g174wj2,i85sm8,"If I started a new project and someone copy pasted the state from the old project I would be a bit concerned.

Anyway context is no replacement for Redux and you‚Äôll only end up hurting yourself if you try to go that route.",2.0
g16lxyt,i85sm8,"Yep. It's a less common use case, but it's absolutely a valid one. 

There was a good post a couple months ago from someone who migrated from AngularJS to Redux and then React :

https://codingwithjs.rocks/blog/angular-js-migration-war-story

I'm actually trying to migrate an AngularJS app to React myself right now, although it's not using Redux atm. That said, you might be interested in how I used CRA's build tooling to build an AngularJS codebase :

https://blog.isquaredsoftware.com/2020/03/codebase-conversion-building-mean-with-cra/",3.0
g16rzud,i85sm8,"I work on a pretty big project, really frontend heavy as well.  
When i joined they tried with hooks/context but it was miserable. For the recent projects we've moved entirely to redux and it's much more managable.   
Hooks/context is still good for small/medium projects.  
Recoil seems like the future though.",3.0
g17ab1c,i85sm8,"as /u/CreativeTechGuyGames said, React Hooks does quite a bit of different stuff than Redux. Hooks allow React Components to have easily extendable functionality while Redux is more for handling business logic and data of the application.

You mention the context of react at some points, and I think what you mean is application state handling either through redux or Hooks+Context. In this case, hooks+context works, but can quickly grow into a difficult to maintain code as the application grows.

Redux's primary strength is strongly enforcing developers to define a rigid and well-defined API for their business-logic and -data. This means that there should be minimal confusion on why or where some changes in data changes. There are also a ton of good developer tools that hasten the development.

Hooks on the other hand, are perfect for handling the internal state of a React component. React's `useReducer` can work fine for a component's finite state machine.  I personally use `useSelector` and `useDispatch` for interfacing with Redux. This more easily allows the redux code in components to both use data from other hooks and also give data as parameters to hooks. A poor example:

    const FilteredList = () =&gt; {
      const [filter, setFilter] = useState('');
      const users = useSelector(s =&gt; s.users.filter(user =&gt; users.tags.includes(filter))); // Bad code, re-renders on every store change.
      const dispatch = useDispatch();
      const useEffect(() =&gt; {
        users.forEach(user =&gt; dispatch(notifyUserBeingWatchedForReason(user, filter)));
        // Easy to make an infinite loop here, so be careful.
      }, [users]);
    
      return (
        &lt;input type=""text"" onChange={(/* ... setFilter */} /&gt;
        &lt;List&gt;
          {items.map(item =&gt; (
            &lt;Item item={item} /&gt;
          ))}
        &lt;/List&gt;
      );
    }

While this business data could be handled with React Hooks+Context, you would still be missing the crucial Plain-Old-Object -interface for modifying it.",1.0
g17ni27,i85sm8,"If anyone does go down the route of Context, make sure to wrap the child of your provider in a `React.memo`, otherwise you'll trigger a rerender of the entire tree beneath it.

Also, has anyone ever migrated a commercial app from one framework to another? Realistically it would be so much effort, and unless you are the perfect engineer, you will have made some imperfect design decisions on your state anyway, so you're better off starting from scratch.",1.0
g18x09k,i85sm8,"If your state is literally stored in a React component then yes, but you can also store it outside of a component and use React Context to inject it into your components if that's a concern. And if you're using immer for updates you can keep using reducers if you like them, without having to worry about nested reducers or multiple reducers for updating different parts of the store. Kind of like this [http://day8.github.io/re-frame/application-state/](http://day8.github.io/re-frame/application-state/). Can also use Redux devtools with such an approach just fine :)",1.0
g16dilf,i85sm8,[deleted],1.0
g16li3n,i85sm8,"Hi, I'm a Redux maintainer. I'm obviously biased, but I'll have to disagree with you considerably on that. 

There's a number of things that Redux can do that hooks can't. In addition, Redux and Context handle updates in very different ways. 

For more details, please see my posts [Redux - Not Dead Yet!](https://blog.isquaredsoftware.com/2018/03/redux-not-dead-yet/), and [React, Redux, and Context Behavior](https://blog.isquaredsoftware.com/2020/01/blogged-answers-react-redux-and-context-behavior/), and my [Reactathon 2019 Keynote: The State of Redux](https://blog.isquaredsoftware.com/2019/03/presentation-state-of-redux/)

In addition, our official Redux Toolkit package makes it easier than ever to write Redux logic :

https://redux-toolkit.js.org",8.0
g162mdd,i81o7u,In my village we usually ask the old ladies to paint JS logos on pens. Perhaps you have some old ladies who can do that in your village?,4.0
g16tzhf,i81o7u,"I've never seen swag pens for js but you can probably take the svg to a print shop and they will probably do it on demand.

https://commons.m.wikimedia.org/wiki/File:Unofficial_JavaScript_logo_2.svg",3.0
g170w23,i81o7u,"Thanks for the suggestions. Except for the fact that it's an unofficial logo, I think it's a missed opportunity for ECMA. Oh well üòé",1.0
g16xvil,i8079x,plz no,9.0
g175p6w,i8079x,Great effort but whenever I see decorators I get really nervous lmao,7.0
g172ayp,i8079x,A+ for effort.,3.0
g179fqo,i8079x,"Looks like everything what Angular does, but with jsx",3.0
g177oc7,i8079x,"Yo dawg, heard you like frameworks so I put a framework on top of your framework so you can framework while you framework - op probably",2.0
g179c4x,i8079x,React is not a framework,3.0
g16wh3w,i8079x,"The beauty of react is that it doesn't need frameworks on top, it can be automated greatly with hooks and it looks more elegant, I don't see a use for this framework tbh.",2.0
g175vfm,i8079x,Proof of flex is good enough for me.,1.0
g14u3lm,i7ygz2,"TL;DR; we give away prizes for people who write the most text reviews for JS libraries over the next 10 days.

Hi everyone! I‚Äôm Lior from Openbase ([https://openbase.io](https://openbase.io/)) and we help developers choose the right JS package for any task - with insights and reviews.  


We actually launched package reviews just over a month ago, and we've already seen a huge influx of reviews that have been seen by over 100K developers, and helped them choose the right package.

To show our appreciation, we‚Äôve decided to give away prizes for the top reviewers on Openbase!   


We set up a leaderboard on [https://openbase.io/leaderboard](https://openbase.io/leaderboard) \- the more reviews you write and the more upvotes you get, the higher you‚Äôll get on the leaderboard.  
In 10 days, we‚Äôll count the points and will give away prizes to the top contributors:  
The #1 contributor will get a laptop bag, #2 will get a travel mug, and #3 will get a shirt.  
Needless to say, we‚Äôll throw in some cool Openbase stickers too!

P.S. We‚Äôre thinking about building an all-time hall of fame for top reviewers, what do you think?",5.0
g14wtaf,i7ygz2,"Oh wow I've actually been looking for something like this, it gets very time consuming to have to dig through github repos all the time",3.0
g4be8wq,i7ygz2,RemindMe! 10 Hours,1.0
g4bea8n,i7ygz2,"I will be messaging you in 10 hours on [**2020-09-07 19:22:13 UTC**](http://www.wolframalpha.com/input/?i=2020-09-07%2019:22:13%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/i7ygz2/review_js_packages_help_fellow_developers_win/g4be8wq/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fi7ygz2%2Freview_js_packages_help_fellow_developers_win%2Fg4be8wq%2F%5D%0A%0ARemindMe%21%202020-09-07%2019%3A22%3A13%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20i7ygz2)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=RemindMeBot%20Feedback)|
|-|-|-|-|",1.0
g15x5ux,i7xqct,"Wait a sec here, am I going crazy or is the rest of the site on that link some sort of nursing home guide for elderly people?",24.0
g16exwt,i7xqct,[deleted],13.0
g16il1l,i7xqct,This does actually make sense. Maybe they should point that out somewhere though? Cuz I almost couldn‚Äôt tell if the whole thing was some sort of very tongue-in-cheek satire for the very niche elderly front end developer community.,10.0
g168f2w,i7xqct,"Lmao you're right, what???",11.0
g169j4r,i7xqct,Old people need bleeding edge javascript frameworks too!,22.0
g15w4kn,i7xqct,I love all the momentum around Svelte. Keep it up guys.,8.0
g14pcr8,i7xqct,how's this better than sapper?,4.0
g14qfrb,i7xqct,"This framework is made for static site generation, Sapper isn't. Think of it more like a Gatsby rather than a Next.js. Oh, and it's super-fast, building 17000 pages in 8,5 minutes or so. 

You can read a bit about why they built this here: https://elderguide.com/tech/elderjs/#why-we-built-elderjs

Edit: Looks like there's a whole section on your question: https://elderguide.com/tech/elderjs/#how-does-elderjs-differ-from-sapper",11.0
g2rkx1o,i7xqct,Does it support adding SPA/Auth functionality like Gatsby as well?,1.0
g6ne3ud,i7xqct,"Yes, but it's a bit more involved, but definitely possible.",1.0
g14cpo4,i7tccq,"Interesting read, thanks! But I don't understand this part: 

&gt; avoid bloated libraries (eg.¬†lodash,¬†moment)

I understand moment, but why is lodash considered bloated? Doesn't lodash provide modular exports?",40.0
g14hmb0,i7tccq,A lot of people forget to use the modular exports and instead just import the entire lodash library.,65.0
g14sx0p,i7tccq,"&gt; why is lodash considered bloated

Personally, I saw a lot of usage of lodash while working that can be done natively using the various Array.prototype methods. I recommend any newbies who find themselves reaching for lodash to bootstrap their knowledge base with [MPJ's functional programming in JS series](https://www.youtube.com/watch?v=BMUiFMZr7vk&amp;list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84). There is a lot you can do with vanilla JavaScript, more than the average person might realize.",23.0
g15ebcc,i7tccq,"The one I see a TON is `_.get` being used almost everywhere, it's WAY slower than the classic:

`myVar &amp;&amp; myVar.property`

and if you want pretty code:

`myVar?.property ?? defaultValue`

does everything `_.get` does without making it impossible for your IDE to identify variable access because they're being accessed via strings.",21.0
g15jd4t,i7tccq,We have covered that one too on our blog :) https://allegro.tech/2019/11/performance-of-javascript-optional-chaining.html,4.0
g15knu0,i7tccq,"Yeah, I was really let down the first time I looked at how nasty the Babel version was, I wish I could just get a shorthand for the `&amp;&amp;` syntax, 99% of the time I don't need all the extra checks they have in there.

Other thing is that direct property access is WAY faster than optional chaining, even when in a browser than supports it natively. I think a lot of developers lean too much on optional chaining to hide errors, when you should ideally be properly checking things along the way, and not hiding issues behind `_.get`

I've had a few too many cases of an error failing to bubble up from the real source of the error, because optional chaining or get hid the error's source, and it got passed along before it errored elsewhere.",5.0
g15mim4,i7tccq,Yeah there should be a an eslint plugin that fixes optional chaining with depth 1,1.0
g15mrh6,i7tccq,ESPECIALLY for TypeScript.,3.0
g15ypr1,i7tccq,how is `myVar?.property ?? defaultValue` pretty?,3.0
g161bua,i7tccq,"When you're chaining a lot of items it gets super redundant, my example failed to show that.",7.0
g15p8cy,i7tccq,Conversely a lot of people try to remake lodash with `reduce` and it ends up being an order of magnitude less performant,6.0
g16hwgo,i7tccq,Was coming here to say this. Many of the functions are well thought out implementations with optimizations applied,3.0
g15t7uc,i7tccq,"First I used lodash, because it does everything you need. Then I shunned lodash, because it‚Äôs often only a line or two to do it in vanilla js. Now I use lodash, because it‚Äôs methods act on Collections and because the implementation will be consistent for readers of my code across codebases without requiring anyone to figure out how my particular reduce function works.",6.0
g19dbgd,i7tccq,"&gt; because the implementation will be consistent for readers of my code across codebases without requiring anyone to figure out how my particular reduce function works.

By far one of the most important metrics for me when I'm writing code or choosing tools or anything like that, personally.",3.0
g17bo5z,i7tccq,"date-fns is much better than moment imo, immutability and smaller bundle size",3.0
g17i9ir,i7tccq,"Yeah, that wasn't part of my question",1.0
g17idpv,i7tccq,Lodash is considered bloated because sometimes people import the entire library instead of just the function that they need,1.0
g14e0vp,i7tccq,"It does, but it is still significantly larger than nanoutils - here is a blog post by one of my colleagues, the one behind the eslint rule that you mentioned: [https://dev.to/erykpiast/the-story-about-a-few-imports-40jm](https://dev.to/erykpiast/the-story-about-a-few-imports-40jm)",6.0
g14o5m3,i7tccq,"With tree shaking you don't bring in any of the bloat you don't want to. It's the exact same thing with ~~moment~~ lodash, your production bundle doesn't contain any of that code that isn't being run.

Edit: I was responding to two different comments in this thread and mixed up topics. Lodash is very easy to treeshake and should not be considered to be bloated. Moment is not, moment could be considered to be a bloated library. In an effort to further refute my whole point here is the github for [you don't need momentjs](https://github.com/you-dont-need/You-Dont-Need-Momentjs)

With respect to lodash, however, i think it is incorrect to say that it is bloated or that you need to use nanoutils or anything specifically because of the size. If you don't want to use lodash, thats totally fine, but you can easily tree shake lodash to be much smaller than the full package! Note: [As long as you don't use _.chain!!!!](https://medium.com/bootstart/why-using-chain-is-a-mistake-9bc1f80d51ba)",10.0
g14qf3v,i7tccq,I don‚Äôt think webpack will tree shake ‚Äúimport _ from lodash‚Äù without special plugins. I always recommend people to use a bundle analyzer to make sure they aren‚Äôt bringing extra stuff into their prod bundles,11.0
g14qz87,i7tccq,"Totally, it doesn't do it for you automatically! It's not hard to tune your production bundle though and the bundle  analyzer is an incredible tool! 

You can just use this plugin for lodash: [lodash-webpack-plugin](https://github.com/lodash/lodash-webpack-plugin) or [babel-plugin-lodash](https://www.npmjs.com/package/babel-plugin-lodash)",7.0
g15uhax,i7tccq,"Cool stuff. Have a list of any other good to have webpack/babel plugins that you use or recommend?

I posted a useful Moment.js one above https://www.reddit.com/r/javascript/comments/i7tccq/using_eslint_to_improve_your_apps_performance/g15ti06?utm_source=share&amp;utm_medium=web2x
... for stripping out unused Moment langauges.",2.0
g15ka4p,i7tccq,"That other user is perhaps being a tad aggressive about their point but I think they're correct.

Moment doesn't get tree shaken very well, or at all, as far as I know. It doesn't play nicely with the ES6 import system, it's not very modular. [This issue](https://github.com/moment/moment/issues/2373) seems to suggest that's the case as well.

Tree-shaking can't perform magic on code that isn't built in a modular way, especially because JS has a hard time with inferring code that contains side-effects or not and still heavily relies on developers indicating if that's the case.

I might be wrong about this I haven't used it in a while but I think if you're importing moment at all you're importing pretty much the whole thing whether you're running that code or not.",4.0
g19dzw8,i7tccq,"You're right and i was wrong wrt tree shaking moment.js. I remember doing an optimization for it but, upon checking out my webpack config and my bundle, it was just removing the locales. Lodash shakes super well but moment does not. 

&gt;Tree-shaking can't perform magic on code that isn't built in a modular way, especially because JS has a hard time with inferring code that contains side-effects or not and still heavily relies on developers indicating if that's the case.

You're exactly right here and i overlooked that. The lodash plugins i posted just transform the imports from the whole package to the specific item i.e. 

    import _ from 'lodash';

    _.whatever()

    // to

    import { whatever } from 'lodash'

So the takeaway is tree shaking is easy when the package makes it easy. Lodash does make it easy, moment does not.",2.0
g17cn1o,i7tccq,/u/improbablywronghere seems to be immune to arguments. Don't bother.,0.0
g156u4o,i7tccq,"&gt; It's the exact same thing with moment, your production bundle doesn't contain any of that code that isn't being run.

Teach me that ability.",-1.0
g157r7b,i7tccq,"&gt;Teach me that ability.

I just did a quick search and [this article looks pretty solid](https://medium.com/@craigmiller160/how-to-fully-optimize-webpack-4-tree-shaking-405e1c76038)! Your search terms would be like ""webpack react lodash momentjs tree shaking"" or something like that. Here is the official webpack article on [tree shaking](https://webpack.js.org/guides/tree-shaking/) but i think their documents are a little dense so i'd go with the medium article as an introduction!

Edit: User is being facetious it wasn't a real request. If anyone wants some info about tree shaking and stuff there ya go!",1.0
g158dhz,i7tccq,"Yeah, it doesn't work.",-2.0
g159oo4,i7tccq,What doesn't work?,1.0
g159vju,i7tccq,Tree shaking. Unused Moment code isn't removed from the bundle.,0.0
g15a9un,i7tccq,"Oh, you were just being a troll. Got it.",3.0
g15bbns,i7tccq,"I am, but I think what you wrote about tree shaking is wrong and maybe I've just missed something and I'm actually wrong so enlighten me.

Thanks for the downvotes. :)",-1.0
_,i7tccq,,
g15cnjn,i7tccq,"&gt; Edit: User is being facetious it wasn't a real request. If anyone wants some info about tree shaking and stuff there ya go!

Ah so you've chosen the path of ignorance. Got it. The article you've posted specificaly says external libraries don't get tree shaken. I'll wait. It was a real request.",-3.0
g15wpuo,i7tccq,"&gt;The article you've posted specificaly says external libraries don't get tree shaken.

I read the article and missed this - where is that?",2.0
g17cet5,i7tccq,"&gt; What is Considered Dead Code

The last example.",0.0
g15a7ke,i7tccq,"`import * as lodash from lodash` vs `import { forEach } from lodash`. But to be honest, that's more for build time than performance since this should be treeshaken during bundling.",4.0
g15pfrr,i7tccq,About a year ago I looked into it and I came to the conclusion you need to do `import forEach from 'lodash/forEach'` to get the tree shaking,11.0
g15t1oa,i7tccq,"The downside (or upside for some) is that you then are no longer writing the `_.` prefix on the functions. It's nice to be clear when Lodash is being used, vs something native/local/other else being used, IMO.

I feel like there's probably an ad-hoc kind of treeshaking that would be possible here based on usage, instead of imports, but I haven't looked too into that potential.",2.0
g15vdb9,i7tccq,[`babel-plugin-lodash`](https://github.com/lodash/babel-plugin-lodash) does (or at least attempts to do) what you describe.,5.0
g16rd06,i7tccq,Thanks! Came across this in another comment above. Seems super useful!,2.0
g15uwa5,i7tccq,Or use `lodash-es`.,2.0
g16hyuv,i7tccq,You can use a library to transform the member style to the style you showed,2.0
g17xmbc,i7tccq,"Moment might be bloated, but it has saved my sanity on multiple occasions.",1.0
g14mbgy,i7tccq,"Even if you tree shake lodash, it increases build time by quite a lot. It's better to avoid it if you can, or make informed decisions about the costs if you can't.",0.0
g14q7qo,i7tccq,"You don't tree shake it in development you tree shake it when you are building your production bundle. During development, you're likely using something like `Webpack-Dev-Server` which keeps the entire bundle in memory and builds it there. It is extremely fast.",12.0
g14qpje,i7tccq,[deleted],-5.0
g14rajz,i7tccq,"How exactly does this increase development build time? This greatly decreases it as you just ignore the bundle size while writing the code then having your prod webpack config shake it out for you automatically in its build (likely handled automatically by CI). This stuff is all ""fire and forget"" and is a net improvement on your total speed of development.",1.0
g14y463,i7tccq,"if you are working with modern browsers, to avoid bundling at development time, one can checkout https://snowpack.dev . in my view, it has a unbundler approach to solve the development time. as it only reloads the file which has changed..unlike webpack which builds again (in memory, still it is building again and that is heavy task). im very happy using it since i dont have to learn complex webpack configuration to get started.",2.0
g14ozk4,i7tccq,"What's the performance advantage of not calling \`format\` immediately after creating a \`DateTimeFormat\` instance? Is this just to encourage creating one formatter instance to do multiple \`format\` calls, or is there another performance advantage there?",3.0
g14qjna,i7tccq,"&gt; Is this just to encourage creating one formatter instance to do multiple `format` calls

yes",5.0
g14v3mx,i7tccq,"The examples show calling format directly after creating the instance, but the text describes the real issue - people creating new instances of Intl in a loop, or creating a new instance when you use it several times throughout the code. The argument is that creating the instance is more expensive than holding one instance in memory and garbage collecting that one when everything is done using it.",4.0
g15ti06,i7tccq," `moment-locales-webpack-plugin` is a great plugin to reduce bundle size on un-used Moment langauges.  

```
// discard all except en-us (default) and any languages defined below
new MomentLocalesPlugin({
    localesToKeep: ['es-us'],
}),
```",2.0
g161go8,i7tccq,Also moment-mini is much smaller than normal bloated ‚Äòmoment‚Äô.,1.0
g17axru,i7tccq,Though I agree that we should reuse things like formatters rather than creating instances every time. V8 has some improvements to Intl module: https://v8.dev/blog/intl including performance tweaks that affect `DateTimeFormat` and to greater extent `NumberFormat`,1.0
g14ya3m,i7s5nx,"I'm interested in the content but I'm not a fan of the medium. Ideally I'd like to read a transcript. Or if that isn't possible, then I'd like to play at 1.5x or 2x speed. I'm actually interested in *all* the tc39er.us content, but I haven't consumed any of it because of the medium.",1.0
g151av3,i7s5nx,"Thanks for the feedback, with the player you can speed it up and also it is on Spotify and likes.

https://open.spotify.com/show/1nxtI8qbF5NEy2QdfFFZLX",2.0
g152hbg,i7s5nx,"u/MoTTs_ Great feedback, I will work on it, for now [Google Podcasts](https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8xMTQxNTAwOC9wb2RjYXN0L3Jzcw/episode/ZTdlNGViOWQtMTY5Mi00MzEyLTlhY2MtNTVjOGYxZTdjMWI4?sa=X&amp;ved=2ahUKEwiJhd-RgZTrAhV1mJ4KHTe0AS4QkfYCegQIARAF) is the only one that provides playback speed.",2.0
g16xv6t,i7s5nx,[I tried a free auto-transcription service.](https://otter.ai/s/SduP3NUKTsGqgeVHK4x89Q) It's not perfect but it's decent.,1.0
g16yrno,i7s5nx,Pretty good!!,1.0
g13ofln,i7rpjt,"IMO, from the perspective of readability, the first option is clearer. I know at a glance exactly what is happening and why. The entire bit of code fits in my visual field and is simple enough to be read without verbalizing. I have to actually read the second example and verbalize in my head a bit.",9.0
g13pad9,i7rpjt,"That's my opinion too! Granted, this is just example code but... I think the point still stands if the function is small enough and doesn't do more than return a value, like in the examples",1.0
g13q17p,i7rpjt,"I do think it's worth pointing out, though, that the reasons for using a single point of exit don't have much to do with readability. Particularly with TypeScript I would prefer the first example as I can then be sure that at the very least none of the secondary functions are returning anything funky.",3.0
g14zp7t,i7rpjt,In this example the winner is clearly 1 to me. The second one introduces clutter. You need to read the whole function to understand what case1 does. The first is very concise and shorter. I see absolutely no advantage for the second option in this particular example. Also in general I prefer multiple returns as I can see and understand quicker whats going on,3.0
g14ijg1,i7rpjt,"From readibity standpoint, first one: asuming there are other things going on inside cases and there is more cases. It also helps you see in a glance that function does nothing else after that point/switch case block.

If it was just that many function calls and nothing different for any of the cases i would probably go with either, and if it was hundreds of cases i would use dictionary/object approach as someone else suggested.",2.0
g14nxu3,i7rpjt,"maybe a little clearer?

```
function multipleReturns(value) {
    let fs = {
        case1: functionA,
        case2: functionB,
        case3: functionC,
        case4: functionD
    }
    let f = fs[value]
    return f ? f() : false
}
```",2.0
g17blns,i7rpjt,No. The case statement with returns from OP was cleaner. This adds an unnecessary level of abstraction with retrieving and invoking a function.,3.0
g1409ve,i7rpjt,The first one looks nicer but if you need to inspect what is being returned the second one would be easier debug.,0.0
g143cwj,i7rpjt,I would use on object over either of these two.,0.0
g148e9d,i7rpjt,How?,1.0
g14gndu,i7rpjt,"&gt;function multipleReturns(value) {switch (value) {case 'case1': return functionA();case 'case2': return functionB();case 'case3': return functionC();case 'case4': return functionD();default: return false;}}

    function multipleReturns(value) {
       return ({
            case1: functionA;
            case2: functionB;
            case3: functionC;
            case4: functionD;
        }[value] || ()=&gt;false)();
    }",1.0
g156288,i7rpjt,"The way you wrote that is more difficult to read. I would first assign the object to a variable and put the return underneath.

Also technically this only works with plain functions that have no parameters. For anything more you‚Äôd have to wrap them all with another function which starts to get messy again.",3.0
g168qct,i7rpjt,"params can be passed as second argument, no need to wrap anything

    function multipleReturns(value, ...params) {
       return ({
            case1: functionA;
            case2: functionB;
            case3: functionC;
            case4: functionD;
        }[value] || ()=&gt;false)(...params);
    }",1.0
g173z6g,i7rpjt,"Sure, if all functions take exactly the same parameters, and the same number of params.",1.0
g17i1ij,i7rpjt,"No, the rest operator allows you to pass a dynamic number of params.

[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread\_syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax)

...params takes all the remaining arguments passed after the function name (the first argument which is the function you are trying to pick from your list) and stores them as an array called `params`at the very end, because the OP wants the returned value of the function, we call it and pass the params by spreading them back into the call. My preference would always be to return the function definition and have it called by the callee passing whatever args they want. But this works nonetheless and is a direct functional replacement for what OP has written.

You can call this like this:

`multipleReturns(sum3, 5,7,8):`

or this:

`multipleReturns(fetchData, ""`[`https://api/api`](https://api/api)`""));`

and they would both work fine.

the first call the args passed are function name, number, number, number

the second call the args passed are, function name, string  


possibly you already know spread/rest and just missed it (which is totally understandable it's easy to miss), In which case sorry for the long post, but maybe someone else will get some benefit from it.",1.0
g17namr,i7rpjt,"&gt; possibly you already know spread/rest and just missed it 

Yes I did miss it. Actually I didn‚Äôt know that JS has this now but I know it from other languages. 

But your example doesn‚Äôt really make sense any more. The ‚ÄòmultipleReturns‚Äô function chooses a different function based on the value passed in. But if you‚Äôre passing in different parameters for functionA or functionB then you would know in the caller which of those functions is going to be chosen. So there‚Äôd be no need for ‚ÄòmultipleReturns‚Äô at all.

Tbh my original suggestion of wrapping the functions probably isn‚Äôt so messy. Something like `case1: () =&gt; functionA(1, 2, 3)` is fairly straightforward.",1.0
g18gf9m,i7rpjt,"that applies to the original question as well.... so I don't know that the OP needs this... if he knows the case then he knows the function.  


My answer was simply refactoring from his switch statement",1.0
g14hehk,i7rpjt,"The first one, but put the return statement indented on the line below:

    function multipleReturns(value) {
        switch (value) {
            case 'case1':
                return functionA();
            case 'case2':
                return functionB();
            case 'case3':
                return functionC();
            case 'case4':
                return functionD();
            default:
                return false;
        }
    }",0.0
g13o95h,i7rpjt,"It‚Äôs taught frequently to use a single point of exit, and I think that covers the potential problem of returning an unexpected value (not foreseeing a particular path of logic and returning undefined, for example.)

However, a carefully constructed function, particularly with typescript and a declared return type, means you can safely use multiple points of exit.

You are taught in CS that you can use guards with early returns, but it‚Äôs different for different languages and designs",-1.0
g14j0sm,i7rpjt,"I know this is an example, but I every time I see someone do this I cringe. If you want a nicer, cleaner solution, check [The Clean Code Talks on YouTube](https://www.youtube.com/watch?v=4F72VULWFvc).",0.0
g14h4zw,i7rpjt,"    function multipleReturns(value) {
       return ({
            case1: functionA;
            case2: functionB;
            case3: functionC;
            case4: functionD;
        }[value] || ()=&gt;false)();
    }

I like something like this",-1.0
g13l2wj,i7rpjt,Single point of exit. I do this except for catching shit up front.,-5.0
g13ljem,i7rpjt,"Alright! Even if the function only consists of a switch statement like above? To me, that is a similar use case to catching stuff up front.",1.0
g13lm72,i7rpjt,"i do stuff like this:

if (!user) return;",1.0
g13luzf,i7rpjt,"Yeah, me too, so we agree there. But I also like to do multiple returns like in example 1 in my post. To me that's more readable, since when we have a match in the switch statement we might as well return out. This being if the function doesn't do other stuff like side effects",1.0
g14ae49,i7rcwg,\[key\] + scroll not working :(,1.0
g14d2jt,i7rcwg,Yeah that would be completely different code listening to the scroll event. üòÖ Would be a good follow-up post!,1.0
g13u608,i7qoe8,"Thanks for the nice overview! I've heard about most of the things you wrote about before, but it's a good compact written overview of what's new in Vue 3. I even posted it in our internal developer channel on our companies Mattermost server!",4.0
g15rgqh,i7qoe8,Hi! Thanks for reading my article. It's such an honor to be listed in your companies channel. Appreciated that!,1.0
g14l2zi,i7qoe8,the use of a Vue instance as an Event Bus is also going to be deprecated in Vue3 :),3.0
g156xvh,i7qoe8,Good,2.0
g15t74s,i7qoe8,"I see. That's also a new change. Gotta mention that in the article as well.

Thanks for the reminder!!!",1.0
g15taez,i7qoe8,Yep. Instead of that the pattern I've been using is inject/provide. See [this](https://github.com/web-dev-store/vue-next-event-plugin/tree/master#readme) for an example implementation.,1.0
g15dzpg,i7qoe8,"Vite is concerning. Webpack has its issues, but it is a massive project that has been worked on by a huge community for years. Want to customize your build in any way? There's probably a webpack plugin already built that does what you want.

I'm not saying that Vite couldn't be an improvement over Webpack. However, I find it hard to believe that it is going to match Webpack for features when it first rolls out. If it is too closely tied to Vue the community will be limited. Basically I'm just concerned that this could hurt the Vue community more in the long run vs staying with tried-and-true webpack, or parcel, or any of the other large-scale bundlers.",2.0
g15tqes,i7qoe8,"I belive that most of what you would want to do with vite that isn't already included can be done through rollup plugins.

I'm pretty sure a vue-cli webpack implementation is being put in for Vue 3 too though.",1.0
g174092,i7qoe8,"This is always the case with newer tools. It is always a matter of ""value proposition"" of new tool over old tool. 

In this case, I would say, vite does have advantage and potential to replace webpack for common use cases:

1. It is fast. Like so fast, that it will be finish hmr update before you fully tilt your head from editor to browser
2. It is a build tool tool like webpack. So, js devs would be using CRA or vue-cli. And it is upto CRA and vue-cli authors to integrate vite.
3. Vite uses roll-up internally, so it has access to roll-up plugins. i.e. vite is not starting from zero.",1.0
g18p1nb,i7qoe8,"That certainly raised an eyebrow for me too. Parcel is the biggest alternative to webpack with a lot of weight behind it, yet there's plenty scenarios it just doesn't handle, so the devs go back to webpack.

However I don't see how Vite could harm Vue. They are not going to drop webpack support, so Vite will always be an alternative. Its not like Angular deciding to use Typescript.",1.0
g18nztr,i7qoe8,"The sad thing is that you just *know* that everyone is going to pronounce Vite ""vyte"" rather than ""veet"" üòí",1.0
g123796,i7ib4l,"One big ""downside"" is that you have to serialize everything across the RPC boundary to basically JSON (or arraybuffers if you're more into that), theres no just convenient sharing of stuff in memory of everything on the mainthread. Another is that it's hard to properly bundle stuff for the worker with things like webpack",14.0
g1246gq,i7ib4l,"Ah yea the bundling part makes sense, although what would be the difference with serializing data between threads in javascript vs some other language that‚Äôs multi-threaded like java. Do you think it‚Äôd be possible to make remote memory access more efficient in javascript like in other languages? (Def not a big java fan, but I do like some multi-threading)",2.0
g127ubk,i7ib4l,"In other languages you don't have to serialize at all to access the same data from multiple threads.

Even in web assembly there's now the option to use SharedArrayBuffer to get around that.",4.0
g149emt,i7ib4l,I thought SharedArrayBuffer got removed from browsers due to Spectre and Meltdown? Have they been added back?,1.0
g14czdi,i7ib4l,"Yes, it's back. Chrome solved it via process separation a while ago and Firefox has some other precautions implemented now.",6.0
g1270s0,i7ib4l,"i basically package libraries for importscripts. the lack of code splitting really fucks the cache system.

i have a class that can arbitrarily start webworkers, and extensible via modules",1.0
g12a4bu,i7ib4l,SharedArrayBuffers have been reenabled in recent Chrome and Firefox updates.,1.0
g12b0x0,i7ib4l,"Interesting, but I think it is still practical to consider deep thought into the ""RPC boundary"". The SharedArrayBuffer probably helps certain memory sharing but a lot of communication is probably still best achieved as essentially postMessage'ing across threads",1.0
g13uj09,i7ib4l,"The last point isn‚Äôt really true, Webpack has a plugin for web workers that creates the right bundles (worker-loader).",1.0
g13ctbv,i7ib4l,No shared memory means expensive data serialization. Pretty much kills the utility of web workers.,3.0
g13ay6y,i7ib4l,"The thing is, that sharing Data is expensive and you can only access the DOM from the main thread.

Since the ""Frameworks"" are nearly always frontend Frameworks, it's often more performant to stay on the main thread. This also differentiates them from Application Frameworks (I'd only have our internal Framework as an example) which does more than only UI and henceforth makes great use of workers for application logic.

Also: The overhead of sending Data across threads often is way less than you might expect.",2.0
g13ejkn,i7ib4l,"Unless you are doing heavy image processing for multiple images or advanced calculations, you really won't get any performance gains.",2.0
g1491sc,i7ib4l,"Most JS apps are I/O bound, and worker threads do nothing for you there.  In fact since they have to marshal data to and from the main thread, they're actually slower.  There's bleeding-edge support for shared memory buffers, but even then the synchronization overhead will outweigh the async approach.

Threads are great for compute-bound and sometimes for fully independent I/O operations like a full request/response cycle when the existing I/O scheduler isn't adequate (V8 uses libuv which is more than adequate).  For your average interactive app, they're overkill not just in cognitive load but actual overhead as well.",2.0
g14mxyd,i7ib4l,"What about for node backend servers, which are computation-heavy. Would there be a use case for it there?",1.0
g17s76g,i7ib4l,"Backends are typically even more I/O bound than the front end, since they don't have much if any DOM juggling or rendering to do.  If you have compute-heavy backend work, you're probably better off just auto-scaling new node instances as needed.",2.0
g14vii4,i7ib4l,"I tried moving all my logic for a ThreeJS scene into a webworker/offscreen canvas, but passing the data and result back and forth ended up being slower (strictly profiling FPS and dropped frames).

It would have been great if the worker had access to getUserMedia, or if the threads could have written to the same canvas, but ultimately there were just too many quirks to deal with. 

I'd guess it's a similar story for most folks.",2.0
g12c7hw,i7f35e,"&gt; Since render functions and class constructors shouldn‚Äôt have side effects (which is also important for server rendering), this should not pose any practical problems.

Alright folks, who's betting on some major website breaking because of this",40.0
g12z2uh,i7f35e,"I don't think a major website will just ""npm I react@latest"", build and then deploy without testing. 

But who knows. :D",11.0
g14cw89,i7f35e,I feel like doing this with one of our projects now just because I can..,3.0
g14e1kq,i7f35e,Do it.,2.0
g14e3ls,i7f35e,Do it.,2.0
g1579xs,i7f35e,Do it.,2.0
g12ehlw,i7f35e,The day of reckoning is coming.,2.0
g15eg8o,i7f35e,OMG.. they're getting rid of event pooling. That drove me mad when I first stumbled onto it haha.,4.0
g139jhn,i7f35e,"&gt; no event pooling

Thank God, it was so confusing",3.0
g125v28,i7di7w,"&gt; One of the best decisions in my developer career was to go beyond just using tools, I decided to create them.

I physically cringe when I talk to a junior dev who thinks they've invented the next React.  It's painful because they can't yet appreciate all the work that goes into a serious framework: they literally don't know what they don't know!

But what the OP is talking about *isn't* that.  And (as the article reminded me), building your own framework just to learn *is* a tremendous way to become ""less junior"".

Kudos to the OP for doing something hard to grow .... and then having the modesty to recognize that the real value wasn't in creating the next React ...  it was the knowledge gained.",181.0
g12a28g,i7di7w,"&gt; I physically cringe when I talk to a junior dev who thinks they've invented the next React.

Younger devs are often able to approach things in a way that us more seasoned devs would never think of because it sounds so strange and we get stuck in our ways. Usually they're misguided but sometimes they come up with something quite unique and interesting

1. Sebastian Mckenzie created what would become Babel as a highschooler. 
2. Dan Abramov was barely more than a Junior when he created Redux
3. I worked on a project with NASA JPL where an undergraduate intern invented a new algorithm we used in the processing of Mars Rover imagery",106.0
g12f7e2,i7di7w,"You illustrate how new blood's important. I think however older devs are needed to challenge young devs. The opportunity for young devs to be taught how ""X flamed out and Y failed miserably"" is what allows them to fast forward to discovering Z.",32.0
g15pht6,i7di7w,Interesting I've seen more of older devs fucking over younger devs by teaching them absolute shit. Truth is a lot of seniors don't really know what they are doing and they pass that down. Fortunately some younger devs have just enough arrogance to go against the grain!,6.0
g12fyz8,i7di7w,"This is a buddhist concept called shoshin or ""beginner's mind"" https://en.wikipedia.org/wiki/Shoshin#:~:text=Shoshin%20(%E5%88%9D%E5%BF%83)%20is%20a%20word,just%20as%20a%20beginner%20would.",27.0
g13uco0,i7di7w,I've read that Beginners Mind was actually an important element in the work of Albert Einstein.,5.0
g128vde,i7di7w,It's an important distinction. I dabble in making open source contributions when I find bugs in libraries I'm using. For less mature libraries I consider forking but then I realize the amount of work that goes into a well maintained library by the main contributors. I love diving deep into specific bits of code and improving things but I struggle to handle decisions for libraries as a whole. They're 2 very different mindsets.,13.0
g13tpg9,i7di7w,Not knowing what you don‚Äôt know should be the slogan of software development,8.0
g13lzah,i7di7w,"Always about the journey, not the destination.",5.0
g15afp8,i7di7w,Exactly!,2.0
g13ls0v,i7di7w,"I remember as a new university student and using Python, feeling annoyed that I was using these imported modules instead of writing my own, not knowing how hard and time consuming it would be to do so.   
Learning just how much I didn't know about them made me feel better about using them, but that urge to recreate the existing didn't come from making it ""better"" because I don't have that kind of arrogance. I just wanted to go through the motions. Figure out what worked and what didn't, and compare the results of my work with the results of the professionals. 

&amp;#x200B;

That said if someone said to me they were going to make ""instagram but better"", or something along those lines, I'd cringe too.",5.0
g13g7a3,i7di7w,"Ive made a few small engines for myself because while there were tools out there that did what I wanted to do none of them were small enough or up to date enough for our projects. But in doing so as you said i learned so so much I'm really happy I did that.

With that said i get super hype when a junior tries to reinvent the wheel, because it shows so much passion towards what they're working on, i'd rather work with someone like that than someone who goes ""we cant do this because engine said no"". Which i find a lot of senior devs do. Or juniors who are afraid to break something of course.",2.0
g18gjs2,i7di7w,"The biggest problem with Javascript frameworks is deciding whether the fact 20 new ones pop up every week shows how truly awful the established frameworks are (because why would so many people go through the PAIN of making their own) - or if it shows how truly amazing they are (because why would all those new frameworks quietly reclassify themselves from ""Production ready"" to ""Experimental but I really learned a lot ps is anyone hiring a react dev haha JK, or am I?"") (ps: I am not a react dev looking to be hired)",1.0
g1evc08,i7di7w,"I think that isn't about frameworks being awful. It's just imposter syndrome kicking in.

some people are more willing to write lots and lots of ""boilerplate"" without feeling like ""damn I just import these libs and I'm done do I suck at programming? I should be able to make this image compression algorithm all by myself"". If your imposter syndrome creeps up you start creating the library/framework.",1.0
g13h9ub,i7di7w,"I don't remember where I read it, but one of my favorite quotes is ""Innovation doesn't come from being brilliant, it comes from being the first one to do something stupid.""

When a junior is told that what they're doing is stupid, like trying to make the next React, they're probably going in the right direction.",-3.0
g11ul3v,i7di7w,What resources did you use to learn how to create your libraries?,32.0
g1214ia,i7di7w,"I‚Äôd love to hear your answer to this, OP. I‚Äôm also interested in getting a deeper understanding of the libraries I use.",19.0
g128xm5,i7di7w,"
Did a bit of research and found this github page it has a list of projects you can build. I just learned how to build a JSX renderer which is pretty awesome 

https://github.com/danistefanovic/build-your-own-x",44.0
g1a8t2f,i7di7w,Nice thanks for sharing. I‚Äôm bookmarking this.,2.0
g12r360,i7di7w,"Yes, I second this, that would be so helpful.",1.0
g12tcjn,i7di7w,Creating libraries on your own does not make you a senior. Your professional workflow and your ability to work in a team and share your knowledge does.,61.0
g12wl71,i7di7w,"This. Not doubting OPs skill at coding, but to be a senior you have to work with people, and excel at it.",20.0
g1345eu,i7di7w,could you give an example of what you mean with professional workflow?,5.0
g13lpap,i7di7w,"Being able to mentor junior devs. Being able to be ""wrong"" in front of the team and rolling with it. Setting up projects. Communicating value to stakeholders. Making estimates and budgets.",7.0
g13tros,i7di7w,"As a senior software engineer at Google, my responsibilities aren't necessarily just 'how awesome am i at coding' or 'what technology can i invent'. Being a senior engineer means you make the rest of the team around you more effective. Effectively, making your scope of influence extend further than just yourself.

I can only write and debug so much code in a day. But i can build up a team of people who can learn what i know and we can be much more effective together, even at the expense of my own individual technical contributions

The greatest responsibility i have in my role is leading the technical direction of my small team of engineers to complete our larger task. So the 'senior' part of my title generally comes down to strategizing and figuring out how to parallelize tasks and designs across my team. Doing constant risk assessment on wear our work is weak while doing cost/benefit analysis of OK'ing more work to strengthen and optimize a part of the system that isn't quite perfect.

There's other senior devs on my team, sometimes they aren't the greatest at working with new team members, but perhaps they're a fantastic individual contributor. Other junior devs may need more hand holding and have a longer ramp up phase, so I need to be mindful of the tasks i ask them to take on. Yet other devs are quite capable in some areas but weaker in others, so my task is to buttress those weaker areas so they can accomplish the larger task I've asked for them to do

What i find is that i end up with the strategy, risk points, and medium level details of all designs in the project in my head. I generally plan the strategy for hope to pipeline the development to keep everyone unblocked. However i don't get to be as hands on directly with the code as i once was. It's not management persay because it's still handling the engineering pieces, it's just one more step removed from living in the actual code.

A professional workflow goes into how to manage these details so everyone is clear on what happens when. Some people use various project management styles for that, but there's different ways to crack that egg.",5.0
g13p6jx,i7di7w,"I would say it's also about gathering details, asking questions, monitoring, logging, sometimes it's understanding how to limit your work/task, providing estimates, being a team player, understanding tech goals and mixing them with business goals, taking any tech idea and knowing how to push it in an organisation (some juniors will be like: we should use X and not understanding about the long-lasting impact and time to change to X).",1.0
g134xj1,i7di7w,Say it don‚Äôt spray it,-1.0
g13i02g,i7di7w,Lol I like this joke. I think people aren't getting it.,1.0
g15er7t,i7di7w,"You're right! But...

That's why I wrote in the title ""senior javascript developer"", not just developer.
This text is about hard skills.

Today I work as a team leader, and it is obvious that soft skills are more important and difficult to have than just ""programming skills"". 

So.. I wrote javascript in the title of the text.
I should have made that clear in the text. 

You are right to point this out. 
Thanks for the feedback :)",1.0
g13ri87,i7di7w,Does this imply that you can become a ‚ÄúSenior‚Äù without real-world business experience?,9.0
g15brgg,i7di7w,"No. This is how I improve my hard Skills, but the soft skills are important too! And these skills you improve working in / leadering teams (my current work).",1.0
g132p7w,i7di7w,"This is a terrible definition of a ""senior"" developer, which is much more than being able to write libraries.

Also, a parsec is a unit of measurement of distance, not time",26.0
g13v1va,i7di7w,"I mean the parsec thing is obviously a reference to Star Wars which famously got this wrong. But it isn‚Äôt wrong to make the reference.

Edit: I could be wrong and there‚Äôs some support for why Star Wars didn‚Äôt get this wrong here: https://starwars.fandom.com/wiki/Kessel_Run/Legends",5.0
g1426uj,i7di7w,Star Wars didn't get it wrong...,1.0
g14378s,i7di7w,"They did. The whole ""shorter route"" thing was a fan theory, that eventually became a retcon.",1.0
g146l9d,i7di7w,"What is your evidence of this? As far as I know, there's nothing in the film asserting it as a unit of time.",1.0
g147fxs,i7di7w,"Hey I googled this and you‚Äôre right, it‚Äôs ambiguous at best. Ultimately I think I believed them to be wrong because my intuition of Han Solo is that he‚Äôs a great pilot and not a great engineer/programmer/whatever, and so modifications would be mainly to the engine/hull/etc and not the Nav computer. Anyways I edited my original comment and linked the supporting info for you. Thanks for the correction",1.0
g13ps8p,i7di7w,"This actually hurts, like light-years at least this community should know.. 
üöÄ¬†Render your¬†front-end¬†in less than 12 parsecs.",-1.0
g127nzo,i7di7w,How long did it take to build each of these libraries?,4.0
g15d4as,i7di7w,1 month for each (average),1.0
g1a45x8,i7di7w,"I didn't say, but I meant hours wise.",1.0
g13g5ga,i7di7w,"Yeah good for you, bro.",3.0
g14nabv,i7di7w,"Kudos to OP but I cringe every time I hear ""X developer"" where X is a language or framework. Can't we just be developers? Why we have to be satisfied with one language and be ignorant of everything else?",3.0
g15e6b7,i7di7w,"Great point!
For that, I specify javascript.. because for you get the dev senior status.. you need a lot of Soft Skills beyond the language! Nice comment!",1.0
g12q435,i7di7w,"This is a brilliant idea. You get to read good projects, build good projects and also have a ready portfolio. Awesome!",2.0
g12lz07,i7di7w,This is so inspiring.,0.0
g12i1jm,i7di7w,You should become a collaborator dev in crypto project,-11.0
g1167nt,i7dbop,"Hey, I've created minimalist JSON mock server module, where all you have to do is to create a resource model, plus the amount of data you want to get and once you run it, it will generate simple CRUD API with mock data.

Planned features:

\- Custom endpoint creation (Can't decide if I should keep it plain simple and allow users to create them using CLI, or programmatically, OR both).",0.0
g11wro4,i7dbop,Why?,2.0
g11zu92,i7dbop,"Something like this is useful for when you‚Äôre doing frontend development but don‚Äôt want to make a backend yet. You just want to try and get data back from some endpoint with some mock data. 

Also, the practice for making a project like this doesn‚Äôt hurt, since it covers data object modeling, JSON manipulation, REST APIs, publishing to NPM, etc. OP now has a handy tool they can use for local development.",1.0
g1sa1k4,i7dbop,"It's interesting, i did a little tool to generate mocked data without the pain of deploying and stuff, you can check it here : https://fetchjson.com",0.0
g114pm7,i7d315,"This library is a result of years of working with AWS DynamoDB and overcoming underwater rocks, missing optimizations and hidden issues that are very hard to catch (like hanging SSL connections in 0.2% of cases).

Homepage - [https://93v.github.io/dynatron/](https://93v.github.io/dynatron/)

Github - [https://github.com/93v/dynatron](https://github.com/93v/dynatron)

NPM Package - [https://www.npmjs.com/package/dynatron](https://www.npmjs.com/package/dynatron)",1.0
g11n5e2,i7d315,"* You can install it like a usual npm package by running \`npm i dynatron\`
* It is primarily meant for node.js/server environments but can work equally will in browsers. To use it from the browser you will need to use the \`direct\` mode and provide the IAM credentials instead of the profile. More details in the Usage-&gt;Initialization section of the docs.
* Dynatron is a wrapper around the AWS SDK which aims to resolve the inconveniences that exist while using the low level API provided by the SDK. You always want to use Dynatron instead of the ""aws-sdk"" directly. Here are just a few reasons why:
   * Attribute Path parser - allows you to simply provide the attribute path string as you normally would do and you wouldn't need to worry about forming and managing ""Expression Attribute Names"".
   * Condition Expression builders - allow you to use functions with type checks and autocompletions provided by the IDEs, instead of trying to manage the AWS raw expression strings.
   * Sane defaults
   * Sane retries mechanism including for the cases when AWS SSL connections hang.
   * Best practices managing the connection pool with the AWS and retries.
   * Advanced type system for different request types.
   * Performance optimizations for scan operations.
   * Request type specific helper functions helping to create the request the fastest and the less error prone way possible.
   * Smart support for real world usages like counters increments/decrements, sets management, lists management.
   * Sane approach to the pagination with scans.
   * Batch operations for even more elements than the default batch limits of the SDK
   * Reliable and full support for transactional operations.
   * Very detailed examples and explanations of each function and feature
   * A growing list of advanced usage examples

and so on...",1.0
g10gjbd,i77t1d,Have you thought about nested widgets?,2.0
g10gttg,i77t1d,"Aside from the 15 seconds I just spent googling and the literal definition that pops up in my head (support for composing widgets within one another), not at all lol.   


Tell me more?",3.0
g10hlue,i77t1d,"That was exactly what I meant ‚Äî composition. The problem I had with this/your approach is that it is not really obvious how and when inicialization of the nested components should work. And also your React code must render already existing DOM hierarchy. For the second part I have a demo ‚Äî https://codesandbox.io/embed/domnode-stealing-react-component-yzheb

I have been thinking about this problem now and then and I haven‚Äôt really cracked it yet.",2.0
g10kkit,i77t1d,"&gt;https://codesandbox.io/embed/domnode-stealing-react-component-yzheb

Interesting. In your POC, it seems like rather than a widget within a widget, you're trying to steal a DOM node and inject it into your app? 

What's confusing to me at a quick glance, it's almost as if the ""steal"" happens upon rendering (via the Hydrate). So when clicking steal, i'm not necessarily stealing the DOM element. I'm putting it back?  


This is a pretty interesting thought exercise. Any idea of a real-world example maybe we can try to prototype at some point?",1.0
g2d28qu,i77t1d,"&gt;Interesting. In your POC, it seems like rather than a widget within a widget, you're trying to steal a DOM node and inject it into your app?

That is true.

&gt;What's confusing to me at a quick glance, it's almost as if the ""steal"" happens upon rendering (via the Hydrate).

Yes. React app renders and during render, it grabs DOM node siting outside the React app. It can also put it back.

&gt;Any idea of a real-world example maybe we can try to prototype at some point?

Modal window is a nice example. Lets have HTML like this:

    &lt;div data-modal&gt;
      &lt;div data-modal-content&gt;Content of the modal&lt;/div&gt;
    &lt;/div&gt;

On `data-modal` div you can initialize Modal react widget that will draw a frame and a close button. And now you have to inject `data-modal-content` div inside your react widget. In other words you have to steal it from existing hierarchy.

---

And now what if inside `data-modal-content` div is your reddit widget...?",1.0
g108ljp,i77t1d,"Been trying to write more lately, starting off with somewhat simpler topics, to get back into the habit.

The goal of this article is to walk you through how to create a widget that can be used by anyone, even a non developer. This is common practice and has been for years, for a number of different types of widgets. 

For example, if you ever read some of the more popular mainstream media blogs and see ""related content"" that points to a bunch of articles not on their site, that's a widget. In fact, if you're interested in knowing where those specifically come from, that particular widget is often a [taboola](https://go.taboola.com/drive_traffic) widget.

There are a tons of widgets scattered throughout the internet. The goal is to allow them to be embedded ""anywhere"", by ""anyone"". So the implementation often is as simple as the snippet below, which companies give to their customers, to allow them to use their widget:

```html
&lt;script src=""mywidget.js""&gt;&lt;/script&gt;
&lt;div class=""my-widget"" data-some-settings=""setting-value"" data-some-key=""my-key""&gt;&lt;/div&gt;
```

The article walks you through that process and how to go about creating a widget using react.",1.0
g123hq5,i77t1d,Have you looked at web components?  They have support for nesting.  They also have have their own styles so you don't have to worry about CSS collisions.  You could hook up your widget to render to the shadow DOM of a web component.,1.0
g10jjp1,i76wzt,"One of the complains of that article is the dev dependencies and their risks.

Dev dependencies aren't even installed when you install the dependency, they only matter when you checkout that repo for local building.

You only typically interact with the build files of a package, and those are the one you should review for security purposes.

The normal dependency tree of React is just 5 packages, not the 7000 packages they claim. Only an update in those 5 packages needs to be reviewed, not the 7000 packages they claim. (Really only an update in your direct dependencies tree needs to be reviewed, as other updates won't be downloaded automatically)

This article seems to be basing a lot of information on its incorrect assumption that dev dependencies are downloaded, and that you should review all source files, while it is more important to view the final build artifacts, as *NPM has no guarantees* that the released package is actually build using the linked source code.",3.0
g10n733,i76wzt,"&gt; Dev dependencies aren't even installed when you install the dependency, they only matter when you checkout that repo for local building.

According to the NPM documentation, `npm will download dependencies and devDependencies that are listed in package.json`. In this particular case, ignoring `devDependencies` means you're ignoring things that get dropped to disk, and possibly execute in your development environment. If your primary concern is the build artifacts, making sure your minifier doesn't *also* add a little something extra (re: malware) is vital!

&gt; You only typically interact with the build files of a package, and those are the one you should review for security purposes.

This may be true for the *end user* but it's not true for the developer. The resulting artifacts should be reviewed, but it is by no means the *only* thing you should be concerned with. As a matter of fact, there are several instances where [developers were targeted directly](https://gist.github.com/hzoo/51cb84afdc50b14bffa6c6dc49826b3e).

&gt; The normal dependency tree of React is just 5 packages, not the 7000 packages they claim.

The 7k claim is *not* total dependencies you can expect to download. It's the superset of all possible dependencies you might get when you account for semantic versioning (this includes `devDependencies`). The article clarifies this point immediately after the large graph.",2.0
g1008ev,i76808,"I think https://www.i18next.com/ is the simplest approach:

&gt; Most frameworks leave it to you how translations are being loaded. You are responsible to detect the user language, to load the translations and push them into the framework.
&gt; 
&gt; i18next takes care of these issue for you. We provide you with plugins to:
&gt; 
* detect the user language
* load the translations
* optionally cache the translations
* extention, by using post-processing - e.g. to enable sprintf support",9.0
g0zzvu5,i76808,"We used i18next at one of my previous jobs. It worked well for a large app and multiple large translation sets.

https://www.i18next.com/",3.0
g100za5,i76808,Thank you (and to /u/Darren1337) for mentioning that - it looks like it handles exactly the concerns I have with the namespaces feature.,1.0
g10smxg,i76808,"for Etherpad

we have translatewiki handling all translations.

we have a modified html10n for client side and render server site with templates.

languages are just JSON blobs.

if your project is open source perhaps look to translatewiki.",1.0
g10u4cw,i76808,"Check https://Translationhut.com, disclaimer : I work on the project.

It has a simple api for downloading the latest translations, and posting new translations. 

You select which languages, create asset ids (eg homepage.header.title) and then start translating.

If also has some useful features like translation history, comments and automated translations. 

any feedback or feature requests are welcome.",1.0
g10mpj0,i75qqd,So it's still a synchronous step right? Blocks the main thread? I guess that's a good reason for it to be 2x the speed of JSON.parse,2.0
g10o163,i75qqd,"Since it's a native library, it should be able to be async and run on a separate thread.",3.0
g10ojoy,i75qqd,"There's no threading in JavaScript (except web workers, but you need JSON for that).

Promises (and thus async) just runs on the next tick/when the main thread isn't busy. The c code would need to support call backs and run in a different thread or use libevent itself 

Unless I misunderstand how external code gets run, bit I'm pretty sure it's blocking by default",-4.0
g10tisl,i75qqd,Native extensions can run asynchronously using a separate thread in the libuv thread pool.,8.0
g113yw8,i75qqd,Then why does JSON.parse block? Maybe because it's not a callback? All I know is it blocks all other activities,2.0
g11juh1,i75qqd,"What he is saying is that packages that call into native code can do so asynchronously, without blocking the main thread. JSON.parse is not a package but rather a standardized global function included by V8. It being standard means it has to follow all the rules of the ECMA spec which says that the function must be ran on the main thread.",1.0
g11q2n2,i75qqd,cool! how is that done?,1.0
g11t2eb,i75qqd,"for node, you use the [child process](https://nodejs.org/dist/latest-v14.x/docs/api/child_process.html) module to spawn new processes on other threads.

in the browser, you can use [web workers](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers) to run code in another thread. the [simple-web-worker](https://github.com/israelss/simple-web-worker) package is a favorite of mine, it makes it very easy to use web workers.

`JSON.parse` is part of the ECMAScript standard, it *has* to be synchronous to adhere to the spec. so you would need to just run `JSON.parse` in another thread yourself",2.0
g11ys2o,i75qqd,"So how would you get the results back into your process. Use the IPC and send? That's not really a thread or calling a third party library but would totally work.

I would imagine doing a fork would be way slower than parse could be. 

But my original question was why this library didn't have an async version with callbacks or something. Not why JSON.parse ran on the main thread",1.0
g11zvk2,i75qqd,"&gt; So how would you get the results back into your process. Use the IPC and send? That's not really a thread or calling a third party library but would totally work.

yeah for communicating w/the node child process you'd just send the data back via IPC. or for example I am handling tons of real-time data in node.js so I actually ended up running a local websocket server to communicate between processes, it was surprisingly much faster at passing around large blobs than IPC when benchmarked (but this is via Electron IPC so it may be a bit different than plain old node's IPC). you can use a number of ways to communicate between processes.

&gt; I would imagine doing a fork would be way slower than parse could be.

for web workers in the browser, that simple-web-worker library provides a way to create a reusable web worker so that you can avoid the setup and teardown process. I ran into a situation parsing real-time data where I was creating a new worker every 50ms or so and it became a bottleneck, after creating a reusable worker it was blazing fast

&gt; But my original question was why this library didn't have an async version with callbacks or something. Not why JSON.parse ran on the main thread

At the end of the day it makes sense for a library like this to just provide itself as a sync, blocking behavior and then let you decide if/how you want to deal w/threading. making the library async would just be wrapping it with a web worker or child process anyways, and now you can decide exactly how you want to do it. do you want a limit to how many threads it can utilize? do you want previous threads to stop working if a newer one starts? the library dev doesn't know your specific use case so instead they focus on the one problem they're trying to solve, which is fast JSON parsing",1.0
_,i75qqd,,
g0zxcum,i75k8t,Cool!,4.0
g10cba6,i75k8t,Gnarly.,2.0
g10m0yp,i75k8t,"Does it only show ""x vulns"" or can it display low, medium, high, critical?",2.0
g10pu7b,i75k8t,"For the sake of signal to noise ratio being low it only shows on the side of the package the number, but if you click on ""Learn about vulnerability"" or get a token and then expand the learn more it will show you detailed view.",4.0
g10751j,i75k8t,Love it!,2.0
g0zvxmk,i753o3,"&gt;Finally, is JS a comfortable language for this?

JS is fine for this, but it can be achieved in any language really. Depends more on what you want to use/learn than anything else.",4.0
g100d17,i753o3,"&gt;thoughts?

Why?

(I meant that as a serious question, not a joke/insult. It's just ... I didn't think people still used IRC?)",3.0
g1012pc,i753o3,"I can't speak for the OP but an IRC bot / client can be really good to learn how to implement a parser to a documented standard, involves networking / IO, event / message handling, is interactive, and can tie into any other technology you like. 

It's probably not about chatting with people considering they are on reddit.",6.0
g10sj2p,i753o3,"As u/stop-asking-me-stuff has correctly mentioned, it's more for learning than for functionality. I originally thought of the idea when I saw that Arch had IRC. I'm a Gentoo user but like tuning into Arch conversations, so I hunted for an IRC client that worked and looked aesthetically alright. Couldn't find one :)",2.0
g10t3ps,i753o3,"Gotcha.  Like I said I was legit curious: the last time I used IRC it was over a decade ago, and even then it wasn't actually to use it properly (ie. to chat): someone had setup a bot server on it (this was in the days before bit torrent).",2.0
g10p6s5,i753o3,"I mean go nuts of it helps you learn things.

The lounge is a pretty good JavaScript based IRC client. Has a node backend that stays connected.

I would recommend focusing on one part. Do the UI or server parsing not both, at least not to start. IRC protocol is old and often differs between servers in subtle ways. There's lots of API libraries out there.

Edit 

Hubot is decent if you want to make a bot",2.0
g10tr8n,i753o3,"Wow The Lounge looks like an interesting one, a lot of features catching my eye there -- link previews, etc. 

Yeah I get that I need to do one then the other, I'll obviously be working on the backend and then touch-up the frontend :)

I see that IRC protocol is old, which is something that attracts me alot. As for api libraries, I'll have to do some research!

Thanks for the advice, and cheers!",1.0
g113v5r,i753o3,They are always looking for help and working with others is always a learning experience too,2.0
g1062ze,i753o3,[deleted],1.0
g10phga,i753o3,"""I'm trying to figure out how to water my garden"" ""why don't you just pave over it instead""

I mean it's totally an option, but op talked about IRC client (user) and you suggested discord bot. It's not exactly the same thing or problem",2.0
g10sqys,i753o3,"Yeah, thanks but I tend to side with u/halkeye, even if I hadn't ever made a Discord bot it's still weird to recommend something like that, especially since they're both very different :).",1.0
g0zrxie,i71w38,"No such thing as serverless, just other peoples vendor-locked servers.",2.0
g0z6zil,i71dfu,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g0zgwa7,i701o0,"Ooh, this looks very similar to the idea behind a short story I wrote recently: [Kyral](https://thingsinjars.com/lab/kyral/)

(Bonus, the Story also includes some web audio API toys to create a dynamic soundtrack based on where the reader is)

Very nice. Will have to play with this.",0.0
g0zemxp,i701o0,"Looks awesome. Definitely relevant to my interests!

Passing the name of a ugen makes me feel a little itchy, though. Would it make more sense to pass an actual ugen object? Like dependency injection?

```
flock.synth({
    synthDef: {
        id: ""carrier"",
        ugen: Saw,
        freq: 440,
        mul: {
            id: ""mod"",
            ugen: SinOsc,
            freq: 115.0,
            mul: 0.25
        }
    }
});
```

If you need it to be serialisable, you could implement `.toString` on those ugen classes.",1.0
g0xu6dq,i6t38x,Looks sweet! What's the difference between this and Postman?,1.0
g11ju2j,i6t38x,The tester module is very similar to postman but the API designer is something postman doesn't have. Also ability to build tests right from the response is handy.,2.0
g0z6dml,i6oq03,"To me it seems like you hit the io threads limit in nodejs. With slower disk it might not matter but I think for faster disks it can make some difference.  By default UV_THREADPOOL_SIZE is 4, maybe increase it and see if it makes difference. See https://stackoverflow.com/questions/29404784/how-nodejss-internal-threadpool-works-exactly#29472222",6.0
g0z6sps,i6oq03,"Since thread pool size is 4, I'd expect to see a clear breaking point at 4 concurrent tasks. But the breaking point is at 2. It seems like  we hit disk queue limit (1 request at a time) before we hit UV\_THREADPOOL\_SIZE limit.",1.0
g0xq7p4,i6oq03,"That is a really helpful article! I'm working on a project that is disk read intensive and that will save me a lot of time benchmarking these things! 

One way to improve parallelism on a server would probably be using multiples SSD mirrored with RSYNC, maybe this would give faster disk IO?

I wonder how the Linux drive kernel would manage that.",2.0
g0z8jad,i6oq03,"I'd imagine it would depend on hardware and use case

HDD will benefit from having sequential reads done in serial. But in general, I doubt the files will be sequential. You'd need to have some lower level layer to manage this. I dont think it's possible, or practical to implement in node.

SSDs will benefit always from parallel.

So, pretty safe to say parallel should be better, and this gives some evidence for that.",2.0
g14rsme,i6oq03,"Here's a better writeup about the way SSD can perform parallel reads:  
[https://www.quora.com/?activity\_story=5686790](https://www.quora.com/?activity_story=5686790)  


I still don't get that on my machine, though, no matter how many tasks is queued up. So something is serializing disk access somewhere down the line.",1.0
g0xyahl,i6m0h5,"Pretty solid article, thanks. I‚Äôve been using styled components as my css flavor of choice (via emotion) for a couple of years now and I do think they‚Äôre the most scalable solution I‚Äôve used so far",5.0
g0wj95l,i6lfbe,"Tltr: the article starts bashing React and React development as too complex, then tries to sell unfinished abstraction on top of React. In the ideal scenario, everyone is praising the author and they become a popular celebrity in the world of React.",8.0
g0wqk8i,i6lfbe,It sometimes feels like this most important part of React is the possibility of becoming famous for blogging about React.,3.0
g0wkpqf,i6lfbe,"I want to clarify that I'm not criticizing React, it's already excellent and I love it. 

But it's still just a UI library, and the React community has evolved over the years, so could we also be thinking more about it. Complexity dictates whether we can consider an attempt at an enterprise-level framework based on it.",-3.0
g0wzt2m,i6lfbe,That's quite an attempt at tech-necromancy to bring back OOP into a domain where people learned not to rely on it to solve anything.,3.0
g0wci2n,i6kxlj,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g0wdnz2,i6kxlj,Thanks bot. I've added them ;),1.0
g0wdk59,i6jnbc,Wasn‚Äôt expecting it to work so well on mobile. Great job,55.0
g0wdoka,i6jnbc,Thank you!,12.0
g0z751h,i6jnbc,"If you want an extra challenge: would be cool if the bot only reacted when seeing the player, and reacted according to the player's last seen position (instead of current position).

And if you still want an extra challenge, the next step would be the bot also taking into account the player's last seen velocity. So instead of running away from the last seen position, the bot could run away from a predicted position based on last seen position + last seen velocity.

These rules would still be relatively simple but result in complex enough behaviour to make things feel interesting.",3.0
g0z8jnw,i6jnbc,"Welcome, but you deserve it.....",2.0
g0wg68y,i6jnbc,"1 Star; dissatisfied could not catch bot üò° Bad product!

(Jk, super nice, especially the mobile support is awesome)",47.0
g0x8k8k,i6jnbc,1 star on github is the best you can do. Nice,13.0
g0xgzyg,i6jnbc,"Oh, you‚Äôre right :D Clever!",4.0
g0wg8ix,i6jnbc,Haha! Thanks :),1.0
g0wegt4,i6jnbc,"Implementation looks nice, but fun side looks like it will always end up cycling a block and you can never catch it?",28.0
g0weu7t,i6jnbc,"Yeah, it's not a sophisticated AI but it does the job, you'll never be able to catch it :)",11.0
g0wfih2,i6jnbc,"Aha, I see. I remember some small ""if/else wannabe IA"" algorithms I had to develop for college and they would always end with this similar behavior, but as you said, it gets the job done :)

Good job!",1.0
g0wgru9,i6jnbc,Momentum might make it possible,4.0
g0xornf,i6jnbc,"I feel like I could catch the bot, but I'll never know because my player keeps rolling backward and forward in place when given a command.",12.0
g0yyitp,i6jnbc,I'll fix that : ),1.0
g0zap0u,i6jnbc,Same,1.0
g0wh88x,i6jnbc,"Pretty awesome!
The player ball sometimes rolls backwards and then forwards when given a command",14.0
g0whz65,i6jnbc,"Thanks! I'm aware of that annoying little bug, will fix it :)",8.0
g0waz05,i6jnbc,haha very nice,4.0
g0xe0yy,i6jnbc,That is badass. You could make an interesting game if you had more complex maps where you have to catch the bot by strategically luring it into a trap or something.,3.0
g0xij58,i6jnbc,Thanks! I will definitely do an actual games in the future. At this point I'm just experimenting with some concepts &amp; algorithms and do POCs.,3.0
g0z8ch9,i6jnbc,Awesome job! Now put in fog of war and don't let the bot cheat :),3.0
g0z8feo,i6jnbc,Thanks you :),2.0
g0whmcz,i6jnbc,Super cool!!!,2.0
g0whxzi,i6jnbc,Thanks!,1.0
g0wndsn,i6jnbc,Awesome POC!,2.0
g0wnq82,i6jnbc,Thanks!,1.0
g0wsax8,i6jnbc,"Super cool, what's this built with?",2.0
g0wuqbj,i6jnbc,Thanks! I built this with my own 3D engine ROYGBIV: [https://github.com/oguzeroglu/ROYGBIV](https://github.com/oguzeroglu/ROYGBIV),3.0
g0wtf3t,i6jnbc,Awesome,2.0
g0wuqzh,i6jnbc,Thank you!,1.0
g0ydt7l,i6jnbc,"This is so exciting to play yet so frustrating when I can‚Äôt catch the bot. A great job on the UI!  Starred it!

Maybe it‚Äôs just me but I couldn‚Äôt find the styling details on GitHub. Any particular reason why you chose to not share it? Or maybe I‚Äôm just dumb and couldn‚Äôt find it.",2.0
g0yygp6,i6jnbc,"Thanks!  


We'll it's 100% WebGL, so there's no CSS and stuff, not much to share. I exported the game with my own game engine: [https://github.com/oguzeroglu/ROYGBIV](https://github.com/oguzeroglu/ROYGBIV). What's available is the game file, which is just a JSON file that you need to open with ROYGBIV to see the layouts.",2.0
g0yysz4,i6jnbc,Thanks for sharing the details. ROYGBIV seems like a really interesting project of yours. Keep up the good work!,2.0
g0z850c,i6jnbc,You have done a great job. Keep on,2.0
g0z8aqu,i6jnbc,Thank you!,1.0
g0z9372,i6jnbc,):-,1.0
g0zfda1,i6jnbc,"Very nice, but ball's inertia + not so precise controls prevents me from catching bot (I'm pretty sure with gained momentum it is possible).",2.0
g0zfqoq,i6jnbc,Thanks! I designed it in a way that you never catch the bot :),1.0
g0w3uc2,i6jnbc,"Project Page (?): https://github.com/oguzeroglu/kompute-demos-with-roygbiv

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
g0yvay5,i6jnbc,Amazing job with the website too!!!,1.0
g0yyhjx,i6jnbc,Thank you!,2.0
g0zlurw,i6jnbc,"I tried running it on a surface laptop through a dock (just don't...) and the frame rate was garbage.  It did point me to something that might be ""buggy""?  At the top it looks like there's a message being typed in based on the frame rate, but it seems to have a real time timeout on it so it would just say ""click on""/""click o""/""click on the"" over and over.",1.0
g0znof6,i6jnbc,"Hmm it's interesting. What do you mean by ""through a dock""? Also on which browser were you running this on?  


Thanks for the feedback!",1.0
g0zsn6s,i6jnbc,"Chrome.  The Surface has this [proprietary connector dock](https://compass-ssl.microsoft.com/assets/76/ca/76caab25-427f-429a-8abd-80deb45c7d2b.jpg?n=Microsoft_Surface_Dock_highlight1.jpg) that passes through displays and the built in graphics card (Intel Iris) is not good at driving two display through it so it performs like crap with 3D stuff.

e: better picture",2.0
g10mbkv,i6jnbc,Thanks for the context!,1.0
g0vzu36,i6ig0s,"Your understanding of the cause is incorrect!  

&gt; The package.json had helmet version listed as \^3.x.x, the leading carat symbol (i.e. \^) indicating that if a newer major version was available, npm would automatically install it without asking you. 

The NPM semver docs [1] state that using the carat **does not** result in updating major versions. 

&gt; \^1.2.3 := &gt;=1.2.3 &lt;2.0.0

It looks to be a simple case of upgrading to the latest (major) version without testing the implications. 

[1] https://docs.npmjs.com/misc/semver#caret-ranges-123-025-004

Edit: formatting.",18.0
g0w16ts,i6ig0s,"I would also also add (from their article) running npm install as part of CI is probably not a good approach either.  Using a lock file and using npm ci would be a safer alternative.

But your point about the ^ still stands as well.",10.0
g0w339q,i6ig0s,"This, to me, should be the real takeaway from the whole experience - make use of package.json and semver properly, don't install packages by running individual `npm install` commands. It's not a CSP problem, it's a build pipeline problem.",9.0
g0w264t,i6ig0s,Thank you for pointing out that glaring error. Yes you are correct. That is my memory gone bad. I have updated the article with due credit. Thanks!,6.0
g0w8g2h,i6ig0s,"You, good sir, are a man of Honour.",3.0
g0z8xa8,i6ig0s,"CSPs an added layer of security that helps to detect and mitigate certain types of attacks, including Cross-Site",1.0
g0w7aan,i6ig0s,"I agree with people asking to use package.json but there was a reason I didn't use it. Express.js dependencies would mix up with my frontend react deps and would unnecessary bloat up docker image. I need only selected npm packages for running my express app and adding them to package.json would add up tons of npm packages unnecessarily.

Open to how should I use package.json but prevent this bloat in my express docker.",0.0
g0w96qp,i6ig0s,"This is where `devDependencies` and then `npm prune --production` can help out. You'd keep `react` and other front-end dependencies only required for the ""build"" as `devDependencies`, install them, build everything, and then `npm prune --production` before publishing your Docker image.",6.0
g0x6uy4,i6ig0s,"This is what we do. Saves about 80-90% in our projects, so definitely worth looking into",1.0
g0wp7mk,i6ig0s,"A monorepo using Yarn workspaces or Lerna may be what you want, then you can have a package.json for each respectively.",3.0
g0wrn3w,i6ig0s,Sounds like an good idea. Seperate package.json is what I need exactly. But what about having a sub folder with its own package.json ?,1.0
g0x4nwd,i6ig0s,That's exactly how workspaces work: https://classic.yarnpkg.com/en/docs/workspaces/,1.0
g0yrm72,i6ig0s,Thanks I'll check it out.,1.0
g0v5tw3,i6e2lw,"To bypass the paywall, you can also view in incognito mode: [https://medium.com/@garrettvorce/angular-cleaner-code-5571f861865d](https://medium.com/@garrettvorce/angular-cleaner-code-5571f861865d)",2.0
g0ty2e9,i673yd,This was a pretty good read. Thanks.,3.0
g0ulzqm,i66l6x,I have wanted to make something like this for a long while after seeing swiftui first unveiled,2.0
g0v0weq,i66l6x,"Interesting translation, but Hyperscript has been around for a long time in JS and it's a lot less verbose.",1.0
g0vj5i4,i66l6x,Nice project ! The class oriented structure is interesting.,1.0
g0tfmh5,i6508v,"I‚Äôm extremely excited for the whole toolchain to be finished one day! Having spent a crazy amount of time configuring all the disparate tools with the same configuration (like supporting absolute imports) on many projects I‚Äôm really feeling that JS has outgrown its own ecosystem, but the toolchain patterns are fairly stable and ready to bring together into one tool.",76.0
g0u6137,i6508v,Rome wasn't built in a day.,157.0
g0uaxbt,i6508v,Have your up-vote.,13.0
g0v74g0,i6508v,"I think Deno took this hint as well. It comes with a test runner, formatter, and other tools built-in.",11.0
g0ub87a,i6508v,[deleted],-10.0
g0uci4j,i6508v,not always a viable option,6.0
g0uspus,i6508v,"Extremely ambitious project, and I love it.

Sebastian is right as Linters need parsers and other utils. And with entire toolchain in a single project, they can also easily change internals to use modern tools for eg: esbuild, vite etc",22.0
g0vqe2q,i6508v,"The project has and will always have no external dependencies, so they will never use esbuild or vite.",1.0
g0vte2o,i6508v,"Perhaps not, but they can surely take ideas from them. And as the core code will be shared, it will improve all the tools at once",4.0
g0vpcls,i6508v,"I've been following this for a while, and I'm still sceptical that a monolith is the _best_ way to do this.

One of the good things about having separate projects in separate repos is that it allows each piece to evolve its own ecosystem with its own contributor base, at its own rate. (OFC this can be a downside if the pieces evolve in a silo, as you end up solve the same problems in your own ways, and things can evolve in incompatible ways.)

Being smaller pieces of the ecosystem also means that the repo is a lot more approachable to new contributors, as they can very easily focus on a small slice of a piece of the ecosystem.

I feel like they could have some problems down the line in attracting new contributors, because the repo is already so massive, and it will only grow even larger as time moves on.

---

I also wonder here how much this project is actually learning from other projects, of if they are building things from scratch.

For example, ESLint has had years of learning and evolving its internals to get to where it is today. Similarly the rule authoring experience has evolved into a really pleasant experience such that pretty much anyone can understand the basics in minutes, and can create a well tested rule within an hour in many simple cases.

Looking at rule source, it looks like their rule authoring style is nothing like ESLint's selector style - instead more similar to TSLint walker style. IMO this is a real shame because the general consensus is that the walker style is not as nice as [ESLint's selectors](https://eslint.org/docs/developer-guide/selectors) style. Seb doesn't seem to agree with this sentiment though, so ü§∑‚Äç‚ôÇÔ∏è:

&gt; [Our API is just easier to use, and we've focused on setting up the tooling necessary to make writing them easy (although internally in our repo).](https://news.ycombinator.com/item?id=24096744)

On hackernews Seb also commented that rome's lint fixers were better because they:

&gt; [operate on an AST rather than insert strings like ESLint](https://news.ycombinator.com/item?id=24096744)

There are reasons that ESLint doesn't use an AST, namely: an AST only represents the **abstract** syntax of a program, meaning you don't encode things like parentheses, spaces and comments.  
A CST (concrete syntax tree) solves this problem, but it requires a formal spec of its own (which is a lot of work to spec out and maintain). Often strings are often just easy to work with than abstractly mapping code fixes to AST objects so that a generator can convert it back to source code.

As rome is intending to be a formatter too, they don't have as much need for a CST as eslint (and they don't need stylistic rules for that matter either) because the formatter takes care of that, so I am curious to see what some of the more complex fixers look like when implemented as pure AST transforms. I can see lots of simple ones in the repo (i.e. replace `==` with `===`) but I wonder what it looks like to do things like multi region fixes and replacements. For example - changing namespace access to be a named import (`import React from 'react'; React.useState()` =&gt; `import {useState} from 'react'; useState()`)

There's also a question of merging strategies - how the linter handles when multiple lint rules apply fixes to close / similar places. Diffing subtrees sounds like a harder problem to solve than overlapping string insertions? Unsure.

----

Certainly will be interesting to see how this evolves and the impact (if any) it has on the ecosystem.",16.0
g0ubs3i,i6508v,"&gt; All rules are enabled by default, and **cannot be disabled**. Suppressions can be used to hide specific lint errors.

Why?",30.0
g0ud9zg,i6508v,Haha `standard --fix` go brrrrrr.,27.0
g0ueu2m,i6508v,This is basically me when I finally stopped trying to fight the opinions of Prettier and just go with it.,21.0
g0veph8,i6508v,Funniest thing about the \`standard\` is that it's not a standard.,20.0
g1094tm,i6508v,It's also a godawful ruleset.,6.0
g0wxsv7,i6508v,Standard for my team. Pick the best tool for the current job; try and align projects and components over time. Some linting is better than no linting. Some tests are better than no tests. Some working user functionality is better than no working user functionality. Etc. As a team lead I'm not that opinionated; I just want to see my team think about how they're approaching quality. Automated solutions that require little to no thinking rate well.,1.0
g0xihr3,i6508v,I didn't say its bad. It's misleading,2.0
g0v75wc,i6508v,Sometimes I see python folks chilling with PEPs and wonder how such life could be like.,10.0
g0w3lxj,i6508v,Even in PHP land we have PSR2 and PSR12 (largely modelled on things like PEP8).,2.0
g0vy3os,i6508v,4-space indents. Variables declared outside of functions must be regarded as constants and should be all-caps. Every function must have a comment about what it's doing. I look at Python community with horror.,4.0
g0wjq4s,i6508v,"Globals are considered something to avoid in most languages. Personally I feel 4 space is much more readable than 2 space, especially as JS has moved past the pyramid callback model for async.

In general I much prefer rustfmt/pep8 style to what the JS community does.

Welcome to subjective tastes :)",1.0
g0udi04,i6508v,At a guess because configurable rules are usually just error suppression with fewer steps.,23.0
g0uxzve,i6508v,This is a hot take but I‚Äôm loving it,11.0
g0w3i5s,i6508v,"20 rules with on/off switches has 1048576 states.
20 rules that are on have 1.",6.0
g0znnh2,i6508v,"Wait, seriously? This is a deal-breaker for me if so. Most rules look pretty sane, but js/noShorthandArrayType, for example, is a pretty opinionated choice. I understand that Array&lt;T | (U &amp; V)&gt; is more readable for more complex types than (T | (U &amp; V))[], but in those cases you should probably just factor out the complex type and name it anyway. I prefer the [] style and would like to keep using it.",3.0
g0zrmk9,i6508v,[Yes.](https://romefrontend.dev/#linting) Last sentence of the rules paragraph.,1.0
g0vzmct,i6508v,Mainly because that's how things are done in company s like Facebook or Google.,5.0
g0w3pmt,i6508v,"Honestly I'm fine with it as long as the default is rational - is it going to match how I'd format things all the time, nah but then I *don't match myself all the time either* since I'm fallible and things drift over time.",1.0
g0tl5dj,i6508v,Rad. Can‚Äôt wait to give this a try.,10.0
g0v7s2z,i6508v,"Gonna wait a few more years until Rome is finally be the ""defacto"" javascript tooling, and I'm gonna love it to bits. I hate webpack so much. Configuring ES Lint/Prettier is tricky too",10.0
g0vrrl6,i6508v,Configuring eslint and prettier is very easy. Just needs a single plugin.,10.0
g0vq1gi,i6508v,"This 100%. I have to keep notes as to what combination of ESLint and Prettier dependencies work with what rules/extensions in code editors.

Oh, and have you tried working on an old project recently with ESLint/Prettier installed in VsCode? It's going to error out saying that the version installed is not supported.",2.0
g0viog4,i6508v,Sebastian (the maintainer and also creator of 5to6 (now Babel)) replied to a few comments on [the HN thread](https://news.ycombinator.com/item?id=24094377) for this. Username: sebastianmck,2.0
g0vrwz3,i6508v,"No thanks, I've had enough of Facebook.",6.0
g0w2zqq,i6508v,"From what I can tell, the initial author left Facebook and the project is being developed open source outside of FB",10.0
g0voop2,i6508v,"Deno already does almost everything Rome promises to do, or will soon be able to. As Deno is written in Rust rather than TypeScript it is going to be so much faster there will be no competition. Have a look at the linting benchmark: [https://github.com/denoland/deno\_lint#performance](https://github.com/denoland/deno_lint#performance)

Eslint = 12214 ms

Deno = 247 ms

I expect the results will be similar to Deno vs Rome for speed.

I agree with the idea of bringing all the ecosystem tools together, but I think it will be Deno that does that. Always good to have some competition though, good luck :)",4.0
g0xlvd2,i6508v,"Deno is nice, but it doesn't work for front end as far as I know while rome seems to be targeting that part of the market.",3.0
g0wof80,i6508v,Completely agree with this. Due to the speed of the Deno Linter it will be a far superior experience than other linter when it gets plugged into editors and IDEs,1.0
g0vb22o,i6508v,"&gt; Rome is not only linter, but also a compiler, bundler, test runner, and more, for JavaScript, TypeScript, HTML, JSON, Markdown, and CSS. We aim to unify the entire frontend development toolchain.

&gt; Rome is a monolithic tool containing functionality that has traditionally been separate tools in the frontend ecosystem. We call this a toolchain. It is not a collection of existing tools, but completely custom, built largely from scratch, contained entirely in a single package and codebase.

..... yep, that turns me *right* off.

Do one thing, and do it well.",3.0
g0vbd7s,i6508v,"From the same blog:

""Language tooling maintainers spend so much time working on the same things. Processing source code, whether it‚Äôs in a transpiler like Babel, linting it in ESLint, or bundling it in Webpack, is fundamentally the same problem with overlapping responsibilities and technical implementation.

A linter in the JavaScript ecosystem is exactly the same as a compiler. They both consume code, then produce compiled code and errors. What the compiled code is varies. In the case of a linter, the compiled code is formatted source code with automatic fixes applied. The more powerful your compilation infrastructure, the more theoretically powerful your linter could be. These commonalities extend to pretty much anything that involves language processing. We can build more powerful tools using a shared base that is easily adaptable.""",15.0
g0vgo9f,i6508v,"But eslint and babel currently both use the same parser. Espurna I think. Which produces an abstract source tree that any tool can use. The parser is where the similarities end. Linter is about user readable messaging while compiler produces machine readable code.

Also that doesn't explain why testing and docs gen being combined is a good thing.

Time will tell if this is good or not, but it feels like a huge project with few wins and will never be as good as promised.",11.0
g0vzfo3,i6508v,"Babel has its own parser, eslint uses espreema, prettier uses different parsers (babel is one), webpack uses a different parser (acorn).  


EDIT: I believe, via configuration, you can tell ESLint to use a different parser",6.0
g0xlqs6,i6508v,The point still stands that standardizing on a parser would probably be better than doing everything. They could at least have a rome-parser released separately that doesn't require the entire toolchain.,1.0
g0w11vo,i6508v,"Fully agree. However, it'd be nice, to have a toolchain that just works, and keeps working. I can't even remember how many times I completely replaced every tool in our project.",3.0
g0v4p0a,i6508v,"This suite reminds me of SnowPack, which I have just recently picked up and have been enjoying.  I'd like to know what SnowPack doesn't solve that this does.  


I think snowpack maybe does not include a linter, but that seems like a trivial change if so.",2.0
g0v9yfo,i6508v,"Everything on this list.

&gt; We plan on covering the following areas:

&gt; * Bundling
&gt; * Compiling
&gt; * Documentation Generation
&gt; * Formatting
&gt; * Linting
&gt; * Minification
&gt; * Testing
&gt; * Type Checking
&gt; * ‚Ä¶ and more",6.0
g0vb2ki,i6508v,It is very interesting project. Combined with real time linting that Assistant for VSCode provides it is a  game changer,2.0
g0vijxb,i6508v,"Although, I am happy with ESLint, But Rome sounds great.",1.0
g0vsz51,i6508v,The scale of this project seems intimidating to say the least. I am curious to see how it goes from here.,1.0
g0tn19n,i6508v,"&gt;Rome is designed to replace [Babel](https://babeljs.io/), [ESLint](https://eslint.org/), [Webpack](https://webpack.js.org/), [Prettier](https://prettier.io/), [Jest](https://jestjs.io/), and others.

that got a good chuckle out of me, dream on

Also [https://xkcd.com/927/](https://xkcd.com/927/)",-15.0
g0tqix2,i6508v,"The creator of Rome, Sebmck, was the creator of babel and yarn. This project is very much not a dream",57.0
g0u1day,i6508v,"I know who's behind it, that's why I'm baffled at the scope of this. He not only wants to replicate Babel, but ESLint, Webpack, Prettier and Jest (and others). He should know how much work something like Babel alone takes.... or not, since he stopped contributing to it in 2016. 

On top of that many many resources went into crafting those tools, they are open source, he could take advantage of them, nope, he wants to reinvent the wheel.

I could kinda see the point if he wanted to create open source alternatives but all the tools are already open source.

So, sorry if I'm not convinced that this is a reasonable project.",20.0
g0ul45c,i6508v,Those tools have way more in common than you would think. In some ways it doesn‚Äôt make sense that they‚Äôre separate. For many languages they‚Äôre not.,13.0
g0u99m3,i6508v,"I'm not sure why your being downvoted. Your not saying don't do it or the project shouldn't be done, just that your confused why it is being done.

I'm not sure how a complete rewrite of a lot of different tools into one big mega one will improve anything. But until it's done none of us will know either. Hopefully learnings get applied back to existing tools as well like yarn did for mom.",2.0
g0ukr5u,i6508v,"You‚Äôre*,
you‚Äôre*
and you‚Äôre*",-5.0
g0tom9n,i6508v,"I remember reading about this project quite a while ago, and it was being developed by Facebook. It seems that they've changed the organization and I don't know the details, but if Facebook is backing this, I believe they have the resources to maintain a project of this dimension.

**EDIT:** I believe this is the old GitHub repo, which is now being redirected to the new one: https://github.com/facebookexperimental/rome, I knew I wasn't crazy in thinking this was affiliated with FB at some point.",5.0
g0twukp,i6508v,There‚Äôs an entire history section in the blog post.,11.0
g0tphrh,i6508v,"To my understanding, this was always a personal project of Sebastian McKenzie, never an official FB thing.  He was working  at FB when he started it, left FB, and is continuing to work on it as a community project now.",15.0
g0w745y,i6508v,Fuck no to this; it already gives me the heebies that a Facebook project has become a go-to tool for web dev; expanding that to the whole FE stack is hard to see as anything other than Facebook attempting to get more control over the web. Harrrd pass.,0.0
g0x257z,i6508v,It's not a Facebook project anymore,6.0
g0v7nmd,i6508v,Jesus why?,-5.0
g0ui24n,i5znuj,This was done well!,2.0
g0uq44r,i5znuj,Thanks for posting this. I am someone that is learning React and I had difficulty with useEffect.,1.0
g0yrzf2,i5znuj,That's a really well written article. Using trivial component you have explained a lot. üôåüèºüëèüèºüëèüèºüëèüèº,1.0
g0su9he,i5znuj,A great article to make me happy I'm not working with React,-34.0
g0t5to4,i5znuj,No one cares. React is a really good JavaScript LIBRARY,16.0
g0t8zc3,i5znuj,"&gt;framework

Oh you've done it now!",5.0
g0t92lg,i5znuj,"Shit, fixed it",2.0
g0talkw,i5znuj,"The number of down votes shows otherwise... I mean the ""no one cares"" part",-16.0
g0wf237,i5znuj,"Downvotes: ""For content that does not contribute to the discussion""",1.0
g0tvf8h,i5znuj,"Bruh, you just went full retard",3.0
g0u0eo4,i5znuj,Good luck getting employed. üëè,1.0
g0ujtrn,i5znuj,"Same here. It hides all the complexities that wraps around all the underlying mechanism, but kind of makes it harder to use as well.

I think react is overly hyped and it's not good that it's the only thing that people use, as opposed to being one of many options.",-2.0
g0v6gzm,i5znuj,What year did you graduate from dunning kruger university?,0.0
g0snvl1,i5yayq,Learn about our design system with no visual examples of our design system.,86.0
g0t4eic,i5yayq,But they used fancy words that describe the capabilities for you!,11.0
g0t8fdx,i5yayq,https://explore.fast.design/,23.0
g0tagay,i5yayq,*site looks terrible on mobile.,86.0
g0teqm7,i5yayq,"Damn, it's so bad it's actually embarrassing",63.0
g0tgiuz,i5yayq,Site looks terrible in general tbh,18.0
g0u03u6,i5yayq,https://i.imgur.com/BQAOV9L.jpg,11.0
g0tft69,i5yayq,"At least it's fast. Wait, [no](https://i.imgur.com/0kpwif2.jpg).",20.0
g0tw8de,i5yayq,Wow you were not kidding... that is atrocious.,4.0
g0tzw7n,i5yayq,*site‚Äôs mostly unusable on mobile,3.0
g0ueidc,i5yayq,lmao also if you change the window size it breaks on desktop as well.,2.0
g0updx1,i5yayq,yikes....it's really bad,2.0
g0u6jfl,i5yayq,"Don't worry, it looks terrible on web too",1.0
g0to6vj,i5yayq,looks meh,1.0
g0ux43a,i5yayq,Wish I was a design system,2.0
g0v6mpc,i5yayq,"You can be a design system if you want to be a design system, Jimmy.",2.0
g0slh3h,i5yayq,Yet another intern project by ms that will go to dust soon.,60.0
g0t32z9,i5yayq,the technique is the same used in the discographic industry (edit: and the startup industry now that I think about it): throw spaghetti at the wall and see what sticks.,8.0
g0slgkz,i5yayq,I could have really done without the whole ‚ÄúThat‚Äôs FAST‚Äù thing.,45.0
g0sqfb5,i5yayq,Do you cringe when software is described like your grandma's cleaner's advertising? That's FAST,42.0
g0t207u,i5yayq,"I‚Äôd be okay with that if it was actually fast. I‚Äôm just flipping through the examples on my phone, and it‚Äôs a bunch of jittery fps examples. Every element I interact with seems to be running at maybe 20fps.",17.0
g0t407o,i5yayq,Maybe they're referring to time it takes to learn and develop an app with it. Or it's a joke. I don't know.,8.0
g0tbr5l,i5yayq,"They ran fine for me on iPhone X using Chrome.

Edit: saying I have an X wasn‚Äôt a humble brag or anything. It‚Äôs not the latest phone it‚Äôs 2 gens old with another gen coming in the fall. 

I was simply providing a data point for other users to dispute or corroborate and hopefully have others provide additional data points.",-4.0
g0tvemx,i5yayq,"Isn't iPhone X, like, the last iPhone launched? So it's new, right?

Let's see how fast it is on my Moto G 2013 with ViperOS.",7.0
g0tw556,i5yayq,Asking the real questions.,2.0
g0tx3qm,i5yayq,"No it came out in 2017. The flagships since then have been the Xs and 11 Pro. But yeah, the X is still pretty fast.",1.0
g0txqsy,i5yayq,"Uh... can't keep up with Apple nomenclature.  

Still, it's a new ass phone. The people who use those damn expensive phones are in Canada, US and Europe. The rest of the world uses shitty ass mobiles like mine.",1.0
g0tbnzu,i5yayq,I could almost guarantee you this copy went through a Marketing Dept that writes copy for your run-of-the-mill mom and pop customer-type and doesn‚Äôt write for devs much at all.,5.0
g0t3dsh,i5yayq,Just some marketing dweeb who used to code or something.,2.0
g0s9os7,i5yayq,"What am I looking at here? 

Is this Microsoft‚Äôs version of that thing Adobe released with accessibility helpers?

I‚Äôm on mobile so I can‚Äôt inspect the elements on the docs, but it just looks like they‚Äôre applying styles to custom elements in the accordion example?",22.0
g0scuq6,i5yayq,"As I read it, it is an abstraction on a Web Components library which follows web standards. As a developer looking to use this, you write and use *interfaces* for your framework and use-case. 

**Your components themselves can be used framework-agnostically,** permitting the sharing of components between organizational units using different frameworks.

Your design-focused devs can focus on the design, without having to worry about framework implementations.",18.0
g0sepag,i5yayq,"Got it, so it‚Äôs a framework-agonstic way of sharing web components. 

If I‚Äôm on the web components team, I make stuff in FAST and then a team using React and a team using Angular can easily import it into their codebase, use the theme provider, and it‚Äôll ‚Äújust work‚Äù since it‚Äôs more or less regular HTML/CSS.

That‚Äôs pretty cool.",18.0
g0tolaa,i5yayq,"Yeah that‚Äôs literally just what web components are. Not a cool new Microsoft idea. They are framework agnostic. 

This is just a moderately ugly web-component library...",4.0
g0sfmvr,i5yayq,[deleted],-5.0
g0sudoy,i5yayq,"They don't run on Firefox though. That's the goal here, all major browser support...

Though they probably mean modern lol",3.0
g0saxo2,i5yayq,Maybe just a standard library of components.,-4.0
g0t3vdd,i5yayq,The range slider is laggy on iOS.,6.0
g0u3qhc,i5yayq,Fast to abandon,5.0
g0sc7lf,i5yayq,"The world needs more components library, we need more quick UI templates for making to-do apps and youtube videos about it.

Css is far too complicated, let's abstract the heck out of it, why not add javascript YEAH, and shadow-dom, things.

/sarcasm",35.0
g0sthyd,i5yayq,[deleted],15.0
g0t055h,i5yayq,"If you‚Äôre the only dev or the project scale is small - fair enough. For a team, others would have have to understand your solution which is less likely to have extensive tests, documentation and a community that left a massive amount of searchable experience. Then, you‚Äôll have to organize your growing codebase in some way, so you‚Äôll end up picking a pattern or two which are the same patterns frameworks use, so you‚Äôll basically build your own bicycle. I strongly doubt the cost of that would be lower than picking something tried.",4.0
g0stulq,i5yayq,amen.,2.0
g0scbt8,i5yayq,five years from now CSS will look like assembly instructions to most people.,19.0
g0sq41l,i5yayq,"I‚Äôd argue as a hiring manager that in interviews I‚Äôve done over the past few years and the constant griping on HN and other boards about CSS and it‚Äôs complexity (while also not calling it a language), well, that moment‚Äôs already here somewhat.

It‚Äôs kinda depressing.",8.0
g0sin02,i5yayq,Well finally be respected by the real Devs then.,15.0
g0sdf5j,i5yayq,"Component libraries are implementations of ideas that either die in obscurity or advance the evolution of tools. It‚Äôs either that or jquery spaghetti for decades. 

Idk what you‚Äôve got against videos of todo apps. You have to pick an example feature. What would you propose?",6.0
g0shcn9,i5yayq,"My schtick is that it's always more of the same thing. Until there is a big paradigm shift like, browsers creating their own component libraries that users can decide to use instead of your custom components. This would make the web insanely fast, homogenous and progressive web apps would probably gain more adoption.

Think of a browser like an operating system that can run on any host OS. It would have it's own template system that implements all W3C rules.

The web could have access to the host OS drivers with your permission for example.

I digress, but yeah until then components are just going to be more of the same thing.",4.0
g0t102j,i5yayq,"Well, even if I didn‚Äôt disagree with your premise, this is out of devs‚Äô control, so it‚Äôs pretty much irrelevant to the discussion. 


As to it being more of the same thing, it is still a trial of ideas. Out of these, we end up with things like global sync state like redux/vuex/mobx, reactive event management like Rx, hooks, granular state like recoil, mutation-free assignment like in immer/vue, hooks, fiber etc etc.  All of these prepare the pad for another quality jump. It would be hard to disagree that the modern way of building apps is superior to jquery and extjs and even angular 1",3.0
g0svnj8,i5yayq,Why would you want the browser itself to implement components lol talk about feature creep.  A better idea is allowing native libraries that can be downloaded to the browser once and used on hundreds of websites which we basically have with caching of js.  Web assembly ought to push us the rest of the way there.,-1.0
g0wa8y8,i5yayq,Right. I never use any of this pre-built stuff.. I like doing all the CSS myself.,1.0
g0sjg6z,i5yayq,"I'm forced to use FluentUI on a project (because it's MS paying) and boy oh boy, I'd give anything to get to use material again. I think I'll be skipping this one too.",10.0
g0so59q,i5yayq,Why?,8.0
g0uu304,i5yayq,"So many reasons, I find more bugs daily. I'm in all of the teams channels and get nothing back. There is a complete lack of community support like there is for MUI. We wimd up saying ""well shit, we could just use X if we could use MUI, oh well I guess we'll just write it from scratch."" I've just had nothing but problems so far.",0.0
g0uvc7e,i5yayq,That's super disappointing. Appreciate the feedback though.,2.0
g0t10ud,i5yayq,"My only problem is that I really want them to hammer out all of their different UI things and make it really work in a cross platform way. I think they are merging Fabric and FluentUI now? So it‚Äôs getting closer in terms of desktop and web being the same. But then Xamarin Forms is still on its own shit because of native mobile controls. And don‚Äôt get my started on how sharded and horrible working with themes has been for me so far with Fabric... The React Office/Fabric/FluentUI components are pretty though, and I *think* my users really like them too. Strikes a nice balance between style and professionalism, while still being neutral/default feeling.",2.0
g0vbuoq,i5yayq,"I was tossing up between FluentUI and BaseWeb for a new project at work. Ended up going with BaseWeb and absolutely loving it, but I wasn‚Äôt sure If I made a mistake by not using something backed by a giant like MS. Kinda glad to see your comment if I‚Äôm honest. The thing that really pushed me away from Fluent was how styles are written.",2.0
g0w4vhw,i5yayq,"If I had $1 for every onRender (equivalent) we have in our code just because it can't do what we need it to do for UX or business reasons... I've never seen that with other libraries. Yes, it does work fine, and I'm sure some love it, just my anecdotal evidence. üòÅ",1.0
g0shqxq,i5yayq,"Why does Microsoft insist on using the ugliest :active styling? That thick square border on every component you click... it should be for keyboard navigation, not something you see on every click.",7.0
g0sr9w8,i5yayq,Because styling focused elements is important for accessibility,17.0
g0sv5y8,i5yayq,"If the user is using a mouse, you can assume the user can see the screen. For the tabs element, the entire tab changes color, which is all the visual you need. The :active is superfluous at that point.",-13.0
g0t0qr3,i5yayq,"&gt;you can assume the user can see the screen.

yeah sure, but can the user see the screen well?",7.0
g0t1vt2,i5yayq,The tab background color is far more visible than the border.,1.0
g0t4i1e,i5yayq,Microsoft is far too busy introducing raw pointer errors via C++ into their products to be concerned with something as pedestrian as UX.,-4.0
g0t6fqb,i5yayq," Reddit is just, a bunch of people complaining and laughing about everything, trying to be smart.",6.0
g0tg9p8,i5yayq,"Of course. Also, Micro$oft bad.",5.0
g137io9,i5yayq,I think we're past Micro$oft bad with how much they're giving to all of developer community now,1.0
g0scge7,i5yayq,"We need examples of how to use and what it‚Äôs used for. Hard to tell What I‚Äôm looking at without examples of these components.

Edit: the website has examples. From what I can see. It‚Äôs reusable components that work in any framework, like a very simple vuetifyjs but useable to more than just vue.",4.0
g0t448g,i5yayq,"yes, I feel like any component library should have embedded codesandbox examples like material-ui or at least a storybook.",3.0
g0scvz9,i5yayq,Docs are here: https://www.fast.design/,2.0
g0slr9u,i5yayq,"I like the MVP/MVVM/MVPVM structure being enforced, and not relying on VDOM reconciliation. They're using the traditional software structure of dirty flagging and drawing on demand. You don't need to reconcile VDOM if you always in charge of content change. Nothing should change without you knowing.

Personally, seems a bit complex in terms of architecture tree. Lots of class extensions and imports per component. Scalability becomes a question when you're loading so many classes in memory per object. Not to mention maintainability when it comes to implementing custom changes or tracking issues. For example their button, `fast-component/FastButton` extends `fast-foundation/Button` extends `fast-foundation/FormAssociated&lt;HTMLInputElement&gt;` extends `fast-element`. It's not bad, no. But it's definitely not something I'd call ""lightweight"" as they claim.",3.0
g0sdwcq,i5yayq,"This seems to be a competitor to the polymer project.

I know a lot of people just see this as another front end ui framework like react but something like this or the polymer project have the advantage of being built off standardized web components. There will be a lot less javascript code running in the background which should allow for smaller download sizes and faster code. Also you will be able to mix and match elements from different web components libraries without severe bloating like you would get if you tried to do a micro-frontend design with other front end frameworks like angular, react, or vue.

Information on web components: https://developer.mozilla.org/en-US/docs/Web/Web_Components",2.0
g0tbk0n,i5yayq,"Does anyone remember seasoned devs and designers having progressive enhancement arguments on Twitter and WHOLE ass conference talks about how JS was bad for ADA/508 compliance because some % of users will disable JS always?

I'm not really complaining... just seems like that time is gone and nobody gives a shit anymore. I kind of threw in the towel too unless a client is feeling extra spendy about adding extra layers to support for non js users. Javascript is just part of the deal or in many cases, the whole deal.",1.0
g0u5q0l,i5yayq,Server side rendering or statically rendered pages are still useful because the initial render will be faster.,1.0
g0th1ld,i5yayq,Wow those accordions are fugly. Who puts a minus sign on something that's collapsed?,1.0
g0u9ann,i5yayq,This is the least fast website I've seen in a long time.,1.0
g0ux4kt,i5yayq,We've gone from names like Svelte and Vue to **_fast_**,1.0
g0t6isk,i5yayq,It was FAST for me to decide I didn't buy into this.,1.0
g0t6axo,i5yayq,"Nice that's pretty cool. I knew Microsoft was going to do more to share its Fluent UI. 

Plus I think Web Components are going to get big in the next few years. 

Thanks for sharing üëç",1.0
g0vc3jy,i5yayq,"Haven‚Äôt web components been around for like 7 years, or more? What makes you think they will surge?",3.0
g0vy541,i5yayq,"I don't know about a surge, I kind of meant more of a bump. Or _maybe like_ a small hill üòÜ

Plus remember 7 years ago, jQuery was huge ü§£
And the idea of components hadn't really taken off in web development yet. At least not to the level it's at now.

Interchangeable and shareable components do kind of sound like the future. Plus I don't think the mobile tech was good enough to really consider needing that 7 years ago üëç",1.0
g0vorul,i5yayq,"In all the years the spec was around it hasn't managed to gain [any sort of relevant attraction](https://www.npmtrends.com/@stencil/core-vs-lit-element-vs-@polymer/polymer-vs-react-vs-vue-vs-@angular/core-vs-svelte), it has largely been dismissed by the web community and [latest surveys](https://tsh.io/state-of-frontend/#future-of-frontend) go as far as claiming that it will fade out completely over the next years. The only reason the spec is still talked about is last ditch efforts to keep it alive, it must cost Google et al millions annually to brute force the spec into the public eye. Thankfully vendors do not simply get to decide over high level abstractions.",1.0
g0sbubx,i5xtd7,"Update to my last post here. Still making progress in my TypeScript aquarium simulator. Still working out some bugs but we have automatic game saving now and the fish poop coins!

https://kyletryon.github.io/Splat-Labs-Aquarium/

Enjoy! Hopefully new features next week. I'll be sure to post each week there are updates to share",11.0
g0vldn1,i5xtd7,"The website is freaking out for me. The whole website is jumping up and down 10-15 times per second, and the main aquarium graphic is appearing and disappearing randomly every second.

Edit: This seems to happen only in my Reddit clients embedded browser.",2.0
g0vx8p0,i5xtd7,I've only so far tested this in chrome but I'm not totally surprised. It's not yet bundled but I think the real reason has something to do with a reload on resize function I use. Not sure if or why the Reddit browser is seemingly resizing the page,1.0
g148vbp,i5xtd7,this is also what happens in my mobile reddit browser...,1.0
g1ay7xn,i5xtd7,Pretty cool man! Entertained me now for 20 minutes :) . Awesome,1.0
g1qufbh,i5xtd7,Awesome :D Thank you very much!,1.0
g0s6lro,i5xtd7,"Not exactly ""fully"" created this week but I've refactored and opensourced one of my earlier projects to use WebXR with native SLAM, hit test and DOM overlay built on top of Threejs and React.

[Video](https://v.redd.it/bz6tw8f29ve51) and [Link to the github demo](https://luigimannoni.github.io/webxr-earthday/)

The original project used 8thwall because of project and cross browser requirements but I find the 8thwall SLAM tracking a bit clunky and ""jittery"".

Hence why I did wanted to do my own ""version"", with low poly assets for faster performance and using WebXR, I've stripped away most problematic (and not my own) stuff from the original project and put back in pieces, so please pardon the current lousy component structure.

Works only on mobile Chrome &gt;81 browsers (untested on iOS Chrome) 

[Source code here](https://github.com/luigimannoni/webxr-earthday)",3.0
g0t0f7p,i5xtd7,"Hi all,

I built a chrome extension that transcribes your Google Meet session into Google Doc.

https://thanesh.dev/meet-transcript

Feedback is appreciated!",3.0
g0thnev,i5xtd7,"Hi all,

I‚Äôm working on an improved particles.js version, with bug fixes and new features

tsParticles https://github.com/matteobruni/tsparticles 

And I created a real time object editor to create a tsParticles editor

Object-GUI https://github.com/matteobruni/object-gui",2.0
g0wyn1v,i5xtd7,"So I created a Telegram Trivia Bot recently using Telegraf node.js library, here's a blog that describes how I did it.
https://idiomaticprogrammers.com/post/telegram-trivia-bot/",2.0
g0s9mo9,i5xtd7,"Made this instagram clone. Still a wip, gonna revamp the design and add some quick fixes.
It was built with react &amp; firebase.

Link: [Insta-clone](https://insta-clone-7e90e.web.app/)
Haven't uploaded on GitHub will be uploading soon.",1.0
g0st50b,i5xtd7,"Made this self host-able reverse image search + text analysis node telegram bot with the help of google vision apis

[Repo link](https://github.com/varunwahi/pixB)",1.0
g0stdjg,i5xtd7,"Added new tailwind plugins to this :) 


https://tailwant.herokuapp.com/

Allows you to generate quickly tailwind css classes a couple of different ways for those without an npm build chain!",1.0
g0swop9,i5xtd7,"I completed a javascript challenge, ""First non-repeating letter"" 

https://pastebin.com/GfFGXy22",1.0
g112rxd,i5xtd7,Right leg man not right hand man. We had an argument about left hand and right hand dominance and left/right brain dominance. You told S that you use your left leg in soccer. You said that I wanted to learn how to use both hands because it would make me smart but that didn‚Äôt happen. You projected class dismissed on me with gifted. You don‚Äôt bottom top you do the other way around. You probably mentioned the left leg to seem smarter and that‚Äôs probably why you stood to the right brain left brain myth. Because you wanted to be a right cat.,1.0
g13flee,i5xtd7,"Hey, I've made `use-animation-presence` : a tiny React hook for animating components when they are mounted and unmounted. It:  

- Runs smoothly off main thread 

- Uses springs 

- Can chain (un)mounts (sync animation and render lifecycle) 

and more...  

Look for demos in README.


[https://github.com/jlkiri/use-animate-presence](https://github.com/jlkiri/use-animate-presence)",1.0
g14adp4,i5xtd7,"I made lightweight React component you that i can use to declare points, lines, ellipses, and polygons that will be rendered on the screen.

source:
https://github.com/mithi/bare-minimum-2d


this demo works best on the desktop
https://bare-minimum-2d.netlify.app/demo3
it looks okay on mobile but you cant interact with it properly. (it‚Äôs suppose to follow and spin according to the position of your cursor)",1.0
g0s7mdn,i5xqci,"When using Sonarqube back in the day, we had many false positive (factories leading to cyclomatic complexity warningd for instance) with our Js code so we used it only for backend java code.

Nowadays I feel like Eslint is doing a fine job enough. Am I missing something?",7.0
g0v58rb,i5twpm,Why are you spamming this in so many subs?,0.0
g0qz4ra,i5n9n5,"Is it a viable option for CPU demanding tasks? 
If i import lets say opencv to manipulate images, would it be competitive to native python?",8.0
g0r48u6,i5n9n5,It just calls python process via shell. So performance should be in par.,7.0
g0ra2gp,i5n9n5,"Yes performance should be the same. The real performance hit only happens during serialization/deserialization, so if you are for example passing a very large JavaScript dictionary as an argument to a python function, or you want to convert a pandas dataframe into a JavaScript list that would add some time. But for example if you are opening the image in openCV and saving it in openCV then you should be good. Also note that this is still experimental so tread carefully :)",4.0
g0rvvil,i5n9n5,"It is always exciting to see such projects. I'm curious though, what would be a good use case for it",1.0
g0s1d34,i5n9n5,I build something similar a while back to make an electron app to control a 6-axis robot arm. Some of the libraries were in Python and I didn‚Äôt find any good alternatives in JS (and it was too complex to just rewrite is all myself). So in the end I just called the Python functions from node. Worked like a charm.,3.0
g0ssxeh,i5n9n5,Makes perfect sense,3.0
g0q668i,i5mwgf,"Project Page (?): https://github.com/garrylachman/ElectroCRUD

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g138nxu,i5mwgf,"[https://medium.com/@say.what.xyz/electrocrud-2-7-1-is-here-37f52a80b00c](https://medium.com/@say.what.xyz/electrocrud-2-7-1-is-here-37f52a80b00c)

little more info",1.0
g0pmo6l,i5j3r1,"Having a DOM representation that isn't HTML and a model that isn't the DOM itself is undeniably powerful, and the results speak for themselves ...

... but: it feels like as you go further down the rabbit hole, you start reinventing more and more of React and Vue.  I know there's good reasons -- ones I agree with, even -- for not being tied to those, but I can't help but feel that the cure has become worse than the disease.

Excellent article nonetheless, even if we'll have to agree to disagree on the scope of things.  Ima still bookmark this to get ideas from. üëç",6.0
g0sejxx,i5j3r1,"I can't see any reason in 2020 NOT to use something like vue or react. I started with a small project for a piece of hardware (figured I can do it without a framework) and realized I started to reinvent the wheel, and waste hours. I had lots of events and polled api calls, so using old school JS would become an unmaintainable nightmare. 

Then I wrote it in vue in 30 min. Even included some helpers. Ended up being one page and a few templates.

There is some extra overhead with those products but even on embedded hardware and a 300 line web server it wasn't a problem in the least to use the compiled artifacts.",1.0
g0sge0n,i5j3r1,"I actually do lean toward using React or Vue (I have both in different projects), but I could see taking this approach for integrating with some existing legacy code.  It beats using jQuery at any rate.  Like I mentioned to the OP, I wouldn't take it nearly as far, but it's neat to see how far people will take impractical things.

I definitely wouldn't want to deal with complex events by hand and all the idiosyncrasies of the major browsers.  React's uniform event handling is a lifesaver there.",1.0
g0snu4w,i5j3r1,"Thanks for your input!

The reasons not to build on top of Angular, React or Vue are the 2 design goals:

1. All App related code and the framework runs inside a Worker (separate thread)
2. The ES8+ codebase needs to run directly inside the Browser (without any builds). This means that UI development happens outside of nodejs.

If you think about 1. a bit, you will realise that DOM events need to be de-coupled, since their handlers live inside the App Thread. This de-coupling allows us to extend Apps into multiple Browser Windows very easily (SharedWorkers) =&gt; multi screen Apps.

Design goal 2 requires to reinvent the wheel at more spots than I like to, which is unfortunate. Many libs rely on running in node, so they are not even using correct import statements (including file extensions). This concept might be too far ahead at this point.

This topic is not intended to start a library / framework discussion. Angular, React &amp; Vue have their use cases, so does neo.

Back to topic:

The easiest way to play with the vdom engine is most likely to run:

&gt;npx neo-app

Replace the dummy content with an own Component and play with different vdom markups and class configs.

For me, the ability to extend classes and dynamically modify the base class vdom was a life saver in many areas. Being in charge when to trigger vdom updates and what to update (or just don't use the engine at all) is incredibly powerful.

What I still want to add is an optional option to run the VDom Engine directly inside the App Worker, instead of the VDom Worker. In this case, the updates are no longer async. Meaning: the real DOM manipulations are still async, but you do get the new vnode back instantly, so there can not be any timing issues (triggering a new update before the new vnode of a different update  is in place).

I also want to add more support for data- attributes. The idea is, that they never need to get into the real dom, but are kept only inside the vdom instead. The reason is that reading operations on the real dom are just way slower than getting data directly in JS, especially in case we have the App Worker VS Main Thread separation.

I got 2 more questions on other channels, which I would like to address as well:

I got asked if it was possible to use the neo workers setup, but without the vdom engine and sticking to JSX and e.g. swift ui. In short: yes. For this, you most likely want to create an own version of component.Base (extending core.Base). You definitely want to use the default dom event de-coupling logic.

The 2nd one was: can we use web components crafted with ""whatever"" in neo or can we use neo components (e.g. the calendar once done or the helix) in our react / vue apps?

Using web components in neo is fairly easy, since you can just put in custom tag names into the JSON based vdom and assign properties as attributes.

The opposite direction is more complicated, since neo components live inside the app worker. you can not address them directly. This would require a new main thread addon and calls like:

    Neo.Main.addon.ExternalApi.changeConfig({
        id  : 'myCalendarId',
        path: 'weekComponent.timeaxis',
        name: 'dayNameFormat',
        value: 'short'
    });

Best regards, Tobias",1.0
g0pdql3,i5ifc7,"You do know HÃìÃøÃóÃôÃ¶EÕ≠ÃΩÃçÃãÃ¥ÕèÃ∏“âÃ∂Ã∫ ÃÇÃâÃîÃ¥Ã¢ÃïCÕ§ÃíÕêÕ≠ÕèÃ∏ÕôÃØOÃèÃ∏ÕÅÃóÕéÃ≥Ã≤Ã±MÕßÃöÕÑÃ¢ÕÄÃÆÕñÕáÕöÕôEÃâÕûÕúÕèÕûÃ∑ÕñÃùSÃêÃìÃöÃáÕõÕÖÕéÃñ
 because it's actually _impossible_ to parse XML or any other balanced structure with a regex, right?  You need a pushdown automaton for that, not a finite one.  In short, regexes can't count.",2.0
g0pdw5w,i5ifc7,"Yup, no doubt! But the article isn't actually about parsing XML with regex.",2.0
g0q3khe,i5ifc7,"Nice article! It's nice to see a way of parsing in a RegExp kind of way, but without the obtuse syntax. Well, I guess it's burned into most of our brains by now, but I really like seeing alternatives.

Still, you can add some sanity to the ""normal"" syntax too. Not sure if you've heard of [XRegExp](http://xregexp.com/), but it allows code-comments and indentation:

```javascript
// Using named capture and flag x (free-spacing and line comments)
date = XRegExp(`(?&lt;year&gt;  [0-9]{4} ) -?  # year
                (?&lt;month&gt; [0-9]{2} ) -?  # month
                (?&lt;day&gt;   [0-9]{2} )     # day`, 'x');

```

If you spend a lot of time writing RegExp's it's worth checking out.",1.0
g0p6jfz,i5e35x,"I don't see how hardcoding the dependency location in the import isn't way worse.

If npm isn't available/shouldn't be used (e.g. you're developing in china or want to use an internal mirror for compliance or to detect how fast versions are patched across your company) all I have to do  is
`npm set registry ""&lt;whatever you want&gt;""` or 
`yarn config set registry ""&lt;whatever you want&gt;""`

In fact I can even run a single yarn install with a custom registry from the command line.

Now I have to change every import in my codebase.

Am I missing something here?",33.0
g0ph9y8,i5e35x,"You're right and I share the same concern. I think someone will end up writing their own package manager  for Deno that lets you do things like use a more npm style import `import foo from 'foo-package'` which ends up mapping that package name to some URL, that would allow you to do things like point to a private registry. An on-premise, privately hosted package registry will be a requirement for a number of enterprise organisations.",21.0
g0qe68b,i5e35x,"Deno has sort of solved this with https://deno.land/manual/linking_to_external_code/import_maps

You would essentially treat this very similarly to a package.json dependencies. Unfortunately, it still has the problem that it doesn't support any semver style stuff.",5.0
g0rkze0,i5e35x,"It does support semver, it‚Äôs just a part of the url. This is an example of importing a specific react version:


https://docs.skypack.dev/lookup-urls/lookup-urls#lookup-by-package-version-range-semver

```
https://cdn.skypack.dev/react@16.13.1   // Matches react v16.13.1 
https://cdn.skypack.dev/react@~16.13.0  // Matches the latest react v16.13.x
https://cdn.skypack.dev/react@^16.13.0  // Matches the latest react v16.x 
```

Skypack is formerly Pika, and lets you use some npm packages in Deno. deno.land packages have the same syntax tho:


https://deno.land/x

```

The basic format of code URLs ishttps://deno.land/x/IDENTIFIER@VERSION/FILE_PATH. If you leave out the version it will be defaulted to the most recent version released for the module.
```",3.0
g0t8bps,i5e35x,"So what's the difference between deno.land/x and npm? deno.land/x is essentially a package registry and then uses the baked in package manager of deno. In practical terms, it winds up with the same exact ""centralized"" registry as you may want to leverage semver still, requiring the use of something like deno.land/x that ensures the immutability of the tag.",1.0
g0taj0d,i5e35x,"Ryan Dahl (creator of both node and deno) has a great talk on this here: https://youtu.be/M3BM9TB-8yA

Personally, the biggest factor to me is that it _isn‚Äôt_ centralized. If someone writes a typescript module and dumps it in github, you can import it directly from github, you don‚Äôt need it to be pushed up to a central repository. Skypack finds npm packages written in typescript and using modules, and makes them available from a CDN. deno.land/x is another CDN with a more rigorous file system setup. 



Relevant bits from 9:00-15:00, and 20:00-23:00.",1.0
g0povwq,i5e35x,"Given browsers are even implementing standardised import maps for native esm, yeah I'm certain someone will allow for maps in deno.

(Of course I guess the standard may have somewhat had its arm twisted by the existing practice from node... But that doesn't change the practical result)",1.0
g0pq2vf,i5e35x,"I wasn't aware, but that [sounds pretty damn cool](https://docs.google.com/document/d/1vFQzbmxg9ilpg8CT_P8roEYcpTfZ06Q5N4J9-ZQqqZo/edit)",2.0
g0pp7p7,i5e35x,"This is my fear. While I find JavaScript package resolution appallingly confusing (not the least because of all the different module schemes that are out there and their cryptic names - which one is ""CommonJS"" again? Node? Webpack? Who knows...), I don't really want to import a URL.

I feel like Maven, or Ruby's Bundler get it exactly right. (I don't understand wtf is going on with ""easy\_install pip"" so I can't speak to Python.)

The only thing that needs fixing is transitive dependency hell, and that might be more a developer mindset issue than anything else. (Why is webpack 1k+ dependencies? That is just so stupid I don't even know where to begin.)

I also want a package manager with a central cache and maximum re-use, not vendor-ed everything and maximal non re-use. Something like pnpm [https://pnpm.js.org/en/](https://pnpm.js.org/en/) So that **is one obvious good thing about deno.**",7.0
g0rmgbq,i5e35x,"Pretty sure yarn has pnp built in at this point. TBH I'm not sure how I feel.about some of these ""features"". Having to explicitly allow fs and or network access? No central repository of building blocks and things made from those blocks? No atomic libraries for any little thing?

TS native support for sound awesome though.",2.0
g0tx10e,i5e35x,"Isnt this just a matter of importing all your url dependencies to a dedicated file and export them each individually, so in you app file, you can just import whatever from this single dedicated file? Thats like a url-based package.json",1.0
g0tzk7u,i5e35x,"That is what deno is proposing, but I don't see how that actually solves my problem.

The problems I still have with this approach are:

1. It only works for direct dependencies.  
If I'm e.g. importing oaks, then oaks is still importing it's dependencies from github and deno.land and I can't overwrite that without having a custom import map that overwrite github.com and deno.land in addition to my deps.ts + whatever other registries some of my dependencies use
2. It actually changes the code.  
This means if my company develops an open source app but wants to use an internal registry for caching and analysis I have to use 2 deps.ts or use a public deps.ts and overwrite everything in there with a import map again
3. I can't easily change the registry for specific packages.  
Let's say a package is removed from github.com but still available on x.nest.land, since the latter is ‚Äûundeletable‚Äú.  
If somewhere in my dependency graph the package is loaded from github.com I can't simply overwrite the registry for that package from my package.json, but have to provide an import map again, which now all developers have to use and has to actually match that specific package, which is quite the pain.
4. This is a very personal thing but I prefer to read what package I'm actually importing over having from '/deps' everywhere.  
Especially in a world where there are 10 packages for every problem.


So overall I have to rely on an unstable feature, that isn't really made for that use case as soon as I want to influence something happening outside of my repository. Basically to me it looks like it introduces a regression compared to the existent system and I don't understand why.",1.0
g0ubxdr,i5e35x,"All of these are just a matter of laying another abstraction between the import statement and the actual url importing.

1.For third party modules, there will be a file of the dependency list for a module, and your app can gather the dependency lists of all modules you're using, it produces a set of URLs with no redundancy, and then this list of URLs will be used for the actual downloading. Deno's caching the downloads so you won't have to redownload the same things on every new project.

2. Modifying the registry address in your own app is simply a matter of changing a variable if the URLs are dynamically composed. (or maybe I misunderstood what you mean by ""overwrite an import map"")

3. Yes, you can't easily change the source registry in third party modules without modifying the source code. But that's more about github allowing people to just delete a module than anything. We should all just use a more stable registry that lays policy about people deleting their OS projects.

4. You are still importing your dependencies with their individual names, it's just from an intermediary file, sort of like the index.js in most module libraries.",1.0
g0ugnmv,i5e35x,"I think you misunderstood my use case or I misunderstood your proposed solution.

I _only_ want to download packages from a specific registry [read the internal of my company], thus guaranteeing not only a stable registry, but being able to ban specific packages, keep statistics about package use and used licenses and work around bans. 

You are correct that we should all use a more stable registry, but now I have to rely on 3rd party developers to do that and if projects like oak aren't doing it this has already failed.  

With overwriting using an import map I mean [this](https://deno.land/manual/linking_to_external_code/import_maps) feature.",1.0
g0orky3,i5e35x,"Yunno, it never even occurred to me until I read this title that Deno was an anagram of Node.  Yeah, I'm that dense sometimes.",98.0
g0pitlv,i5e35x,"For some reason, I really struggle with seeing anagrams.",10.0
g0pzgqg,i5e35x,I‚Äôm struggling with seeing you,-11.0
g0qopxz,i5e35x,"Wow: `""node"".split("""").sort().join("""") = ""deno""`",8.0
g0r98bl,i5e35x,"
    [...""NODE""].sort().join("""")",25.0
g0ra44b,i5e35x,"Huh, TIL. Neat.",3.0
g0rds5v,i5e35x,"Yes! But it's not exactly the same as `.split("""")` because the spread operator correctly handles non-BMP characters (emojis).

    &gt; const a = ""\u{1f955}\u{1f407}"";
    &gt; a.split("""")
    (4)¬†[""ÔøΩ"", ""ÔøΩ"", ""ÔøΩ"", ""ÔøΩ""]
    &gt; [...a]
    (2)¬†[""ü•ï"", ""üêá""]",16.0
g0rn714,i5e35x,"...but beware that combining characters are still treated as separate, which is where [string normalization](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize) and/or [grapheme segmentation](https://github.com/tc39/proposal-intl-segmenter) may come into play. Down the unicode rabbit hole you go.",6.0
g0s76td,i5e35x,"Wow, thank you!",1.0
g0rbqah,i5e35x,Spread operator is sweet.,2.0
g0ro7zq,i5e35x,string is a iterable?,1.0
g0qsskh,i5e35x,"NODE
DENO
ENDO
DONE",9.0
g0r2hji,i5e35x,[deleted],-13.0
g0rtwjv,i5e35x,Do you know what palindromes are??,3.0
g0omxmv,i5e35x,"&gt;Even if it was an independent organisation, a centralised dependency  place wherein projects are interdependent on each other‚Äôs existence is  not a good idea

You kind of just breeze right by this. Why is this not a good idea? If it's not a good idea, why do so many other languages implement package managers this way? In my opinion, the way deno handles package imports is probably one of its most controversial features.

Another thing that was annoying when I was checking it out was the lack of a config file. It doesn't give access to the filesystem and network by default, which is great, but I have to type out arguments in the command line every time I want to run it? Any word on if they're working on bringing in some type of package.json analogue?",64.0
g0oojra,i5e35x,"The javascript ecosystem being held up solely by npm, a private corporation, is undoubtedly a terrible idea. AFAIK pip and the like are maintained by a not for profit committee, like our ECMA. 

Also other languages have a less bad stdlib and often don't have to support 15 years of software updates so they don't ""need"" transient dep spaghetti like we do",51.0
g0ovag8,i5e35x,"Realistically, in the absence of npm, most people will probably import their code from GitHub repos - which is *exactly the same thing as relying on npm* from a corporate ownership standpoint.",23.0
g0pjga2,i5e35x,In the absence of npm I think a community replacement would appear overnight. NPM isn't particularly hard to replace and devs are notoriously (in a good way) known for abandoning projects that violate their trust with the open source community. It'd be BitKeeper all over again.,13.0
g0pl5on,i5e35x,"Sorry if I was unclear. I wasn't referring to npm being discontinued or needing a replacement. Just that Deno doesn't rely on it by default and allows direct importing of code by repo URL. I postulated that a new ecosystem would naturally form around GitHub dependencies instead of npm. In this scenario, Microsoft is still the nexus.",1.0
g0pt1lj,i5e35x,"Oh, but is that different than how npm lets you do it? https://docs.npmjs.com/files/package.json#git-urls-as-dependencies",3.0
g0q65ph,i5e35x,"I guess the main difference is that without npm there's no package.json and no default central registry, so devs need to provide a URL to import dependencies directly in the code.",1.0
g0qk3m0,i5e35x,package.json isn't npm specific though. It's become a standard for other package managers as well like yarn uses it too. Does DENO not use package.json files?,2.0
g0qni6u,i5e35x,It seems to use [deps.ts](https://deno.land/manual/linking_to_external_code) instead.,2.0
g0q78se,i5e35x,I don't know. Servers to run this code costs money. Storage costs money. It's not only coding the platform. Who's gonna pay for it? Donations? Then who's going to manage them? That's how you end up with yet another non-profit. Which wouldn't be half bad. But still not perfectly decentralized.,1.0
g0qkn9j,i5e35x,"Yes, having it managed by a non profit is still centralized, but is better than a private company. That's exactly how PyPi and RubyGems work. They're maintained by non profit groups that are funded through donations in the form of sponsorships from big companies.

https://pypi.org/sponsor/

https://blog.rubygems.org/2017/03/15/rubygems-funding.html

I don't know how a decentralized package repository would work, or how security would be done for that. I figure it's possible, but would be hard to do. I would imagine if NPM were to lose favor the replacement would be a centralized non-profit, not a decentralized network. Of course NPM is owned by GitHub which is owned by Microsoft, so if GitHub were to scorn the OSS community that would be really bad because there's a tremendous amount of resources that go into providing OSS services from that.",5.0
g0qdcaz,i5e35x,"GitHub has already taken over the potential role of npm, by what appears being compatible with npm https://github.com/features/packages",2.0
g0qsefa,i5e35x,"I mean, Github literally [owns](https://github.blog/2020-04-15-npm-has-joined-github/) NPM",5.0
g0r4ry8,i5e35x,"I know, but they are aiming in general be a central source for packages across multiple ecosystems.",1.0
g0owc8k,i5e35x,"2020 Microsoft is lightyears ahead of npm in terms of developer goodwill. I also think FOSS would step in to fill an npm void eventually, never underestimate the power of resum√© candy",3.0
g0p0snc,i5e35x,But Microsoft bought NPM,22.0
g0pjkes,i5e35x,"No, GitHub bought npm ;)",9.0
g0p1blu,i5e35x,Oh shit I missed that somehow. I still don't think a private corp should run the most popular registry but it's a little better at least,-1.0
g0ppl3i,i5e35x,"Guys, Microsoft owns GitHub",8.0
g0q623e,i5e35x,Ownershipception,6.0
g0opa9k,i5e35x,"&gt;The javascript ecosystem being held up solely by npm, a private corporation, is undoubtedly a terrible idea.

Oh I don't disagree with you on that point. The author of the article specifically said that it would be a terrible idea even if it was an independent organization, and I just don't agree with that. Was looking for some reasons why someone would feel that way.",19.0
g0oqfqg,i5e35x,I can see the appeal of 3 or so orgs maintaining registries so that one's values doesn't influence the entire ecosystem too much. Monopolies are rarely ideal,8.0
g0p5xbz,i5e35x,This is done with maven and it works perfectly fine. Monetizing npm was the problem from the getgo.,12.0
g0pfx7u,i5e35x,Single point of failure is very rarely the best option. Remember how much havoc the left-pad incident caused? Imagine if something drastic happened with NPM the company.,2.0
g0qn1cw,i5e35x,"I don't see how this solves that problem.

Let's take the left-pad you pointed out. Let's assume all of our software would've been written in deno instead, we would have somewhere deep in our dependency graph something like 

    import leftPad from 'https://raw.githubusercontent.com/left-pad/left-pad/v1.3.0/index.js'

Nothing would have prevented the author from deleting that and causing the same amount of havoc.

I feel like we now need to be worried about something happening to:

- npm
- yarnpkg
- github
- gitlab
- deno.land.x
- pika
- jspm
- random CDN that someone deep in your dependency tree used

The only thing I see trying to adress that issue is nestland, but even that seems to rely on https://x.nest.land and thus only removes the developer, not the company aspect.

The difference is that our company for example wasn't interrupted by left-pad at all, because we used an internal registry with an cache, which is now way harder, because we have to add _all_ registries in our dependency tree.

I feel like deno is currently not having the dependency-tree problem because it's new but doesn't address it in any way besides providing a better stdl.

_Please_ tell me I'm missing something.",10.0
g0q1sff,i5e35x,Good thing GitHub bought them so nothing drastic could happen to the company!,1.0
g0qjxoi,i5e35x,"RemindMe! 5 years

Let's see how this ages üòÖ",5.0
g0qwd27,i5e35x,"There is a 1 hour delay fetching comments.

I will be messaging you in 5 years on [**2025-08-07 23:50:23 UTC**](http://www.wolframalpha.com/input/?i=2025-08-07%2023:50:23%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/i5e35x/sortnode_deno/g0qjxoi/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fi5e35x%2Fsortnode_deno%2Fg0qjxoi%2F%5D%0A%0ARemindMe%21%202025-08-07%2023%3A50%3A23%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20i5e35x)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=RemindMeBot%20Feedback)|
|-|-|-|-|",2.0
g0orpql,i5e35x,"NPM should be more like CPAN: if a private company wants to host it, fine, but it should be trivial to mirror.  NPM's big enough that it might have to be partial mirrors, but that's doable.",4.0
g0ose18,i5e35x,"A lot of companies do mirror the registry (or parts of it) for their own purposes, unless I misunderstand you. There's very little incentive to make your mirror open, though.",17.0
g0ou0wd,i5e35x,"You understand me fine.  Though one barrier to running mirrors is, well, npm serves up a hell of a lot more traffic than CPAN ever did.  Still, there's companies out there with a generous streak and more bandwidth than god.",2.0
g0our9b,i5e35x,"Maybe a P2P solution. If it uses blockchain to track published versions and checksums, and machine learning to pre-emptively distribute packages in the swarm, I'm sure it could get venture capital...",5.0
g0ovhr6,i5e35x,"Could be as simple as a mirror that serves up magnet: links, with support in the client.  BT has a real latency problem though, it's really not designed to serve up lots of small files.  Maybe something like IPFS, though that's a tall order in this ancient yesteryear of 2020 ;)",1.0
g0p0ytu,i5e35x,"True, big dependency graphs could be a real problem, even if it's just one file per package. Dependencies could be bundled in to limit that, though it would lose the ""automatic compatible updates"" semantics of current clients and lead to a lot of unnecessary downloads when there's overlap. But this is getting out of my area of expertise. Thanks for the chat :)",1.0
g0ovk57,i5e35x,I thought Yarn is basically a mirror of NPM.  It pulls packages from its own endpoint. Pretty sure facebook only does that to gather statistics for themselves.,3.0
g0q9w1k,i5e35x,"- Yarn doesn't belong to Facebook
- The registry domain is a CNAME to npm, there isn't even a backend
- There is no stat aggregation, and there never was",10.0
g0p6aeq,i5e35x,"It's just an npm cli alternative, it still uses npm's registry afaik",3.0
g0p9hmy,i5e35x,"The data is still sourced from npm's registry. My understanding is that it gets proxied through different servers which also caches the data, so it's not a direct connection like NPM.",2.0
g0ow1kr,i5e35x,"Huh, I did not know that about Yarn, that's pretty nifty.  But yeah, FB is probably mining the data to correlate it with FB posts/likes, purchasing habits, toilet habits, sexual preferences etc.  Pardon me, my shiny crinkly hat is slipping ;P",2.0
g0owk57,i5e35x,"Data is valuable, no surprise there.",2.0
g0pj25c,i5e35x,"On the bright side, I don't think swapping out NPM is particularly hard. If they scorn the dev and open source community I think people would rapidly abandon it.",1.0
g0otelt,i5e35x,"&gt; I have to type out arguments in the command line every time I want to run it? 

Java's always made you do this (ok, forget $CLASSPATH exists) but it's still done ok nonetheless.  Even has several different package managers that more or less work together.  If you want a package.json, you need a wrapper of some flavor to process it and pass the right args.  You don't need Deno to do it for you.

Deno's ecosystem is still evolving.  Hopefully it doesn't make compromises as bad as node's, but the first step to that is not hardwiring behavior in.",6.0
g0p8cap,i5e35x,"Java is super verbose everywhere else too though, haha. I agree with not hardwiring behavior in, was just a minor annoyance having to scroll up on the command line to avoid typing out a huge line every time I want to run. I assume as deno gets more support IDEs will make this irrelevant.",7.0
g0ouxnl,i5e35x,Just because that is how we do it now does not make it a good idea.,7.0
g0p4ymp,i5e35x,"It doesn't _sound_ like a good idea to me, but as soon as I start to think of reasons why, I can only think of reasons that would also apply to the alternatives I can think of.",7.0
g0p5ka0,i5e35x,"&gt;&gt; Even if it was an independent organisation, a centralised dependency  place wherein projects are interdependent on each other‚Äôs existence is  not a good idea

&gt; You kind of just breeze right by this. Why is this not a good idea? If it's not a good idea, why do so many other languages implement package managers this way?

What other languages have their libraries hosted by a for-profit private entity? Intentionally nearly-nonexistant support for mirrors in the primary package management clients? Tons of near-useless one-line packages made primarily for CV padding (google John Schlinkert) and unfortunately used everywhere?

To address your actual question: Almost all package managers are decentralized, mirrors are used and the hosting is handled by multiple hosters, usually acting as sponsors.

&gt; In my opinion, the way deno handles package imports is probably one of its most controversial features.

But deep down if you're honest with yourself, it's only because it's different. As someone having to deal with Golang I'd even agree this is a pretty suboptimal way to host dependencies, but in reality Deno has mitigated pretty much all of issues in Go's way of doing it from the get go.",3.0
g0padlj,i5e35x,"Hmm..I‚Äôm totally with you on your point about a for-profit private entity centrally hosting libraries. I‚Äôm just saying the complete lack of a package manager is not desirable. The silly isEven type of packages are ridiculous, but I don‚Äôt really see how that relates. 

The few other languages that I work with all implement their package managers differently, but they exist, and I think that‚Äôs what I just don‚Äôt like about deno. Swift has Swift Packages and CocoaPods, rust has cargo, and c# has NuGet. If I want to use a library I just pull it down and have instant access to it. It just feels like I would have to implement my own package management on every project with deno. 

You may be right about it just being because it‚Äôs different. I don‚Äôt try to be ‚Äúthat guy‚Äù when it comes to new tech, but it‚Äôs just so foreign to me even as someone who uses multiple languages. I guess we‚Äôll see if it takes off!",3.0
g0pcdkz,i5e35x,"Actually, in practice, Deno behaves a lot like `cargo run` with packages declared in the code itself rather than in a separate spec file. I don't understand where you got the idea you need to implement a package manager. You import dependencies, and if they're not in your cache, they get downloaded for you automatically. It's that simple.

Also, C# and NuGet are a fairly recent development, i.e. history of C# being used without a package manager is certainly longer than it being used with one. It's not as foreign as you paint it to be, and not having a package manager for a language/runtime is certainly not a new thing. And by that I mean -- without any way of getting  the libraries other than you going somewhere, downloading them yourself, and unpacking them in the classpath or something. Which is certainly not the case with Deno.",2.0
g0qdm8j,i5e35x,"Rust has a dependencies file though, it is the manifest https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html",1.0
g0ruz01,i5e35x,"What I meant is ""..except that dependencies are declared in code"" by that. But the process is similar, dependencies not yet downloaded are automatically downloaded for you, just like with cargo run.",0.0
g0phlga,i5e35x,Isn't it `go get`?,2.0
g0phpnu,i5e35x,Good one.,2.0
g0pog90,i5e35x,"Hi. I'm Rohan. I wrote the article for my college club, GNU/Linux User's Group. I suggest you look at the JSConf video wherein Ryan announces deno. He abhors the very idea of a package.json. he wanted the user to give an absolute control wherein the control has to be given in a verbose way. 

Also about the part wherein I called it not such a good idea. deno cached dependencies once it's imported. What it signifies is that even if the cdn becomes defunct later on. Every machine which imported it before it went defunct, has it, ensuring that systems around the world running deno continue to do so. Also there might be a way to enable that cached code on other new systems

Note wherein I include them being 'interdependent' is a bad idea. If your nodejs application requires an npm package, and and it isn't there, or removed by the author (check out the internet for leftpadding) then all those places the code just breaks, as in most servers, when you restart a Node application, or update the code even a bit, an npm install is initiated, regardless of any new dependencies in package.json so your code will break, and you'll have to find another dependency or write that bit of code yourself. 

I hope this answers your question. And sorry for being too brief, had to stick to that 5 minute read tag. Peace!",3.0
g0qnvbk,i5e35x,"But Yarn already handled offline caching just fine a long time ago. There was very little reason to reinvent package management in a portability-hostile way. I think some of Deno‚Äôs ideas (security, typescript, dropping legacy) are interesting, but the package handling is ass-backwards compared to all other languages. There‚Äôs little-to-zero incentive to try out or use Deno because it‚Äôs arbitrarily walled itself off from existing packages and workflows.

Typescript didn‚Äôt become popular by blocking JS, it became popular because it allowed JS and TS to mix easily for conversion. There‚Äôs even multiple paths to using it (via the Typescript binary, or via Babel), and they dropped their own TSLint in favour of better ESLint integration. Typescript ‚Äúplays nice‚Äù with real world usage of JS.

I think in the long run, Deno is going to fail because it walls itself off from being a drop-in replacement for the Node binary.",5.0
g0qdtre,i5e35x,"&gt; removed by the author (check out the internet for leftpadding)

This hasn't been possible in at least a year now.",4.0
g0qief2,i5e35x,"There's nothing stopping someone from making a Deno running that has some sort of package.json with the config and will call Deno with the right arguments.

Maybe ""oned"", since that seems like the theme here.

I briefly considered taking the idea and running with it, but I have no intention of keeping it up.  So someone else can have it.",1.0
g0pgg3x,i5e35x,"&gt; I‚Äôm of course referring to Deno‚Äôs native support for Promises, which were ironically added in NodeJS in 2009, and subsequently revoked in 2010. Promises are the best abstraction for async/await working, and Ryan believes that it would have simplified things to a great extent and made NodeJS even better.

IIRC Node.js does have Promises doesn't it? Or am I missing something",13.0
g0s5pew,i5e35x,"It does and it's included on the global object. It doesn't technically support them as first class citizens in all parts of the standard library aka you may have to use the built in promisification utility (though the file system has a promise version and I don't know if others do too)

Tldr the article is wrong about promises and node in that it leaves out that they were put back in several years ago.",2.0
g0poo2j,i5e35x,[deleted],2.0
g0q5v9c,i5e35x,That‚Äôs just for easy promisification. If the thing is already a promise there‚Äôs no issue.,5.0
g0owokz,i5e35x,Uncaught exception: function sort not found. Please check your uri imports and make sure the package still exists as we don't maintain a bloody package manager.,34.0
g0potw1,i5e35x,Nice one. We just thought it'd fun as in deno is the alphabetically sorted version of node. Also that it aims to assist sort it's mistakes!,5.0
g0qdkf3,i5e35x,Great article. But damn the author needs to proofread. Even one of the code snippets has a typo.,7.0
g0ope43,i5e35x,Can DENO use Node.js packages?,5.0
g0osgoi,i5e35x,"As long as they're accessible through a URL.  Sites like unpkg can provide that.  Not the perfect solution, but Deno isn't building any implicit package resolving in like node does with node_modules; it's a problem strictly external to Deno.",7.0
g0oqngv,i5e35x,it can use git repositories directly.,8.0
g0osc0o,i5e35x,"As far as I understand, it looks like Deno would be able to run Node packages that do not rely on built-in modules. You would also need to manually import packages from `node_modules`.

They have a partially implemented Node compatibility layer at https://deno.land/std@0.63.0/node, so I imagine once the project is mature enough for production, the answer will be yes.",2.0
g0s6m4z,i5e35x,"For v1.0 will it be renamed to ""DONE""? :)",4.0
g0owfak,i5e35x,"In trying to figure out what problem DENO solves, the most likely answer is...

Ryan Dahl no longer had control over NodeJS, so he made something new.  It's very similar to how company founders make a new startup after their first company is purchased by a larger organization.  It reminds me of how [Meh.com](https://Meh.com) was created after [woot.com](https://woot.com) was purchased by Amazon.",19.0
g0p9hxf,i5e35x,"&gt; Ryan Dahl no longer had control over NodeJS, so he made something new.

Honestly, I think that's how tech companies are supposed to work.  Mosaic came out of NCSA, Netscape from Mosaic, Mozilla from Netscape.  Different reasons for each, but the fact that the talent moves on and innovates on the previous product is a big mover in the industry.",17.0
g0ozfst,i5e35x,"That doesn't seem to be how he's presenting it himself at least. Is there anything that you especially disagree with him saying? He's made a lot of points about what problems he's targeting, especially around dependency management. 

One thing I'm excited about is the native typescript support. They acknowledge that you could do that with node, but by making it the default suddenly I'm sure we're going to be seeing a lot more teams using typescript, which is a great thing alone.",10.0
g0qenjp,i5e35x,"What does native typescript support really mean that non-native can't do? I mean they are using swc from what I understand, which means they are still using a 3rd party tool to compile TS.",3.0
g0t97lt,i5e35x,"Reduces friction to adoption, I‚Äôd propose.",1.0
g0p9raa,i5e35x,"I would have preferred these changes integrated with Node, even if they are behind configuration options to maintain backward compatibility.  I don't see any benefit in fragmenting at this point.",3.0
g0pjgox,i5e35x,"If it's not backwards compatible (which many of the changes in DENO are fundamentally incompatible with how node works), then it's going to fragment.


There is no way around it really. It can happen with major versions of languages (see python 2 vs 3), it can happen with runtime features (remember the time period in node where some packages started requiring harmony mode?), and it will happen if someone decides to make an alternate runtime.


The reality is that progress means fragmentation.",4.0
g0qf1j7,i5e35x,"So is this just another io.js ""my own fork with blackjack and hookers"" type situation?",5.0
g0opl2t,i5e35x,"Youve totally mutated node btw, thanks for ruining the party for everyone",9.0
g0pwx23,i5e35x,`[...'node'].sort().join('')`,6.0
g0pnfgp,i5e35x,"So guys, do you think DENO will replace Node anytime soon? I‚Äôm asking because i think of starting to learn node but is it worth it or should i go straight for Deno. Would appreciate some honest answers. 

Thanks in advance",5.0
g0ppcjj,i5e35x,"It will take years tbh, if it ever happens. Deno still has to prove itself",23.0
g0pv3r2,i5e35x,"Just as a fun bet, I'd say it will fail.

- It isn't different enough
- It mostly solves problems that are already solved in other ways
- The package manager story is a total blunder

I'm hopeful it will succeed and will probably adopt it if they change their mind about packages though. Hell, I use Koa :)",21.0
g0pvtz9,i5e35x,I think it has to have some real raw performace boosts over nodejs to succeed.,13.0
g0qeeu0,i5e35x,"Yea, I think most people aren't running into significant enough problems to go to Deno, but if winds up being faster that would attract people as a nice upgrade path from node.",4.0
g0q8pyu,i5e35x,Maybe it will improve in the long term :?,3.0
g0q8nfs,i5e35x,"I see, thanks!",1.0
g0pzuy7,i5e35x,No,11.0
g0r2qxt,i5e35x,It won't,4.0
g0odn3w,i5duk0,"Always nice to look at data!

One sentence struck me as really odd though:

&gt; more people use React Context API and hooks (49.6%) than Redux (48.2%)

It seems to me a bit disingenuous to lump context and hooks together, especially given that modern usage of Redux with React *implies* using hooks, though it has nothing to do with context.",11.0
g0ox6pf,i5duk0,"Agreed, but everyone seems to conflate ""Context"", ""hooks"", and ""state management"" together (see yesterday's thread on that topic).  [As I tweeted yesterday](https://twitter.com/acemarke/status/1291467818496675842):

&gt; Can we please stop referring to React Context as a ""state management"" tool?
&gt; 
&gt; It's not.
&gt; 
&gt; Its only purpose is to make a single value available to a nested component tree, regardless of what that value is.
&gt;  
&gt;  It's up to you to ""manage"" what that value is yourself.

Anyway, the ""48% Redux usage"" [matches my own estimates from the last couple years](https://blog.isquaredsoftware.com/2019/03/presentation-state-of-redux/), although I'd be really curious to know what the breakdown on that is: production apps vs learner example repos, new apps vs existing codebases, etc.

I'd also have to disagree with the conclusion section where people think Redux will be ""dead"" in 3 years.  No argument that Redux has reached a peak in its usage and will decline over time. The React ecosystem has changed, many new options are available, and Redux isn't ""required"".  But, Redux will absolutely still be _around_ in 3 years (see: Cobol, Java, etc), it's just a question of whether it's still seen as a viable/preferred choice for starting new projects and how much it's taught to beginners.  

Also hard to say how stuff like React CM/Suspense will change that, as well as unforeseen new libs / tools coming out in the future.

Given the feedback I've gotten from folks using [our new official Redux Toolkit package](https://redux-toolkit.js.org) and how much they enjoy using it, I think that Redux will continue to be a tool of choice for a lot of people for a long time.  My totally unscientific guess is that Redux will stick at around 30-35% market share for the very-long term.",8.0
g0ozbnp,i5duk0,"Yeah, in ""real life"" every React developer I speak to is on board with Redux, at least to varying degrees. The only place I see people rebel against it is Reddit :)",3.0
g0sltyo,i5duk0,"Redux toolkit is a blessing. Plain old redux is very low level, which makes it flexible but too unopinionated. Redux-toolkit comes with batteries included and takes those decisions out of your table.

And if you really need to, you can use the super-flexible redux core to achieve whatever you want with it, while benefiting from batteries included.",2.0
g0sm0y1,i5duk0,"For example, if I need to, I'm sure I can add redux-saga to it for a use case or two.",1.0
g0r13xb,i5duk0,"&gt;It seems to me a bit disingenuous to lump context and hooks together

I don't think so. Context by itself does not provide a complete solution which is why people say ""context +hooks"" as the state management solution. It's hooks that provide the actual state management as context only changes the scope. 

Redux is now generally accessed by hooks but can be used without them and provides it's own state management independent of hooks.",1.0
g0osz76,i5duk0,WOW that's a shameles Dojo plug :O,3.0
g0p0fka,i5duk0,"Oh boy, the results of the popularity contest are in!  Who won prom king this year?  React again?  That guy fucks!",5.0
g0rd0f2,i5duk0,"The main thing is that each has a different use case. Some of them are given below.

React and Anglar actually want to achieve the same thing, but in different manner. React is more simplistic and famous because it's lightweight. However, the size grows only when you start using heavy packages such as Redux. In my opinion, both are generally used to build SPA or single page applications. This is because of their efficiency and won't lag or slow down your website even with a huge number of components.
Talking about VueJS, it's actually better than both of them in some way! First, it's not maintained by any company such as Facebook or Google. It's independence makes it popular to an extent. Talking about efficiency, Vue can get slow if your website becomes very very heavy. So, its recommended to use it to build only specific pages, like _posts_ in Reddit or the _payment_ page in Amazon, with it and others with another framework or just VanillaJS. You should use Vue if you're familiar to templates and React if you're familiar with JSX.

TLDR: Too long, didn't read?

Use React if you want to build a large scale application, but want the app to be lightweight. The same goes with Angular but use it only when size doesn't matter and you're good with TypeScript. Use VueJS to build specific pages such as only the _""post""_ or maybe _""payment""_ pages.

Something special?

Yeah, you can use Svelte and truest me its actually good!",-3.0
g0ua2xz,i5duk0,Not really sure what you are talking about when you say Vue can get slow when your website is very very heavy. Vue's performance is on par with react. So your statement about Vue getting slow on heavy pages would just as likely apply to react and angular. I feel like you made a lot of big generalizations in your comment.,1.0
g0ua841,i5duk0,I should also mention the vue's base bundle size is smaller than both react and angular.,1.0
g0mfifb,i51dz8,I'm so pumped for the much needed tuple upgrades. So many problems solved by that,27.0
g0mtbqx,i51dz8,"As excited as I am about all these cool new features, I sometimes wonder if the type system is getting a bit daunting for beginners. I mean it's a fully-blown meta programming language now, one that's much more complicated than JS itself.

I am personally okay with the sophistication and possibilities of the type system without actually using them all that often. I benefit from them via libraries. And it's nice to know that if I need to do something really tricky and clever, the type system probably can do it. But looking at it from the view of a newcomer it must seem like an overwhelming amount to learn.",67.0
g0o5ecv,i51dz8,"Typings are optional. Senior TS developers write more low-level code, driver extensions, libraries, etc. Junior TS (or js) devs simply consume these tools without shooting themselves in the foot with handy IDE hints.

We are writing a CMS solution that extends Mongoose capabilities and without Typescript, I have no idea how we would be able to maintain this library over time. 

TS is the special spice, we usually start coding without many definitions, and as the codebase becomes bigger or more complex, we start to add definitions, generics, etc.

Doing so forced us to hit the web and look for solutions. You can't really expect to learn TS without practical problems.",8.0
g0n6emr,i51dz8,I had this exact thought just a short while ago. I joined a new company that uses TypeScript and I know I'll master all this stuff but I feel bad for people new to the ecosystem. It's getting out of control lol,12.0
g0n9kvb,i51dz8,"It might seem daunting if you look at these abstract examples, but someone new to Typescript isn't going to dive straight into variadic tuple types. They'll most likely do a lot simpler stuff like create a User interface and a deleteUser function, as shown in the [beginners' section of the documentation.](https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html)",20.0
g0nl1z0,i51dz8,[deleted],11.0
g0p38r1,i51dz8,"But the new feature makes `concat` way easier than it used to be,

    type Arr = readonly any[];

    function concat&lt;T extends Arr, U extends Arr&gt;(arr1: T, arr2: U): [...T, ...U] {
      return [...arr1, ...arr2];
    }

The new variadic tuple type syntax mirrors the existing ECMAScript array spread syntax. This is the kind of thing I've probably tried to do in the past when it didn't work. This seems to me like a case where adding a feature makes TS more approachable, not less.",5.0
g0o2rj0,i51dz8,"&gt;I sometimes wonder if the type system is getting a bit daunting for beginners. I mean it's a fully-blown meta programming language now, one that's much more complicated than JS itself.

&amp;#x200B;

&gt;But looking at it from the view of a newcomer it must seem like an overwhelming amount to learn.

&amp;#x200B;

I don't understand this sentiment. Sure, a requirement to understand a type system presents more difficulties for beginners than the absence of such a requirement. Haskell may be a bit daunting for beginners, ditto Purescript, or maybe even Elm. But the point of a type system is not to be easy for beginners; it's to be able to correctly express what your programming language is capable of. Ultimately, it's to help you, an experienced programmer on a large project, be sufficiently confident that what your program is doing is correct.",6.0
g0o58ay,i51dz8,Experienced JS dev and typescript newbie here.   I'm making the red squiggly lines go away and that is the depth of my understanding,5.0
g0nsbqd,i51dz8,you don't need to know how to create these complex types to benefit from consuming a library from someone who does. It'll tell you that what you've written is wrong. A lot of the time though the error messages are just incomprehensible though and that's the main problem IMO,7.0
g0n2ntq,i51dz8,Beginner here. Very daunting indeed. Still having a hard time fully grasping it to actually implement it. Now with the new stuff.. I‚Äôm not sure when I‚Äôll actually be comfortable enough to use it.. if ever.,7.0
g0n7q0z,i51dz8,"Well I think it's fine to stick to the simpler features, especially as you're learning. I've seen really smart devs go down rabbit-holes trying to make perfect types. Perfect can be the enemy of good.",12.0
g0niv56,i51dz8,"I would say as a beginner, you shouldnt use TS as you will inevitably mix up concepts. While learning its really important to know where are the boundaries of the things you use. Thats why we started learning using simple text editors and not ide-s. Until you know what they do it's just confusing.",-8.0
g0o0vfc,i51dz8,I think he was meant beginner with TypeScript and not with programming in general.,3.0
g0n1e9s,i51dz8,Most definitely. I‚Äôd say even for more experienced JavaScript developers it‚Äôs a challenge,4.0
g0nssph,i51dz8,"It's still optional features of the language. Most of the advanced features have their simplified versions which are way easier to read when you come to a project source a few months later.

If you're not building libraries that will be used by a huge number of people you don't need these features, they help a lot people who benefit from the intelisense bulit in text editors o IDEs",3.0
g0njgwg,i51dz8,"The problem with it is if u don't enforce strong typing in TS, it quickly turns into JS when some of ur co-workers think it's a good idea to stick to pre es6 js. And when u have to fix a bug in this hellish mess of a code, good luck getting out of that quickly.",3.0
g0opbo0,i51dz8,"You can force types through compiler settings.

I'm curious how a half typed half mess is hellish, but a fully untyped mess would be any easier?",1.0
g0oqz5z,i51dz8,"&gt;I'm curious how a half typed half mess is hellish, but a fully untyped mess would be any easier?

Never said that.",1.0
g0osbh1,i51dz8,"Correct, but is that not what you meant, by extrapolating what you said?",1.0
g0osn2l,i51dz8,"No what I was saying that when we transitioned from JS to TS, some people in my team were still writing JS in TS despite given clear coding standard guidelines.

After this happened we had to put strict restrictions to stop this from happening.",1.0
g0otf4l,i51dz8,"Ah, I see. TS has really good type inferencing though, so even code that doesn't look typed has pretty good checks. The problem I've encountered is when people start to use ""any"". And putting a more strict restriction on the use of ""any"" becomes necessary, because it's tempting to some.",1.0
g0naiun,i51dz8,The only reason I'm bothering to learn it is because it's popping up in more code I read. I'm still not sure if the buy-in is worth it.,1.0
g0nh179,i51dz8,I‚Äôm not gonna lie as a beginner I just use typescript to catch errors during compile time I only really dabble with the type system If I really have to and it it is terribly confusing! But I want to get around to learning it eventually. It seems like a good stepping stone to eventually learning other statically types languages like C# (I think?),1.0
g0ni3mz,i51dz8,C#'s type system is simpler.,4.0
g0o2woz,i51dz8,"&gt; I am personally okay with the sophistication and possibilities of the type system without actually using them all that often.

It's becoming what C++ became: a *huge* language where you choose the ""subset"" you work with. This is bad because codebases will tend to look very different from each other.

I hope it doesn't happen.",1.0
g0olxs6,i51dz8,You're describing JavaScript more than anything else.,1.0
g0nzd8x,i51dz8,Depends on how one prefers to learn imo.,0.0
g0n0zsk,i51dz8,yes!,-2.0
g0mss9x,i51dz8,The initial load speed is impressive! Really excited to this new version,9.0
g0ngn1a,i51dz8,The website?,2.0
g0o5we2,i51dz8,"No, the initial project load",1.0
g0ne7qu,i51dz8,Will this be available immediately in Angular  when TypeScript 4.0 final is released or will something else need to be done ?,2.0
g0nmudp,i51dz8,"Angular is dying and the codebase is causing no ends of problems, and to top it off there is a lot of politics and toxicity. Upgrading to the latest TS is always lagging behind as a result.

https://dev.to/layzee/angular-struggles-in-2020-1po4",9.0
g0nh30d,i51dz8,"Won‚Äôt be available immediately. Their [roadmap](https://angular.io/guide/roadmap#support-typescript-40) isn‚Äôt clear on a timeline, either.",2.0
g0n3l9e,i51dz8,"&gt;so 4.0 is just the natural continuation from TypeScript 3.9.

That's not how semantic versioning works...",6.0
g0n4lj7,i51dz8,Typescript [doesn‚Äôt use](https://github.com/microsoft/TypeScript/issues/14116) semantic versioning.,35.0
g0n5t0k,i51dz8,"Interesting. Dumb, but interesting. In particular, thinking 4.0 comes after 3.9 sounds like a silly misconception more than anything else, and forces them to bump the major for every 10 minor updates, regardless of the ""marketing"" reasoning they give.",3.0
g0n7zet,i51dz8,Just think of it as version 40.,14.0
g0nc9uv,i51dz8,"The whole point of TypeScript is to make your code break on each new version.  Break in a good way. 

So semantic versioning is pointless for them given this.",9.0
g0oeo8a,i51dz8,"Is this comment in the example right?:

```
type Strings = [string, string];

type Numbers = number[];

// [string, string, ...Array&lt;number | boolean&gt;]

type Unbounded = [...Strings, ...Numbers, boolean];
```

Because the comment makes it look like Unbounded could have 

```
const maybe = ['a', 'b', 2, 3, true, false, 4, 5]
```

When it seems like the definition only wanted a Boolean at the end, not an array of Boolean or number at the end.

Edit: on mobile and I can't figure out the code snippet markup on the first bit, sorry",1.0
g0oygdn,i51dz8,"Yes, the it's intentional. There's really no way in the general case to distinguish between a series of unbounded elements and a single optional element at the end, so fixed elements ""bleed into"" earlier rest elements.",3.0
g0pip8z,i51dz8,"Ah that makes sense, I wasn't sure if that's what the text above the example meant. Thanks for the reply",1.0
g0nljs8,i51dz8,Now if only we can get TypeScript to follow semantic versioning...,-4.0
g0o9mm0,i51dz8,[deleted],-1.0
g0odgac,i51dz8,Why is that bad? It's just a number. At least then it'd be a useful number,3.0
g0ocvlt,i51dz8,Why is 40 more obnoxious than a meaningless 4.0?,3.0
g0odjcm,i51dz8,[deleted],-2.0
g0odqg7,i51dz8,It‚Äôs the same exact number of digits. It‚Äôs not like you‚Äôre doing math with it or anything. It makes no sense to call it obnoxious,3.0
g0oc8j6,i51dz8,"Maybe they'd be more careful about breaking changes then? Right now, it screws up _everything_, as downstream users have to explicitly change the Node default.",1.0
g0niq9m,i51dz8,TypeScript: Slowing down development since 2012,-18.0
g0nivwq,i51dz8,TypeScript: The soonest to be irrelevant fad since CoffeeScript,-22.0
g0nixzk,i51dz8,"Or is it, TypeScript: Probably awesome but I am too lazy to learn it :'/",28.0
g0nj2wg,i51dz8,Bingo,12.0
g0od91x,i51dz8,"For me it‚Äôs not that I‚Äôm too lazy, for me it‚Äôs that I can‚Äôt get my existing React project to compile in the time I‚Äôm allotted for ‚Äúmaintenance‚Äù tasks for work. Some of us just have expectations put on us outside our own control. 

Everything I love about TS is something I love about Rust, but I‚Äôd personally like to write my home projects in Rust, which is why I don‚Äôt work on it at home.",3.0
g0lvhp9,i4xl6h,"You‚Äôre acting like using this library all the time is better than not using it (¬´¬†don‚Äôt write let x¬†¬ª).  
This is absolutely not the case, this would be terrible to use this library everywhere, it would introduce so much noise and unnecessary complexity just for variable assignments.  
It might be useful for very specific use cases where you want to track the state, but that‚Äôs like 1% of the time.",11.0
g0lxi6k,i4xl6h,"please, don't take too seriously the title of the post. I agree it's not ""the best"" title for the topic.  


About the possible usage of it - it depends on many things, it can't and won't be the one that will be used everywhere. It was ""born"" from a real case in a real application and it has some real usefulness.",1.0
g0lfrjx,i4xl6h,"I didn't know that worked. I hate to be that dude, but now that you've told me this, I'm totally doing it.",2.0
g0lehre,i4xl6h,Is it possible to use in nodejs?,1.0
g0lep0y,i4xl6h,"sure, in all js environments",1.0
g0ls7ve,i4xl6h,"This looks similar to the `useState()` function provided by React. Does it have the same limitations, i.e. don't call `state.create()` inside loops?",1.0
g0lswhk,i4xl6h,"No no, there are no limitations and ""magics"". You can call it inside loops.  


Look at the implementation - [https://github.com/suren-atoyan/state-local/blob/master/src/state/index.js](https://github.com/suren-atoyan/state-local/blob/master/src/state/index.js)",2.0
g0ls8i8,i4xl6h,If handle got the oldvalue and newvalue it would look a lot more like proxies,1.0
g0ltewd,i4xl6h,"Yes, I agree. There are similarities at first glance. But it is pure js, without any ""magic"". You can take a look at the implementation - [https://github.com/suren-atoyan/state-local/blob/master/src/state/index.js](https://github.com/suren-atoyan/state-local/blob/master/src/state/index.js)",1.0
g0m31zd,i4wb6r,"I feel like screenshot testing sounds like a super cool idea, but in practice would be more of a nuisance for when you do change something; then helpful in catching regressions.

&amp;#x200B;

I feel the same way about snapshot testing in react. Overtime I noticed, at least for me; the time tests like this break (tests where your just comparing against a pre cached output) is only when your actually making a change to the component.",3.0
g0mhvy3,i4wb6r,"In my company we have a couple of component libraries which provide components used throughout the 15+ apps we keep current. Screenshot testing is a godsend for finding out you‚Äôve broken some styling in a deep dependency before the dependency gets merged and forgotten about.

They can be very flakey though compared to normal feature tests.

Snapshot testing‚Äôs just useful in looking at the changes, thinking ‚Äúyeah, that‚Äôs what I meant to do‚Äù and accepting them.",4.0
g0mkn25,i4wb6r,"Yeah maybe it would be useful then. I feel like some thing like a button though is way more likely to break from something the app consuming it does than changes to the component library. 

Everywhere I have worked has failed pretty bad when it comes to building shared components. Usually because people always want to use x new framework and no one wants to do the unglamorous job of building something framework independent.

I always joke that our snapshot tests are ‚Äúdid I edit this file?‚Äù tests",1.0
g0n72k2,i4wb6r,"Well that's a shame if you're in need of it.
Have you checked out lit/stenciljs?",1.0
g0naff2,i4tt8a,"Glad to see more data science stuff in JavaScript üòä I'm a long time JavaScripter looking to learn more about data science and machine learning.

It's amazing how far the language has come!",3.0
g0kar3f,i4rmvx,"&gt;background can be written as b,back,backg,background..... background-color can be written as bC,backC,backColo,backgroundColor...

So basically each team member will choose their favorite way to write properties?

good luck

with that



*That's a haiku.*",8.0
g0kdhy5,i4rmvx,"Nice observation, people need to read other peoples code, if everyone writes code different  collaboration will be a nightmare 

but

Everyone likes to do less work, so using the shortest shorthand will be the preference, that doesn't leave many possibilities

There is only one way to write backgroundColor in two letters: ""bC""

A tool must be free to be used in any way. A warning system could be added, So whenever someone uses more than 3 letters it will give a warning.",1.0
g0n7q0k,i4rmvx,Have you looked at tailwind or similar projects?,1.0
g0rwl0r,i4rmvx,"In tailwind, you can't do cool stuff like loops. This library replaces both tailwind and SASS",1.0
g0rzhy0,i4rmvx,Oh sorry i meant how they treat utility names etc,1.0
g0k2i1k,i4rmvx,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g0k8wh8,i4rmvx,Isn't that a kimono?,1.0
g0km8j4,i4rmvx,yeah! I would like to wear it someday too,0.0
g0l5zzk,i4rmvx,This should be a devDependency at best. No need to let the user compute that over and over again.,1.0
g0li84v,i4rmvx,we will have to do benchmark testing to find out? have you done any before,1.0
g0nwtlh,i4rmvx,Whats the point of running a conversation over and over again if you can just save the end result once and ship it.,1.0
g0ry2i3,i4rmvx,"With that mindset, you will never be able to deploy anything.

I am not stopping anyone from contributing though",1.0
g0krnf7,i4pb4a,"This is nice for demonstrating how context/hooks work using a mini-Redux as an example.

Just want to note that it's not really practical for a larger project though. All of the subscribed components will re-render when the context changes. In order to get around this you have to:

&amp;#x200B;

1. Easiest, ditch the singleton store and have multiple providers for each domain. Used this approach a couple years ago for a large-ish project, it actually worked pretty good and was quite simple
2. Leverage useMemo to prevent components from needlessly rerendering",43.0
g0ktl97,i4pb4a,"Good point! Does redux have out of the box ways to prevent the rerendering?

I've built some fairly complex projects using context and useMemo to prevent needless rerendering. The code and logic felt pretty straightforward to me, but I'd be interested in hearing how Redux handles this more effectively.

(I don't have much experience with redux)",6.0
g0l4ldz,i4pb4a,"Redux itself no, just lets you update the relevant parts of the store

But the react-redux package does, with its connect and mapStateToProps functions

I haven't used it in a long time but I heard they have a useSelector hook for accomplishing the same thing",8.0
g0lempg,i4pb4a,"Yep, [React-Redux has had a hooks API since a year ago](https://react-redux.js.org/api/hooks) and [we now recommend the hooks API as the default instead of `connect`](https://redux.js.org/style-guide/style-guide#use-the-react-redux-hooks-api).

For more details on how React-Redux works internally and actually decides what components need to render, see my post [The History and Implementation of React-Redux](https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/)",9.0
g0lhtfh,i4pb4a,"What protections does the hook provide that allow you to skip expensive ""mapStateToProps"" computations in applications that emit a lot of actions? With connect, you can leverage the (admittedly well-hidden) ""areStatesEqual"" option and its ilk in connect function.

It seems like the hooks have fewer points for optimization. How do I avoid doing lots of pointlessly expensive mapStateToProps-style selector computations with hooks?",1.0
g0ll4ah,i4pb4a,"Per [the ""equality comparisons"" section of the hooks docs](https://react-redux.js.org/api/hooks#equality-comparisons-and-updates), your options are:

- Just retrieve a given value and let `useSelector` do its normal reference comparison check
- Use a memoized selector (Reselect, etc)
- Pass a custom comparison function as the second arg to `useSelector`

One difference between `useSelector` and `connect` is that you can write multiple `useSelector` calls that each retrieve individual values, so you can extract things in a more granular way than `mapState`.

FWIW, `areStatesEqual` is _very_ rarely used.  A quick search on Github turns up less than 3K total hits in JS files, and it looks like the majority of those are just copy/pasted/committed versions of the actual `connect` source rather than application usages.  Looks like.... _maybe_ 500 total usages, period?

https://github.com/search?l=JavaScript&amp;p=5&amp;q=areStatesEqual+NOT+areOwnPropsEqual&amp;type=Code",2.0
g0lt17j,i4pb4a,"Hmm. I'm not sure this helps me. For perspective, my organization has a page with multiple hundred connected components where each component has quite heavy selector usage in its mapStateToProps. We're hitting pretty big bottlenecks despite the fact that our selectors are using Reselect and are memoized; React-redux is just spending _so much time_ running mapStateToProps that the overhead is reaching into the hundreds of ms whenever we interact with the page and start emitting actions that change the state. What would be the Redux team's recommendation for that situation?

If that's not enough info I understand; we're all just very frustrated internally and aren't sure what to do to alleviate our performance woes.",1.0
g0lu85m,i4pb4a,"Hmm. I'm not sure I have any immediate recommendations off the top of my head, but I would be genuinely interested in hearing more details and would like to try to help out.

Could you file an issue on the React-Redux repo to discuss this?  It would help to see some examples of your current `mapState` functions and selectors, info on your app's reducer structure / actions / architecture / use cases, some perf profiling captures, and if at all possible a runnable example of some kind (even if it's a minimal CodeSandbox vs the reall app).  Please link this thread for reference.",1.0
g0mdtwd,i4pb4a,"Thanks for the help and interest, I'll regroup with my team and discuss opening an issue.",1.0
g0pl67p,i4pb4a,"Hey, I'm working on a full stack replacement to react etc and was wondering if you could share either the code in question or a code sample demonstrating the performance issue to see if our method is performant :)",1.0
g0n73jq,i4pb4a,"In case anyone's interested in a (imo more performant) alternative to useMemo/context combo or react-redux, here's how I do it.

I have a custom useSubscribe hook that returns [subscribe, notify]. Subscribe is exposed through a top level context provider, and notify is called whenever we want to invoke subscribers.

The state is stored in a useRef reference.

An update function is also exposed through the context provider. It updates the state using a straightforward mutation, and calls notify, which in turn calls all of the subscribers.

Subscriber callbacks, upon notification, can decide if they want to rerender the component they're in, by using useState. I have a useAutoRerender(subscribe) hook that does this automatically for me. It simply uses useState counter to trigger rerender when notified.

The reason why this is more performant is because the context provider no longer triggers all of the context consumers (even if useMemo or react-redux prevents a rerender for you, it still has to do equality checks in every context consumer, which can be expensive if you have a lot of context consumers and a huge state).

Another great thing with this approach is you no longer have to do HOC magic with react-redux. Anywhere you need to update a particular state, or listen for it, just call useContext on the context that exposes the update and subscribe function, and go to town with them. You also get the option to skip a rerender.",0.0
g0ne6sz,i4pb4a,"That sounds pretty much like you reimplemented part of react-redux, which does this internally. I don't really get the ""more performant than redux"" part though, because you're doing this by hand:

&gt; Subscriber callbacks, upon notification, can decide if they want to rerender the component they're in

which is exactly what the selector in redux does and you can make that as complex or simple as you want 

&gt; you no longer have to do HOC magic with react-redux

Why not just use the react-redux `useSelector` hook? It's around for over a year now.",2.0
g1b2w02,i4pb4a,"The reason why I said it's more performant is because the selector + equality checker is invoked every time the main store is updated. The running time therefore scales up with the number of components that listen to the store, regardless of how small of a subset of the state they care about. Imagine you have two kinds of components, A and B that respond to sub-state changes a and b respectively. If only a changes, B's useSelector code still has to run, even if it results in no re-rendering. This could get expensive when you have a lot of instances of B.

What I proposed is more surgical, because none of B's code or the hooks it uses would run in the first place.",1.0
g1bcpjx,i4pb4a,"Your ""subscriber callback"" is what a selector usually does though. The selector decides if a rerender should occur by either returning a new result or the same result as last time. 

Redux recommends to use memoizing selectors for everything non-trivial, which does ""check if something relevant from my data changed, otherwise return the same result as last time"" - omitting the expensive selector calculation if there was no change.

You are essentially doing the same, just more manually.",1.0
g1cy5og,i4pb4a,"With useSelector, all useSelector subscriptions are woken up to check if a store's change is relevant to them.

With my approach, if say substate a changes, listeners that are interested in only substate b won't even be invoked in the first place.

This makes a huge difference when there are lots of components listening on only substate b.

If I had to explain this with runtime complexity, it'd be an action dispatch's running time scales up with the number of useSelector instances in use. As for my approach, it only scales up with the number of components that care about the substate that the action affects.",1.0
g1d4oih,i4pb4a,So you are using multiple different contexts as well? Otherwise there is nothing in your initial description that would indicate why you would not trigger all subscribers (whatever those do with that trigger9.,1.0
g1ddkr3,i4pb4a,"I admit my description wasn't clearer, so I apologize. There is only one context used. All of the state is stored in one useRef in the context provider. The difference is this: there are separate subscriber lists, and each substate update method exposed by the context invokes only one specific subscriber list.",1.0
g1dhj6f,i4pb4a,"Ah. So it's essentially a runtime vs memory trade then. 

Honestly, I can't really imagine it being a big performance win before it gets into thousands of subscribers (in which case I assume other thins would be problematic long before that), but I understand your reasoning there :)",1.0
_,i4pb4a,,
g0l0mki,i4pb4a,"&gt;All of the subscribed components will re-render when the context changes

Is this an old problem that has been addressed? I'm using context API in a semi-large personal project, and I don't see re-rendering every time any part of the context changes. Only when *relevant* parts of the context change (which is what you want obviously)",1.0
g0letn1,i4pb4a,"Any update to a context value _will_ cause _all_ components that consume that context to re-render.

In addition, because context values are normally updated from React component state, updating the component with that state will cause all components inside of it to re-render by default.

See my extensive post [A (Mostly) Complete Guide to React Rendering Behavior](https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/) for complete details on when, why, and how React re-renders components, and how use of Context and optimizations alters that behavior.",9.0
g0lshkc,i4pb4a,"That's a really great write up, thanks for that.",2.0
g0lsm5n,i4pb4a,Thanks!,1.0
g0l75t8,i4pb4a,"Not sure what has changed since I actually used it heavily (about a month after it became stable), but the last I checked, JSX will desugar into something like React.createElement('type', { props, context }). 

So any component using &lt;Context.Consumer /&gt; or useContext will re-render whenever the context changes, regardless of whether the part used by the component changes, because it's treated like a props change.",3.0
g0l9saz,i4pb4a,"As per the React docs:
https://reactjs.org/docs/context.html#caveats

Just bump up the context store to the root component's state, problem solved. This is probably why I've never noticed the issue",1.0
g0lblq8,i4pb4a,"Yeah, that's the method I used. That ensures you won't needlessly create a new value for a provider when a parent re-renders.

The issue I'm talking about is with creating one singleton store with a single context, like in the article. All of the consumers will re-render whenever that context changes, regardless of whether the part they actually use changes.",3.0
g0lfbad,i4pb4a,"yes that makes sense. i would like to say if you are using a part of context that doesn't change when another part does, you -could- look into splitting that context up. as that sometimes means you have 2 domains in one context. doesn't solve it all though but just something to consider.

edit: also just wanted to add, sometimes the extra rerender isn't so bad. i have some apps that i have this 'problem' with, but it's not render blocking. react is fast, some would say fast enough, but it's definitely something to think about. although you must know why first, so you must know the problem before you can look for a solution or chose to live with it if you conclude it's not worth worrying about.",1.0
g0kalu3,i4pb4a,"IMO this problem is better solved with [Recoil](https://recoiljs.org/), which offers shared state with an API identical to native hooks.",6.0
g0kplyw,i4pb4a,I'm not familiar with Recoil and I'm sure it's great but I think there is a lot to be said for being able to solve problems without added dependencies and new libraries to learn.,9.0
g0lsja1,i4pb4a,It's made by react and will eventually replace context. Please give it a shot.,0.0
g0m85to,i4pb4a,"While Recoil is made at Facebook, it is not made by the core React team.",2.0
g0me6fj,i4pb4a,We're doing global state with context on our current React Native project and it's much easier to handle than full Redux state. But it's quite a small app so rerenders aren't really an issue. If it was a large project I wouldn't be doing this.,2.0
g0jxjex,i4pb4a,"Just use redux so the next dev on the project doesn't have to figure out your undocumented, custom approach to shared state.",16.0
g0k2xnj,i4pb4a,"They are just using standard, out of the box hooks. It's the opposite of a custom approach. A developer who is moderately familiar with React should have no problem understanding what is going on here.

I'm not saying it's the right tool for the job all the time, but for a small to mid-sized project, this could make a lot more sense than doing a full Redux implementation.",44.0
g0k4m3g,i4pb4a,Agreed. Redux should probably be the last solution to a global state problem in an app.,15.0
g137qcj,i4pb4a,"i'm still passing down props and handling state on the parent components. It just works for projects that you don't plan to scale or that should be small-medium from the beginning.

All I see is people using Redux for things that have 2 to 5 functionalities in it + just run on a single page, there's no reason to write that much code.",1.0
g0ka9bl,i4pb4a,"It depends. I would say if you need a basic use case, that it‚Äôs self contained in a section of the app, go for it. Emphasis on the basic, so it‚Äôs easier to understand data flows.
More than that, just use redux. You‚Äôll save a lot of headaches in the future and for new people joining in. There‚Äôs a lot more documentation and help than with out own implementation ‚Äújust because redux is too bloated‚Äù (what are we actually saving here?)

EDIT: forgot to mention that the article is good and it‚Äôs a good implementation for personal projects - you kinda get the idea of what redux is under the hood and as your application grows you‚Äôll understand what redux offers ‚Äúout of the box‚Äù",3.0
g0k551m,i4pb4a,"???

Show me where this sort of state management is documented, with explanations about best practices and potential pit falls. This is absolutely a custom state management solution regardless of what hooks its using. If there's no next dev, do whatever you want, but I can tell you from experience you don't ever want to take over a project that rolls its own state management.",-17.0
g0k9yxv,i4pb4a,"Yikes, redux shouldn't be the default state manager you use on every react app. Sometimes using react hooks system is fine. For managing remote state I prefer react-query, for global state react context API is perfectly suitable, but there are other state managers you can use as well that don't require a lot of boilerplate code  the way redux does.

Also you'd have to be a bad dev to come into a react project and not be able to recognize a simple state management pattern using hooks and context. It should literally take no more than a couple of hours to understand how state is being managed. If it does, then you've got a bloated solution",13.0
g0kgcv2,i4pb4a,"The problem is if you start your production application with a context state management solution, by the time you realize redux was the right choice you're heavily invested into your current solution and you end up with a bloated, insane solution, or you end up doing all your state management work over again. Sure, for small projects that are guaranteed to never grow beyond a certain size, redux is overkill.

No website starts out needing redux, but it's easier to start with redux than it is to switch only when it becomes an absolute necessity.",-2.0
g0kn017,i4pb4a,"Redux is just a state management tool that equally allows your state to be a bloated mess. Nothing about redux enforces a clean solution and especially if you're working on a small to medium sized app (which is the case for most people) redux is a bloated solution. Not to mention the additional middlewares that just add on to the bloat

I can't recommend react-query enough for remote state management though, keeps your remote state separate from your apps local &amp; global state",4.0
g0krfzt,i4pb4a,"Idk why people keep bringing up small apps. Like I said, if there is never going to be another dev on the project, do whatever you want.

I would argue that redux actually does a lot to enforce some sense of order in how state is managed. Sure, you can ignore established best practices and code your way to a bloated insane mess, but the redux docs are incredibly high quality and provide excellent examples and explanations to teach people a fairly standard way of implementing their redux solutions. Bad code is bad code regardless of what packages you used, this isn't an argument against redux. The problems you run into with something like context is when your app starts to have more complicated logic and exceeds what you originally intended, you now don't have a pre-made solution or established best practice for dealing with it, where you would had you used a more complete solution from the start.

Just looking a react-query really quickly it seems like a nice idea, but I wouldn't want to use it in a production application, as it seems to be using experimental react APIs.",5.0
g0lb44k,i4pb4a,What experimental APIs? I'm considering using react-query in my next projects.,2.0
g0lpofe,i4pb4a,React-suspense,1.0
g0lw6dg,i4pb4a,"Oh yeah, that I knew about. It is optional though, you can reap most of the benefits of react-query without using it.",2.0
_,i4pb4a,,
g0k9yqy,i4pb4a,Just do not use redux and learn how react really works.,7.0
g0kq8gn,i4pb4a,IMO redux kinda suck,2.0
g0krp1s,i4pb4a,"Hi, I'm a Redux maintainer. Any specific aspects you're concerned about?

If you haven't look at Redux in a while, the way you'd write Redux code now has changed considerably from what you'd write just a couple years ago.

I just published a brand-new ""Redux Essentials"" core docs tutorial, which teaches beginners ""how to use Redux, the right way"", using our latest recommended tools and practices like Redux Toolkit and the React-Redux hooks API. I'd encourage you to check it out:

https://redux.js.org/tutorials/essentials/part-1-overview-concepts",4.0
g0ks0s7,i4pb4a,"It‚Äôs just too verbose and opinionated for what boils down to a place to store values/objects.

I use the context API now since it‚Äôs just easier.",1.0
g0lclog,i4pb4a,"I used to feel Redux was a great model for react that was poorly designed system due to having no opinions, but Redux w/ their Redux Toolkit made it go from verbose to generally the minimal code you would have needed to write anyway.",3.0
g0ktn74,i4pb4a,"Have you taken the time to look at our official Redux Toolkit package?  It simplifies the code for most common Redux use cases:

https://redux-toolkit.js.org

Definitely agree that Redux isn't the best fit for all situations, and that there's plenty of places where Context is a better choice.  That said, Redux Toolkit eliminates the reasons for the ""verbose"" and ""boilerplate"" complaints",4.0
g0l4jeu,i4pb4a,"I love RTK, its what brought me back to using Redux",3.0
g0krojf,i4pb4a,Redux is the worst form of global state management except for all the others,-3.0
g0ks5yk,i4pb4a,"No way, boilerplate code is awful. Less is more.

Context API &gt; mobx &gt; redux",1.0
g0ksqzg,i4pb4a,"Boilerplate is pretty much down though if you use something like redux toolkit instead of doing it all by hand. 
Compared to the example in the blog post, redux toolkit is probably already shorter, and it only gets less code (in comparison to something custom) from there.",4.0
g0l3887,i4pb4a,"no lib in existence that has as much boilerplate as raw context for central state in scale, they're not calling it ghetto redux for no reason: [https://twitter.com/drmzio/status/1143316965185871872](https://twitter.com/drmzio/status/1143316965185871872)",3.0
g0lcna4,i4pb4a,Better off not using this massive web of dependencies.,1.0
g0lf1ob,i4pb4a,do you mean that react is the web of dependencies? or the state context is the web of dependencies?,3.0
g0mbgz4,i4pb4a,Its good a way method to share state with react,1.0
g0klrby,i4pb4a,"Saving this.  That's basically all the goodness of redux without the extra lib and without the `connect` function, just using extant bits of React.",0.0
g0krkh1,i4pb4a,"And without the optimizations. With redux, components only update if the state values they subscribe to update - with this approach, no matter what changes in that context value, all subscribers (and thus, their children) update, which can explode quite fast.
Which leads to splitting the state in multiple providers, which leads to dozens of different Providers &amp; different `useContext` hooks.
Not to say that this doesn't work, but it doesn't scale well, so depending on the size you are planning your application to have, you might want to go another route.

Oh, and redux has the `useSelector` &amp; `useDispatch` hooks since over a year now - no need to use `connect` if you're not using class components. Combine that with redux toolkit and it's quite a pleasant experience ;)",9.0
g0l24fb,i4pb4a,"&gt;no matter what changes in that context value, all subscribers (and thus, their children) update

I hear this a lot but I've never seen it in any of my projects that use context API. I only see components re-rendering if the specific attribute they're using in the context updates. Maybe this is an old issue that was fixed?

I've never liked redux, it's just way over-complicated for 99% of projects. KISS is pretty much the only 'principal' I subscribe to in programming. I'm a much bigger fan of Context API, even if it is less efficient (which I don't think it is)",-1.0
g0l6c78,i4pb4a,"No, this is just how context works. 
`useContext` returns the full context. It does not distinguish which part of the context value the component is using, especially since state handling is kind of an edge case of context, which is primarily a dependency injection mechanism.

There is an [ongoing RFC for a useContextSelector hook](https://github.com/reactjs/rfcs/pull/119) to adress this edge case, but since `useMutableSource` seems to make it into the core, it's not very likely that we'll see that.",1.0
g0l9rc6,i4pb4a,"As per the React docs:
https://reactjs.org/docs/context.html#caveats

Just bump up the context store to the root component's state, problem solved. This is probably why I've never noticed the issue",-1.0
g0leh79,i4pb4a,"This will still re-render all subscribing components when the context value actually changes, not only when parts of the value that are relevant for the consuming component change. That cannot be addressed with pure context, it needs a react-external subscription mechanism or probably one of the experimental hooks like `useMutableSource`

Edit: simple example: your context value is `{ a: ""foo"", b: ""bar"" }`.
Your consumer only renders `value.a`. When `value.b` is updated, your component will re-render.",2.0
g0n9ty2,i4pb4a,Have first hand experience with this. We leaned into using contexts and got burned pretty badly by their over zealous cascade of re-renders. Switching over to a proper state management lib  resolved it.,3.0
g0jxcje,i4os6n,"\&gt;check out my last article \[insert link here\]

Did you forget to insert the link there? haha

Interesting tool though, I will probably use it when I get around to making a GitHub readme",3.0
g0jzrjx,i4os6n,"oh yeah, fuck, I started writing the article on my phone so I made notes to stuff I wanted to edit on the laptop, thanks!!",3.0
g0mv4n6,i4os6n,Pinning those gists on your profile is a neat idea as well :),2.0
g0mw27a,i4os6n,Thank you! I keep those updated using GitHub Actions üëç,2.0
g0pt7de,i4os6n,"The visits count is not working for the repositories I tried it with.

This works:  [https://badges.pufler.dev/visits/puf17640/git-badges](https://badges.pufler.dev/visits/puf17640/git-badges) 

Others I have tried have not worked.  I'm not sure if I'm doing something wrong.

Example:  [https://badges.pufler.dev/visits/SimpleBoilerplates/SwiftUI-Cheat-Sheet](https://badges.pufler.dev/visits/SimpleBoilerplates/SwiftUI-Cheat-Sheet)",1.0
g0ptk25,i4os6n,Can you please describe what 'does not work' ?,1.0
g0qb3tv,i4os6n,"In the examples below the count comes back as 0.

 [https://badges.pufler.dev/visits/SimpleBoilerplates/SwiftUI-Cheat-Sheet](https://badges.pufler.dev/visits/SimpleBoilerplates/SwiftUI-Cheat-Sheet) 

 [https://badges.pufler.dev/visits/rawfour/weather-app-react](https://badges.pufler.dev/visits/rawfour/weather-app-react)",1.0
g1g5783,i4os6n,because the count will only be increased if the badge is shown in a github readme or github pages website,1.0
g0ji0k2,i4n4t4,"I *can't stand* articles that use examples like this

&gt;`// @filename: blah.cjs`  
`module.exports.foo = 'bar'`  
  
&gt;  
&gt;  
&gt;  
&gt;`// @filename: main.cjs`  
`const {foo} = require('./blah.cjs')`  
`console.log(foo);`

It's lazy and nigh on incomprehensible. So much mental effort has to be done by the reader to work out what `.foo` and `'bar'` would represent if you were to write this for real. *Please,* anyone that reads this, use useful examples in anything you write:

&gt;`// @filename: mathUtils.cjs`  
`const addTogether = (a, b) =&gt; a + b`  
`module.exports.sum = addTogether`  
  
&gt;  
&gt;  
&gt;  
&gt;`// @filename: main.cjs`  
`const {sum} = require('./mathUtils.cjs')`  
`console.log(sum(3,4)); // 7`",57.0
g0l8dmu,i4n4t4,"God thank you, it's terrible.",5.0
g0k14bi,i4n4t4,"I disagree. If what‚Äôs important in talking about exports is that an arbitrary symbol exists in an arbitrary file, then `foo/far/baz` is the established way of creating a minimal example, with 70+ years of CS history behind it. `addTogether()` may look more familiar because it looks like code you might actually write, but it certainly *isn‚Äôt* code you‚Äôd actually write. Either way, your brain has to step in and substitute out the example from what you would actually do. As inheritors of an intellectual tradition, work comes more easily for us if we can get comfortable with the idioms of the people who have gone before us, and `foo` is one of the oldest and most central of those idioms.",-16.0
g0k30ip,i4n4t4,"&gt; This is how we've always done it and this is how it will always be done. No I don't care if it's more difficult to read, you're not a real programmer unless you use the same code abbreviations my grandfather used",18.0
g0ka672,i4n4t4,"You know, I think I would be offended if someone told me there was only one way to make examples and I just needed to shut up and learn it. I was trying to say something a little different, though. I‚Äôd say something like ‚ÄúHere‚Äôs a really common pattern that has been working for people for a long time. You don‚Äôt need to use it, but you‚Äôll have a better time if you get comfortable with it. ‚Äú Each their own, though.",4.0
g0oec03,i4n4t4,"Even if you were downvoted as in general there are many cases where making things more concrete it gets easier to read. In this case however I found the author diligently separated relevant and irrelevant identifiers trying hard to give speaking names to modules signaling which type he meant. The whole module topic is highly complex and I really appreciate the effort that went into this attempt to discuss it in a comprehensive and deep manner. The article is certainly not a tutorial and assumes some familiarity with modules flavours, bundlers and top level await.",2.0
g0nsjpt,i4n4t4,Just use ES modules tbh,-1.0
g0kczy4,i4n4t4,"&gt;You could rename your wrapper file to .mjs instead, and that will work fine in Node 14, but some tools don‚Äôt work well with .mjs files, so I prefer to use a subdirectory.

... and because the `.mjs` solution was a *terribad* one in the first place; no one except the Node org ever thought it was a good idea to split all future JS development between two different file extensions just to communicate (literally!) a single bit of information.",7.0
g0kqjvu,i4n4t4,"&gt; a single bit of information.

The problem is not the amount of data, but the channel for it. since there is nothing in the content of the file to tell them apart, there wasnt much other choice.

IMO, the real core problem is the two different types of idea fighting. ES module syntax is super ugly, imo, and really departs from all JS syntax before that. Its also more than a little bit too browser oriented.

All the previous ideas of how modules work had the simplicity of being in javascript itself. In the ""require"" type of module, code was loosely bound, and a library in a separate file was no different than an interface returned by a function.

The new module syntax is a non-javascriptish mini language with a redundant type of destructuring syntax. Modules are tightly bound, with direct code-to-code relationships. It just seems so foreign. The only upside seems to be that it is somewhat easier to do tree shaking with the new static import.",1.0
g0mv53y,i4n4t4,"&gt; IMO, the real core problem is the two different types of idea fighting. ES module syntax is super ugly, imo, and really departs from all JS syntax before that.

ES2015 introduced a *lot* of syntax, and new syntax, by definition, departs from existing syntax. Arrow functions, `class`, destructing/spread all depart from pre-ES2015 syntax.

&gt; Its also more than a little bit too browser oriented.

And CJS is too Node oriented. If browsers implemented CJS, and you put this in a web page:

    &lt;head&gt;
        &lt;script&gt;
        const x = require('./some/largeModule.js')
        &lt;/script&gt;
    &lt;/head&gt;

Congratulations, you have just blocked HTML parsing for as long as the browser is downloading largeModule.js. You can also easily block rendering this way.",4.0
g0okc2p,i4n4t4,"
&gt; Congratulations, you have just blocked HTML parsing for as long as the browser is downloading largeModule.js. You can also easily block rendering this way.

And how is this any different from:
```
    import { tag } from './html.js'
```

and html has long had the ""asyc"" attribute for script tags as well. Whether rendering is blocked or not is a separate topic.",1.0
g0ozecu,i4n4t4,"`&lt;script type=""module""&gt;` is [always `defer`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules#Other_differences_between_modules_and_standard_scripts), which means with

    &lt;head&gt;
        &lt;script type=""module""&gt;
        console.log('start')
        import { tag } from './html.js'
        &lt;/script&gt;
    &lt;/head&gt;

HTML parsing continues in parallel while the inline module is being parsed, and while html.js is being downloaded and parsed. actual execution of the modules will wait at least until HTML parsing is finished.

`async` **cannot solve this**. Consider this

    &lt;head&gt;
        &lt;script async&gt;
        console.log(1)
        const x = require('./html.js')
        console.log(2)
        &lt;/script&gt;
    &lt;/head&gt;

CJS require is not statically analyzable -- in the general case, you must actually execute the `require` call before you know what module is being loaded.

And the synchronous nature of CJS require means **no HTML parsing (or other JS execution) can happen in between `console.log(1)` and `console.log(2)`**, which means HTML parsing will always be blocked while downloading and parsing html.js, which may take 100ms or 10 seconds.

Bottom line is, **CJS require, by definition, will block the main thread for indeterminate amounts of time**, which is a disaster in browser environments regardless of how much you defer. CJS in Node can assume this ""indeterminate amount of time"" is relatively short since Node load modules from filesystem. This assumption cannot be made in the browser. It is way worse than the rejected variant A of top-level-await, which faced major pushback from basically everyone who is worth their salt.

ESM is designed specifically to be statically analyzable and asynchronous to avoid all these problems. And being statically analyzable almost always means new syntax.

My point is, ""You accuse ESM of being browser-oriented, I disagree. Also, CJS is much more ""non-browser""-oriented"". ESM can be implemented easily in non-browser environments (just look at Deno), CJS cannot be implemented easily in browser environments. The only reason why implementing ESM is a huge pain in Node is because of interop with an existing CJS ecosystem.",2.0
g0p4ljd,i4n4t4,"&gt; CJS require, by definition, will block the main thread for indeterminate amounts of time

And so does a synchronous import. 

Unless you are using async require/import, the js engine blocks at file scope just the same.

We could have just as easily used await require as await import, and without needing to crowd the js syntax.

The real core difference is this:

&gt; statically analyzable 

CJS modules are not statically analyzable. JS has two logical passes; parse and execute. With ES modules, you can know what the top level exported symbol names are just from the parse pass, while with CJS you have to execute the module to discover that since it is turing complete.

Other than the needlessly ornate syntax of the statement, that is the core difference between CJS and ESM. Its not the sync stuff, which both can be equals at.

Its not a huge difference, imo, and not really worth the complexity of ESM. All you can really learn is the names of the symbols, but you cannot further analyze them, use them, or predict their behavior or value without executing the file as with CJS. While its slightly easier to implement treeshaking with that, its also not much easier. 

IMO, i think it was a mistake and they should have kept the require syntax which was more javascripty.",-1.0
g0pay4p,i4n4t4,"&gt; And so does a synchronous import

If we are talking about ESM `import`, all major browsers implement downloading and parsing asynchronously -- downloading an parsing an `import`ed module does not block the main thread. Only execution does.

If you are still confused about this, read [this article](https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/).

&gt; We could have just as easily used await require as await import, and without needing to crowd the js syntax.

CommonJS specifies the `require` call must return whatever the loaded module's `exports` is. (Just re-read the spec and apparently Node does not fully conform to the CJS spec either) You can return a promise of that, but then that is not a CJS-conforming require. That is what I mean by CJS require being synchronous by definition. Your promised-require also conflicts with every webpage that has a CJS require library/framework.

CommonJS actually has a asynchronous require proposal, but it never left proposal status. There is also AMD if you want. But neither of those are statically analyzable, which brings us to...

&gt; All you can really learn is the names of the symbols

No, the module identifier of an import statement is also statically analyzable. You know what you need to load and parse without executing the module. This is the crux of my argument. **With ESM, you can load an parse everything you need without blocking the main thread, and then synchronously execute everything**. Anything async is handled with callbacks and promises, which does not block the main thread.

On the other hand, With CJS require, the module identifier is not statically analyzable because it can be dynamically generated. So **load and parse must be part of the execution of `require`** because you can't know what to load without executing `require`. And a synchronous require will block the main thread while loading and parsing.

IMO, even AMD looks better than CJS for the browser.",1.0
g0pdi5v,i4n4t4,"&gt; CommonJS actually has a asynchronous require proposal, but it never left proposal status. 

Yeah, its too bad. I think that would have been the way to go. Too late now, ESM has won.

&gt; With ESM, you can load an parse everything you need without blocking the main thread, and then synchronously execute everything

if you do a synchronous import, it does have to block the main thread.
ES Modules can also be imported for side effects, and thus you have to block until execution completes. 

&gt; load and parse must be part of the execution of require

just as parsing is a part of import, yes. And just like with import, if you dont want the main thread blocking on the result, use the async version.

There is no real async/blocking differences between ESM and the proposed async require.

I really dont see much benefit from the half-arsed static symbol load step of ESM, imo.  

But I suppose its moot because thats what we got and thats what people seem to be moving forward with. I really wish we were removing warts rather than adding them, but oh well.",1.0
g0pi7oi,i4n4t4,"&gt;f you do a synchronous import, it does have to block the main thread. ES Modules can also be imported for side effects, and thus you have to block until execution completes.

I think you have some misconceptions about how ESMs are run is browsers. `import` statements are declarative, not imperative.

For simplicity, let's say there are 2 steps of running a module (ESM or CJS):

1. load (in a browser, load = download) &amp; parse
2. execute (actually run the code)

Importantly, in ESM, everything `import`ed (directly or transitively) are loaded and parsed before any JS is executed.

Say I have this

    &lt;script type=""module""&gt;
    import one from './a.js'
    console.log('main', one)
    &lt;/script&gt;
    
    // a.js
    import two from './b.js'
    console.log('a.js')
    export default (two - 1)
    
    // b.js
    console.log('b.js')
    export default 2

Then the order of events are:

1. The HTML parser encounters a module script tag, throws the JS code to the JS engine, and continue parsing.
2. a.js is downloaded
3. a.js is parsed and b.js is discovered as an import
4. b.js is downloaded, possibly in parallel to parsing a.js
5. b.js is parsed, possibly in parallel to parsing a.js
6. If HTML parsing is not yet complete, wait until it is
7. Execute the equivalent of the code below

Code:

    console.log('b.js')
    const two = 2
    console.log('a.js')
    const one = two - 1
    console.log('main', one)

Though out this process, only step 7 blocks the main thread. **The way ESM is specified mandates every ""synchronous""** `import` **be loaded &amp; parsed before any code loaded this way can be executed**. Again, [this article](https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/) has all the details.

On the other hand, if we replace the example with CJS requires and a `&lt;script defer&gt;`, the order of events becomes:

1. The HTML parser encounters a script tag, throws the JS code to the JS engine, and continue parsing.
2. Wait until HTML parsing is complete.
3. `require('./a.js')` is run
4. a.js is downloaded and parsed
5. `require('./b.js')` is run
6. b.js is downloaded and parsed
7. `console.log('b.js')` is run
8. In a.js, `require('./b.js')` returns `2`
9. `console.log('a.js')` is run
10. In main, `require('./a.js')` returns `1`
11. `console.log('main', one)` runs

Notice, **the main thread is blocked from step 3 to step 11**, during which we have downloaded two files which could take a long time. A particularly slow server could block for 10+ seconds, while the ESM equivalent probably blocks for less than 1ms.",0.0
g0qd8mc,i4n4t4,"
why exactly do you think downloading two trivial files is significantly slower in one case than the other ?

The very first step in a.js is a require of b, so these two examples should take about exactly the same time.",0.0
_,i4n4t4,,
g0ks0d6,i4n4t4,"What do you mean no other choice? Browsers implemented ESM just fine without MJS using a script type. Node landed a input type arg and hilariously only applies to stdin.

I get frustrated every time I use ESM in Node and can't help but think they over engineered the hell out of it and its not even usable.",0.0
g0ktbf9,i4n4t4,"&gt;  Browsers implemented ESM just fine without MJS using a script type. 

How ? You have to put a directive in the script tag or it wont work.
Are you thinking of babels fake modules ? Thats not ESM at all.

&gt; I get frustrated every time I use ESM in Node and can't help but think they over engineered the hell out of it and its not even usable.

ESM is overengineered and badly written, yes, but thats not node.js's fault.",4.0
g0lg2vm,i4n4t4,"You didn't read what I wrote, I explained how browsers implemented ESM and how Node could have followed. Babel is not something I mentioned, nor is relevant.

ESM seems fine to me, it's a significant improvement over the god awful CJS and Node could have implemented it as easily as deno if they considered how it'd be used outside of thought experiments.",-3.0
g0lnd4o,i4n4t4,Deno implemented it by not being compatible with existing npm packages. Dropping backwards compatibility is always the easy way.,5.0
g0lq8f8,i4n4t4,"Browsers didn't drop backwards compat, since they default to script and you opt into module. The same could have been done with Node. Back when Ayo was a thing, I even had it implemented where you could import require and get full backwards compat.

It is, and was, totally doable without mjs, loaders, and modifying a package.json.",2.0
g0n10at,i4n4t4,"Browsers didn't drop backwards compat **in the language level**, in the sense that existing code continues to run *in script mode*. But browsers dropped backwards compat **in the ecosystem level**. You cannot mix script and module even in browser. Some things might work when you `import` a script, but you for example cannot ever `import` JS code that relies on non-strict mode. Best you can do is create a new script tag but now the only way to ""export"" is though the global scope.

Node can implement ESM without mjs, loaders, and modifying a package.json **if you don't run CJS anymore**. The main blocker of ESM in Node has always been interop with CJS.

If your idea of ""ESM in Node"" is leaving the whole ecosystem behind, you can say goodbye to express, webpack, jest, and left-pad.",1.0
g0mg6vv,i4n4t4,"&gt; I explained how browsers implemented ESM

you said they implemented with without an mjs script type, but they do require an mjs script type.",2.0
g0n7fyk,i4n4t4,They do? I thought the type=module took care of that?,1.0
g0omlai,i4n4t4,"Yep, thats what it requires. If you dont include it, ES module syntax wont work.",1.0
g0k8bo9,i4n4t4,"The article recommends using an ESM wrapper instead of transpiling to ESM. However, won't this prevent tree-shaking?",4.0
g0kujmm,i4n4t4,I didn't read the article haha. But tree shaking requires es modules. Period.,3.0
g0mxcfu,i4n4t4,"The main purpose of tree-shaking is the reduce the amount of code a *browser* needs to download. There is no need to do tree-shaking if we are just running JS in Node because Node reads from the filesystem instead of over the network. For the same reason, we don't minify first-party code meant to run in Node. (If you are releasing an npm module, then minifying reduces the amount of code the consumers download)",1.0
g0n51j0,i4n4t4,The article isn't only talking about code running in Node. It's talking about libraries that could presumably support browsers as well.,1.0
g0na0y3,i4n4t4,"Ahhh, I re-read the article and I think I see what you mean. If we are writing a library the depends on, say, an npm package `dep`, then using the wrapper to import `dep` makes `dep` un-tree-shakeable in the  final bundle.

In this case, I think the best solution is the write named imports and
use a build tool to generate both tree-shaken ESM for browsers and ESM with the wrapper for Node. Ugly, yes, but I know it is doable in rollup and babel by writing plugins. Should be doable in webpack too.",1.0
g0l0b25,i4n4t4,I really hate that nodejs requires mjs as an extension. It makes it super cumbersome to prototype stuff that I want to test in node as well as the browser. I'd immediately drop node for a fork or an alternative that accepts js as an extension.,2.0
g0l0rth,i4n4t4,deno. https://deno.land/,1.0
g0lnqte,i4n4t4,"Also not an option for me since I want to execute things instantly, without any build and transpilation processes.",3.0
g0lr3vv,i4n4t4,"I recently wrote a package that also exports a CJS bundle. But instead of writing an ESM wrapper, I just made the entrypoint point to my own ESM source code. Thankfully, my package is stateless, so I didn't have to go through [the state isolation trick mentioned in Node.js docs](https://nodejs.org/api/esm.html#esm_approach_2_isolate_state).

But what a hassle! I had to read the docs 4-5 times to make sure I was doing it correctly.",1.0
g0i6b05,i4ffir,"I'll take an extra level of indentation over repeated `MyClass.prototype.method = ...` any day.

But class methods do belong within the brackets of the class and indented.

Would you write this?

    const obj = {};
    obj.foo = 'bar';
    obj.num = 42;
    obj.fnc = (...args) =&gt; /* ... */",6.0
g0i6u21,i4ffir,"I have written code that way. Check this out, it's 3300 lines long, and actually that:

https://github.com/mikehelland/omg-music/blob/master/www/remixer/tg.js

On the other hand, here's a file from the same project, this is 1600 lines long, and uses `function/prototype`:

https://github.com/mikehelland/omg-music/blob/master/www/js/omusic_player.js

""prototype"" is found 57 times in that file. That means `Class.prototype` is repeated 57 times.

I think 57 ""prototypes"" is way better that 1600 extra tab characters!",-7.0
g0i9cih,i4ffir,"Well, to each their own, I guess. I just find the class syntax significantly easier to work with, especially when it comes to extending classes, defining getters and setters, declaring something private or static, and setting class rather than instance properties. Plus, it's fairly similar to most other languages.",2.0
g0jirr0,i4ffir,"I'm not sure why you would care so much about how many extra indentation characters there are. Unless you're not minifying your source files before serving them to clients?

But even if you are, as long as you have compression more indentation will have almost no impact on the final size as a lot of repeated characters are very easy to compress away.",1.0
g0jjk1x,i4ffir,"I don't actually minify. 

Why I care about indentation is that the more indents you have, the more that it is a signal to make smaller functions.

I'd rather type in "".prototype"" 60 times instead of indenting 600 lines of code.",-3.0
g0jlqy7,i4ffir,Wait do you manually indent every time? If you're working with any decent code editor you'll only have to indent once. Then the editor will stay on that indentation level when you insert a new line.,5.0
g0hx482,i4ffir,"I've more than once seen people write classes with collapsed indentation (admittedly in other languages, my day job is 90% PHP)

    class foo {
    function get() {
        return 'foo';
    }
    function bar() {
        return false;
    }
    } // end of class foo

It's not my thing but if it lets you use classes in a way that works for you who cares?",3.0
g0ifdun,i4ffir,Everything I write now a days is just functions. Functions calling functions calling functions.,3.0
g0ijg1k,i4ffir,"Do you ever use ""this""?",1.0
g0ijj3x,i4ffir,Not unless dictated by a library I am using.,4.0
g0io5od,i4ffir,How do you refer to the application context?,1.0
g0is99d,i4ffir,"Everything gets passed in as parameters to functions. 

I guess I would need to know what you are referring to specifically.",1.0
g0ivwyn,i4ffir,"Ok, so what object are your functions attached to? `window`?",1.0
g0iwtfm,i4ffir,On the browser I use a bundler like webpack or parcel. So everything is imported and exported as module scope. I don‚Äôt attach anything to the global scope myself.,1.0
g0ixic0,i4ffir,So you put your functions on some object the framework creates as the application context?,1.0
g0iy2wd,i4ffir,"I would read about modules, import, export, and bundlers.  Should put you on the right track.",2.0
g0jc4gf,i4ffir,"Yeah, that's cool and all. 

But you say you just use functions.

And you said you don't attach them to `window`. Can you show a one line example stub of how you define functions?",1.0
_,i4ffir,,
g0kv4tt,i4ffir,If your argument in favor/against a coding paradigm is based on indentation I feel that your level of OCD is somewhat concering,3.0
g0mtnv4,i4ffir,"Yes, I think you are. I hope so.",3.0
g0i4k5t,i4ffir,"My suggestion is, remember what it's like trying to read and understand *other people's* code, and optimize for *other people's* ease of comprehension. Put another way, code is read more than it's written, so optimize for the reader, not the writer.

Semi-related, I work in codebases where they don't like to indent switch statements. Their logic is the same as yours -- too much indentation. They write switches like this:

    switch (foo) {
    case 1:
      // ...
    case 2:
      // ...
      switch (bar) {
      case 10:
        // ...
      case 20:
        // ...
      case 30:
        // ...
      }
    case 3:
      // ...
    }

I personally find this so hard to read, especially when those ""..."" parts are replaced with a screen-full of code, that I auto-format my local versions to something I consider more legible. We're not limited to 80-char terminals anymore, and I think generous use of indentation makes the code's structure much easier to comprehend at a glance.

That being said, since auto-formatting is a thing, it almost doesn't matter what the repo's style is. I can auto-format locally to what works best for me, then auto-format back to the repo style when I'm ready to commit.",5.0
g0i61bd,i4ffir,I almost never use switch because if/else if/else is more readable to me. Unless you're taking advantage of fall thru.,-2.0
g0iiy7v,i4ffir,"I like having a sane `this`.  Also, that is hands-down the most ridiculous reason I've read for avoiding the syntax.",5.0
g0io0pi,i4ffir,"`this` in `function/prototype` works the same way as `class`, right?

&gt;Also, that is hands-down the most ridiculous reason I've read for avoiding the syntax.

How one key word and braces adds billions of tab characters is kinda ridiculous.",-1.0
g0ioe32,i4ffir,"No `this` within `class` is always lexical.  As for using tabs for indent, you deserve to be burned at the stake for that alone.  Well ok, lightly toasted.",-8.0
g0iuhj5,i4ffir,"That statement is not true at all. The `this` keyword behaves the same in all functions (non-arrows, anyway) in JS, regardless of whether they are part of a `class` definition or not.",4.0
g0iopaa,i4ffir,"If you prefer spaces, and 4 spaces to a tab, you now have 4 * linesOfCode extra characters in your JavaScript by the extra indentation.",-4.0
g0iqwpp,i4ffir,And now it just got even more ridiculous.,2.0
g0i0znf,i4ffir,Also prefer not to use class but not cus of indentation. Just don‚Äôt see a reason to use it,3.0
g0huliy,i4f9i3,"I've run through this process a couple times in the past few months, and just recently explained it to a coworker who hadn't dealt with Docker very much, so I thought it was a good time to dump what I know about it into a piece I can reference in the future! It's not a deep dive into perfectly optimizing every detail, but I think it's a good overview of what to check. I've worked at a number of places that needed this level of optimization done.

It's also posted to [dev.to](https://dev.to/vcarl/optimizing-a-dockerfile-1o2l) and to [Medium](https://medium.com/p/optimizing-a-dockerfile-f9bfb923145e) if one of those is your preferred venue. I make a teensy bit of money off the Medium one üòÑ",3.0
g0isss6,i4f9i3,"Multistage builds and `COPY --from` in general has lots of other cool features:

* You can copy from arbitrary external images, not just stages in your dockerfile.
* You can pull from multiple bases, or create multiple images from one base.  If you have `DOCKER_BUILDKIT=1` set, it'll even build them in parallel.
* You can stop at a particular stage, which is convenient for different dev and prod images from the same Dockerfile.
* When you unbundle things into multiple RUN commands, you get extra layers.  Deriving from a base ""squashes"" those layers into one.",3.0
g0gzj36,i481pw,https://github.com/davidcetinkaya/embla-carousel,3.0
g0h9iqn,i481pw,"Really really nice.  Weird thing though: the codesandbox links for the react examples do show all the right examples, but the source is all exactly the same for each.  Not sure why that is.",2.0
g0j9g69,i481pw,"Thanks!
Hmm...that‚Äôs weird üòï. All the sandboxes belong to a workspace called embla-carousel-react. Could that be the reason why? By source, do you mean the source code?",1.0
g0ocsbv,i481pw,"currently working on [https://github.com/itajaja/hopi](https://github.com/itajaja/hopi)  
I have a bunch of programs that are written in python because I need to use pandas, but I'd love to use node. This tries to solve the problem. Feedback welcome!",1.0
g0hg4gt,i46iiy,"&gt; ‚ÄúHave you considered doing &lt;describe your approach&gt;? I think it could help us &lt;add some benefits/metrics of your approach here&gt;. Thoughts?‚Äù

This is very good and what I like to do myself. Hedge every change suggestion you have with question- request feedback on your feedback. Often an approach I initially ask someone to change is actually the best approach- and they just saw something I didn't.  Then its usually just _""oh kewl can you make that a comment please?""_",5.0
g0i1tth,i46iiy,"Don't forget the small things. I get super infuriated at ""same here"" or ""this could be clearer""

As you said. Make every comment actionable. I'm curious about how this works so exain it to me. Can you add an s to the variable name so we know it's an array.

Don't underestimate the power of GitHub suggestions (three backticks and the word suggestion). Great for typos or small changes.",3.0
g0j9o4i,i46iiy,"I think the one thing that I'd add to this is to compliment liberally. If there's a particularly clear or pleasant to read bit of code, call it out. If you have a number of criticisms, sandwich them if possible in compliments. Thank people for the work they're doing, even if that work is basically just their job.

Humans are relational creatures, and we want to feel like we've done well and are appreciated by others when we do work. Keeping those sorts of feelings high, and keeping positivity up within a team - these are things that actually help people to accept and internalise the criticism that you also give in a review.",2.0
g0lwuot,i46iiy,"The worst part is next day during standup when these turds say they spent all day ""reviewing PRs."" For many it's an excuse not to do any real work while pretending they're doing something important.",1.0
g0gbums,i46iiy,"Promise.all is inherently different to resolving promises in a loop

&amp;#x200B;

&gt;if it's not automated (e.g., via a linter or formatter), you're either wasting time by manually enforcing it, or the rules are too arbitrary.

Ironically, a completely arbitrary rule

If you would have done something ""completely differently"" then there should be a discussion as to why that is the case and come to an agreement. Everyone on the team is responsible for the code.

A style guide and best practices for a team are important to establish. By enforcing them you are trading short term slowness for long term velocity. Being able to jump into new code and recognize patterns is very useful for reducing mental load - it's how you would have written that code yourself.",0.0
g0j92p9,i46iiy,"&gt;Promise.all is inherently different to resolving promises in a loop

I think you miss the point of that review - the two are inherently different, but in the context of the code, it is likely that using `Promise.all` would be quicker with no downsides. However, the author of the review explicitly made a point of asking if they were missing anything so that the original code writer could give a reason for the synchronous `await` loop.

&gt;A style guide and best practices for a team are important to establish.

Yes, and automating them means that no-one has to spend time in a code review worrying about them - the CI can handle that completely without having to get another person involved. This frees up reviewer time for the more important questions: does this code make sense, does it use established patterns, does it do what I expect, etc.",3.0
g0hi9db,i46iiy,Agreed on all points,0.0
g0g5w08,i46bj8,"Congrats on the first release. Hopefully many more to come.

For anyone looking to try Tailwindcss, you're supposed to use it with PurgeCSS to remove unused classes and you can exclude classes you don't need using tailwind.config.js.",5.0
g0g7iyi,i46bj8,"hey! thanks

I appreciate tailwind, a lot of work has gone into it. 

PurgeCSS doesn't has any documented support for LitElement (I guess there must be work around)

I think there still must be better solution than what I have come up with in a day, something that can make CSS simpler yet more powerful, we should look forward to paint API. I hope someone must be making a revolutionary library on that",1.0
g0jqkea,i46bj8,"There's no need to integrate with LitElement. PurgeCSS scans your HTML / JS for anything that matches one of your CSS selectors. You could even put them in comments and it would detect them.

That's an absolutely necessary part of using Tailwind, and I'm puzzled how you ever got the impression that Tailwind expects you to ship the entirety of Tailwind.css.

  
Using JS to do the work that CSS can do and was designed to do - which seems to be what this library is doing - is what's truly bloated, inefficient and jarring.",1.0
g0k3lxq,i46bj8,thanks! my bad,1.0
g0ggpd2,i46bj8,"Great job, but it‚Äôs worth pointing out that Tailwind is meant to be used with PurgeCSS, so you only end up packaging the CSS you use. When I use Tailwind CSS on my own sites, it‚Äôs only about 5kb in production.

In other words, I don‚Äôt think Tailwind is really that bloated!",3.0
g0g632d,i46bj8,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",4.0
g0govbf,i46bj8,This misses the main point of tailwind: building component classes with @apply. Also you're supposed to minify your tailwind CSS with their command line utility.,2.0
g0j8zjm,i46bj8,"sorry, I just added that feature

&amp;#x200B;

 

       //JS     
    import {extraCoat} from '../coat.js'
    extraCoat.main = ' di:grid pI:center c:#fff' 
    extraCoat.image = 'pI:center bRa:100vw m:2vw w:12vw  h:12vw b:#000 flo:left'     extraCoat.title = ' fS:xl'     
    extraCoat.desc = ' fS:m m:1vw w:60% flo:left'
           
    //HTML     
    &lt;body coat=""fFa:roboto; c:#222 bSha:1vw 1vw 1vw #0000005c b:linear-gradient(45deg, #CDDC39, #FFC107)  mTo:2vw ov:hidden bRa:5vw w:62% pBo:2vw""&gt;          &lt;div coat=""bSha:1vw 1vw 1vw #0000005c  mTo:2vw ov:hidden bRa:5vw w:62% b:#000 pBo:2vw""&gt;
                              
    &lt;img coat=""image"" src=""./card.jpg""&gt;             
    &lt;div coat=""desc fS:l""&gt;                 
    &lt;h3 coat=""title fS:xl mTo:1vw mBo:1vw""&gt; Contact Forrest &lt;/h3&gt;
                
    Forrest is an old guy, He is slowly dying.                 
    He is really a good person, He cares about everyone                 
    Even though we have hurt him so much, He still loves us  
               
    &lt;/div&gt;                  
    &lt;/div&gt;     
    &lt;/body&gt;",2.0
g0jzcld,i46bj8,Cool!,1.0
g0k2762,i46bj8,A few more things are changed: [https://github.com/itsarnavsingh/dress](https://github.com/itsarnavsingh/dress),1.0
g0ggeuq,i46bj8,well actually there is a intellisense for Tailwind. Its must have if u like tailwind,1.0
g0vs8fy,i46bj8,"Sorry, I can't see through the ego. Smh. Pleb.",1.0
g0vxyb2,i46bj8,"&gt;Pleb

you are so smart",1.0
g0vy1ko,i46bj8,"Cool comeback, really pulled up with some fire here. Dosser.",1.0
g0ysth8,i46bj8,"&gt; Dosser 

Where do you find these words, I am genuinely curious",1.0
g0z6wwg,i46bj8,It‚Äôs Gypsy tongue. You can start at Nadsat and adopt the structure,1.0
g0gedi7,i456d7,Man I would not fare well on some of those. Implement promises in a live coding context? Thats not information I've ever thought to commit to my brain.,76.0
g0gi0jf,i456d7,u/Chthulu_ If I were to have encountered the same question for the first time in the interview I would have struggled a lot. The only reason I was able to do it was because I had prepared well.,25.0
g0hc7fe,i456d7,"What annoys me about these sorts of tasks is that it is very dependent on potentially having done this sort of thing before. /u/abhijeetFTW ‚Äì I'm curious. Were you expected to whiteboard this, or were you given access to Google etc?

When I've been doing interviews to hire for front end, I've personally moved well away from pop quizes and whiteboarding tests. I've found over the years they're a poor way of telling whether a developer will be a good hire or not.

I've moved to setting a task, and pairing with the developer. They have full access to the internet and I stress that I genuinely don't care if they don't finish the test as the actual thing I'm assessing is how they tackle a problem.

* How do they react when they hit a stumbling block;
* What is their their research methodology;
* How well can they use Google;
* How well do they understand what an error message means and how do they debug it.

I've found since switching to those sorts of methods of interviewing that the quality of our hires has gone through the roof. It's actually meant that we've hired people we'd have traditionally turned away in the past.",55.0
g0hmt5j,i456d7,"&gt; dependent on potentially having done this sort of thing before

That kind of sums up a lot of algorithm interviews at FAANG. Those interview questions aren‚Äôt really seeing if you know how to do a certain algorithm, but rather whether you‚Äôve done this problem before on LeetCode or in CTCI. 

And that‚Äôs not even getting into whether knowing how to reverse a linked list is even applicable to the position.",19.0
g0ijida,i456d7,"It was not a white board task. Because of the pandemic all the interviews I appeared were zoom call. Sharing screen while coding the solutions.

Your way of assessing the candidate is good. I feel like it's the ideal way to do it.",13.0
g0j8hqu,i456d7,"That's the same method I like to use as well, although I actually will give them direct links to the documentation of a novel API I want them to use. I want to see how well they can learn an API and I try to have the problem use an API that isn't super popular because that will put everyone on a level playing field. I also let them do as much open book research as they want as long as they aren't flat out googling a solution (could you imagine someone doing that while you're watching, it'd never happen).

I think this promise question could potentially be ok, but only if you were given full access to MDN to double check the interface and behavioral documentation. That could be a good test question if their job regularly involves implementing code to match a tech spec. If you weren't given access to that then it's just a stupid question seeing how good you are at memorizing things you can easily look up.",3.0
g0hjwfl,i456d7,"Need a guy who's pretty competent in Node, a bit rusty on front end but comfortable in React, and working on learning Typescript, who happens to absolutely love building with tests? :-D",3.0
g0j56gv,i456d7,"Hah, this is exactly me as well.",1.0
g0hawn3,i456d7,What were the constraints of this one? Shouldn't `then()` return a new `Promise`?,7.0
g0j59m0,i456d7,Of course it should. The version at the article is super basic version which won't work as original promise.,1.0
g0kyg3h,i456d7,"In his defense, implementing Promise to spec in a 45-minute interview would be a lot. (The most popular polyfill https://github.com/taylorhakes/promise-polyfill/blob/master/src/index.js is a complex 252 lines.) If I were forced to ask this question in an interview, I would probably ask for a much simpler version without immutable chaining.",1.0
g0rofuj,i456d7,,
g0j85cf,i456d7,"Were you allowed to review the promise API while doing it or was it totally closed book? Personally I feel like it would be reasonable if you were given full access to MDN's promise documentation since it doesn't have implementation code but still outlines the behavior and interfaces, but to have to remember all those details off the top of your head sounds really dumb.",1.0
g0j93l4,i456d7,"You are allowed to use MDN if you don't have idea about the underlying API. However I didn't felt the need because I had worked with promises a lot before appearing for the interview.

Also I read articles where people implemented their own version on medium.",1.0
g0j9dd3,i456d7,"Hmm. If I were administering this question I would insist on it being used, or providing a detailed spec. Promises have a lot of nuances and it would be unfair to not provide a lot of detail of what level of behavioral accuracy you are expecting.",1.0
g0j9vlw,i456d7,Expectation was to just provide overview of different states of promises and how you would chain then and catch methods. How'd you resolve and reject based on some condition.,1.0
g0jxkxr,i456d7,"This comes up time and time again - _you may not be expected to know the answer_.

It might be a question designed to assess your problem solving technique(s), confidence in admitting you don't know something, or even more abstract than that.",1.0
g0h2rmh,i456d7,Good thing I'm not looking for a job.  I would have just drawn a dick on the whiteboard and walked out.,48.0
g0nm5j5,i456d7,"Not to take away from how funny this would be, but that‚Äôs exactly what interviewers are looking for. If you can‚Äôt write a simple reduce function using a for loop, then I can stop wasting your time as well as mine.",2.0
g0og1a2,i456d7,"While I can appreciate that, re-implementing promises on a whiteboard is dumb.  The idea behind having a built-in implementation is so that you can just use it without having to bother with the details.

But I guess it's different depending on the company.",4.0
g0oy50n,i456d7,"I think that‚Äôs where I disagree with a lot of the feedback on this Post. I think it *could* be dumb, depending on what you‚Äôre hiring for. 

As an example I once worked in a department where we were building a search engine from ground up. We had to ask questions about BST‚Äôa and Trie‚Äôs. And I can see interviewers also needing engineers that really really understand how Promises work. It‚Äôs weird to criticise the specifics here given we know nothing about the type of talent they were looking for.",2.0
g0pfzik,i456d7,I would agree with that.,1.0
g0g3eot,i456d7,"I would laugh at an interviewer who asked for many of these things. Asking someone to reverse engineer things that are already implemented and well supported in JS is not a good gauge of a person's capabilities. We already have bind, reduce, Promise, and array.flat. I have been involved in web development for over 15 years and have not experienced a single use case for most of those types of challenges. Asking them during the pressure cooker of an interview is unnecessary. 

Any front end position will require knowledge of basic HTML and CSS.",217.0
g0gbn3r,i456d7,"They gauge language knowledge, not necessarily frontend only. Which I'd say is required knowledge for all JS jobs.

The things I object to is having to produce perfectly working code on the spot, or having to remember stuff like syntax or concatenation rules without refering to documentation. I'd be perfectly happy with a candidate who can use MDN and can give me the gist of the solution with pseudocode. Hell, bonus points if they convince me they know what they're talking about without writing a line of code. I'm not wasting interview time on typing and debugging.

Speaking of which, people gripe about having to do interview ""home assignments"", but if a workplace absolutely must have submitted written code for an application (some places have regulations in this respect) then they should be thankful they're allowed to write that code at their own convenience.",59.0
g0gkpsu,i456d7,"Except for when they want you to write an entire application that pulls in data from a webAPI, stores the users likes and dislikes, and has an entire UI. And they want you to write it in React Native instead of React (which you‚Äôve never used before), so you teach it to yourself and submit the project. 

I‚Äôve been in a situation like this twice now. I performed well and completed the assignment only to be told stuff like ‚Äúwell, we thought you‚Äôd be a better designer‚Äù. 

Excuse me?? I didn‚Äôt realize that I was being judged on my design skills considering I‚Äôm looking for an *engineering* job. 

Take home ‚Äútests‚Äù are dog shit. There‚Äôs gotta be a better way.",45.0
g0guq5o,i456d7,"&gt;Take home ‚Äútests‚Äù are dog shit. There‚Äôs gotta be a better way.

Swings and roundabouts. Personally I prefer a take home test, because I can think the problem through in my own time (hated timed versions) and the code I produce is more representative of the code I'd produce in the real world.

Where I do have an issue is when the tests are really long, as you've outlined here. Some basic, ""consume this API and stick some info on the page with production quality code and tests"" should suffice.",25.0
g0gxj7c,i456d7,,
g0gv2ry,i456d7,"There is: take a few minutes and talk to people. This is the real problem with the entire world, nobody just fucking talks. For just a minute.

A :15m opener, in the couple days after receiving a CV, with a quick battery of interpersonal and technical questions, would give a solid first impression of a persons temperament and fit, and then everyone can go on their way with zero stress.

I had an interview the other day . . . it was clear that dude had made up his mind before the intv started. I had a half hour, but I knew a guy that had an hour. Dude was talking to his kids and eating fucking soup during the interview. I'm pretty sure he was reading email too. 

Why you wasting my time?",15.0
g0i9zax,i456d7,"Yup, it's much easier to get a handle on whether somebody is bullshitting in their CV by talking to them and asking their opinions on things, and probing their areas of interest, than it is to waste time watching them poorly re-implement something on the spot without google or tests.",3.0
g0jdqk1,i456d7,Hope you wrote a Glassdoor review AND messaged their manager on LinkedIn to say they're a unprofessional time-waster!,1.0
g0jfddm,i456d7,Too risky. Never burn bridges.,1.0
g0jkcbu,i456d7,"I mean yeah, be careful - but in what world is it okay to have your lunch, answer emails and child-mind during someone else's interview?

If I did that on a client call I'd be *rightly* reprimanded.  
Interview candidates are an Interviewer's clients.   
They should be called out for their bullshit.",1.0
g0h8tbc,i456d7,,
g0h7pog,i456d7,"&gt;Take home ‚Äútests‚Äù are dog shit. There‚Äôs gotta be a better way.

100% this. I used to get excited when I would get a take home test instead of a hackrrank challenge. But after doing this for over 10 times, I prefer hackrrank challenges more.

Most of the take home tests had very loosely defined questions so i had to write a gist explaining my assumptions and reasoning. When I asked them for clarification, I usually got a ""Do whatever you feel is right"" kind of a lackadaisical responses. Ended up getting rejected by most of them without any explanation of where I went wrong. In addition, most of them wanted me to complete these tasks on weekdays with exception 2 companies, which agreed to give me weekend to solve their take homes.

Atleast with hackerrank I have a well defined problem that I can attempt to solve. Hackerrank has also been a hit or miss, but overall, I prefer it to take home test any day.",5.0
g0hezwb,i456d7,For more senior roles you should be able to tell them to just refer to the previous code challenges you've got on your github. Take home tests are great but not when you have to do a new one for each interview process. Any decent interviewer would rather not wait for your submission and waste your time if there is something else they can review. To be honest the whole job hunting process has put me off this whole industry. I would rather make a 1/4 what I do now and freelance and pay a marketer to get me clients.,2.0
g0h0ac9,i456d7,"You either have take home ""test"", code challenge, algorithms, or short temp contract to gauge your skill. I prefer the take homes, myself but I'm sure there are people who prefer one of the others. No one trusts that they can tell if someone is technical enough via conversation, but I think that is basically a circle of bad interviewers training others and none of these people learn how to converse about technical things and gauging how much the interviewee knows without seeing code.

The kicker though is we as engineers have a more brutal hiring process than someone like a nurse, who deals with human lives daily.",3.0
g0ie4bz,i456d7,"I‚Äôve created these for interviews, but I‚Äôd never ask someone to store the data and they can build it in whatever the heck they want. Call an API and display something that looks decent is a pretty good filter for UI devs.",3.0
g0hcsin,i456d7,Sounds like you got taken for some free work,2.0
g0hdmv4,i456d7,"Nahh, the app I was working on had nothing to do with their platform. I would have been the second developer hired, so I think they just haven‚Äôt streamlined their process yet. Still sucks, though.",2.0
g0hhmo6,i456d7,That‚Äôs good I guess. Sucks they wasted your time though.,1.0
g0iz0wx,i456d7,My fucking god. I honestly don‚Äôt mind take home tests but I hate when companies pull some secret bullshit criteria that wasn‚Äôt listed in the requirements.,1.0
g0jdn0w,i456d7,"There is a better way:

* Give a candidate a brief of a problem.
* Give them a day or two to prepare
* Solve the solution together on a 1hr live screen-sharing session
   * Let them share and use their preferred dev environment, tools, etc...  


With this you can see:

* What they did or didn't prepare for
* their thought process while solving code problems
* their ability to deal with (constructive) criticism
* them actually solving the code problem with success

..and all of this in a scenario that closely mirrors the actual working environment.",1.0
g0gka53,i456d7,"First off, A+ username,  His or Her Circumstances is a great series

Secondly, in my experience, spending 4-6 hrs on a project only to receive a response of ‚Äòno sorry, we didn‚Äôt like your code‚Äô was the most common pattern.  At minimum they should be offering feedback if they‚Äôre asking people to dedicate their time to whatever tasks they‚Äôre asking for.  

I know companies aren‚Äôt obligated to do this. I also know that they‚Äôre trying to mitigate their risk.  

However so am I, and home tests are more often than not, a complete waste of time.  

Every job I‚Äôve had that I‚Äôve enjoyed utilized whiteboarding/in person coding, and I‚Äôve hired many engineers with this same pattern. it‚Äôs effective, and you get a good feel for the persons ability and temperament. the second of which is extremely important.",15.0
g0h7zn2,i456d7,"&gt;Secondly, in my experience, spending 4-6 hrs on a project only to receive a response of ‚Äòno sorry, we didn‚Äôt like your code‚Äô was the most common pattern. At minimum they should be offering feedback if they‚Äôre asking people to dedicate their time to whatever tasks they‚Äôre asking for.

hit the nail on the head",3.0
g0gn99h,i456d7,"Fiancee works as a recruiter and in HR. I have the exact same gripe. She told me that providing feedback could open said company to a lawsuit if said candidate does not like the answer. e.g. `Discrimination` as one example. Sucks and I agree. Best thing for the company is to politely decline, save their own ass.",4.0
g0hugg6,i456d7,"Which I totally get, as it‚Äôs part of their risk mitigation,  theyre Looking to guarantee they‚Äôre bringing someone on that won‚Äôt waste their money, or cause problems.  

the problem with that is these companies lose out on great talent, all because They want proof someone can create a linked list properly, lol.",4.0
g0gzz2o,i456d7,"When I was forced to conduct ""whiteboarding"" interviews I always let people know they could pull up docs specifically because remembering the right function isn't the point.

I'm 100% about doing take home assignments, but the trend seems to be doubling up the work now. Every interview I've been doing lately is some home assignment or timed online code challenge + a technical interview that might require more code writing.

I'd rather spend more time on the take home assignment creating a more complex example of what I can do than doubling up on ""interview process"" related to even more code.",5.0
g0i9s62,i456d7,Totally this.  I love doing take home challenges.  Takes the pressure off and I can get my game on.,1.0
g0i9sx6,i456d7,Totally this.  I love doing take home challenges.  Takes the pressure off and I can get my game on.,1.0
g0ibtqz,i456d7,You speak the truth.,1.0
g0gibhe,i456d7,"20 yrs experience here, and agree with your statement. I‚Äôve never been asked anything like ‚Äòbuilding a Promise from scratch‚Äô. Based on the questions alone, I bet this place is a nightmare to work at, and is the type of company that when it came time to discuss salary I‚Äôd give them a wild number and say take it or leave it, and then move on with the assumption they‚Äôll say no.",27.0
g0gtxcv,i456d7,"That said, it's a pretty interesting and unusual task to implement Promise or bind. Says some things about the depth of your javascript knowledge if you can pull it off.",11.0
g0huphz,i456d7,"Absolutely,  and that‚Äôs when you start to real youve hit the ceiling on salary, and you either go in management and hate your life, or you start your own thing. joking/not joking haha",2.0
g0h2f29,i456d7,,
g0j844c,i456d7,"Then you don‚Äôt get the job. At many top companies, they might have their own runtimes, engines, and performance needs. Its not unreasonable to expect a candidate for a good job to be able to understand the fundamentals of a language.

You can‚Äôt implement reduce on your own? No way I‚Äôd hire you. Its a fucking for loop, not a deep algorithm...

I know its cool to say to not ask hard questions, but this is a low bar. You‚Äôre not complaining about balancing a BST, but about this? If you want the salary of the field to go down tremendously, and code shipped to be even shittier, this is how you get there. Remove all the gates for language knowledge.",5.0
g0llks4,i456d7,"I agree, and on a side note it's very odd that people use YOE as some kind of proof to support their argument. It's like those people that say they've had 15 years of experience parenting and so they know what they're doing. No, if you're a bad parent then you're a bad parent.

These questions are really basic and standard for assessing how a candidate thinks and problem solves. If you can't solve these questions then you won't be able to build anything worth while. HTML/CSS/JS API can be googled and picked up by anybody in a week, it's not a huge deal.",3.0
g0njjgk,i456d7,Spot on. I'm finding alot of people's responses here dissappointing. CApturing the intent of how bind works is a 3 liner. No interviewer is expecting you to handle every edge case.,3.0
g0guca2,i456d7,"Agree completely. Also there's a major red flag in the whole extending core prototypes thing. If the company is doing this kinda thing for real, it means their JS would look different to the actual JS language, which is just an absolute no-no and causes nothing but pain.

Don't do this people.

Also the focus on classes is telling too. The person who created these questions no doubt came from a traditional OOP background and now tries to apply this thinking to JS. Problem is, JS does OO really badly. I'd probably stop this test half way through and tell them this doesn't look like the job for me. Unless I really needed the money of course.",8.0
g0i60qo,i456d7,"I had one of these types of questions in a FB interview. I actually thought it was a great question. It forces the engineer to consider all options, even anti-patterns. You should be communicating with your interviewer the whole time and they should let you know that an anti-pattern is the right approach if you bring it up. With FB I just tossed out ""this is a terrible idea but we could replace the prototype function (or in this case the window function) with our better one"", and they let me know that was exactly the right approach they were looking for. Just remember to discuss why it is a terrible idea... but when faced with a problem that NEEDS to be done given certain constraints, anti-patterns sometimes are the only answer to deliver ""right now"" and the mitigation strategies needed when using anti-patterns lead to great discussion as well.",1.0
g0h8qqk,i456d7,,
g0gvj37,i456d7,"When I interview people I ask one react related question like how would you run an asynchronous call inside use effect or when is it better to use redux instead of context hook. You can never tell by questions if someone is good. Most times they are nervous and a better candidate might mess up against a guy who can‚Äôt do much but can talk a big game.
It‚Äôs always best to give them a small coding task that doesn‚Äôt waste a lot of time. You can see how long it takes, how they organise and write code and the results are always fascinating.",6.0
g0ggdo4,i456d7,"I think it really just depends.

I agree with you about many of those questions, but only because they test knowledge of `this` and prototypes ... when I would argue that (at least for modern React development) knowing how to use classes is almost a bad thing, because it will lead you toward the wrong (non-functional) solution.

But if you work in an environment/framework where inheritance still matters, seeing whether an applicant can (say) re-create `flatten` tells you a *huge* amount about whether they can work successfully with your OOP codebase.  You can ask someone ""how does the prototype chain work?"", but seeing them answer this question tells you so much more about whether they are capable of *applying* that knowledge.",2.0
g0glerf,i456d7,,
g0gzj81,i456d7,"I agree with you, asking these things during a whiteboarding session seems strictly unnecessary especially when they already exist in the language. It is similar to all those implement quick sort questions asked, when there are so few cases someone reaches for the non-language baked in sort.",2.0
g0himzg,i456d7,"yeah, if this is what passes for interviews, i'm staying unemployed... that was a lot of arbitrary garbage in there.  very little of any use.",2.0
g0g6n9b,i456d7,[deleted],4.0
g0gaay6,i456d7,"I'm all for assessing a person's problem solving technique and process but with real world problems that they will actually encounter in the position. For instance, if the position involves interaction with many APIs, how would they architect the app. If it's React based, what would be their process in determining if the app needs MobX, Redux, or Context.",8.0
g0nkyv4,i456d7,"Why not both? Here's a real world problem, and oh BTW, can you demonstrate how to write a recursive function (the flatten question)",1.0
g0gv9dt,i456d7,"I was a principal dev at the BBC for years. Worked at BSKYB on projects of a similar scale, worked at Electronic Arts before all that. I've written code that scales beautifully, is comprehensively tested, easy to extend and build upon and is delivered frequently in short incremements, delivered to millions.

I'd probably fail most of these off the top of my head. Why? Well I don't use classes in JS for one thing. I avoid them completely and I think my code is all the better for it.

Also I hate being put on the spot in an interview situation like this.

No questions about tests? Tests are one of the most fundamental aspects to writing scaleable code, and guess what? Most people write bad tests. I don't write bad tests.

I bet my code is more elegent, better tested and easier to work with and build upon than the person who wrote this test, but I'd fail this test if I wasn't able to Google during the test (I don't use classes, so I forget the syntax all the time).

What's more there's the common mistake of thinking the person giving the test is automatically the expert because they're asking the questions. Extending the JS primitive prototypes for String and Array? That's total dogshit and you should stop doing that right away. Anyone who did that in my code base wouldn't get through a PR at all, and we'd be having words pretty quickly.",5.0
g0h218p,i456d7,"It is wild that people only care about can you press keys to make something happen. Most companies are doing a poor job seeing if you can design systems in any capacity outside of a single file. Excellent, someone knows how to write an algorithm, but can they write a system that doesn't fall apart from being an unmaintainable, unreadable, unscalable, mess while that algorithm chugs? I'd argue the two have little in common one is a micro problem and the other is a macro problem. Companies overly care about the micro.",3.0
g0h8iw9,i456d7,Boom! You're spot on!,1.0
g0h416m,i456d7,[deleted],1.0
g0h7cak,i456d7,"My issue with this stuff though goes a bit further. They're really daft questions. They don't reveal anything about what my code might be like to work with in reality. In my opinion they're bad interview questions for that reason alone.

I'd care more about how the person breaks down a problem - how do they test it? How do they ensure the code only does what it needs to do now but can be extended and built upon in the future? Tests are a huge part of modern development, and the fact there are no questions about tests here at all is very telling.",1.0
g0g90xn,i456d7,"u/thetweek I completely agree with you over asking question based on their past work. Unfortunately interviews are not always the place where the person interviewing does so with the intention of hiring you.

I have sat for interviews where the interviewer has asked me questions not relevant to what I did on daily basis just to undermine me. There were times when they simply rejected my answer although right simply because they never heard or encountered it or didn't fit there model of thinking.

I have also know people who look up the answers to the question they are to ask the candidate before coming to interview.",4.0
g0nkwi6,i456d7,Spot on.,1.0
g0h5p9o,i456d7,"2 parts to the problem:

1. There is no standardization of the industry at all in terms of certification. If this was solved a ton of people faking their way through interviews would be easily thrown out thier prospects for the job and it would be easier to tell who to hire and who shouldn't be hired.

2. All companies love to follow the trend of whats been good for big companies. But all software jobs don't need people who can engineer a loop and variable initialization to the most optimized level and yet all software companies require it. Most of the time you don't need an amazing solution that runs in constant time and memory usuage unless you're managing a ton of data which companies lie so often about.",1.0
g0j1tcn,i456d7,I hate the argument of ‚Äúwe‚Äôre testing how you think and solve problems‚Äù when they give me a depth first/breadth first search. What I‚Äôm doing when I hear those is thinking back to college and seeing what I can remember,1.0
g0j58y7,i456d7,"Reimplementing Promise and array.flat I could live with although it is stupid and fruitless.

But I'd walk away from any company that wants me to add methods to String prototype though - as I have a feeling these guys actually do that type of shit in their production code as well, and I wouldn't want to work with them.",1.0
g0nkssw,i456d7,"The interviewer wants to gauge whether they know how prototype inheritance works in JS, not necessarily to go around writing a bunch of overrides to built in API's. They may have a slightly old code base that uses a lot of function prototype assignments (to their own functions, not built ins).",2.0
g0o49ve,i456d7,"Then it would be significantly better for everyone involved if they asked the candidate to display knowledge of factory constructors and prototype method definition rather than this.

Although, truth be told, this entire concept of testing for ""our way of using the language"" is a shitty test that will likely land you with people that are good at learning to pass interviews, rather than people who are good at thinking, solving problems and being good team members.",1.0
g0ovoas,i456d7,"I don‚Äôt think the question or challenge at hand tests for any particular usage of the language. Prototype inheritance is a standard JS language feature, as are promises, reduce, recursion, and most of the other questions posed to the candidate.",2.0
g0oxuw1,i456d7,"Most programmers worth their weight in salt are polyglots, capable of learning idioms even if they didn't use them. I would never turn down a candidate for not being able to utilise prototype inheritance model, doubly so for a frontend position. 

Testing for JavaScript prowess over testing for problem solving capacity, technical intelligence and programming skills is still less likely to land you good candidates.

I am of opinion that a junior should be tested for algorithm thinking, a senior should be tested for code organisation, and architect-level should be tested for both capacity to understand business requirements and capability of designing solutions at an architectural level.",1.0
g0oz0g3,i456d7,"I completely agree, particularly with your last point. Although to your second point, we don‚Äôt know that some or all of these interviews didn‚Äôt also test for problem solving etc, we‚Äôre just not hearing about them.",1.0
g0jxvpl,i456d7,I couldn't help but wonder what JS runtime would support rest syntax but not bind.,1.0
g0nkjtv,i456d7,"Then you've missed the point of the challenge. The interviewer wants to gauge whether you know how bind works. The most accurate way to do that, would be to ask you to implement it.",2.0
g0nk3w8,i456d7,"Just with regard to the first 9 Js related questions, I don't think they are that unreasonable. No one is expecting you to implement the question perfectly line for line. What most employers are trying to gauge is whether you understand what these API's are roughly doing under the covers. I personally would use tests like this (maybe not exactly) to weed out developers claiming they understand how an API works, but when pressed on it really know fuck all. 

Take flatten as another example. Can you write a recursive function? Great, that's all it is. Is it important to test whether an engineer can write a recursive function? Holy shit of course is. So how do you test for that? You give them an abstract example. If you take that as 'dah tHeY wAnT mE tO rEpLacE bUIlt iN fUnCtiOn', then you're not worth hiring.",1.0
g0gqu9t,i456d7,"As an interviewer, I tend to steer away checking language knowledge directly. There‚Äôs no point reverse engineering utilities already part of the toolkit. 

However, we ask problems that require knowledge on those and that‚Äôs how we grade.",11.0
g0gscmy,i456d7,And that's how it should be. Sad that a lot of company go with the former approach,5.0
g0nkcho,i456d7,"But that's exactly what alot of these questions are gauging. The concept of flattening an array, or reduce, or binding an arg to a function is an abstract concept. If your hiring a JS person and they say they understand how Promises work, it shouldnt be that hard to write up your own. No ones is going to flunk you for not making it 'to the spec'. They are going to fail you if you stumble your way through and cant produce anything close to a solution.",1.0
g0nkg45,i456d7,"What if you need to hire a React developer to work on an existing React code base. How do you determine if they are going to know how to use it? Sure they can learn on the job if they are smart, but what if you are hiring for a 3-6 month contract?",2.0
g0g098j,i456d7,"Front end questions and not a single question and HTML or CSS. No wonder front end is a shit show these days.

Most of these are data manipulation and fall under the 'back end programming done on the client side' spectrum of development.

Edit: Defintely not a criticism of the OP by the way. It's great that they've gone out of their way and compiled this list üëè But it is worring that ‚Äì it appears ‚Äì companies that are hiring for front end positions are not asking any questions about the two most important languages in front end: HTML and CSS.",115.0
g0g1fp2,i456d7,"u/frontendben The role I was getting interviewed for was more on the side of application development using JS/React.

However if you getting interviewed for something that would require you to make layout's, convert design/wireframes to code than for sure HTML/CSS are must.

Here are some of the questions that were asked on HTML and CSS front.

1) Difference between inline vs inline block vs block

2) Difference between flex and grid layout

3) Different positioning system in CSS

4) Specificity and selectors priority in CSS

5) Difference between display none vs visibility hidden vs opacity

I have added this questions in the resource blog.",40.0
g0glqxp,i456d7,"The easiest and most effective way to judge someone‚Äôs ability to use css is ask them ‚Äòhow do you center a div? when they give you an answer, ask for another way, and another way and another way.  2-4 usually proves their experience working with css.",22.0
g0h2mod,i456d7,That's a pretty clever idea and possibly one of the quickest and easiest to know how much they've worked in css. I'm going to steal that in the future.,7.0
g0hcztr,i456d7,its also a cruel way to make the veterans feel bad about themselves :) css is not your friend!,14.0
g0hjb5i,i456d7,"Oh I agree. I was like damn, I can think of 3 ways to do this already without digging too much. Then I realized we basically fought in the equivalent of WWI &amp; II with how terrible CSS and compatibility used to be.",6.0
g0hshir,i456d7,"Haha yeah that‚Äôs why I bring it up.  If anyone mentions the position/margin left hack, that usually indicates that theyve been in the industry for quite a while.",1.0
g0j8ea2,i456d7,... That explains my CTO and manager. Holy crap. It's all over the codebase and frustrates the hell out of me.,1.0
g0ht0bn,i456d7,"I used to agree but now I love it,  mostly because you can replace a lot of JavaScript behavior with css.  And when using sass, recognizing a pattern, and turning it into a mixin is incredibly satisfying.",1.0
g0imcrw,i456d7,Yeah I'd much rather write my own reduce lol,1.0
g0hsi8n,i456d7,Please do!,1.0
g0h9w88,i456d7,"I totally relate to your comment.

Had an interview few weeks ago ( for mid level front end dev job ) and the guy asked me to write The Game of Life algorithm...

I asked why and he said ‚Äúwe do a lot of data manipulation‚Äù so I said ‚Äúthis types of calculations should be done on the back end‚Äù, needles to say I must have hurt his feelings because his tone changed and he felt offended.

Front end theses days is a bunch of middleware that does xyz to display a fucking number or name, its less about presentation and user experience.

People should not be afraid to call out bad developers and bad practices, even if its your interviewer.",10.0
g0j9rud,i456d7,,
g0g2qm4,i456d7,,
g0fy7iy,i456d7,"How‚Äôd you feel about the process, overall? Did you feel like the questions were fair? Were the exercises valuable? Do you feel what you were being tested on was relevant to the job you were applying for?

I struggle with this stuff a lot as an interviewer. It‚Äôs difficult to come up with exercises that put candidates at ease and let them show what they can do, that relate to the actual job being looked at, but can also be done in 45 mins and give enough information to a hiring manager to know if they‚Äôre a good hire.",8.0
g0g4w5o,i456d7,"Unfortunately I can't find the article right now, but these ""Solve this issue at the Whiteboard"" assessments don't assess how good some can solve the issue but how they react and present under pressure.

Introverts and woman perform statistically worse under these condition even if they fit the job.

Also even the most senior Developers google basic stuff on a daily basis. And this doesn't mean they are bad.

And another issue I have with such questions is: Sometimes they ask for certain aspects of a language you may have never used before.

As an example the bind-Function is more or less unknown for someone using ES6 Arrow-Functions. The last time I used bind is like 2 years ago.

The question behind this task is to find out if ""they know what THIS is"" and if they understand the concept behind it. Not if they know how to implement bind.

So I rather avoid giving such tasks in interviews.",25.0
g0hk2w5,i456d7,"every now and again i'll use .bind to get myself a nice new function that includes a specific set of arguments to it...  

not very often tho",1.0
g0pcbfr,i456d7,"Agree, I never ask candidates to whiteboard code. It‚Äôs a waste of both of our time. I‚Äôll use whiteboards for system design or architectural questions when it‚Äôs useful to draw out diagrams or structure, but never for code.",1.0
g0g0d8e,i456d7,"u/josephschmitt good questions.

The overall interview process was good.

Some of the companies I got interviewed for, had good system of assessing the candidates based on candidates past experience and their resumes.

Some of the companies didn't go through the trouble of reading the resume.  Hence, asked questions that were irrelevant.

If there was any one aspect of getting interviewed that bugged me, it has to be the take home assignments. A lot of companies have assignments for screening the candidate. My experienced with this round has been negative. Most of the time I didn't get any reply or even if I got one it was not constructive.

I avoid taking assignment.

Asking candidates about what they have done in past, what challenges they faced and how did they overcome those challenges are good questions for starters.

Followed by questions that are required for the role they are getting interviewed for. If it's someone who is a fresher Ds/Algo comes handy in assessing their problem solving skills.",9.0
g0ghepq,i456d7,"&gt;If there was any one aspect of getting interviewed that bugged me, it has to be the take home assignments. 

Amen!  As a senior dev (team lead) I literally stop applying to companies that ask me for a homework assignment, but that's because:

A) I'm looking for a job I want to stay at for awhile, and homework assignments tell me the people in that workplace are likely assholes who lack empathy, and I don't want to work there

... but, even more importantly ...

B) *I have the luxury* of not having to work at bad workplaces

I mentor junior devs, and when they're trying to get their first job they *don't* have that luxury.  So I tell them:

&gt; Look, homework assignments suck, they'll be a huge waste of time, and they tell you that your future employer is the kind of person that would rather waste hundreds of hours of strangers' time than use their damn brains and interview properly (and I say this having hired plenty of devs without resorting to homework assignments).

&gt;But you don't have the luxury of refusing them, so just suck it up, think of it as yet another chance to  ""get your hands dirty"" and learn your craft more ... and if you do get the job, you can always quit it and go to a *good* workplace a year later.

The sad thing is, I don't really think everyone asking for homework assignments is truly an empathy-less asshole ... but again, when you waste tons of other people's time instead of doing your job, that tells the world a lot about you.",7.0
g0glyw2,i456d7,"u/ghostfacedcoder Yeah I really find it hard to take an assignment after mentioning all my past experience, the kind of work I've done. I also try to put links to the applications that I develop so they can have a look and gain first hand knowledge of my work.

But a lot of them only come back to you with a request for an Assignment.",3.0
g0g1zr0,i456d7,Your solutions include messing around with prototype. Isn‚Äôt that considered bad practice? You write flatten function which is great then you assign it to prototype.,9.0
g0g2gor,i456d7,"u/Major-Front yes monkey patching of in-build methods should be avoided. However, the question was asked with the intention of understanding if I could implement my own method and how I would make it available on instances.",10.0
g0i7r53,i456d7,"Judging from the questions asked, I am assuming many of these are from the top, high paying companies. They want that best of the best.

Correct me if I'm off base here, but that includes recognizing something is not normally a good idea, but given the constraints of a situation and the necessity of completion, knowing that it is a solution for the task given... and in an interview, the only solution.

They want the people who think outside the box and people who know enough to recognize ""this is bad but must be done"".",1.0
g0ilytn,i456d7,"I wish that was the case here. Usually you would expect the companies asking this level of questions to pay you well OR atleast match perks and benefits provided by FANG.

However that's not the case most often. Every other company has this questions in their repository. And guess what they won't pay you much or match anything remotely offered by FANG.",2.0
g0gvrz5,i456d7,Who is even asking these questions?  Looks like the interviewer has no idea what is really valuable knowledge of the devs. None of those are used on a daily basis in the battle. For 10 years in JS I used some of the patterns an only a couple of times.,8.0
g0gwksk,i456d7,"Yeah, tell me about it. I am pretty sure none amongst the FANG would ask any from the above list, unfortunately most of the interviews are bloated with questions like this when interviewing for companies other than FANG. Atleast that's the case over here.",2.0
g0h15tq,i456d7,Have you been interviewed for the ECMAscript TC39 committee with all these questions? If so those are make sense,3.0
g0h50lw,i456d7,[deleted],1.0
g0hkghk,i456d7,"also, it's one of the few pieces out of all of that that appear to be not arbitrary garbage.",3.0
g0ie542,i456d7,"Question: What‚Äôs the debounce is? 
Answer: it‚Äôs a lodash function!",1.0
g136jdh,i456d7,,
g0fwell,i456d7,"If you are a front end developer who is planning to appear for interviews OR is in the process of one, I've collected a list of resources that has helped me in my recent job hunt journey üëÜ",34.0
g0fxgin,i456d7,so did you succeed?  for what salary they asking all this post grad shit?,12.0
g0fy7ml,i456d7,"Hey u/1d01. I've around 5 years of experience. The question may not necessarily be asked to someone who is a fresher. However, some of it may come handy someday.

You can also find the link to resources I referred for preparing myself for the interview.",16.0
g0idpel,i456d7,This scared the shit out of me as someone who is self taught trying to apply to entry level junior positions. Happy to hear you have 5 years of experience.,5.0
g0im5ys,i456d7,If you are fresher you need not worry. You can get an edge amongst the rest if you know some of those concepts.,1.0
g0g5446,i456d7,"I'm glad you put this together but I find them pretty surprising. Some of them feel more like trivia than tasks that demonstrate an ability to build features or fix bugs. The sum of them wouldn't leave me feeling that a candidate was worth hiring for any real work in my React project. Maybe they'd help to weed out people who don't know enough to even get in the door? Or maybe I'm looking for the wrong things when I evaluate candidates.

Could you tell us more about what kind of companies were asking these questions and to what kind of jobs you were applying?",13.0
g0g76fr,i456d7,"u/sickcodebruh420 I applied for Software Engineer III/Front End Developer-Reactjs.

I had appeared for many companies including Walmart Labs, Tekion, MakeMyTrip, content stack to name a few.

For assessing react I was asked to explain react fibre architecture internal working, traversal, state, props updation, life cycle methods, hooks, virtual DOM.

I was also given take home assignments.

Here is the [link](https://dev.to/devabhijeet/resources-for-interview-preparations-front-end-3o3j) to resources I used for preparation",5.0
g0g6n2w,i456d7,"Some of  them, especially reimplementing native APIs, are absolutely ridiculous.",11.0
g0g9mkr,i456d7,"Why would anyone write the code in #3? If I was project lead and someone committed that, I would ask them to rewrite it in a few lines of SQL (assuming youre using a relational db, which you should for that sort of project)",4.0
g0goqgv,i456d7,"Sometimes you have to pull data from your internal system and map it to a customer's system or 2 different end points from a customer and map the data.

Either way they guy writes code really weird and complicated looking",5.0
g0h1nec,i456d7,"I've had instances where the sorting had to be done client side for responsiveness, but that's always been when the data comes from a complicated report that takes a long time to process but only produces a few results (I'm talking like 3+ seconds for &lt;100 rows). Not a common enough scenario to be worth asking in an interview IMO.",3.0
g0g01o9,i456d7,"Wait. Front end devs flatten arrays..? For what purpose ever?? That question along with the custom promise woulda tripped me up. Conceptually they are easy to follow, but unsurprisingly I‚Äôve never had a need for either in real dev life",15.0
g0g2vkq,i456d7,I have been a frontend developer for 8 years now and have flattened many arrays.,19.0
g0g6fm2,i456d7,rarely needed. we have a single use of .flatMap in our codebase,6.0
g0g26bc,i456d7,"u/FunctionallyReactive you would not do that on your  job on day to day basis just like you won't be doing anything related to trees, graphs, Dynamic programming. Nevertheless, some organisation do want you to know how things work internally so as to gauge your approach and problem solving.",6.0
g0g27xn,i456d7,"Been working with front end for over a year now and have never had to make a custom promise. Hell, I've never even had to write a simple promise professionally ever. Flattening arrays however has happened a couple of times depending on the task.",1.0
g0g35ry,i456d7,"I think flattening arrays as a question is about implementing flatten() yourself whereas in real life you'd just use a third party utility function.

You will have to write promises eventually, just a warning.",5.0
g0g67zr,i456d7,,
g0hbsmm,i456d7,"&gt; Hell, I've never even had to write a simple promise professionally ever.

I understand not writing your own custom promise, but if you aren't using native promises then you are foregoing one of the most powerful features of modern JS for no good reason.",2.0
g0hcfo5,i456d7,I understand what they are used for but I was trying to point out that I've never had to use them in my line of work.,1.0
g0g50xs,i456d7,"I think the questions are more so to test your understanding of how those things work, and your ability to translate your logical thought into code.",3.0
g0g2uxv,i456d7,"u/morningcoma Correct, nor did I felt the need to create my own promises. A real promise library is more complex and handle a lot of cases than what I've written.",1.0
g0hj324,i456d7,Do recursive stuff.  You'll find a need.,1.0
g0i8dxn,i456d7,"Generally when this question is asked... if you solve it recursively, you proved you know recursion.

But then they will ask you to solve it iteratively. Which will prove you understand stacks.

It actually gives a lot of insight into one's knowledge with something that can be coded very, very quickly in under 10 lines of code (iteratively) and around 3 lines recursively.",1.0
g0g2z78,i456d7,,
g0g2xyy,i456d7,Interesting post... I guess I still have a lot to learn!,7.0
g0jwphm,i456d7,....or companies who ask a lot of these questions to a Frontend have a lot to learn,1.0
g0g3ic5,i456d7,Is this relevant for someone in germany?,3.0
g0g6cxs,i456d7,u/Nannerr No idea about this. This are the questions that are typical over here in India.,7.0
g0g6gug,i456d7,"Thanks for the answer, maybe someone from germany can answer this :)",2.0
g0geaf8,i456d7,"I am working as webdev in Austria and I never had to answer questions like that. It was usually just a coding challenge which could be done from home.
I can imagine it heavily depends on where you work tough.",3.0
g0geklj,i456d7,Thank you :),1.0
g0gqh6g,i456d7,"Hey,

I don't want to get into the technical part here because of the lack of knowledge, but OP's post is kinda amazing and he seems such a cool dude, just wanted to acknowledge that.",3.0
g0gsiy1,i456d7,Thanks!,2.0
g0hkqvt,i456d7,"yep, most of us are discussing how garbage interviews like this are, but here's OP out here trying to do us all a solid anyway! Thanks /u/abhijeetFTW",1.0
g0imv92,i456d7,"Lol those questions

\&gt; implement promises

\&gt; then you spend 50% half of the year writing forms in the job",3.0
g0in4w4,i456d7,lol. Worse... You are asked to work on legacy code written in jQuery.,3.0
g0gqy8a,i456d7,"With all due respect, I don't agree with these kind of questions. Sometimes interviews are way too complex for the position required.

My experience is that I always get the type of interview where the hiring people asks about code complexity (Big O notation). For example binary indexing or stuff like that and when you land the job the most difficult part of it is doing unit testing as the rest is all done by libraries (lodash, moment, request, etc).

I get that it's important to know the questions concepts but at least please when you do these interviews make so that the candidate knows where it's landing. It's very frustrating to be prepared to a difficult interview (nerves, remember all these things by memory, etc) for only making components composition at last...",2.0
g0hkz4x,i456d7,"As someone who's done professional development for a decade, I've had to know Big O exactly zero times.  At this point, I'm so far removed from it, about all I can say is that ""it's a measurement of the maximum number of iterations of an algorithm in the worst case scenario"".",2.0
g0huv1i,i456d7,"Yeah, totally agree. Same here",1.0
g0gs2kn,i456d7,This are typical in Indian startup scene.,1.0
g0gz5g8,i456d7,"Damn, you sure know your job... yes, i was interviewed by indian people",1.0
g0guh57,i456d7,"Some of those questions seem difficult. What level were these questions aimed towards or I guess what position were you trying for? 

Thanks for sharing. I have a lot to learn",2.0
g0gupaw,i456d7,"I had applied for the role of Software Engineer III/ front end engineer, React",1.0
g0gzy8v,i456d7,Ahhh so quite a bit above me. Thanks for the response!,1.0
g0h7v4j,i456d7,"Even though I have done half of these things once or twice at some point, they are not things that I would expect someone to recall off the top of their head.  The rest I would actually be concerned if someone thought it was important to remember.",2.0
g0hgirn,i456d7,"That CustomPromise is wrong.  Calls to `then` need to return a new promise, and it doesn't properly handle multiple calls to resolvers correctly.

**Edit**: Decided to try my hand at doing it right-ish: private state, latching, exception -&gt; rejection handling, promise spawning, deferred execution of `then` callbacks on resolved promises.  Not supported correctly: `finally` (`finally` is more than just `then(handleFinally, handleFinally)`; `handleFinally` must happen after all `handleResolved`/`handleRejected` calls). 

    const [PENDING, RESOLVED, REJECTED] = ['PENDING', 'RESOLVED', 'REJECTED'];
    function CustomPromise(action) {
      const P = this.constructor;
      let value;
      let state = PENDING;
      const happy = [];
      const sad = [];
      this.then = (success, failure) =&gt; new P((resolve, reject) =&gt; {
        const settleWith = (settler, handler) =&gt; () =&gt; {
          try {
            settler(handler(value));
          } catch (e) {
            reject(e);
          }
        };
        success &amp;&amp; happy.push(settleWith(resolve, success));
        failure &amp;&amp; sad.push(settleWith(reject, failure));
      });
      this.catch = failure =&gt; this.then(undefined, failure);
      const run = callbacks =&gt; callbacks.forEach(c =&gt; c());
      const flush = (immediate) =&gt; {
        if (state === PENDING) return;
        const h = happy.splice(0, happy.length);
        const s = sad.splice(0, sad.length);
        const complete = () =&gt; run(state === RESOLVED ? h : s);
        immediate ? complete() : setTimeout(complete, 0);
      };
      const settle = (v, s) =&gt; {
        if (state === PENDING) {
          value = v;
          state = s;
          flush(true);
        }
      };
      try {
        action(result =&gt; settle(result, RESOLVED), error =&gt; settle(error, REJECTED));
      } catch (e) {
        settle(e, REJECTED);
      }
    };",2.0
g0il438,i456d7,"Your solution looks good. I will try it out.
The solutions I wrote were not production ready and missed a lot of cases.",1.0
g0iqyk5,i456d7,"And I get it: the 15 or so minutes you've got to write code in an interview doesn't leave a lot of room for anything more than ""it needs a then and catch function"".  I've just actually run into the cases where a trivial ""thenable"" causes problems.

Ooh, another case my impl doesn't catch: if you resolve / return with a promise.  If `value` is thenable, it needs to be inserted in the resolution chain.

(This is why we use libraries, hiring folks.)",1.0
g0hjk93,i456d7,If I'd get question 6 it mean - I should tell thank you and leave.,2.0
g0il1zu,i456d7,It seems to an extremely common one.  I've gotten it twice.,1.0
g0i6h7f,i456d7,"number 6 makes me laugh haha, pretty absurd company would ask you that",2.0
g0il4zg,i456d7,Unfortunately it's one of the most popular questions on Leetcode.  Nerd hazing.,1.0
g0hkg6p,i456d7,"Those are at least interesting problems. Implementing promises? Would have never thought of that. Appreciate the peek behind the curtain; will add these questions to my interview prep file.

¬†

^^Still ^^going ^^to ^^bitch ^^about ^^your ^^lack ^^of ^^semicolons ^^though",2.0
g0fy3no,i456d7,Bug I think: timer vs timerId,1.0
g0g7bn8,i456d7,"I also thought it was a bug that he used clearInterval to clear the timer left by setTimeout, but TIL that clearInterval and clearTimeout are functionally identical.",1.0
g0gtfoz,i456d7,"The bug was he was assigning the return value from setInterval to a ""timer"" variable, but then used ""timerId"" when calling clear.",1.0
g0il8mb,i456d7,You can have more than one bug,1.0
g0j3zuu,i456d7,True!,1.0
g0fyj9e,i456d7,,
g0gg6o0,i456d7,Were you able to answer all these during the interview?  How long did you get for each?,1.0
g0ggwan,i456d7,"&gt;Were you able to answer al

u/TheZintis Yeah... Prepared well for the interview. Obviously not in the first attempt.",1.0
g0gxwsx,i456d7,"Maybe this is a dumb question but why is 

```'two' &gt;`three'```?",1.0
g0gzrr8,i456d7,"JS uses the ‚Äúlexicographical‚Äù order. In other words, strings are compared letter-by-letter",2.0
g0h42l7,i456d7,"You know, I considered that but my head got all fucked up and decided the 'h' is somehow 'bigger' than the 'w'. Imma get something to eat...",1.0
g0h03z3,i456d7,"When comparing strings, the ASCII value of chars in string is compared. If the first char ASCII from both string are same the next char ASCII value is compared and a Boolean is returned.

Btw it's not a dumb question.",2.0
g0h5c4a,i456d7,"Can someone please explain 5# ? I'm a hobbyist so I feel pretty dumb sometimes  and I can't for the life of me understand how this returns a hash. 
Seems like it just adds a function to the prototype ...",1.0
g0hla36,i456d7,"&gt; Implement a method getHashCode on string instance. The method should be available on all strings.

It doesn't, it implements a method on a string instance.  Also, generally, a bad idea.",1.0
g0j16de,i456d7,Ok then. Thxs,1.0
g0h5n7g,i456d7,"Thanks for sharing this. I‚Äôm a long time front end developer who has mostly landed jobs through referrals, so I‚Äôve never had to do a technical interview with a lot of these types of questions. I know JavaScript well, but I don‚Äôt think I‚Äôve ever prepared for an interview that throws these types of questions at you. I‚Äôm going to study these.",1.0
g0i9c18,i456d7,"I‚Äôm so glad I have other skillsets, this is just not a game I want to play.",1.0
g0ie8wz,i456d7,In your implementation of `bind` you forgot to return the result of the `func.apply()` call.,1.0
g0im8km,i456d7,Yeah that's correct. Thanks for pointing it out.,1.0
g0izsys,i456d7,"Chiming late here. But there's a trick to some of these I think shouldn't be taken for granted, and that's approach and thought process. You're not going to reimplement native functions, let alone promises holy shit, one-to-one, but you can show how you could. One of the best safeguards in such situations is to say that you'll give it a crack but anything youd write at this point would be a naive interpretation of its function. Proper testing is no substitute.

This should tell an astute employer that you think about more than just ""writing code"" which is a total industry speak like deliverables, synergy, and return on investment. Don't be afraid to speak out and break down your thought process because code is nothing without it.",1.0
g0j15ai,i456d7,"Yeah, I had to constantly converse with the interviewer while I was implementing the solution.

I would converse so as to let the interviewer know my thought process and why I am I doing what I was doing.

I'd normally start by saying ""I am not sure how it is implemented by the API creators but this is how I'd approach this""",2.0
g0j1d8f,i456d7,Good work. Plus communication is a massively lacking soft skill in the industry. You should score points on that alone.,2.0
g0ja5px,i456d7,"A very helpful compilation of questions.

Speaking as a dev of 10 years professionally (and 15-20 years overall), I agree with others that some questions (e.g. implement promises) are just terrible interview questions.

I mean, it's good to ask _some_ coding questions in an interview, but not ones like that.

I've interviewed a fair number of people in my time, and I've found that a mix of talking through the person's experience and asking some technical questions verbally is usually good enough for determining how good someone is.

But maybe 1 in 10 candidates can 'slip through the net' and talk a good game, but actually be terrible. So a quick 15-30 minute coding expertise is also a good filter, but it shouldn't be anything difficult. Maybe implement a mini frontend or backend API (depending on the job) for a specific use case. That shouldn't be too difficult, but it also will show whether someone has some sort of hands on experience, or can just talk well.",1.0
g0jgivy,i456d7,"This is what interviews look like if you apply as a software engineer - so to any webdev's in here: chill out, it's not going to be *that* hard ;)
 
Never was for me at least.",1.0
g0jjial,i456d7,Same problem happen with me during  the job interview. So they  are asked all front interview question but i am not fared. I tell everything with confidence.,1.0
g0mulyd,i456d7,Will share with my students. Thanks :),1.0
g0g6tes,i456d7,,
g0ftuou,i43qxm,"Unrelated to your article, but upon visiting it I was given this warning by Medium:

&gt; You have 2 free stories left this month. Sign up and get an extra one for free.

If you want more people to read your content, my advice is move off of Medium.",25.0
g0fup5z,i43qxm,Pro tip: incognito mode,14.0
g0fz89s,i43qxm,"Hey. Thanks, I do take advantage of it! :)",5.0
g0n7u2l,i43qxm,Yes but it's still a painful experience,1.0
g0gc8p1,i43qxm,Clear your cookies and that counter will reset,4.0
g0go9g7,i43qxm,"I find incognito mode is easier!

That being said, my main point is that Medium is not a great platform for reading and writing content, or at least, there are much better ways to get your content out there without imposing paywalls on your readers or bombarding them with ads/tracking (although Medium has gotten better since its sticky-header days).",3.0
g0gnu0h,i43qxm,"Another option: block Medium.com cookies and you'll never be nagged again.

Most browsers allow that, e.g. for Firefox:

1. menu &gt; Options
1. click **Privacy &amp; Security**
1. scroll to **Cookies and Site Data**
1. click **Manage Exceptions**
1. Enter ""medium.com"" and click **Block**.
1. Save changes.

But, yeah - Medium isn't great for publishing content.",5.0
g0fxtug,i43qxm,What site do you suggest instead?,1.0
g0jxpyp,i43qxm,I like [dev.to](https://dev.to) for anything related to web dev.,3.0
g0fzph2,i43qxm,"Hey there. For a simple solution that requires no setup, I recommend [Write.as](https://write.as/), which is the main instance of [WriteFreely](https://writefreely.org/) which is self-hostable.

I think most programmers are tech-savvy enough to set up a Jekyll blog, or use another static site generator such as 11ty or Gatsby, and host on Github pages. Netlify is good as well.

I keep a list of other simple writing platforms on my site, which I host on Vercel and made with Zola: https://keb.now.sh/simple-writing-platforms/",3.0
g0g09n8,i43qxm,I can also recommend [Bearblog.dev](https://bearblog.dev/) which works pretty well for super simple blogging.,4.0
g0g177w,i43qxm,Yeah it's awesome. I tried it when it was posted on HN a couple weeks ago. Also added to my list! Thanks for the recommendation.,2.0
g0m2u8o,i43qxm,"I am the same way. Love react but I am cutting more and more dependencies from my bundles as I begin realizing the scope of many components I need are small enough to just build myself.

I use preact now, and I think it's a pretty great compromise because I use a webpack alias to treat it as react so virtually nothing for me is different but my bundles are extremely small and performance is much better. I prefer this approach while svelte matures more. Also, preact performs better than even svelte if you are smart about how you write stuff.

Minimalism is key. If people really built minimal applications then the framework/library really shouldn't be doing a lot of the lifting. For example: when I create dynamically styled components instead of writing logic to determine what state it's in and applying a new class I instead simply pass as much as I can as a data attribute and let the css reduce the styling from the data attributes.

My current project compresses to 18Kb. 10Kb of that is an external library that I have to use for my backend. There are only 3 dependencies in my latest project: preact, font awesome svg icons, and Phoenix for Phoenix channels. I even write my own fontawesome svg component so I can skip the included bloat of svg core and their component.",6.0
g0n8aa8,i43qxm,"I kinda like the attribute thing but im not sure. Haven't used it a lot myself. But i do think that you get that semantic css that people are boasting about. If it really has to be semantic...

Curious if you've checked out vite/js or a similar bundler?",1.0
g0fx5m9,i43qxm,"I'm interested in the mac book vs think pad compile time.

Any info or articles about that?",3.0
g0fxnpw,i43qxm,I'm actually in the process of writing that article hehe. I think the main reason is that Macbooks architecture is not really good with swap memory allocs. But one other big reason we switched is that we can't even survive using the butterfly keys. Thinkpads' keyboards are very satisfying to type on.,2.0
g0fy6t6,i43qxm,"I'm also just a huge Linux fan for coding on.


But anyway I look forward to your article.",2.0
g0mtdk5,i43qxm,"I know for a fact that Windows is a subpar experience with npm projects in general, So I can only assume linux and Mac have a much faster build, install and test time",1.0
g0nhrht,i43qxm,"Read the article please.

He talks specifically about moving away from macbook pros. That's what I was asking about.",1.0
g0g0izg,i43qxm,"Really enjoyed the article! So many of these ""move from tool A to B"" focus on performance improvements, and while that is a factor for sure, it's usually just like the cherry on top especially when you aren't working on critical infrastructure. 

Instead I liked that this talked more about how the tool didn't fit the organization size and goals. We should be talking more about that, instead of just blindly telling everyone to use the same tools for uniformity sake. Something happened to the tech community where we're all telling each other to use large-scale enterprise tools for even the smallest of projects and it's so unproductive.",7.0
g0g10hk,i43qxm,If I could upvote this 100 times I would.,1.0
g0fvthl,i43qxm,[removed],1.0
g0fvtju,i43qxm,"Hi u/pupdogg007, this comment was removed because you used a URL shortener.

Feel free to resubmit with the real link.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g0fv98b,i43lxu,[deleted],8.0
g0g7uir,i43lxu,"Yep, it's been there for a while!

If it will happen -- what's your fav [syntax option](https://github.com/tc39/proposal-pipeline-operator/wiki):

F-sharp, Hack# or mix?",2.0
g19p7am,i43lxu,"IIRC it's because no one can agree what the syntax for partial application should be

I wish partial application would be a separate proposal, or that they could just roll dice to decide",1.0
g0fz3zy,i43lxu,FSharp style pipeline operator implementation would be a dream come true in JS,3.0
g0g4to7,i43lxu,We kinda abandoned this dream already.,2.0
g0gbth0,i43lxu,JavaScript will become a monster,2.0
g0giagu,i43lxu,"Come on, it already is üôÇ

(And I love it!)",3.0
g0i1ag8,i43lxu,"How is that different than just chaining by returning this or a promise?

Is it just syntax sugar to reduce boiler plate?",2.0
g0jf1l1,i43lxu,"Yep, it's just sugar to reduce boilerplate, e.g.:

    a |&gt; b === b(a)

_(there are several proposals to the syntax, but essentially it's sugar)_

&gt; How is that different than just chaining by returning this or a promise?

With RxJS 6+ -- you have to use .pipe, which does similar job to a bunch of |&gt;",1.0
g0jpy42,i43lxu,I gave up on waiting for the pipeline operator lol might as well just learn ocaml at this point,2.0
g0q6ucs,i43lxu,"Actually started to love the pipeline operator while learning Elixir/Phoenix. But I don't think it will see the day in Javascript because of async/await pipelining... There's not that much syntactic sugar in javascript I feel, but I think it would look weird seeing that in JS codebases, let alone TS that is already littered with these two tokens.",2.0
g0q871i,i43lxu,"Maybe they could push the basic version (no async/await, no # placeholder) and then do a follow up update? _not sure if that makes sense though_ :)",1.0
g0fkxe8,i3x2qe,"I think functional programming is the best paradigm for front-end ""store"" management. It makes it much easier to reason about. I think it's the one thing the React ecosystem does well. The only problem I am seeing nowadays is that people add hooks and side effects to their stores and it sorts of break the purpose of Redux being functional.",3.0
g0i2mbg,i3x2qe,"&gt; I think functional programming is the best paradigm for front-end ""store"" management

True true. FP made things a lot simpler.

&gt; The only problem I am seeing nowadays is that people add hooks and side effects to their stores and it sorts of break the purpose of Redux being functional.

It is a solution but not elegant. I believe those people just hoped to get things done quickly.

I can't imagine stuffing hooks inside stores, maybe they'd like to share the hooks to other components?",1.0
g0n8sad,i3x2qe,Hm can you elaborate on what you mean by hooks and side effects. In the sense of reducers or middleware such as thunk etc?,1.0
g0nveh1,i3x2qe,"https://redux-saga.js.org/

This is a great example. I had to check a codebase made in React before we bring it in for maintenance at our place. It took me hours going down the rabbit hole just to modify a simple ""added to cart"" action.

I mean even the description of the library says it's made for creating side effects.

There are many more libraries like this popping up.",1.0
g0p73j6,i3x2qe,"So what is the better way to handle side effects? If you have a more complicated workflow that tentacle around the store?

If i use redux i currently keep all the complixated logic in thunks.
And leverage selectors rather than complicated reducers for example.
I'm not convinced that i'm satisfied with that... :D",1.0
g0wvr8o,i3x2qe,"That might have something to do with the fact that it's the side effects which create the useful functionality. You know code running for it's own sake does not make useful applications. So it's inevitable that you'll end up having some sort of layer where that 'side-effect' interaction happens.

Redux-thunk is also for side effects.

The kicker is that the redux itself is still isolated from those side effects. So essentially it's still ""functional"" in that sense.",1.0
g0wybwk,i3x2qe,"I've thought that too.

However few things have changed after having some more experience.

1. I had hands on experience working with fairly complex, data rich application.
2. Given reactivity a try.

&amp;#x200B;

So lets get to first. Now I have to admit that the issue I've had with Redux in this regard has probably more to do with it's architecture in conjunction with functional, namely ""immutability"" approach.

Few things to unpack. Javascript is not designed as a functional language. It carries some of the paradigm features. What does it mean? Well, it means that it's not Ocaml and a lot of optimizations in regards to immutability are simply not present in the language. Namely, it simply clones all the data at each operation. Meaning the underlying mechanism of C++ simply allocates memory and whatever no longer holds a reference is taken care by GC.

That poses quite a memory and performance cost based on the size and frequency of data copying you're going to do. And that's why things like Svelte simply .. takes a dump on React when it comes to state updates. And to trace back to redux, that's the reason why dispatch will always be thee bottleneck of any React - Redux application.

Add to the fact that it's synchronous .. and you might end up with very bad time. Like we did. Sure you can supposedly split the reducer branches etc, but depending on your technical requirements the trade-off in terms of architecture is so great that it's not feasible to implement.

Another issue with Redux is that it's very verbose for the things it does and imposes upfront complexity cost for no reason other than it's own technical limitation. Now the argument against this might be that it enforces consistency... however I rather have simple stuff done simply and roll back my sleeves when something needs heavy plumbing, rather than having my ankles surrounded by shit for entire day. And I can't say that the ""complex"" cases aren't all that easier to deal with either, although. Perhaps.

Anyway, DX side of stuff is quite bad in Redux and I think recent inclination for community to rely less on redux and more on React hooks provided functionality speaks volumes. As well as facebook ... picking up Recoil (seems like react version of svelte stores really) over Redux in their work.

&amp;#x200B;

As for Reactivity, well, it works. Amazingly well. Although I would argue it's a lot harder to get right for tool designers. Mutability is a difficult issue to deal with (not impossible though). It's no wonder why some folk simply chose to side step the issue. And it's ok to side-step issues as long as you understand what kind of trade-off is being made. Although, I'm not so sure many people who advocate for functional patterns realize that they are making a trade-off.

I would urge any Redux fans to try Vuex. And draw conclusions from that experiment rather than parroting some talking points of how ""mutability is bad mm'kay"" and similar which I encounter all too often in javascript.",1.0
g0f97xu,i3vuyn,Do you have a list of possible issues or features that you need someone to work on? Interested in here. :),2.0
g0fmyg4,i3vuyn,"Check Github.. there are issues and features needed...

Thanks :) Love",1.0
g0eb32j,i3vuyn,"Project Page (?): https://github.com/garrylachman/ElectroCRUD

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g0ecr9m,i3vuyn,Need a NoSQL version,1.0
g0edsdu,i3vuyn,"Come, Join, Contribute &amp; and together we can make it work ;)",4.0
g0dgvqe,i3ojry,"They had me at "" Here's an [example](https://www.typescriptlang.org/play?install-plugin=playground-clippy) plugin which adds Clippy to the Playground""",34.0
g0cyzbm,i3ojry,"Good move for any project, let alone TypeScript.",29.0
g0dfh1k,i3ojry,"I dig it.. very clean and nice!

Your blogs on the other hand seem to have other character codes in them that render weirdly:

`Hey folks, I√¢‚Ç¨‚Ñ¢m happy to announce that the next iteration version of the TypeScript Website has launched on` [`typescriptlang.org`](https://www.typescriptlang.org/)`.`",40.0
g0dg8xy,i3ojry,"Yeah, that just started happening, gonna HTML encode the `'`s",10.0
g0eswap,i3ojry,Seems like a deeper underlying bug though. Something assuming text is latin1 (but it's UTF-8) and then it gets re-encoded to UTF-8?,5.0
g0djfxg,i3ojry,"&gt;devblogs.microsoft.com/typesc...

looks good now..

although i noticed all of yalls blogs need that encoding fix apparently lol",3.0
g0gffuq,i3ojry,"Yeah, looks like there's an issue with the Wordpress setup all of Microsoft's product uses - definitely above my pay-grade, at least I can fix ours until it's handled everywhere",2.0
g0ddb4y,i3ojry,"Looks like it was made with gatsby, for anyone else curious what people are launching new sites with.",9.0
g0dhfb9,i3ojry,React dev tools say it's running a react build so I would bet on Gatsby as well.,4.0
g0djtzt,i3ojry,"Yeah, it's Gatsby, really happy with it

I did a write-up on the Gatsby blog about what I like, and how I use it a little differently than normal because I'm kinda the only web person on the team: [https://www.gatsbyjs.org/blog/2020-01-23-why-typescript-chose-gatsby/](https://www.gatsbyjs.org/blog/2020-01-23-why-typescript-chose-gatsby/)",20.0
g0elngs,i3ojry,Great write up. I just picked up Gatsby to rebuild my portfolio site and was very pleased with how easy it was to use TypeScript -- though I'm curious if you found a good solution to implement type-safe GraphQL queries?,3.0
g0eday9,i3ojry,"The design looks great! Really enjoy it, gives of a very cleaning learning environment feel. Great job!",2.0
g0ebt0b,i3ojry,You're the only web person on the typescript team? I assumed you guys all dogfood typescript all day long. No wonder it is so awful.,-29.0
g0gfr26,i3ojry,"I think you assumed the worst here, but TypeScript the compiler is created in TypeScript - every day all the people working on TypeScript are permanently dogfooding on a very big complex TypeScript codebase.",4.0
g0dq3a8,i3ojry,"How did you notice this, what was indicative that it's a gatsby app?",2.0
g0duqdi,i3ojry,"Poked around until I found the website's source code on github:

 [https://github.com/microsoft/TypeScript-Website/tree/v2/packages/typescriptlang-org](https://github.com/microsoft/TypeScript-Website/tree/v2/packages/typescriptlang-org)",1.0
g0djuox,i3ojry,"The bottom button ""Customize / Site colors"" doesn't seem to work or am I missing something ?

EDIT: also on every refresh I get the cookie bar on top..

EDIT2: All in all I love it..",4.0
g0gfwjk,i3ojry,"I might have deployed a fix re: the cookies last night

Still thinking about the colour switcher, seems to be harder to use on mobile than I'd like",0.0
g0gizpx,i3ojry,"Ah the color switcher was on the landing page and now its not there anymore that kinda got me confused! Sorry. 

Anyway everything seems fine now ! Thanks!",1.0
g0gl376,i3ojry,"Yeah, IMO it's not really worth maintaining two colour schemes for the index - so I dropped the selector from that page, but there was a real bug which depended on your OS colors and how it changed at runtime which I [fixed just now](https://github.com/microsoft/TypeScript-Website/pull/855)",1.0
g0j9e7f,i3ojry,"Wow, thats a weird issue.. but good job fixing it!",1.0
g0dtcqw,i3ojry,"\&gt; Most of the worlds JavaScript‚Äôs is un-typed, and inference can only go so far.

&amp;#x200B;

wonder if they have an editor",5.0
g0esg0i,i3ojry,Sent them [a PR](https://github.com/microsoft/TypeScript-Website/pull/849) ;),4.0
g0e13dq,i3ojry,"The toggle looks off on mobile but I‚Äôm not sure on desktop. The toggle node doesn‚Äôt end where it should and overlaps the edge / border.

The site colour text label splits into two lines on mobile and looks off.

Maybe rework the arrows with the migrating story slider. They aren‚Äôt aligned vertically and the spacing looks strange between the slider and the title.

Sometimes the slider completely bugs when swapping pages and the slider just disappears until you press the slider arrows to force the next or previous slide to show up.

The padding for the footer looks off for the links when there are icons. I don‚Äôt think it should be touching the left side when there are icons.

There seems to be a lot of wasted space on the top on the community page when viewed on mobile.

There numerous sections where padding looks off on mobile such as the footer headings or the ‚Äúpopular documentation pages‚Äù heading.

Toggle the site colours I‚Äôm not sure what it does on mobile as I can‚Äôt see anything changing?

On the main pages you have these neat white panels that sit on a grey background but then on  tools page they take up the entire width and it doesn‚Äôt look continuous in terms of design / uniformity. 

Other than that, that‚Äôs all my feedback. Good work!",5.0
g0e4e5q,i3ojry,"I like it a lot, well done!

However, I noticed that the code examples in the handbook have a hard-coded light theme (I'm guessing the main stylesheet is using \`prefers-color-scheme\`, because I'm seeing it as dark and it's beautiful). Any plans to add a dark code theme to match the rest of the site?",2.0
g0he51r,i3ojry,"Yeah, it's on the TODO list, it's a pretty complex issue because of the compiler-backed code samples stuff but it should happen eventually: [https://github.com/microsoft/TypeScript-Website/issues/342](https://github.com/microsoft/TypeScript-Website/issues/342)",2.0
g0x5qjd,i3ojry,"Wow, as a novice programmer, I've had trouble understanding what enums were, but the documentation on their page explained it so succinctly that I understand it now:

&gt; A helpful addition to the standard set of datatypes from JavaScript is the enum. As in languages like C#, an enum is a way of giving more friendly names to sets of numeric values.

    enum Color {
      Red,
      Green,
      Blue,
    }
    let c: Color = Color.Green;",2.0
g0dn8gt,i3ojry,"Awesome!!! That's a great new website, looks killer on mobile üíØüòé

It feels more readable than the old one",1.0
g0dnx3i,i3ojry,"very snappy, looks geat.",1.0
g0duev0,i3ojry,"I like the dark mode in the docs, it would be nice if the code blocks supported dark mode as well!",1.0
g0dvx04,i3ojry,The cookie banner is all placeholder text and broken links. I'm guessing the first thing the designers / developers did was hide the damned thing and forgot to go back and fill in the text.,1.0
g0eb9p8,i3ojry,"Looks nice. Can we maybe get some easy way to manage typescript in a project? I‚Äôm super thankful that typescript helps me write javascript because javascript is a nightmare at scale, but I feel like I spend half my dev time configuring typescript or working around problems typescript can introduce.",1.0
g0f3oxf,i3ojry,"Hey, can you give me some specific examples? Feel free to DM me if you want to have a deeper discussion about it.",2.0
g0fehy8,i3ojry,"Just getting vs code to work using the exact same code as tsc does is often a huge issue for me, maybe owing to how noob I am though.",1.0
g0jd15w,i3ojry,"Setup can be tough. Are you using a file named `tsconfig.json` specifically? Because the editor support currently only looks for files with exactly that name.

If you do, make sure that the editor is picking up the right `tsconfig.json` too.

You can use

`TypeScript: Go to Project Configuration`

or

`JavaScript: Go to Project Configuration`

in VS Code to figure out which `tsconfig.json` or `jsconfig.json` your files belong to in order to see which settings are being applied.",1.0
g0l6bpj,i3ojry,"Yes. But which settings to use and which statements are part of your code seem to have a large impact, which is not clearly defined",1.0
g0fauhe,i3ojry,I like the brand new exclusive reworked logo üòÑ,1.0
g0fe8o6,i3ojry,"I hit this yesterday while digging for some info on a tsconfig option . That section may be the most hellish of design I've seen since geocities.

I haven't used any more of it, but the tsconfig section has extremely unintuitive navigation , and just doesn't work like anything else I've ever seen, and not in a good way.",1.0
g0d2qvm,i3ojry,[deleted],-2.0
g0d8cgd,i3ojry,It's a super set of JS. Uses latest ecma script. Google it to know the details. Thanks!,6.0
g0d62m7,i3ojry,Looks rough. As if it either was designed by developers or was put together in a great hurry. I hope the design will improve over time.,-20.0
g0db26n,i3ojry,"Ouch, designer and implementer here - I do have a decade or two of design experience though, you might've seen my work on jest / prettier / react native / relay.

Open to feedback on what you'd like to see improved?",23.0
g0dc6rc,i3ojry,"I like it, clear and to the point.

Give the target is developers it does that well.",10.0
g0den6t,i3ojry,"Seems like an improvement over the old website to me (at least in terms of visual changes; haven't looked into the rest)!

One small thing I noticed was that the right side bar almost reads like a whole paragraph: https://i.imgur.com/KZGvLA7.png It might be just me, but I think that a bit of spacing between each item wouldn't hurt.

One other minor thing I noticed was this double scroll bar which makes it awkward to scroll there (at least on Firefox): https://i.imgur.com/YapA8tW.png I don't think the inner scroll bar is really needed.

Otherwise I agree with other commenters, looks neat and the changes are appreciated! :)",6.0
g0djuur,i3ojry,"I am not a designer, so I don't know if my feedback will be of any value ‚Äî¬†I am just a user who saw the website, and thought, ""why?""

* why [are the fonts so small, and why are the version numbers so poorly contrasted against the background](https://i.imgur.com/nkFE8rt.png)?
* why does it [look so crammed together](https://i.imgur.com/OS249T3.png)?
* what are [those strange grey blocks](https://i.imgur.com/hOOn5Dr.png) that look like a draft grid mockup?
* why is the style of the [docs](https://i.imgur.com/VzfC7ef.png) and the [handbook](https://i.imgur.com/UKgeqib.png) page so different? why does one take advantage of the whole screen width, while the other crams stuff in the middle?",8.0
g0f09e7,i3ojry,I think the crammed together probably comes from designing with mobile in mind as alot of people will view it on mobile. This seems to be common practice tho i agree it doesnt look as good on web,1.0
g0f9fb0,i3ojry,Please vertically center the text on the top bar.,2.0
g0dfj2r,i3ojry,"In one the hero slides, you have this

    function updateUser(id: number, update: Partial&lt;User&gt;) {
      const user = getUser(id)
      const newUser = {...user, ...update}  
      saveUser(id, user)
    }

This function doesn't do anything",2.0
g0dg5ph,i3ojry,"Oh hah, yeah, that needs to be \`newUser\`!",4.0
g0dh7mm,i3ojry,"only thing id say is give it more margin-left to the sides. otherwise, üëç",1.0
g0ddd48,i3ojry,"Probably cause users perceive aesthetically pleasing design to be more usable. Your design looks clear and to the point though ""good enough for developers""",0.0
g0ds118,i3o3uk,"This is one of the reasons I love TypeScript, it made the relationship between Promises and `async` apparent immediately",4.0
g0dy4c9,i3o3uk,I'm not entirely clear on why this would be. Could you explain?,3.0
g0emt6l,i3o3uk,"I was working on a project and wanted to use an async function. When I tried to just make the function async as it was, the type checker forced me to explicitly make the return type of the function a Promise&lt;number&gt; rather than just a number. It's not something you necessarily need TypeScript to figure out, but it did make it explicitly clear.",4.0
g0hf27c,i3o3uk,I see. Thanks for explaining!,2.0
g0e3x00,i3o3uk,It complains when you're missing something so it's easier to gage relationships,1.0
g0eci02,i3o3uk,"At a minimum, a Promise is an object with a `then`-method. Is it really necessary to have TypeScript installed to remind us of this? What kind of relationships do you mean?

Sorry for the obtuse questions. I think it comes from a prejudice I'm developing for `async/await`. The more I use and abuse these, the more I wonder if they just add confusion to the language rather than remove it.",3.0
g0eirhj,i3o3uk,"I think what they mean is if you want to specify the type of an async function, it has to be a Promise. For example:

    async function getPosts(): Promise&lt;Post[]&gt; {
      return [...];
    }

If you remove the `Promise&lt;&gt;`, the TS build will fail.",3.0
g0h60l3,i3o3uk,Thank you for the explanation!,1.0
g0ecm9l,i3o3uk,"Probably for some people, I just like the security of knowing the flow.",1.0
g0edfhc,i3o3uk,You gotta go with the flow. üåä,1.0
g0eqf1y,i3o3uk,I like it a lot because it's so much cleaner to use await than a callback hell of .next's,1.0
g0hexel,i3o3uk,"I get what you're saying, but I really think the problem of ""callback hell"" is overstated. Levels of nesting is a refactoring problem, not a callback problem, and can manifest in any part of our code. I get shivers thinking back to the multi-level deep if-statements I used to write!

I think the same is true for `async/await`. I'm not saying get rid of it, just cautioning against imperative-crutches while learning to think asynchronously, eventfully, and recursively.",1.0
g0pnj01,i3o3uk,"I didn't even realize there are people who didn't understand that async functions just return Promises. The author makes it sound like there is a lot of confusion around it, but I've never heard about anybody not understanding the concept. But then everybody I know codes in TypeScript, not plain JavaScript, so I guess you have a valid point. TS makes this behaviour very clear.

Just to be extra clear for those other posters asking about TS: if you declare an async function and let TypeScript figure out the function's return type, it'll infer it as Promise&lt;T&gt; where T is the return value's type. So it's very clear from this that async functions are just working with Promises internally and are returning those.",1.0
g0cbux2,i3lcab,"Damn, that's a very nice tool! Thanks for sharing.",3.0
g0fi1kv,i3lcab,"Thanks, Happy to share :)",1.0
g0fkagq,i3lcab,Fantastic. Brilliant.,3.0
g0bx5oz,i3jz7r,"Not the exact same one says react with the react logo and one says svelte with the svelte logo
:p

Also there is a site sorta like this the same project in like every framework 


http://todomvc.com/",3.0
g0bvq6z,i3jz7r,"Thank you, you've convinced me to stay the f\*\*k away from svelte.",2.0
g0c8tqe,i3jz7r,"Could you explain your reasoning? I've moved to Svelte for personal projects after having used React at work for 4 years, and there's no way I'm going back. I'm not arguing about what's better, I'd like to know how someone else on the same path approaches the choice.",5.0
g0ccquu,i3jz7r,"&gt;.

I can understand using it for simple personal projects. In essence to me, and I may be wrong here, but it feels like a very opinionated templating system with a performance focus.

Things I don't like just from what I've seen in the article:

* complex custom markup to do a loop
* custom boilerplating
* lack of linting

At work we have quite a complex application with a pretty complex application state, with mutiple people working on different parts at the same time. This requires more mature systems to ensure code compliance and testing. 

With JavaScript, you can do all that. With a templating system, you're at the mercy of the compiler. While I appreciate the performance aspect, I don't think it justifies the constraints.

That's my two cents.",2.0
g0clwx9,i3jz7r,"&gt;With JavaScript, you can do all that. With a templating system, you're at the mercy of the compiler.

I see. Yeah I agree that a compiler feels very limiting, and Svelte not only uses it for templating, but for all of its reactivity system. Features like Suspense, error boundaries or even just component testing, are massively harder to fit into a system like that. I reckon Svelte has its solutions especially for testing, but as I said I mainly use it for personal projects so I haven't quite felt its scaling limits yet. 

I'd argue with your main 3 points, but as I said I don't want to debate over what's better. I'd just point out that ""lack of linting"" doesn't really sound like a description of Svelte (unless you mean lack of dev tools, to which I'd fully agree). I'm not sure what part of the article made you feel that way, I was actually stunned by the amount of warnings the compiler gives, not only simple stuff like unused or undeclared variables, but also accessibility warnings. It makes sense for compiled languages to be the best at making great use of linting.",3.0
g0c22vv,i3jz7r,Why?,2.0
g0bzmp2,i3jz7r,"You should read this before taking a decision:  
 [https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5](https://medium.com/better-programming/why-we-moved-from-react-to-svelte-f20afb1dc5d5)",3.0
g0bxbgd,i3jwxp,"The fact that the article is written by ""AnyChart"" seems kind of.. frowned upon? :-P

&gt;**7.Advertising**",3.0
g0bppfq,i3iorn,"regular JS frontend fella here that occasionally checked TS before:

what is this '@ Injectable' at  [https://github.com/mehmetsefabalik/nest-boilerplate/blob/master/src/app/app.service.ts](https://github.com/mehmetsefabalik/nest-boilerplate/blob/master/src/app/app.service.ts) here? (can't write literally same reddit translates @ to u/{username}  


I'm asking the syntax that's similar to flask of python, rather than what injectable does",2.0
g0c4cn9,i3iorn,"[https://docs.nestjs.com/fundamentals/injection-scopes](https://docs.nestjs.com/fundamentals/injection-scopes)

&amp;#x200B;

Basically it creates a singleton so the same instance can be re-used.

This medium article also explains them:  
[https://medium.com/better-programming/a-deep-dive-into-nestjs-injection-scope-d45e87fd918d](https://medium.com/better-programming/a-deep-dive-into-nestjs-injection-scope-d45e87fd918d)",2.0
g0bke8v,i3iorn,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g0bnv6v,i3iorn,thanks little bot,1.0
g0c807c,i3in8v,lol angular in current year,-9.0
g0cjnfo,i3in8v,It's version 10,3.0
g0fbjp5,i3in8v,what about it?,0.0
g0baure,i3guet,"I don't see a problem with exporting a function that returns a promise.

I guess my question at this point is why are you returning a promise when you don't need to?  The case here would be to require the exported members to adhere to an interface for polymorphic purposes (ie some exported methods are promises, so now they all are).

Also, when posing a question like this and attempting to be neutral, do not attribute your actions to one side or the other.  Simply present the different sides.  Some people are inclined to blow smoke up any ass they can find, while others are naturally contentious.",11.0
g0bdbht,i3guet,"&gt; I guess my question at this point is why are you returning a promise when you don't need to?  The case here would be to require the exported members to adhere to an interface for polymorphic purposes (ie some exported methods are promises, so now they all are).

I am guessing this is just placeholder code, and it will be replaced with the real API calls? `Promise.resolve/reject()` can be useful in keeping behaviour consistent between things that resolve synchronously / asynchronously. e.g. even when the real calls are put in place, the default case in the switch statement will still need to use `Promise.reject()`.",2.0
g0begvy,i3guet,"Yeah, I assumed those were placeholders.  But if you are making async api calls, how are you getting rid of the promise?  Are these abandoned thunks or something?",1.0
g0bfadv,i3guet,"&gt;This is placeholder code

Yes, it is placeholder code.  


We have 1 api right now (that i'm the first to use). This boilerplate is part-way towards middleware.   


If you changed one line of placeholder code written over a year ago imagining 3 api endpoints that don't exist would you expect such pushback in a PR?",1.0
g0bf1ma,i3guet,"This is placeholder code with no actual real value, someone just boilerplated this up. To me this is premature abstraction super mode.  


Constructors in JS cannot be async so why the promise? It's likely that maybe the classes A|B|C will have a ""async get()"" but that'd be another promise that the consumer would have to \`await\` separately.",2.0
g0bg1g5,i3guet,"It looks like a simple factory.  Are you literally just wrapping calls to class constructors in a promise?

I guess you simply need to ask the advocator why this is being done.  If they're all bluster and ""I must defend my code!"", tell them that their argument doesn't adequately defend their position, and suggest that the API refactor stand.

What you need from them is a use case for returning the promise.  Is there any conceivable case where the object you're returning is actually a promise itself?  If so, to keep your factory interface, you'll need to wrap them all in promises.  If not, remove the promise.",2.0
g0bixci,i3guet,"this is good advice and concise way of putting it - it's essentially an async factory  


I will request a use case for returning the promise.",1.0
g0c616y,i3guet,"Rather than thinking in terms of what the ""perfect"" state of the world should be, you should instead think in terms of what are the implications of making a change.

Removing the promise in this case changes the API signature, making this a breaking change. In terms of semver, this means a major version bump. In terms of consumption, it means that consumers may (or may not) break if they don't make any code changes.

If you have a changelog and you are in fact publishing this change, it should be clearly documented there so that any consumers are aware of what they should do. If you are the owner of all the consumers, you should probably go the extra mile and ensure that you do the necessary code adjustments to the consumers when you upgrade this package in each consumer. etc.

Since you haven't mentioned the nature of the disagreement or the nature of the logic, I'm assuming it has to do with YAGNI (""You Aren't Going to Need It""). Obviously, you and your team mates cannot know the future, so the best you can do is estimate the amount of technical debt you will incur from any given decision, i.e. will making this breaking change cause grief twice (e.g. changing it because it ""looks"" like promises aren't needed, then inadvertedly breaking half a dozen things, then needing to change everything back again two months down the road when the one use case that does needs promises shows up, breaking everything again) or is it going to be a continuous problem to keep everything the way it is now (i.e. async tends to be infectious, meaning everything that awaits must itself also be async, and this may be causing needless verbosity or race condition bugs if your codebase passes promises around for whatever reason)

My guess is that the team mates that are against the change are wary of regressions, and they would be rightly so if your consumers lack tests / types / some other way of gaining confidence. If you are in the camp that wants to make the change, the onus would be on you to demonstrate a low risk of regression (e.g. branches in every consumer pointing to this package's HEAD, and CI jobs demonstrating that regressions do not occur in any known consumer). If the teammates' wariness is unfounded (e.g. you can demonstrate every call site awaits anyways), then demonstrating low risk of regressions should be straightforward and sufficient to alleviate concerns.

It could, however, be that there are valid use cases for using promises that simply haven't shown up yet (but will). If you're not sure, ask if this is the case. (Note: ""will show up"" is different from ""might show up""; the former manifests in the form of a concrete story)

Aside from that, consider also that investing time in an endeavor usually implies a proportional amount of gains. It may be that it's not worth to spend the time to do this change and verify regressions, compared to the gains to be had by spending equivalent time in other items in your backlog, in terms of objective gains (read: how does it improve the bottom line?)

TL: DR; don't be a ""bull in a china shop"". If the change is strongly positive, show the necessary diligence. If it yields low gains, drop it and pick better battles.",6.0
g0bcc8q,i3guet,"Returning a pre-resolved (or pre-rejected) Promise does seem silly.  Without knowing *why* someone did it this way, I can't defend it.  IMO, that's pretty damning.  Is it because, as u/demoran suggested, that the rest of the system returns promises and they wanted to keep the same style?

IMO, you should only be using promises for code that is actually async, unless you have a compelling reason.  Otherwise, async code tends to muddy the code.  It's a powerful tool that should be used when useful, not all the time.

But let me suggest something else:  If you're the only one that wants it this way, it's probably not worth the strife it'll cause to fight for it.  If you haven't won this argument already and nobody else is on your side, this is not a hill worth dying on.",5.0
g0bfjtg,i3guet,"Yes the fact it's preresolved is even worse imo.   


I've never used an api client (apollo, graphql server, axios, got) etc that required me to await its instantiation. Constructors are sync by their nature.  


Iswym re. picking your battles etc but if you can't make 1 line changes to 12month old placeholder code then i think that suggests more about the reviewer tbh",1.0
g0c8j4k,i3guet,"&gt; I've never used an api client (apollo, graphql server, axios, got) etc that required me to await its instantiation

FWIW, I have. Some internal systems at work pull data from live services, so instantiation involves connecting to them. In those cases, one replaces the `new A` call with a different pattern.

There are other ways to abstract this (e.g. `pg` does a synchronous instantiation and hides the connection asyncness with laziness), but mind that not all libraries do this.",2.0
g0bejnr,i3guet,"I would rather put Datasource variable inside the getDatasource function, however, I don't know if you need that set anywhere else in your code.

Here is a much better coding style:

&amp;#x200B;

    const datasource =¬†{
        A:¬†new A(), 
        B:¬†new B(), 
        C:¬†new C(), 
    };
    
    export default async function getDatasource (type)¬†{ 
        let promise = datasource[type];
        if¬†(!promise)¬†{ 
            return new Error(Unknown¬†datasource:¬†${type}); ¬†¬†
        }
        return await promise(); 
    }",3.0
g0bfste,i3guet,"That would instantiate each of those data sources, even though only 1 is actually needed.",2.0
g0bg9yu,i3guet,"    const datasource = { A, B, C };
    
    export default async function getDatasource (type) { 
        if (!datasource[type]) { 
            return new Error(Unknown datasource: ${type});   
        }
        let promise = new datasource[type]; 
        return await promise; 
    }

This would fix it.",2.0
g0c1y3l,i3guet,"Even better:

    const datasource = { A, B, C };
    
    export default async function getDatasource (type) { 
        if (!datasource[type]) { 
            // throwing will reject the promise returned by async functions
            Throw new Error(Unknown datasource: ${type});   
        }
        // No need to await as the return value will be a promise either way so we can just return it as is and avoid the extra variable assignment
        return new datasource[type]();
    }",3.0
g0c6l67,i3guet,I far prefer this if it's going to be a promise because now it's been explicitly declared that you should expect a promise.,2.0
g0bf8t8,i3guet,"I couldn't see any reason to return Promises here. But If there is some special reason its being done and there are no really critical issues with having them (and it seems like you may not be able to point to any hence this post), the debate comes down to one of ""preference"", which usually isnt productive and can just lead to people not liking you.


Over the years of working on all sorts of teams with varying degrees of culture and synergy, I've learned that sometimes some battles just arent worth fighting, even if you're right. Because the cost with doing so outweighs the benefit.",2.0
g0bm5vp,i3guet,"i do agree with your levelheaded reply but why does it pain me so.   


There needs to be a Judge Judy PR bot",1.0
g0bgl20,i3guet,"Even though you have a point, sounds like you still might be in the minority. In these cases,  instead of asking why Promises were added, try to point out the critical issues with having them and explain why removing them would remedy those issues. I've found more positive results when using this approach with code I disagree with.",2.0
g0bmb4p,i3guet,"This is my reply:

&gt;I kinda took this implementation to be basically an early V1 and didn't want to get too stuck into changing things.  
&gt;  
&gt;But i did remove this Promise because it does absolutely nothing other than to force the importer to await:- Constructors in JS cannot be async.  
&gt;  
&gt;What do you mean by ""more extensive initialization""?",1.0
g0bdmuv,i3guet,"I don't have any principled objection to returning a promise - it depends on the wider aims and design of the package. Why was it originally coded like this, and what is it about the code that you're disagreeing with?",1.0
g0bfp9q,i3guet,"i disagree with using a promise to instantiate classes. Constructors are sync.  


If the class has an \`async get()\` (which is far more likely) then this promise has no effect anyway",1.0
g0bgcs6,i3guet,"It sounds like you see the datasource class itself as being responsible for handling the async, making the promise in this switch statement redundant. Without knowing the wider context, i can't say with certainty that you're right, but it does sound like a good point.

What's the other person's point of view? Are they adding the Promise because they're trying to guard against a specific thing happening (or offer some specific functionality), or just because of some personal or codebase convention?",1.0
g0f4jba,i3guet,"The other person says that it was done that was to allow for ""more extensive initialization""",1.0
g0f61hv,i3guet,"That does sound a bit abstract. Usually, when I find myself saying things like that, what I really mean is ""I'm pretty sure this is going to have to change in the near future, so I'm trying to make that change easier"". Could that be the case here? If so, is this the best way to handle that change given the clients that will be using this package?",2.0
g0bpief,i3guet,"I don't see any issue with exporting a function that returns promises. The most obvious use case for the code you posted is that eventually DataSource D requires some sort of initialization. This class can return a promise that resolves when D.init() is complete. I'm thinking of things like an SQLite DB or an API that requires an authentication step. In that scenario, it's better for getDatasource to return the promise of D and let the calling code decide if it wants to await it or do other work asynchronously.

As far as your pushback goes, maybe some of it comes from the fact that you're attempting to change the interface of a top level export. How much work is it to change every call to getDatasource to expect some random object rather than a promise? Does that change error handling on the client end? Think of the downstream impacts and maybe the pushback will become more clear.",1.0
g0f4n91,i3guet,"this package has never been used and i'm the first to do so.

The code i'm changing is placeholder code and classes B|C are called ""kittens"" and ""rainbows""",1.0
g0ba0pd,i3gco1,"* are react-rxjs-elements compatible with server-side rendering?
* are react-rxjs-elements compatible with concurrent mode?",0.0
g0bbdnd,i3gco1,"Alas, neither is supported yet.

I'm planning to add better support for both, yet SSR will be limited (e.g. JSXs on streams aren't well suited for rehydration).

So currently it's aimed at client-side events/interactions, rather then server-side baking.",1.0
g0cj3u8,i3fbbd,Wat,1.0
g0hgjoc,i3fbbd,Nice work!,1.0
g0antd2,i3arrh,"JavaScript Questions:  
  
[https://github.com/lydiahallie/javascript-questions](https://github.com/lydiahallie/javascript-questions)  
  
101 Javascript Interview Questions:  
  
[https://blog.canumeet.com/2016/09/16/101-javascript-interview-question/](https://blog.canumeet.com/2016/09/16/101-javascript-interview-question/)  
  
The Definitive JavaScript Handbook for your next developer interview:  
  
[https://www.freecodecamp.org/news/the-definitive-javascript-handbook-for-a-developer-interview-44ffc6aeb54e/](https://www.freecodecamp.org/news/the-definitive-javascript-handbook-for-a-developer-interview-44ffc6aeb54e/)",18.0
g0bxous,i3arrh,"This is scaring me a little... I've never gone for an interview but I've built full-stack websites as a freelancer using JS &amp; jQuery, yet I couldn't answer the first 3 JavaScript questions on that first link (correctly). Surely that doesn't mean someone isn't capable of doing the job?",3.0
g0dctby,i3arrh,"I don't think that says one is or isn't capable of doing the job, but it does give the interviewer a clearer idea of how well you know the language. If they have to differentiate between multiple candidates who can do the job, what advantage would there be to hiring the candidate who is *less* familiar with `var` vs `let` or arrow function details?

That said, those specific questions have mistakes that can be mostly avoided by convention and enforced with a linter (eslint, whatever else).  You can probably do the job with less knowledge, but you're a better differentiated candidate if your knowledge is deeper.",2.0
g0b0rln,i3arrh,Thanks!,1.0
g0dpvlf,i3arrh,"I wouldn't trust 101 js questions (I didn't look at the other links) because it is out of date. For example there is a question about checking if a variable/argument is an array. 

It gives several options, ending briefly by mentioning Array.isArray


""Array.isArray¬†is supported by Chrome 5, Firefox 4.0, IE 9, Opera 10.5 and Safari 5""

At this point on time, none of these are modern browsers, and we can use the method safely while still supporting &gt;99% of Internet users.",1.0
g0apef9,i3arrh,"This is from a course on interviewing on frontendasters. You have a lot of queations there. 
https://github.com/young/frontend-interviewing",3.0
g0b0tjh,i3arrh,Thanks I was looking for some technical questions I'll defintely try to program these!,1.0
g0b2ir5,i3arrh,"in the course, they are showing you the answers as well, but if you google them, you'll definitely find them",1.0
g0an576,i3arrh,"Check out ""fun fun functions"" and ""meth meth methods"" on youtube.",1.0
g0b0rvf,i3arrh,I'll check it out!,1.0
g0b1kzu,i3arrh,Check this out : https://github.com/sudheerj/javascript-interview-questions,1.0
g0bfind,i3arrh,This is awesome! I have a technical interview for a front-end developer role next week and this will come in handy. Thanks!,1.0
g0bmq5h,i3arrh,"I went ahead and saved this post.  I am currently learning JavaScript so I am pretty sure this will help me out.  Also, if I find a really good resource I will share it here.",1.0
g0cb0u3,i3arrh,!remindme 5 hours,1.0
g0cgkj4,i3arrh,"There is a 32.0 minute delay fetching comments.

I will be messaging you in 5 hours on [**2020-08-04 21:23:53 UTC**](http://www.wolframalpha.com/input/?i=2020-08-04%2021:23:53%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/javascript/comments/i3arrh/askjs_good_javascript_se_interview_resourcestips/g0cb0u3/?context=3)

[**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fjavascript%2Fcomments%2Fi3arrh%2Faskjs_good_javascript_se_interview_resourcestips%2Fg0cb0u3%2F%5D%0A%0ARemindMe%21%202020-08-04%2021%3A23%3A53%20UTC) to send a PM to also be reminded and to reduce spam.

^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20i3arrh)

*****

|[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/e1bko7/remindmebot_info_v21/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=RemindMeBot%20Feedback)|
|-|-|-|-|",1.0
g0b76hc,i397tl,Absolutely awesome¬°,1.0
g09porw,i36o64,Awesome!!!,1.0
g0b7940,i36o64,"Dude this thing is really amazing, I love it",1.0
g0afsrx,i32c22,Thank you for this library! It's certainly piqued my interest in playing around with gamedev in JavaScript. I think I will take a look at the ROYGBIV game engine as well.,2.0
g0arz8e,i32c22,Thanks!,1.0
g08lbiw,i32c22,"Project Page (?): https://github.com/oguzeroglu/kompute-demos-with-roygbiv

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g094n3d,i32c22,And... what does it do?,1.0
g0aryrr,i32c22,"Makes AI bots move given certain predefined behaviors such as:  
1) Go there  
2) Hide from this other guy  
3) Do not hit there",2.0
g09sm9p,i32abw,"&gt; It's okay to promote your own content but it should not constitute the majority of your contributions.

:/

There is a typo in the example code `add(10)` should be `add(number)`. But it does not cause trouble to understand the global purpose.

I'm far from being an expert in functional programming but handling side effects is one use for monads (if I'm right), I was expecting some explanation in this article about them.

&gt; As a functional developer, you should always try to push side effects at the boundaries of your codebase

Is also an advice I was expecting. Maybe too obvious for functional developpers but javascript community has plenty of object oriented developpers too",2.0
g08pga9,i31dnl,"I found this article and the [first in the series of essays](http://mikepennisi.com/blog/2020/jshint-watching-the-ship-sink/) about the subject fascinating. The wide ranging implications of having a 'must be used for good, not for evil' clause in the licence would never have occurred to me but as they explain them they seem so obvious. Really interesting rabbit hole I'm glad I stuck my head down.",55.0
g08rd3j,i31dnl,It was an interesting and a bit sad read. I would hope there would be a place for more opinionated licenses but I understand the hesitation too.,11.0
g08s1hx,i31dnl,"Yeah I had a very similar feeling. 'Must be used for good not evil' is such an attractive, idyllic sentiment to include in a licence that the reality of it being too vague a statement to make in a legal document is somehow disheartening. Couple that with the obvious damage that including such a well intentioned message did to the success of the project and it's an interesting but slightly sobering read.",13.0
g09447f,i31dnl,Unfortunately joking or symbolism or anything like that doesn't have much place in a legal document that can affect millions in revenue. The lawyers won't have it.,13.0
g09bgj6,i31dnl,"It's not even that, it's the uncertainty or lack of clarity in the language that does not fit a legal document.",13.0
g09mkni,i31dnl,"This. If I brought two pieces of software to a stakeholder, one with a clear license and the other with vagueness that we'd have to involve the legal team... It's obvious which one they'd go for.",10.0
g095qa7,i31dnl,"Problem with ""evil"" is that it is totally subjective. The definition is different for different people. 

Just take left-right politics in the West as an example, someone on the left might consider profit-seeking as evil, while someone on the right might consider porn as evil. This is not considering people from different countries (e.g. blasphemy against the prophet/king, patriotism, self-determination, etc)",23.0
g0av57z,i31dnl,Bah it's not that hard. They could just mail me every time they wanted to use the software for a new purpose and I would reply with near certainty within weeks.,7.0
g0bai1k,i31dnl,"And I just wait, bc I don't want to start using it now, like the other 500 weekly dowloaders",1.0
g0axo4t,i31dnl,I read the whole thing and wanted more. Thought they were all done. Damn. Now I'll have to remember to come back.,1.0
g08yt05,i31dnl,"I mean, you could before.  Voldemort wasn't exactly waiting for permission.",24.0
g09091c,i31dnl,C'mon. Voldemort was 100% using python.,41.0
g095duz,i31dnl,"Wizards typically use javascript. If you rely only on a python backend, you'll have to send a new request for every page of the form.",-1.0
g0987yr,i31dnl,[deleted],12.0
g09ef7q,i31dnl,And I heard he was an early adopter of parcel(tongue) as a bundler.,4.0
g0962vq,i31dnl,"If only wizards had some technical acumen and imagination, they might have [worked around that](https://yasoob.me/2019/05/22/running-python-in-the-browser/)...",1.0
g097pf7,i31dnl,"As I said, *typically*.

Yes, python packages exist for just about anything.

Is browser-based python in common use? Not even close.

I use django extensively on the backend, and python in general in numerous other projects, so I'm no hater. But if you want to downvote a punny joke about wizards and Voldemort in order to make a point, ¬Ø\\\_(„ÉÑ)\_/¬Ø",0.0
g098lh3,i31dnl,"I was just tagging along by dragging us back to Potter-verse wizards, dunno who the ill-humoured ones are.",3.0
g0b3rx6,i31dnl,Wizards use LISP,1.0
g094g35,i31dnl,"The phrasing is vague enough that any court would interpret it as unenforceable unless you can prove to the court the objective existence of evil.  Which would have been a tall order, but 2020 seems to be providing evidence :-/

The license was not the problem however.  ESLint is simply better, and further down ""Watching the Ship Sink"", that gets acknowledged (as does the unenforceability ).  Older software sometimes dies when more evolved software comes along, that's just the circle of life.",30.0
g0adj1q,i31dnl,"Even TSLint, not wanting to bifurcate the linting tool space, decided that supporting Typescript inside ESLint was the better focus.",9.0
g098u55,i31dnl,"This!  I think the author is attributing *way* too much of JS Hint's failure to license issues.

I truly believe diversity is good for the JS ecosystem, but at the same time ... sometimes you don't need twenty different versions of the same tool ... or even two.",21.0
g09kuyj,i31dnl,"Frankly, users didn't care about that, though not getting it involved in several repositories is an issue.

Users aren't usually including their linter with the products they ship, so the license is pretty much irrelevant to users.

I can't recall a time that JSHint was ever generally considered better in any way than the alternatives that were available.

About the ""i can't do releases until the relicensing is done"", he should've just done the releases, and then released a new point release when the relicensing was complete.",11.0
g09wlwe,i31dnl,"Yeah I switched to ESLint over plugability, not licensing.",6.0
g0aev12,i31dnl,"More like Satanic Versioning, amirite?",3.0
g08os8e,i31dnl,Finally.,4.0
g0974bw,i31dnl,"In my opinion politics and / or morals have no place in the license.

Because there will always be people that are bending morals to justify horrible things like ""doing war for peace"" or ""preventive actions"". 

Good they removed it...

Edit : I mean, people will bend morals to say what they do is good, not that jsHint could be used as a war weapon.",-5.0
g09bu8m,i31dnl,I would be remiss to not mention that the whole free software and open source movement was started because one person put out a license and software under that license based on politics and morals.,14.0
g09mnhr,i31dnl,"Short answer : license != movement

Long answer : 
That's why it's hard to make a great license : you have to define what you can and cannot do in an objective and imperative fashion.

Morals and politics are subjective : two people can have different morals and vision on how to do politics. 
While a license is expressing what you can and cannot do however the interpretation (ideally there would be only one possible interpretation of it).

So while the free software movement is absolutely political, ideological and based on current morals, the license itself should express what you can or cannot do, ""period"". 

The MIT one is a great example while the GPL is a very bad one. 
ie: the GPL heavily refers to copyright laws (copyright word written 34 times in the v3), but they do not exist in every country nor their are guaranteed to exist in the future.
The MIT License refers to ""authors or copyright holders"" which remains valid at any time.

(Reminder : I added *in my opinion* from the beginning)",1.0
g0amez1,i31dnl,"Neither the GPL or the MIT makes any sense without copyright. ""Author"" is a specific term in copyright law and is used in with that meaning in mind.

Yes a license should tell you what you can and cannot do. And in the free software and open source world that is often very much informed by the ethics and morals of the creators of those licenses.",0.0
g098w1c,i31dnl,"Morals are a subjective social construct. They change over time and across the world. Killing a person is bad, but killing Hitler is good for millions. Being atheist is good in Europe, but bad in middle East. In general morals should not be used to judge anyone or anything.",2.0
g09xorx,i31dnl,"Absolutely.
Take a pedophile, most people would say it's okay to kill him. 
Take a politician who caused wars or famines, most people would say it's not ok to kill him.",1.0
g09ky8o,i31dnl,"Just because there are dozens of opinions of what is right or wrong doesn't mean that there's no right or wrong right here, right now, for me or for the best of the people around me. 

Slapping a ""they change over time and across the world"" makes it sound that we might as well roll a dice to decide what to act on instead of engaging in rational discourse and careful analysis. It's through analysis that we decided to put an end to world war 2, fight racism and sexism etc, not whimsical chasing of moral fads or dice rolls.",1.0
g09n79j,i31dnl,"&gt;Morals are a subjective social construct

No it's not. We absolutely know enough about the human condition to make absolutist value judgements. Slavery is wrong, full stop. 

&amp;#x200B;

&gt;Killing a person is bad, but killing Hitler is good for millions

There is nothing contradictory here.... Most moral codes allow for the self defense of others.   


&gt;Being atheist is good in Europe, but bad in middle East

That's not a moral position. 

&amp;#x200B;

&gt;In general morals should not be used to judge anyone or anything

Uhh no. People absolutely should fucking be judged for their morals. If your ""subjective social construct"" allows for slavery, I think you're trash.",-3.0
g0bd76f,i31dnl,"&gt; No it's not. We absolutely know enough about the human condition to make absolutist value judgements. Slavery is wrong, full stop. 

Slavery was completely ok for most of human history. It's still ok in some places. This is because morals are volatile and subjective social constructs.

I think you have no clue what you're talking about.",3.0
g0bgzt6,i31dnl,"They're not somehow objective just because people now have more information. You can objectively say ""if you support X rights you should be against Y thing"", but you can't somehow have some moral position which is *objectively true*. How would that even work? It's not like you can just point a sensor at someone doing something and tell if it's good or bad in a non-subjective way.",2.0
g09naz4,i31dnl,"No. As the author of code, I'll put whatever I want into it. Stop getting triggered because people care about others.",1.0
g09yaot,i31dnl,How can you say so much bs in two short sentences?,1.0
g0960yq,i31dnl,"That's so crazy!!! How an unambiguous line about not doing evil, could screw up your projects growth üò≤üò±ü§Ø

But thanks for sharing, there's a great lesson that can be learned here by all of us. üíØ",-7.0
g0bgb64,i31dnl,"It's not unambiguous. It's very loosely defined and technically makes it not free software, as well as probably worrying lawyers because of how loosely defined it *is*.",2.0
g09v7r2,i30rfr,"It's a Awesome function but sadly that partial ie11 support has burned me in the past. I'll only use it for pet projects not work ones :(

(Just as a warning, not discouragement from using it)",5.0
g0cfap4,i30rfr,You are still supporting ie11? what's the domain in which you do code? Just curious.,1.0
g0cgm5f,i30rfr,"Current job as of August 1st officially retired it. But we are in the hr software space so lots of old computers.

This last came up for me a couple years ago working on a billing platform. The finance people, even though doing sensitive stuff and should get upgraded and patched were often still running winxp",2.0
g0b0sc0,i30rfr,may be relevant: https://github.com/you-dont-need/You-Dont-Need-Momentjs#display,1.0
g0an740,i30rfr,"From what I can tell the options object of toLocaleDateString is quite a bit more versatile in internationalizing custom formats than the long date formats of moment. If you want to do anything other than day/month/year or other cookie cutter styles, moment can really leave you stranded. The lack of support for the timezone option in IE11 sucks, though.",1.0
g06vlwi,i2tpdx,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g089xki,i2xoa5,"The internet has ruined me. 

I instantly thought ‚Äústepfunction, what are you doing?!‚Äù",1.0
g07f4zf,i2x5rw,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",10.0
g09g27b,i2x5rw,Why would you use react on server side when you're already using handlebars?,4.0
g0993e3,i2x5rw,Excelent!,1.0
g0a62u8,i2x5rw,Hows this different from next.js?,1.0
g072rzw,i2v09t,"Hi everyone,  


[Waypoint](https://github.com/Raathigesh/waypoint) is a VSCode extension which will let you search for symbols and bookmark them.   


I wanted a way to find things faster and was not really happy with the built-in symbol search so built Waypoint. Let me know if you have any feedback :)",7.0
g07iq9y,i2v09t,"This extension appears interesting for me, Is this only available for JS codebase or you can use it for python or another codebase?",1.0
g0b4vih,i2v09t,It only works with JS/TS codebases. Internally we use babel to parse and index the source files.,2.0
g0c24je,i2v09t,"This is awesome work! I've been working with it for a few days now, and it has become a part of my workflow! Any plans to make it follow the theme colours of the currently installed theme? 

Maybe I could check out a branch and try to add in that feature, I am more of a dark theme kinda guy lol",2.0
g0ftmuc,i2v09t,"That's really awesome to hear. Thanks for letting me know.   


Dark theme is something I'm looking to add soon. Right now working on adding support for excluding folders. Next, we will focus on dark theme.  


If you have any further suggestions, please feel free to share it in the repo :)",1.0
g2o9tji,i2v09t,Dark theme is shipped with the very recent release :),1.0
g0bky3s,i2v09t,"Hi, for me it's not working. I have indexing completed, without any filters, opened .jsx file with React class and some methods. After I put method name into search nothing is found.",1.0
g0ftfzn,i2v09t,Could you please create an issue in the github repo so we could investigate?,1.0
g0j6jas,i2v09t,Yeah I will try to create it this weekend.,1.0
g06lh4b,i2rrfc,I really appreciate some tutorial of how to secure API authentication with jwt,3.0
g06svax,i2rrfc,"Yea, That's a good idea.  
thanks.",2.0
g06dh3x,i2p6wk,"An example of what this is useful for would help in the README. Right now all I see is ""automatic analysis"" in the title and a bunch of setup instructions. No idea what this thing is meant to analyze.",7.0
g0b89lj,i2p6wk,Agreed. I've got no idea what this is and what it's analysing.,1.0
g0535ti,i2j8w7,"&gt;  and we see other big companies like Microsoft use React for applications like Azure DevOps, even though Microsoft invented Angular themselves ‚Äî a competitor to React

Uh, wat?",24.0
g05nfjm,i2j8w7,"I‚Äôm starting to think a lot of these blog posts aren‚Äôt even just randos trying to look like experts, but a vast network of AI experiments trying to see how much ridiculous BS we can handle.",17.0
g05uyf3,i2j8w7,"I stopped reading the article at this point, I am glad I'm not the only one who `uh wat`'d to that",3.0
g054hbi,i2j8w7,"Microsoft‚Äôs search engine, Google made it. Duh",6.0
g06jnw1,i2j8w7,"Wait... **Angular is developed and sponsored by Google**, not Microsoft. _Microsoft is still in love with ASP_.",-1.0
g0eagf9,i2j8w7,Just another example of GPT-3 writing articles,1.0
g04ywrs,i2gtnl,"Hey, do you know https://observablehq.com ?",11.0
g059mpn,i2gtnl,"Yes! I think Observable is a really cool tool, it's a bit different:

* Observable has quite some magic, it's not just Javascript you can type there (there is a compile step to make it possible). With Starboard the plan is to make it trivial to export as a static website, with vanilla javascript that's a lot more easy.
* The reactive system they have there is powerful, but also a bit confusing sometimes. Starboard is just plain javascript (for better or for worse \^\^). You can run cells out of order, which is a feature I actually enjoy in Jupyter when I'm still in the exploratory stage.
* Observable is a walled garden, you can't export the notebooks into say a text file and use it independently, they own the ecosystem (and that's fair, they have to make back the millions in investment they received). Starboard is open source and it is built with the idea of customization and portability in mind :)

I think both the tools have different usecases and can definitely co-exist :)",22.0
g05bb8n,i2gtnl,"Are you sure you don't want to borrow the reactive system? Not only does it let you create more readable notebooks (all helpers/imports at the end), but it significantly reduces the amount of bugs you have to deal with while writing your notebook.

It is just obnoxious working in a notebook and not knowing where variables are defined (because any cell can create an arbitrary number of variables anywhere inside their bodies), or having cells constantly mutate/clobber values from other cells and introducing order-related dependencies. I've found it much easier to experiment when using ObservableHQ than any other notebook, because all those problems are gone and I can just code; Observable handles running it all in the right order. It works very well for a functional language like js.",3.0
g05c4cz,i2gtnl,"I think it has pros and cons, but you are right that you can definitely easily introduce bugs. At least in Javascript your variables will be scoped to the cell unless you explicitly use var or share it otherwise (e.g. putting it on window), that helps a little bit.

I see reactivity as a potential plugin, the way I tried to design Starboard is such that it's all just vanilla javascript and plugins can change which cell types are available or the way cells are interpreted or run. In the short term I want to support Python through project Pyodide, that will also just be a plugin.",3.0
g06tunh,i2gtnl,"I tried d3 recently and I had no idea what was happening in the observablehq demos. I'm a huge fan of notebook style programming like mathematica and jupyther, but observablehq seems kinda wrong, judging from the d3 demos.",3.0
g05j0sc,i2gtnl,Observable is so cool üòé,1.0
g04mg2q,i2gtnl,"Hi reddit,

The open source repo is found [here](https://github.com/gzuidhof/starboard-notebook). Happy to answer any questions as to how it works! :)",8.0
g06vcxr,i2gtnl,"Hello there, sorry to comment something unrelated to the post but will you help me with a project I am trying to make? 
Actually after I saw the movie Social Network I‚Äôve always wanted to create a site like FashMash. 
I want to know how do I do it in JS, I know basic JS and HTML and CSS.",-8.0
g06j1u4,i2gtnl,What do you think about VSCode's upcoming [Notebook API](https://code.visualstudio.com/api/extension-guides/notebook)?,7.0
g07bn04,i2gtnl,"I didn't hear about it before, but looks promising! It seems to be geared towards notebooks where the code runs remotely, but as VSCode is basically a browser surely there must be a way to run it in that instance.

I am all for alternative editors and integrations, but I think it will be a while before it's fully integrated unless an outside contributor picks it up",3.0
g06vmb9,i2gtnl,"awesome! Ignore all the people that say ""hAvE yOu eVeR heArD of &lt;tool name&gt;"", keep up the good work!",6.0
g06u6at,i2gtnl,Great work!,3.0
g06uawg,i2gtnl,awesome! I've been waiting for a good javascript notebook IDE since forever!,2.0
g06vun0,i2gtnl,How do you compare to Stencila?,2.0
g07bsaj,i2gtnl,"I hadn't heard of Stencila before, and after checking out the website I'm still not entirely sure what it is. From what I can tell it's a layer on top of Jupyter and Rmarkdown, so it probably relies on a server your notebook needs to talk to, whereas Starboard is fully clientside",1.0
g074auz,i2gtnl,Looks awesome! Great work,2.0
g057knc,i2gtnl,This is so cool!!,1.0
g070rvp,i2gtnl,Running js on a browser? Are you nuts?,1.0
g078bgf,i2gtnl,Is there a way to hide or minimize the source code of a cell?,1.0
g07b9o7,i2gtnl,"Not yet, that is definitely needed! Also I want to add the option to auto-run a cell on load.",2.0
g086yzp,i2gtnl,"Looks awesome, any chance to add vim keys ? Is it open source ?",1.0
g08vgxg,i2gtnl,"It's not at the top of my to-do list as I wouldn't use it myself, but I welcome contributions! https://github.com/gzuidhof/starboard-notebook",1.0
g06cd9n,i2gtnl,Have you heard about codepen?,-6.0
g06u67k,i2gtnl,"codepen reevaluates the whole code. The magic of notebook style interfaces is that you can structure your code in separate sections on the same page,then evaluate them inividually and immediately get to see the results. State is preserved so you can change and reevaluate ond section without the need to run the whole application each time.",3.0
g07bylg,i2gtnl,"Yes! I'm sad to see all the downvotes here as I don't think it's a bad comment. Codepen is a bit simpler/different as the other comment explained, but both run entirely in the browser (and that's what makes it great as you can just share a link)",1.0
g04hrxf,i2ga33,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",1.0
g05gmxv,i2e1p0,I tried to use this a couple months ago but the lack of good documentation made me abandoned the prospect,3.0
g06iu3w,i2e1p0,"yeah, definitely a weak spot. but my unpaid free time is finite, after all.

the architecture overview is here: https://github.com/leeoniya/uPlot/tree/master/docs

the full api with comments is here: https://github.com/leeoniya/uPlot/blob/master/dist/uPlot.d.ts

the rest has to be gleaned from the demos: https://github.com/leeoniya/uPlot/tree/master/demos

devs for whom the above is insufficient and require polished docs are not uPlot's target audience; it is certainly not as easy to use as Chart.js which has great docs and a dedicated config option for literally everything. uPlot exposes a lower-level API for many things with the expectation that the user is capable of writing a bit of code to attain exactly what's needed.",0.0
g03zamf,i2e1p0,"Project Page (?): https://github.com/leeoniya/uPlot

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",1.0
g03zi0p,i2e1p0,"i tagged v1.1 a bit ago, with lots of goodies.

main project page: https://github.com/leeoniya/uPlot",1.0
g03hdp1,i2c6is,"The purpose of this repo is to serve as an example of how to compile a Rust project into Wasm, binding it to JS, and compare its performance to JS with a relatively similar implementation. I will publish a Medium article about it further this week - challenges that I faced as a JS dev, things you should note about Rust, and benchmarks. For now you can have a look at the raw repo. Would be happy to hear your thoughts and criticism. For those who are interested I also published a Medium article that goes through the JS implementation of the project (see [Link](https://medium.com/the-guild/i-wrote-a-customizable-css-engine-in-javascript-b1e05c8914fe?source=friends_link&amp;sk=ac84b9a16ae7e351ed896f4a1cd45d89)).",8.0
g042khz,i2c6is,"&gt; and benchmarks

i would like to see this front-and-center in the README before the article is written, since it's the primary reason for choosing WASM over JS.

i have a bit of experience writing a CSS parser in JS as part of https://github.com/leeoniya/dropcss, though it only ever needed to handle extracting all the selectors and not the rules.",1.0
g045f5c,i2c6is,"You would be surprised but I just discovered that JS can be more performant in some aspects, especially when it comes to handling strings. Because I didn't use byte code for my parser, and mostly relied on strings and regular expression, the JS version does appear to be significantly faster. It led me into some interesting conclusions, people always talk about how Wasm is faster and JS is slower, which is not necessarily true, and most importantly a performant language will not get you away from bad implementation of a program.This is not emphasized enough.",2.0
g0463j9,i2c6is,"i would not be surprised at all, actually.

modern JS engines are amazing once the JITs are warmed up. as long as you keep the GC pressure low, minimize mem allocations and use non-wasteful algos, you can get extremely impressive results, especially when it's pure compute and involves no UI rendering or layout.

people frequently dismiss JS performance on the basis of poorly-implemented code and outdated benchmarks",8.0
g049nhs,i2c6is,"Sorry for derailing, but I'd like to ask a couple of questions about parsing. I recently wrote my first parser and interpreter (for a simple calculator-like language) in JavaScript; while it has been an eye-opening experience, I still feel quite ignorant when I see actual running code in the wild :(

1. What kind of parser would you classify your implementation as?
2. I see you performed tokenizing and parsing in a single step. Is there a particular reason for your choice?
3. Could you recommend a sound resource on parsing?",2.0
g04vbqn,i2c6is,"There's no particular reason for my choice of implementing the parser. I just wanted to have something simple, for educational purposes, and I wanted to have an easy implementation where I could re-write it in other languages e.g. Rust. Usually if you want to write a parser you go through each and every char in a bytecode array, this way it's much more efficient than implementing it with RegExp. I wrote an article where I elaborate more about the parsing process and this might give you answers to what your'e looking for. See [Link](https://medium.com/the-guild/this-is-how-i-build-babel-plug-ins-b0a13dcd0352?source=friends_link&amp;sk=a0981083293bf11a845d8d8a87e90287).",2.0
g054x28,i2c6is,"Thanks. Though I checkd out the link you posted, and your code there seems to rely entirely on Babel for tokenizing and building the AST.",1.0
g03t5mx,i2bzim,"As someone working on a full stack SPA solution this is pretty insightful, thanks!",3.0
g05fg6v,i2bzim,"What if you have Cloudflare (or whatever your CDN provider is) keep a cached version of the old version. That way, when you deploy, users on the old bundle file can still load the old chunk version, but users on the new bundle file can load in the new chunk version from the server.",2.0
g05uebi,i2bzim,"Are there really devs who are updating production multiple times a day?

If so WHY.

Unless it is a 24hr a day operation update at night unless it is a critical bug.  If you need to do an update in the middle of a working day then you need to advise all customers to shutdown the app.",-1.0
g05wnb0,i2bzim,"Hotfix to fix a big in production, then another hotfix later in the day to fix the new bug your prior hotfix introduced",8.0
g05xcde,i2bzim,Yes all should be done after hours.,-7.0
g061blw,i2bzim,"If your site is used globally, when would that be?",10.0
g061ncj,i2bzim,"Then you would have set times for maintenance and turn off the site and invalidate any sessions before patching.  

Uploading changes to an app while people are using it is just not sane.  I realise there are companies that probably do it - but that is because they are very poorly managed.",-9.0
g063e38,i2bzim,"I think it would help your argument to elaborate on specifics, because calling it not sane is both unclear and dismissive without actually being clear enough to make it clear why you feel the way you do.

You're of course free to feel the way you do and there are absolutely cases where I agree with the approach you're describing, but to broadly state that it is the only acceptable approach seems entirely unrealistic and unnecessary.",8.0
g065fl1,i2bzim,"Nothing to do with how I feel.  This is software development.  It is about what is a sensible approach and what is not.  Updating an app while people are using it is never sensible.  

I realise some companies do it - but that does not mean it is wise does it.",-6.0
g06gcvs,i2bzim,If you have no intention of actually backing up your opinion then this discussion is a waste of time. And it is an opinion based on how you feel whether you want it to be or not. Humans are not emotionless and feelings play into any decision.,2.0
g06gsnf,i2bzim,"What do you mean?  I have already backed up my position.  My saying it is about what is a wise IT decision is all the backup I need to provide.

This is not my unique opinion.  It is general software development knowledge that you do not update a running app.  It is general software development knowledge that you do not update at random times - you have a set schedule and try very hard to only ever update on that maintenance schedule.

Letting devs update production code whenever they want to is a recipe for disaster.

And no, these decisions have zero to do with emotions.  You may let emotions decide things for you - but I do not let them have any say at all in good business decisions - especially when they are technical decisions.  Cold hard logic is the only basis for these decisions.",0.0
g06zsgi,i2bzim,"You deploy often so you get used to this process, and your weekly/monthly/quarterly deployment schedule isn‚Äôt a PITA. Developers are making less mistakes caused by the process alone. There is also less time ‚Äûdead‚Äù code is sitring in your repository. [This is ‚Äî in part ‚Äî how the devops idea was born](https://youtu.be/LdOe18KhtT4).

As for the UX side of things, you may decouple deployments from releases by using feature flags for example.",2.0
g063mr4,i2bzim,Continuous deployment is a very real and very common practice. Do you think Facebook ever goes 'down' for maintenance?,6.0
g0652n1,i2bzim,Yes quite often.  They take instances down and update them.  Meanwhile the load balancers are only directing customers to the old site.  Except they so not just do random production updates.  And certainly not multiple per day.,0.0
g067gv2,i2bzim,"you should check out one of their techs TED talks, They talk about how they update all their servers multiple times every few days. They have a pretty cool deployment team setup.",5.0
g06773j,i2bzim,"facebook lol, Updating multiple times per day / week",4.0
g0691nf,i2bzim,"But not to live servers.  The server instances they update are isolated from the load balancing server when they are ready to update.
Otherwise you can end up with requests hitting the server while it is mid update which will cause no end of problems.",1.0
g06r4ma,i2bzim,"I think you maybe misunderstand the article a bit - you can still have clean A/B deploys and multiple load-balanced servers and *also* run into this problem - the two aren't mutually exclusive here. Let's say you deploy your new code to a new server instance, and then atomically switch your clients to the new version - if they're using complex frontend applications as described in this article, then you still need some way of ensuring that existing client sessions still download assets from the old version, and new client sessions download the new assets.

The article also points out that this is specifically made more difficult by the advent of serverless computing, where the old versions are often deleted as soon as the new versions are uploaded, which makes it hard to run multiple versions of an app side-by-side.",3.0
g06s190,i2bzim,"This isn't how any of my workplaces have operated. CI/CD is common now, finished changes are pushed live asap.",3.0
g06sgdi,i2bzim,"Yes it could well be a change in thinking.  Not a good change in my viewpoint.  Changes are much better done in batches at a set time.  This prevents many serious bugs and issues being pushed to production.

Allowing someone to immediately fix a bug and push it does not provide anywhere enough time for adequate testing or for other teams or devs to question it or expose issues.  It is reactionary instead of planned.

I do come from a development world that existed well before the internet but even so I think planned patches still are the stronger option.",0.0
g023yvg,i1wzo7,Is it just me or is it underwhelming?,6.0
g02a36f,i1wzo7,"agreed.

it's a nice brain teaser to think about an approach like this.
but for me the  language itself is good enough. 

and my co-workers would really start to question me if I would introduce this to a project.

not that it's bad or hard to understand, but it is unexpected (least astonishment principle) and over-engineering (in my opinion)",3.0
g066qvf,i1wzo7,"Yes. ""over engineering"" is the word.",1.0
g03av7r,i1wzo7,"The article states that a monad requires `chain` (which is correct, and the key part), then gives an implementation of an Either 'monad' which omits this! The implementation of Either given is just a simple sum type with constructors and destructors, it is not a monad.",1.0
g01o1hr,i1vt9l,"Thanks for taking the time to produce part 1 &amp; 2.  Looking forward to the rest (saved your page.)

I hope it goes without saying, you do a great job with the final product (code + walk through.)

More linguistic / semantic question, wouldn't this be more a ""simulated (linear?) time loop""? I'm aware the lingo may be game loop, but just curious if that means anything to you.",3.0
g03vr02,i1vt9l,Hey! Thank you for your kind words! I don‚Äôt think  I‚Äôm familiar with the term. Could you tell me more?,1.0
g02rqu6,i1vt9l,"That's some weird way to do ecs, honestly. Your components have methods with side effects and there is no systems at all.",1.0
g03wd9d,i1vt9l,"Thank you for the feedback! Could you explain what you mean by systems? 
Speaking of side effects, ECS is designed in a way that Component is merely a protocol (interface). It may or may not have side effects depending on implementation. However, I don‚Äôt think having side effects is inherently evil. Would love to hear your thoughts!",1.0
g063k9g,i1vt9l,"I agree with the GP, I've worked on commercial game engines with ECS and this barely resembles an ECS except for the names of Entity and Component. 

If you are interested in learning about very well-implemented ECS that is proven in existing games, I have two suggestions that you can learn a ton from:

- A commercial-quality game engine library implements ECS (in C++) - https://github.com/skypjack/entt/
- One for Lua that is very simple and easy to understand, but exceptionally well designed: https://github.com/bakpakin/tiny-ecs",1.0
g084wqz,i1vt9l,"Hey! Thank you for the feedback! And special thanks for sharing those links! Super interesting to study them!

However, the fact that you did something differently doesn‚Äôt automatically mean provided implementation is incorrect. Design patterns are not code snippets that are precisely the same in any case. They are closer to the ‚Äúconcept‚Äù edge of the spectrum. There are many factors that  influence implementation, like language and platform. Just look how different javascript and c# implementations of simple Factory pattern are. 

Also, even given the same technical environment you may end up with different result. Just because humans who define and utilize them are different. If you don‚Äôt believe me, here is a quote from Ian Millington‚Äôs book: ‚ÄúI have seen tens of different ways to implement a game finite state machine, and it‚Äôs rare to find any two developers using exactly the same technique‚Äù Ian Millington AI for Games, Third Edition

My goal was to provide simple yet powerful enough implementation of ECS to illustrate how simple game can be built from scratch on this platform. Could this implementation be improved? You bet! Could there be different approaches? No doubt! There is always room for improvement. And there is always a way to do things differently. Entire javascript world is the best illustration of this, I believe üòä

If you have any feedback how it can be improved or what exactly is a problem, I would really, really appreciate it üôè and again, thanks for those links, looks super interesting! üëèüëèüëè",1.0
g007r38,i1v8es,"&amp;nbsp;

**Since I am still in development stages, I wanted to get feedback and any ideas you folks had that I could incorporate as I am working through it at the moment. Any feedback is welcome!**


## Mizu. An Interactive ADT Visualizer
Free Under MIT License

&amp;nbsp;

[Youtube Link of a working Demo](https://www.youtube.com/watch?v=FQ6ENe4olaE)

&amp;nbsp;

What is `MIZU`? It is a web app to visualize algorithms and data structure routines live on screen. The user will be able to see the transformations and data movements , real-time, as it responds to user commands.

It goes live in september.

&amp;nbsp;

[Github.](https://github.com/riziovo/mizuu)

&amp;nbsp;

I will post updates on the github repo as I work through the bulk of it.


&amp;nbsp;



Backend hosts the Server and the Algorithms library which power the simulations on the backend. This Algorithms library houses ADTs based on structures :
&gt; - Tree 
&gt; - Heap
&gt; - Trie
&gt; - Queue
&gt; - Stack
&gt; - List
&gt; - Graph



All of the ADTs in this library are my own implementations. As a function of being an interactive visualizer, the simulations on user side are real-time, not pre-rendered.


### Backend Tech

* [ZeroMQ] - Message Queues and Services Orchestration of worker threads for simulation
* [Java] - Backend is based on a Java ecosystem
* [NodeJS] - Websockets proxy relay
* [Redis] - session and caches


### Frontend Tech

* [HTML5] - UI
* [CSS3] - UI
* [Javascript ES6] - Visualisation Lib written in Vanilla JS to relay data transformations on client-side
* [Websockets] - Native WebSockets API

### Todos

 - Write MORE Tests
 - Finish Tree section

License
----

MIT",1.0
g00wy16,i1uncl,It was a lot of fun to do! We made Aqua Pop.,2.0
g00154u,i1rigc,Source code is [here](https://bitbucket.org/artlyticalmedia/linda-jeans-restaurant-mv-frontity/src/master/) if anyone's interested.,1.0
g02ryx6,i1qxzq," I made my first Codpen after few months of learning HTML, CSS &amp; JavaScript.

[Interactive Hexagon Grid Background](https://codepen.io/d3nis031/full/QWyeNYx)",12.0
g03phye,i1qxzq,That's really nice ! It looks like a shader !,3.0
g05f8cx,i1qxzq,"[Deck for Reddit](https://rdddeck.com)

I added a few highly requested features after my HN launch. Oh and also [dark mode](https://rdddeck.com) üé®.",5.0
g0g8zwz,i1qxzq,This is very neat.,1.0
g06krx7,i1qxzq,"Posting on Sunday but stuff was made on Saturday.

&amp;#x200B;

I made a blog! Teaching web development and stuff.

&amp;#x200B;

[First Post - How to make a Spotlight Search w/ JavaScript and JekyllRB](https://saricden.github.io/jekyll-spotlight-search)

[Second Post - How to implement a Native Share Dialog in JavaScript](https://saricden.github.io/native-share-with-javascript)

&amp;#x200B;

Both come with a text version of the tutorial and a YouTube version :D",4.0
g04d3v2,i1qxzq,I've released the first stable version of my project that converts figma designs in to css https://github.com/figmatools/figma2css-app,3.0
fzzvp4j,i1qxzq,"React blog : [https://github.com/seanjmurray/react-blog](https://github.com/seanjmurray/react-blog)

I built my first MERN app. It is a blog I plan to use to solidify my learning and knowledge. I just am figuring react out. Let me know what you thing!",2.0
g0an6z3,i1qxzq,"Made a cool website for developers to debug, convert between json and many other formats.

[Debug Center - Tools for web developers](https://debug.center/)",1.0
g0g9rqm,i1qxzq,"I built a visit tracking API for your GitHub READMEs

check it out [git-badges](https://badges.pufler.dev)",1.0
g0hsopx,i1qxzq,"I made a bouncy text component with React and Framer :)

[https://www.youtube.com/watch?v=xV-PDX2Srdk](https://www.youtube.com/watch?v=xV-PDX2Srdk)",1.0
fzzt5v0,i1qxzq,"https://youtu.be/rHLUgTVTkTg

I made some progress on my galaxy exploration based game engine and I'm going to spend the weekend to prepare everything for player movements :) I managed to change the way I'm handling my coordinates to avoid floating numbers errors.

https://m.youtube.com/watch?v=Pk52qzQRrOU&amp;feature=youtu.be",1.0
fzzlmcc,i1qkkh,I'm glad you continue work on Malina to explore some new ideas.,2.0
fzzjtkf,i1qkkh,"Who dislikes it, can you please respond why? I'll try to be better next time ;)",5.0
g017854,i1qkkh,"I hope this will help and give you insight, as to why things get downvoted for no apparent reason.

 Most of the time, when your post or comment gets downvoted, eventhough it's decent and adheres to the *rediquette*, it's because they disagree with your opinion or are trolling. If they disagree with your opinion, they'll try to counter your claim. If they are trolling, they won't answer.
Since this post adheres to the *rediquette* and doesn't have any controversial or subjective content, they are almost certainly trolls or Redditors who don't care about the rediqutte.

Conclusion: Your in a r/WTKarma situation. The people who are downvoting are probably trolls. My apologies if I bored you with my lengthy answer.

I am writing about Reddit in general from my experience. If you disagree with this, please explain why before downvoting.",2.0
fzz1svo,i1pa1p,"Still on the loading screen - took a while to get to the spinner.

Didn't want to sign up - got any videos or screenshots?

Looks cool though.",2.0
fzz4x3v,i1pa1p,"Damn, sorry bout that!

Someone made a video about it which you can see in the second half of [this video](https://www.youtube.com/watch?v=v9QRIhhgNKw), and there's some screenshots on the [Twitter](https://twitter.com/cpchapter2) :D",1.0
g01atov,i1pa1p,Amusing!  I remember watching my kiddo play this a good bit.,2.0
g00g8e8,i1pa1p,"Brings back so many memories...

Does it have the dojo as well?",1.0
g01622m,i1pa1p,It does! But just the empty one so far without the card game,1.0
g3wohov,i1pa1p,Try playing Club Penguin rewritten. It's fully functional game.,1.0
fzzcj7h,i1p2a7,"I've been doing a lot of Async/Await in nodejs/lambda recently on AWS - this is a nice guide on how to handle promises correctly!  


This is another good one -  [https://javascript.info/async-await](https://javascript.info/async-await)",31.0
g0013w6,i1p2a7,Thanks I stumbled upon this a long time ago while trying to explain the difference to someone and couldn't get my hands on it again.,5.0
fzzsjo7,i1p2a7,"Just keep in mind that despite what most would tell you, async/await is not just syntax sugar.

One thing to watch out with async/await is that you're 100% dependent on what the compiler does, I've had one very weird bug happen where at some point the compiler did such a stupid move that I've literally had 2 axios requests in two separate vuex modules called by 2 different components, have their response.data properties concatenated in the compiled code.

The funniest part was that even though they were separate resources in different controllers they had almost the same data so in the UI the way you would tell it was wrong was the fact that there were 2 similar entries with different IDs so we initially thought the problem was much smaller. Thankfully it was present in only one page.

From that point on we even thought about banning async/await altoghether (it's already banned in some of our projects but we thought about banning it for all)  since this could have lead to very dangerous bugs. And we couldn't even tell the bug was there for a long time since there were no errors to speak of because the back-end validation would ignore the wrong resource which got concatenated.

The lesson is, whenever you're using stuff which is enterily dependent on compilers (worst of all you get a side effect which you don't have a test for since it's something that is theoretically impossible), you're literally at the mercy of webpack.

Edit: Worst of all, this is not something consistent, I changed the code to the .then() syntax and the bug was not happening anymore then I changed it back to async/await it also was not happening. It was quite literally a one time fuck-up from the compiler when we recompiled our scripts some months ago.",-3.0
g00cqs8,i1p2a7,"&gt; Just keep in mind that despite what most would tell you, async/await is not just syntax sugar.

&gt; One thing to watch out with async/await is that you're 100% dependent on what the compiler does, I've had one very weird bug happen

JavaScript is an interpreted language. Every line of it you ever write is ""dependent on what the compiler does"". Hell, every line of every language outside of machine code and assembler is the same.

Async/await is absolutely, 100%, *exactly* syntactic sugar. It's supposed to decompose to exactly the same instructions as the equivalent explicit use of a Promise.

Compiler/interpreter bugs are a massive PITA, but they're exceedingly rare (infinitely more likely it's just an obscure error made by a dev), but that doesn't reflect at all on the language feature; only on the compiler.

TL;DR: If you find feature X triggers a bug in compiler Y, don't ban feature X - that's completely the wrong lesson. Instead *stop using compiler Y* - that's where the bug is, and that's the part that's broken.",21.0
g00gick,i1p2a7,"Many JavaScript engines, including those in all current main browsers, will compile JavaScript to machine code before beginning execution, and will perform optimisation passes as the code is executed. This is called Just-In-Time (or JIT) compilation, and is done to introduce performance optimisations that would be much more difficult for an interpreter to perform.

Additionally, given the toolset involved (u/Goldy-kun mentioned that they are using Vue, transpiled via Webpack), it is **almost certain** that the ""compiler"" being talked about here is not the native JavaScript engine, but instead an external tool (Webpack) whose purpose is to compile Vue's language syntax to JavaScript that can be executed by the browser. It is *not possible* to stop using external tools here, as the browser cannot natively recognise and execute Vue syntax.",1.0
g01coza,i1p2a7,"&gt; It is *not possible* to stop using external tools here, as the browser cannot natively recognise and execute Vue syntax.

You can run Vue directly in a browser. No need to precompile with webpack. I did this as an experiment using ES6 module syntax in Chrome last year.",5.0
g023h7m,i1p2a7,"&gt; Async/await is absolutely, 100%, exactly syntactic sugar. It's supposed to decompose to exactly the same instructions as the equivalent explicit use of a Promise.

That's a bold absolutist claim that is not quite backed up either by reading the spec or by studying the intricacies of how the code behaves. It's quite easy to show code that behaves differently with `await` than with `promise.then()`, so demonstrably it's not true that they're identical. Conceptually they're quite similar, but `await` is not *just* syntactic sugar.",0.0
g02o0pp,i1p2a7,"&gt; It's quite easy to show code that behaves differently with await than with promise.then()

That's interesting - can you give an example?

Obviously async on its own doesn't force a function to return a Promise unless the function also contains an await (which is why the feature is called async/await instead of the two being talked about as separate features), but that's the only difference to a hard-coded Promise that I'm aware of.

[The spec](https://tc39.es/ecma262/) even describes he's feature as ""Async functions improve the asynchronous programming experience by providing syntax for promise-returning functions"".

What other differences are you aware of?

And how do you think async/await *works* if you don't think it's using Promises under the hood?",1.0
g04kwz8,i1p2a7,"Wikipedia asserts that any syntax that's non-essential (can be removed without losing the ability to do something in the program) is ""syntax sugar"". By that narrow definition, `await` probably counts as ""just sugar"". But I don't subscribe to that narrow definition, because I think ""sugar"" (and the larger question of ""expressivity"") have to include more complex notions such as how well something can be expressed, not just *that* it can be expressed. Otherwise, you'd also have to conclude that `||` is ""just sugar"" because it can be expressed in terms of `&amp;&amp;` and `!`.

IOW, just because code can be transpiled to a lower form of equivalent representation does not, IMO, mean that it is ""just syntax sugar"".

&gt; can you give an example?

I didn't mean ""differently"" in the sense of one does something the other cannot, but that there's not always a clean 1-to-1 correlation.

If `await` is ""just sugar"" for `promise.then(..)`, then it follows that to express an equivalent `async` function in terms of only promise chains, you just take everything after an `await` keyword and wrap it in a function callback that you pass to `then(..)`. But, it's not that simple. An example is the control-flow nuances `try..catch` + `await`, as opposed to the `promise.then(..)` + `promise.catch(..)`.

Consider:

    async function whatever() {
       var pr = somethingAsync();
       try {
          var x = await pr;
       }
       catch (err) {
          console.error(err);
          return;
       }
       console.log(x);
       return x + 1;
    }

One attempt at transpiling this down to a promise chain, using the typical advice of including`catch(..)` method, might be:

    function whatever() {
        var pr = somethingAsync();
        return pr.then(x =&gt; {
           console.log(x);
           return x + 1;
        })
        .catch(err =&gt; {
           console.error(err);
        });
    }

But this isn't actually equivalent. You actually have to do:

    function whatever() {
       var pr = somethingAsync();
       return pr.then(
          x =&gt; {
             console.log(x);
             return x + 1;
          },
          err =&gt; {
             console.error(err);
          }
       );
    }

Of course, the more `await`s you have in a function, the more complex this flow-control nesting gets. I think there's more to `await` than just the minimizing ""it's just sugar"" assertions that are so commonly passed around.

&gt; Obviously async on its own doesn't force a function to return a Promise unless the function also contains an await

Not true.

    async function whatever(){
       return 42;
    }
    var pr = whatever();
    pr;  // Promise(42)

`async` forces the function to always return a promise. But that's NOT the same thing as *just* wrapping the whole function body in a promise, though in simple cases you can squint and pretend it is:

    function whatever() {
       return new Promise(function c(res){
          res(42);
       });
    }
    var pr = whatever();
    pr;  // Promise(42)

It's not just wrapping the whole body in a promise, but it *is* ensuring that any `return` (even the implicit one if `return` is omitted) is returning its value in a promise rather than directly. So actually, it's more like a transform on `return` (and also all the stack-suspension capabilities like generators have) rather than representing the whole body like a `promise`. IOW, again, `async function` is more than ""just sugar"" over promise-wrapped function bodies.

&gt; And how do you think async/await works if you don't think it's using Promises under the hood?

I'm not suggesting that `async` functions don't use promises under the hood... they do! Of course, promises are just callbacks (thunks) under their hood, so... they sorta do and sorta don't, depending on your perspective.

Overall, what I'm asserting is that `await` is not merely/only syntax sugar for `promise.then(..)`, because it is not the case that the JS engine just wraps the rest of a function after the `await` keyword into a nested `then(function(){  .. })`. Not only would this be very inefficient, but it would explode in control-flow complexity.

Most implementations of `async..await` functions actually convert them under the hood to generators, and generators themselves are processed as state machines. There are many ways to implement those, but only some of them actually rely on promises (and `promise.then(..)`), while others are deeper/more manual, like with thunks/callbacks.

So, in summary: my response to ""await is just sugar"" is ""well, actually... no (or yes)... it depends.""",2.0
g04t5wm,i1p2a7,"&gt; Wikipedia asserts that any syntax that's non-essential (can be removed without losing the ability to do something in the program) is ""syntax sugar"".

Yes, exactly; it's any language feature that doesn't permit fundamentally new functionality, but allows you to express existing functionality in a cleaner, more readable or more understandable way.

Syntactic sugar isn't a *pejorative* term; it's a precise definition, and syntactic sugar is extremely welcome for the increased expressiveness it adds to a language.

But it *is* a recongition that the feature only adds expressiveness to the language, rather than completely new functionality.

&gt; But I don't subscribe to that narrow definition, because I think ""sugar"" (and the larger question of ""expressivity"") have to include more complex notions such as how well something can be expressed, not just that it can be expressed.

Well... yes.  Of course it does.  ""Syntactic sugar"" means ""more expressive than the alternative"".

Whether functionality *can* be expressed or not is a question of the *functionality* of the language.  Making it *easier* to express a concept is syntactic sugar.  It's really simple.

&gt; Otherwise, you'd also have to conclude that || is ""just sugar"" because it can be expressed in terms of &amp;&amp; and !.

Yes, exactly.  People tend not to make a point of it because syntactic sugar is usually only discussed in relation to *new* language features (to help users new to them get their heads around what they are), but yes; if there was ever any language that only had - say - [a universal logic operator](https://en.wikipedia.org/wiki/Logic_gate#Universal_logic_gates) like the NAND or NOR operator and then later the introduced AND, OR, etc, that would absolutely be an example of syntactic sugar.  By definition.

&gt; If await is ""just sugar"" for promise.then(..), then it follows that to express an equivalent async function in terms of only promise chains, you just take everything after an await keyword and wrap it in a function callback that you pass to then(..).

No, that's nonsense.

`class` is just syntactic sugar over the older style of explicit prototypical inheritance in JS, but that doesn't imply anything about the mechanical process of converting one form of code into the other.

Where did you get such a weird idea?

&gt; in summary: my response to ""await is just sugar"" is ""well, actually... no (or yes)... it depends.""

Actually it's ""yes, absolutely, by definition it is... unless you arbitrarily redefine the term 'syntactic sugar' to add loads of unrelated and frankly weird requirements that have nothing to do with that the phrase actually means"".

I mean you *can* declare JS ""a strongly, statically-typed language"" if you just randomly redefine the meaning of the terms ""strong"" and ""static"", but you're not saying anything helpful at that point because you aren't speaking the same language as everyone else any more; you're just linguistically masturbating.

Words have meanings.  If you look up the meaning of the word you're using and you had it wrong, *you had it wrong*.  It's nothing to be ashamed about, but if you start trying to disregard the established meaning and substituting your own random definitions you just look silly.",1.0
g06abgu,i1p2a7,"&gt;  ""Syntactic sugar"" means ""more expressive than the alternative"". Whether functionality can be expressed or not is a question of the functionality of the language.

You just did exactly what you criticized me for. Or you didn't fully read or pay attention to what was written.

Wikipedia's accepted definition for ""syntax sugar"" is ""something that does NOT expand the expressiveness of the language (and thus is merely a nicer looking syntax for the same capability""), and their definition of ""(additional) expressiveness"" is ""(additional) actual capability"", not just ""how nice it looks"". So your definition of syntax sugar as being ""more expressive"" is directly in contradiction to theirs. And that was my point, that the narrow definitions aren't good enough.

So who's the one here redefining things their own way? I was taking what wikipedia says directly at face value, and pointing out what I dislike about it.

&gt; Syntactic sugar isn't a pejorative term... it's a precise definition 

It absolutely has been used pejoratively quite frequently, for at least the last 2-3 decades I've been writing code. So I guess you haven't been paying much attention.

It can also be used more precisely, but that doesn't mean it's not prone to informality and abuse. I would say the vast majority of usage of the term ""syntax sugar"" in modern programmer parlance is of that sort. So most people who hear or say it are likely to get those connotations, not the more precise meaning you claim is so universal.

&gt; Yes, exactly.

Yeah so that's just an absurdist position to take. The reason that's not a common narrative is that it's so absurd as to be un-useful.

&gt; No, that's nonsense... Where did you get such a weird idea?

Sadly it seems you aren't paying much attention to most of the blog posts in the wider JS community, so your assertions about what people do and don't believe or claim are rather naive.

I cited it not because I believe it (to the contrary, I find it obviously absurd) but because I've read dozens of claims like it (and the `class` topic) so many times on reddit, medium, dev.to, and other popular blogging sites. I kinda just assumed you were probably doing the same with your usage of it.

You're trying to attack my credibility by suggesting that was my weird idea, but your lack of credibility shows in your ignorance of what people out there are claiming when they write -- it's a VERY low bar to put out technical but wholly inaccurate blog posts about JS.

&gt; Words have meanings... It's nothing to be ashamed about

Save the bullshit patronizing for someone who cares. I've been writing and teaching this stuff for over a decade, so I absolutely don't need to be lectured about your command of the english (or JS) language.",1.0
g06y477,i1p2a7,"&gt; You just did exactly what you criticized me for. Or you didn't fully read or pay attention to what was written.

&gt; Wikipedia's accepted definition for ""syntax sugar"" is ""something that does NOT expand the expressiveness of the language (and thus is merely a nicer looking syntax for the same capability""), and their definition of ""(additional) expressiveness"" is ""(additional) actual capability"", not just ""how nice it looks"". So your definition of syntax sugar as being ""more expressive"" is directly in contradiction to theirs.

Fuck, you're completely right.

I was using the word ""expressiveness"" incorrectly.

Thank you for the correction, but please note that *having* discovered I was using it wrong, I've accepted it and will henceforth use it correctly; I'm not trying to argue that my personal misunderstanding is right/better.

Sincerely, thank you for the correction, although it doesn't impact on the wider point.

&gt; It absolutely has been used pejoratively quite frequently, for at least the last 2-3 decades I've been writing code. So I guess you haven't been paying much attention.

It's often considered of ""lesser"" value than functional changes to the language that permit increased (correct-definition) expressiveness, but nobody thinks syntactic sugar is inherently *bad* unless they don't value developer QoL, or reducing the cognitive overhead of using the language... and that's such an unutterably stupid position it seems like a straw man.

People might disagree with individual *examples* of syntactic sugar (eg `class` in JS) on the basis they complicate parsing or might obscure important aspects of the language's functioning under the hood, but holding syntactic sugar in general to be a bad thing is ridiculous.

Apologies for being a patronising dick - I was writing quickly and on mobile, and didn't have a chance to read it back before posting and seeing how twatty it came across.

For complete clarity: I wasn't criticising you for *accidentally* using non-standard definitions; just for *defending* those definitions even while acknowledging that that's not what the phrase is is understood by consensus to mean.",1.0
fzzypxe,i1p2a7,"Oof, that's such a bummer. One note though -- the comment above yours mentions using async/await in node, in which case the behavior is much more reliable. Since it's a native construct with no compiler step involved, you can use it with much more confidence in node (or in a modern browser that's supports it natively uncompiled).",5.0
g000zq5,i1p2a7,"Yeah I know, natively it works fine but I just wanted to say this that maybe someone sees this and thinks about this when they're debugging crazy code like I've had happen. Sometimes we even forget that most of our code doesn't even exist, what exists is the compiled, transpiled, minified version of what code we have written, for now at least, maybe in the future browsers will support most stuff natively.",2.0
g00551i,i1p2a7,For sure. A message totally worth communicating.,2.0
g00jom2,i1p2a7,I learned promises at the same time as async/await. I literally **never** use .then() and I write a shit ton of asynchronous nodejs. I frankly don‚Äôt get why anyone would. It seems to harken back to the old call back days and kinda feels like it undoes the benefits of promises. To me async/await plus occasional use of the a promise constructor (for cases when you‚Äôre interacting with callback-y interfaces) can address *all* cases. Can someone tell me why anyone would ever use .then()?,10.0
g00oxrn,i1p2a7,I think a combination of .then() .catch() and .finally() make for pretty declarative handling of async data that may or may not be successful. I prefer this over async / await + try / catch / finally blocks as they can't return data and force you into writing code with side effects.,15.0
g01qfnr,i1p2a7,"Can you give an example? Depending on how you scope things in your try/catch blocks, they don't 'force' you to write code with side effects any different. I prefer to use async/await, unless I'm modifying code already using .then() syntax, I won't try and mix the two unless I'm refactoring the whole thing.",1.0
g01shtx,i1p2a7,"Sure

function login () {  
 return fetchActiveUser()  
.catch(handleMissingActiveUser)  
.then((user) =&gt; ***Promise***.all(\[user, sendEvent('login'), promptTFA()\]))  
.then(setUserLoggedIn)  
.catch(handleUserLoginError)  
}

&amp;#x200B;

Could you give me a clean example of this in async await syntax?

EDIT: Reddits formatting messed me up, fixed now",3.0
g06d3zp,i1p2a7,"Here's a quick stab (typed on my phone):

    async function login() {
      try {
        try {
          var user = await fetchActiveUser();
        }
        catch (e) {
          var user = handleMissingActiveUser(e);
        }
        return await setUserLoggedIn(
          await Promise.all([
            user,
            sendEvent('login'),
            promptTFA()
          ])
        );
      }
      catch (e) {
        return handleUserLoginError(e);
      } 
    }

I suspect some will not like how this version is spaced out and more imperative. But I find it significantly easier to follow than the version you started with. Of course that's only anecdotal evidence, but I read your code 5 times before I was able to understand it enough to unravel to this version. I suspect starting here and going to a tight/terse promise chain would take far less effort in reading.",1.0
g06fmr1,i1p2a7,"Happy Cake Day to you! Thank you for your example.

I respect preference in coding style, but I have to point out that there are some issues with your snippet that you'd need to address to match the chained functionality.

The first is that your user object will need to be initialized outside of your try catch in order to use it between the the scopes. If it is initialized in the first try block, it will not be available in the second.

The second is the behavior of handleMissingActiveUser, as this is a promise chain, handleMissingActive has the ability to either resolve a user or reject with its own error. In this way it can either step into the next then block with with a user or reject and step into the next catch block (handleUserLoginError)

The third would be always calling setUserLoggedIn. Because the initial await is try catch, the second try block would always evaluate despite failing to pull back a user.",2.0
g06d4j0,i1p2a7,Happy Cake Day getify! Use what talents you possess: the woods would be very silent if no birds sang there except those that sang best.,1.0
g014kaf,i1p2a7,I hate try/catch,7.0
g01fd3l,i1p2a7,"You can use `.catch()` alongside `await`, no `try`/`catch` required.",2.0
g03tqj8,i1p2a7,Can you provide an example?,1.0
g049gl3,i1p2a7,`const res = await request(url).catch(e =&gt; { // handle err });`,2.0
g04te5l,i1p2a7,"Where does flow return to assuming an error occurs, after the handler returns? Is res just left null?

What happens to the await?",1.0
g07dv57,i1p2a7,"`await` will await the promise returned by the catch.  if the catch handler returns anything, `res` will be that value, or otherwise `undefined`.  You can then use an if check below that line to handle the error further if needed to control the flow of any of the code below.

    const res = await Promise.reject('foo').catch(e =&gt; { console.error(e); });
    if (res === undefined) { // undefined since no catch return
      return; // or whatever
    }",2.0
g04xotb,i1p2a7,I guess that depends on your flow otherwise. Often in a situation like this I will have an error handler to reply with the error state / message.,1.0
g01akaq,i1p2a7,"Me too, always looks like a bandage around shitty code, even when it's wrapping good code.",3.0
g00kjpk,i1p2a7,I'm the same way but I've used .then() when I need to return the result of a function early but then the function is running a longer running process that needs to emit an event or something when it's done.,2.0
fzz0opr,i1p2a7,"As an ""OO programmer"", I disagree with the notion that init functions are generally a good idea. They favor complex use cases and make simple ones unnecessarily complicated and verbose. Better to use factories or builders if you need to represent the creation of an object that shouldn't ""start"" yet. It's remarkably similar to the wrapping function in the article... But I digress.

This was well written and easy to digest. I think the first example could benefit from repeating the simple code example to emphasize that it is the preferred way of using promises, rather than the corrected complicated way.",17.0
fzzdp8t,i1p2a7,"The ‚Äúwrapper‚Äù is essentially a factory here. It simply returns a new Promise instance.

Potato potato",8.0
fzzqzvu,i1p2a7,"Because sometimes, you don't have a choice but have ""complex"" init functions, when I programmed my thread pool for this project https://youtu.be/rHLUgTVTkTg , I wanted to be able to keep the advantages of having classes while not having to use factories as creating new instances of complex objects would have a huge impact on my processing throughput. Using an init function allows me to keep the same instance and to change the context for a while. I also had some cases where having to wait that everything is ready to create my instances would have put a strong coupling on some parts of my program.

You're right for the general case, when I need to retrieve a user name or create a form field, it's better to avoid that kind of thing, but there's no silver bullet. 

TL;DR: All web projects are not the same and some can't afford creating hundreds of thousands of new instances per second. Therefore, init functions are not that bad.",5.0
g001xjc,i1p2a7,"They are not *all* bad, but *generally* an object should be in a ""valid"" state from creation. If the user needs to call `init` before calling other functions, then the initial object should not have those functions, and `init` (or whatever) should return an object that does - making it a factory/builder. 

If you need to use a cache of precreated objects under the hood to meet performance targets, do that, but I really appreciate when the author goes the extra mile to not expose the dirty underbelly of their code. If I wanted to deal with that, I would've written it myself.",5.0
g00dr4r,i1p2a7,"It's not incompatible indeed, in my case, the pool of workers is hidden from what is going to instanciate a planet. When a planet needs to generate a chunk of terrain, it's going to call the web workers pool with it's huge set of parameters and this call will be dispatched to one of them calling once the init function and then process the data. That way, I can repurpose my workers extremely fast without saturating the garbage collector (A 128x128 meters chunk of terrain is about 1MB and my planets can be up to 32km wide, even if I use quadtrees, R-trees and other stuff, I must be as efficient as possible to keep as much as processing power for the rest of the game code).",2.0
g01afgr,i1p2a7,[deleted],1.0
g01ctca,i1p2a7,"Argh, I forgot to credit my brother in this one : https://julienlussiez.bandcamp.com/",1.0
fzzgxmr,i1p2a7,"Very nice article, this covers many of the misconceptions I've seen around Promises.",3.0
fzyvpeq,i1p2a7,Thanks.,2.0
g00pbo8,i1p2a7,"**Consecutive thens vs parallel thens**
I have reread this section but I still don't fully understand it. Could someone explain it to me? What should I use and when should I use it? What is the difference between using consecutive and parallel in terms of the end result?",1.0
g00vdds,i1p2a7,"promiseThing.then(doFirstThing)
promiseThing.then(doSecondThing)

Is the same as 
await promiseThing;
await promise.all([doSecondThing, doFirstThing])

Whereas 

promiseThing.then(doFirstThing).then(doSecondThing)

Is the same as 

await promiseThing;
await doFirstThing;
await doSecondThing; 

Does that help at all? When to use which depends entirely on what is happening and the dependencies/results of the individual promises",4.0
g013gll,i1p2a7,"Thanks for the answer. Yes, it clears it up.",1.0
g00w4jz,i1p2a7,Very glad to see the promise constructor anti-pattern covered and well explained too. I check Stack Overflow a lot and would guess that that's probably the number 1 problem with people's promise-related questions.,1.0
g01afb2,i1p2a7,That was really helpful. I‚Äôve definitely made the 2nd mistake a few times,1.0
g006zad,i1p2a7,"As much as I would like to read this, the layout is broken on mobile devices. If you are the site owner, please update the CSS.

Edit: after one hour, reloading works. Either an issue with the browser or a fix, as long as my problem is no longer I'm a happy old grump.",-2.0
g00d4xl,i1p2a7,"Works just fine for me (latest Chrome/Android 10).

If you really want to help the site owner, you need to include your browser and OS. Error reports that don't are useless.",6.0
g00l1fs,i1p2a7,Motorola One/ Android 10/ Relay for Reddit Pro / View in Chrome,1.0
fzyh845,i1mtew,"Project Page (?): https://github.com/xavierchia/leetSketch

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/javascript) if you have any questions or concerns.*",2.0
fzyhnk6,i1mtew,I've been self-learning front-end development for the last 7 months. Built this app to help my girlfriend cos she's learning how to draw :),2.0
fzz9z1i,i1mtew,That's pretty awesome! Works great on mobile :p,2.0
fzzc2uv,i1mtew,Thanks!!!  Took a while to get it right on mobile and tablet. Glad it works for you :) I'm gonna build it out on react native next so it's a proper app.,2.0
g03g6fq,i1mtew,"Neat concept, and as previous poster said works really well on mobile but holy shit am I bad at it",2.0
fzyswao,i1merp,"This is a problem I frequently think about and is largely why I went with rollup over webpack. But most of my work lately deals with custom elements and shadowDOM, so lack of support for arrow functions and async pretty much isn't going to break anything that isn't already broken, and there's no polyfill for shadowDOM, so old browsers are just basically abandoned.

Now, I do definitely like the concept here, but it really only solves part of the problem. JavaScript is evolving too quickly and, at best, this only addresses pre-2017 browsers and post-2017 browsers. We have things like dynamic imports and optional chaining now, and who knows what further down the road.

No, I think this is something to solve at the browser level. What we need is conditional scripts to load polyfills if and only if needed, which basically means implement something like `&lt;script if=""! 'geolocation' in navigator""&gt;`. I know the concerns already and how this is basically like putting an `eval()` in an attribute, but it could be restricted to no-op and only return a Boolean. Also a way of handling syntax errors without the entire script failing would be nice.

Dynamic imports are almost a solution here. Unfortunately it's currently the case that browsers that support `import()` are probably not the ones that need to load these polyfills, but I remember not long ago when SVG was not a good option due to lacking poor support.

We'd also need top-level `await` (though we could easily just wrap everything in an `async` function).",10.0
fzyy7op,i1merp,"There is ShadyDOM, though I can't recommend it if you have the option of dropping support. 

I certainly wouldn't mind browser-support for polyfills, but we can already do dynamic imports - or close enough - with RequireJSor SystemJS. And honestly, there's a *very* good chance that any browser which supports modules also supports dynamic imports natively. The problem is not so much the kind-of-old browsers which no one uses, but the really old ones which do not auto-update. 

But even with dynamic imports, I wonder if the polyfill problem is solved. How will my app know that your library uses a feature that it will need to host a polyfill for? How will your library know where to fetch that polyfill? Should bundlers scan dependencies for dynamic imports and try to resolve them? Should they be declared in package.json? Should I trust dependencies to fetch polyfills from their own CDN? How do we allow caching to happen between dependencies which use the same polyfill? Or should we all trust some third party?",1.0
g01rf0p,i1merp,"I'm aware of ShadyDOM but recall having found it to not be sufficient. I forget why.

So, after recently discovering that I had been mistaken about a crucial detail of the load event on scripts and doing some work to get dynamic loading of polyfills where possible, the huge problem I see with this is loading order. I can conditionally load polyfills, but for the most part I really cannot have that missing functionality available to the modules and components that would make use of them because static modules are imported before script execution.

Having a conditional on a `&lt;script&gt;` tag would offer a solution to this. An imperfect one, but something that would definitely resolve the issue. Just set the appropriate condition and load it synchronously. And, pretty much the most part is that any browser that didn't support whatever condition attribute would regard it as just another script.",1.0
fzzbmq0,i1merp,"You can load a polyfill script dynamically. `import()` is for modules, but polyfills scripts are meant to be loaded and executed, but never actually referenced.

I'll share a gist of how I load scripts as a Promise. I use it for loading MapBox well after the application is running, but it should do the same with polyfills:

https://gist.github.com/clshortfuse/af6e9aea205b485a4b8e1a8e1d03cc0b

See: https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement",1.0
fzzjwmt,i1merp,"Import is not just meant for modules. It can load whatever type of script. Unless of course you're talking more colloquially here.

And, the reason I don't think such script loading patterns as what you share here are full solutions is that, as I understand, the load event does not guarantee the script has parsed and executed, which could result in some issues for larger scripts. There's even a separate script execution event that was removed from the spec and I think only Firefox ever supported.

I haven't checked on such things for a long time, but I think the difference between load and execution would be really highlighted if you were to use it on a `&lt;script type=""module""&gt;`, since my understanding of what the load event indicates involves nothing more than the script having been fetched. Will test to find out.

Two tips on the gist though:
Instead of using `getElementsByTagName()` and iterating through them, why not check for `querySelector(script[src=""${url}""])`? Backticks omitted because I don't know how well Reddit works with escaping them.

Also, when iterating through them, `toLowerCase()` is kinda wasteful and introduces the potential for errors, since only the domain portion of a URL is case-insensitive.",1.0
g0009r1,i1merp,"There's essentially two venues to load a script: ECMA and W3C.

`import()` is the ECMA way and it returns a module, but you don't need that for polyfill. Unless you absolutely need it as an ES module, you can use the browser version of loading scripts. I'm pretty sure that once `load` fires, the script has already been executed or will do so in the next ""tick"". Because JavaScript runs in a single thread (we're not talking Web Workers), when the promise fires it has already been executed. 

Even if it doesn't run on the load event, you can use a shared `EventTarget` like `document` or place a callback function into `window` that is called when the imported script gets called. This is actually how Google Maps works with deferred loading. You add a search param like `&amp;callback=myCustomProperyInWindow` into the URL.

I know it can be optimized and have improved throttling/denouncing against multiple calls for loading the same script. But I figured it's obviously outside of the scope of the topic in question (loading a script). It honesty should be throwing an error if the URL was already loaded. And querySelector is much more slower than iterating. The use of `.length` is because IE11 runs an `ArrayLike` not an `Array` (doesn't have `forEach`). The lowercase is because the JavaScript function expects the url argument to be lowercase, but the HTML may already had the script when it was retrieved from server, and you don't know what case it is in.",1.0
g00ckez,i1merp,"Update: the loading pattern delays firing the load event until the script has fully executed, including any imports, and even until an `alert()` has been dismissed. I made the false assumption (though I think understandably so) that, with a separate event for execution, the load event fired before execution had completed. I was mistaken, and the behavior was not as I had expected.

Wanted to be absolutely certain of this because fetching and parsing and execution are all very distinct things. The alert was necessary in addition to the imports because it is part of a different stage (the reason static imports cannot be nested in if statements is because they go before the execution of the script).",2.0
g001k66,i1merp,"The module vs regular script distinction basically comes down to if you're talking from the perspective of the imported script or the one importing it. I'm just saying that it works for importing traditional JavaScript as well.

Yeah, my specific concern is in cases where the imported script itself is a module with `import`s. I do need to verify this, but I do not think the load event waits for any of those modules to import, but rather fires as soon as all of the content has been retrieved. I do know this is an issue for stylesheets and can cause some issues where an unstyled component can be appended.",1.0
g00ch84,i1merp,"The `load` event fires after the script has been executed, according to the spec:

https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model (jump to the last step of ""execute a script block"").

I don't know about CSS, but I haven't had a problem with doing it the way the gist I shared does it. The way Google Maps works, even after you load the script and it executes, you have to wait for the callback in `window`. That's because Google Maps will dynamically import external scripts itself. Mapbox does not do this. So my script for Google Maps looks like this:
    
      window.googleMapsInitCallback = () =&gt; {
        resolve();
        delete window.googleMapsInitCallback;
      };
      const url = [
        GOOGLE_MAPS_URL,
        `&amp;channel=${this.config.channel}`,
        '&amp;callback=googleMapsInitCallback',
      ].join('');
      loadScript(url).catch(reject)
 
Whereas Mapbox is immediately ready with this: 

    loadScript(SCRIPT_URL).then(() =&gt; {
      mapboxgl.accessToken = TOKEN; 
    }).then(resolve).catch(reject);

If it wasn't ready after load, then `mapboxgl` would be `undefined` and it would throw an error.

I know they both work because they modify `globalThis` which is `window`. That's where it's sticking `google` and `mapboxgl` namespaces. That's the W3C way of sharing ""modules"", but I'm personally not too much of a fan of poluting `globalThis`. There's the possibility of collision of namespaces. Supposedly, the spec says a ES module will work the same way, and fire `load` after execution, but I have no idea how to get the module object if you use `HTMLScriptElement` to fetch the script. I'm not sure that's an option. For polyfill that's not a problem, but for lazy loading of modules you will use in your application, I'd imaging you'd have to go the `window` pollution route which has no garbage collection.",2.0
g00e0l8,i1merp,"Yeah, I feel kinda foolish for my mistaken assumptions there. It surprises me though because that makes this execution event for scripts redundant. I've been mistaken about this for quite a while now and knowing this in depth will actually be pretty helpful. 

Completely with you on polluting globals being bad practice.",2.0
g00ohwu,i1merp,Conditional comments are back on the menu boys!,1.0
g00pfys,i1merp,"Well, kinda. Except these would be more for feature detection rather than UA sniffing. It's more evaluating an attribute.

Could be useful for styles too. I have a stylesheet that adds support for `&lt;details&gt;` that is loaded when it's not needed. But, more practically, it could be useful to conditionally load stylesheets based on support for things like grid and custom properties.",2.0
g0215vo,i1merp,"The import maps proposal for browsers was considering a fallback mechanism for polyfillable features (dependent on the ES ""standard library"" proposal), though I don't know what the status of that is these days. That obviously doesn't help with new syntax. But they're at least *thinking* about how to implement a better form of feature detection.",1.0
g021z5w,i1merp,"Do you happen to have any documentation or proposal links? I've heard of providing a standard library to import from, but nothing about this.",1.0
g023m67,i1merp,"https://github.com/WICG/import-maps

This part specifically talks about fallback support, which it looks like is  now on the backburner, but it has a link to a previous example: https://github.com/WICG/import-maps#fallback-support",1.0
g025qe6,i1merp,Interesting stuff. Reminds me of some concepts I had a while back about extending Git to be a universal package manager and how what import maps aim to solve would be one approach to dealing with that.,1.0
g05r11b,i1merp,"lmao must be nice, I can't even use let yet because I'm supporting safari 9",1.0
g05rvn0,i1merp,"I either feel tremendously sorry for you, or someone needs to do a review of your analytics. Actually, either way I feel sorry for you.

How do you end up stuck supporting Safari 9 for the maybe dozen people who still use it (slight exaggeration, I know, but it's not even a blip on market share).

BTW, I really hate Safari, particularly for going against the spec on something as old and important as `new Date(str)`. Spec says to default to user's timezone but Safari does UTC. Such a headache explaining and resolving that situation because I wasn't responsible for back-end code.",1.0
fzzsu3r,i1merp,"And you have excluded a billion people from using your site by using these ""developer friendly"" frameworks and syntactic sugar.",-2.0
fzzw15f,i1merp,"While simultaneously giving 90% a much better experience. Heck, in some cases, I'm actually making it available to more people because page size and load times can be prohibitive on slow networks, and the vast majority of the world falls in this group. Low-end devices on slow networks.

And, ya know what... I'm perfectly fine with a component that enhances the site not working so long as the site remains usable. Hell, I even aim for the essential purpose of any site to be available even when JavaScript is disabled. Ever heard of progressive enhancement? My share button that uses the share API not loading does not exclude anyone because they can still read a blog post, for example.",3.0
fzzwvdm,i1merp,"These frameworks provide NOTHING to the end user, the are purely built for developers so you are doing nothing but making your life easier.

...

Lol don't act like you dont put an if statement and a output a message saying they need js enabled, your whole site is embedded is the js files.

...

You're fucking delusional dude, how could using 30 .js files with 100 dependencies to server a single page of html with a few clicks and animations possibly be better than 1 html file with a script tag?

...

You guys are not building 'systems' you're building websites, quit over engineering them so you can be a gatekeeper.",-6.0
g000c75,i1merp,"Your ignorance is showing. How could I use an if statement and output a message if JavaScript is disabled? Think really hard here and maybe it'll come to you.

Your big mistake here is assuming I'm talking about libraries and dependencies and frameworks. No, I often tend to build my sites using Jekyll where appropriate. They are fully usable with JavaScript disabled, and the JavaScript I do use tends to be purely for enhancement of the site.

I don't use 30 JS files and hundreds of dependencies. I currently use one polyfill script, one main JS file, and possibly a few component modules as separate scripts. I structure all of this carefully so that if one thing breaks it won't take out anything else that's not dependent on that thing.

You're entirely clueless. Everything you're accusing me of here is completely wrong. It's quite the pathetic straw man.

And what's wrong with making my life easier? If I can build a site in a single day instead of taking several months, isn't that ultimately better? If I can spend my time improving the experience for 92% of users instead of spending all that time trying to support IE, which even Microsoft has abandoned, is that not the better option?",1.0
g0037vc,i1merp,[removed],-1.0
g003yb8,i1merp,"You explicitly said ""if statement"". You said nothing at all about `&lt;noscript&gt;`.

Yeah, you're here making tons of completely false assumptions that are the exact opposite of the truth, ignoring that I said the sites still work even with JavaScript disabled... But I'm the dumb one.",1.0
g0046ix,i1merp,[removed],1.0
g005qav,i1merp,"If you could figure out how to read and pay attention, you'll notice that I never said anything about using frameworks or putting everything in my JS. I said my sites work without JavaScript, that I tend to build them in Jekyll (so complete HTML pages are sent to the user), and that I use progressive enhancement so that one thing not being supported doesn't break the entire site.

Yet here you are accusing me of using frameworks and thinking I bloat my sites with JavaScript and tons of dependencies and just throw in a `&lt;noscript&gt;` and call that working with JavaScript disabled.

You think I can't follow the dots, yet here you are being ignorant of the paved road pointed to be flashing neon lights. You are absolutely, totally, and completely wrong.

Try reading something before replying to it.",2.0
g0097z7,i1merp,"Hi /u/tulvia, please refrain from personal attacks. Thanks.",2.0
g009ta9,i1merp,"I'd rather be banned than refrain from telling these kids like it is. This sub promotes terrible practices and is super toxic towards anyone not following the trend, whg am I being singled out?",-4.0
_,i1merp,,
fzzakc4,i1merp,"I think you're missing out of the ability to use HTTP/2 Push to send the correct package based on User Agent. When the script gets dynamically loaded, it'll already have been sent or in transit. So, yes, you can preload dynamic scripts.

You can also use multiple configuration in files. For example, you use a template configuration in Webpack, and then generate ES2017, ES2018, ES2019, etc via command line argument. Then the build script would call all 3.

It's all great points and good information to reduce the size footprint. I just don't think we need more standards since it's more of an project-level architectural issue than a prohibitive ecosystem-level impossibility.",3.0
fzyegeu,i1f4sh,Just keeps getting better and better!,2.0
fzxam51,i1el6b,What‚Äôs the motivation for this?,3.0
g00t57j,i1el6b,"I was never pleased with the HTML syntax for writing complicated web pages and applications, and using JavaScript to interact with the DOM when a single language would suffice!",3.0
g00sjzj,i1el6b,"This is awesome and impressive. What are the advantages of using Neuron over traditional JS, HTML and CSS? As far as I see, this would simplify the syntax and save time, right?
Also, could you explain more about it. I'm really intrigued by this.

*P.S. I think you don't deserve the downvotes you're getting.*",2.0
g00u0za,i1el6b,"Thank you! Yes, the syntax is far simpler, and most features of JavaScript can be reproduced in Neuron (such as the Window  and Math API). CSS and HTML properties can also be reproduced in Neuron. Neuron also has an extensive standard library, and the same web applications written in JavaScript can be written in Neuron in far fewer lines!",3.0
fzwo1h5,i1el6b,"[Neuron Language:](https://github.com/underpig1/neuron-lang)

    image {
     tag: img;
     src: path/to/image;
     fill: [math.abs =&gt; -10] 0 0 0;
     log(this.fill);
    }
    
    invoke(image);

Comparative JavaScript (and HTML):

    &lt;style&gt;
     #image {
      background-color: rgba(0, 0, 0, 0);
     }
    &lt;/style&gt;
    
    &lt;img id = ""image"" src = ""path/to/image""/&gt;

    &lt;script&gt;
     image = document.getElementById(""image"");
     image.style.backgroundColor = `rgba(${Math.abs(-10)}, 0, 0, 0)`;
     console.log(image.style.backgroundColor);
    &lt;/script&gt;",4.0
fzz1eop,i1el6b,"Good work, keep it up! How many days did you have to invest into building this from scratch?",2.0
g00tg72,i1el6b,"The core compiler (in JavaScript) took a few weeks to write, and the web framework, standard libraries, and documentation took a few more.",3.0
g01l370,i1el6b,Do you have a backstory for this?,1.0
g8pmqnr,jafcx7,ember is dead,4.0
g8pon42,jafcx7,Just because it has a smaller user base than react doesn‚Äôt mean it‚Äôs dead. Apple Music uses it along with the popular COVID dashboard by John Hopkins. Ember Octane really improved how easy it is to get started and made ember feel more JavaScript-y,2.0
g8pw8g6,jafcx7,"Sure but you only get one chance to have a first impression or a go at developer mindshare. the inept management of Ember by breaking semver, jumping off the complexity cliff, hard to learn, zero docs; killed it. It's a case of smart folks not knowing or having awareness of real life, day to day development, they were too bleeding edge and careless.",4.0
g8nbxmp,ja2w0i,"This looks pretty promising. I'd like to see some docs for building/deploying (specifically for components).

I'm currently using [Stencil](https://stenciljs.com/) in one of my projects and I'm pretty happy with it. How does Jolt compare?",4.0
g8ncgkz,ja2w0i,"Thank you! Stencil is a compiler, while jolt has a more traditional approach by being a runtime framework (although very small) I have not gotten to comparing performance between the two just yet though. With jolt you can customize the entire build process by creating your own ‚Äútoolchains‚Äù by default there is a javascript and typescript toolchain. Im not sure if stencil has any customization for its build process though.

I will be writing more articles on building toolchains and other aspects of jolt soon.

You can find more on jolt on the github page: https://github.com/OutwalkStudios/jolt",1.0
g8ods4p,ja2w0i,I already like Jolt more because it doesn't force you to use classes.,2.0
g8pc03u,ja2w0i,Thank you! Im planning on adding better support for functional programming soon so there is no need to use classes at all.,1.0
g8mq3b6,j9zyih,"Hi JavaScript friends,

A few months ago, I asked the community about [their JavaScript journey](https://www.reddit.com/r/learnjavascript/comments/gu38sc/help_how_long_have_you_been_selfstudying/) and what they were struggling with. One theme that was mentioned consistently was how it was difficult to get started building projects, despite them being a really good way to improve technical skills.

Since then, I've created [a website with several free projects](https://www.codeaway.io/) to help others practice their JavaScript skills and ultimately showcase their work on their Github/portfolio.

If you find this resource helpful, I'd appreciate you visiting the website and leaving any feedback or suggestions!",24.0
g8obsfe,j9zyih,"For whatever it's worth, perhaps a dashboard / CMS and a E-commerce website",4.0
g8owy43,j9zyih,Good ideas! Thank you for taking the time to post these suggestions :),2.0
g8oynih,j9zyih,A dashboard and or mapping would be great addition and not just because that is what I am struggling with right now ;),1.0
g8nccpx,j9zyih,"Love it, add more projects",3.0
g8mt1v3,j9zyih,Thank you! I will try the Chatbox when I get home. I also just registered to the forums. I hope this gets big as this is very helpful. I will leave feedback when I finally get the starter files.,5.0
g8mwh3p,j9zyih,Thank you desiatcodaniel for the kind words and I'm glad you find this website helpful!,1.0
g8mxkhb,j9zyih,are these vanilla javascript? or are frameworks involved?,3.0
g8nqgf1,j9zyih,That is up to you afaik. It sounds like the projects just start you out with a direction and a layout design and the rest is up to you.,5.0
g8ntl61,j9zyih,"Ah, thought these were tutorials",1.0
g8neyaz,j9zyih,Wait a second that's a job!,5.0
g8nuyg8,j9zyih,"If I worked as a consultant I would launch a site like this, and then add the projects that the customers wanted as ""free excercises"" on the site.",7.0
g8owwgn,j9zyih,"Haha, I chuckled when reading your comment :P

This really meant to help those learning web development tackle projects through realistic workflows (design and scoped features).",2.0
g8nejfl,j9zyih,Wow this is actually a really great idea! Definitely going to try it,2.0
g8nuw5v,j9zyih,"This is cool. I started doing something similar with non-programmers where I work.

In addition to a ""Download Starter Files"" option, have you considered integration with GitHub classroom?",2.0
g8ohp6c,j9zyih,I think the point of the downloads is to harvest emails.  There's no reason to collect someone's email otherwise.,3.0
g8owjuf,j9zyih,"Hey iamjohnhenry, thank you for this suggestion! I hadn't heard of Github classroom before - it looks really promising.",2.0
g8o1dtd,j9zyih,Do I just chuck the website url in my cv lol,2.0
g8ol62b,j9zyih,You could just add it to your GitHub and make the repo public,4.0
g8nowug,j9zyih,"Thank you for this!!! Really wanting to get better at JavaScript and this showed up at the perfect time. Can't wait to crack into this, but first, my coding food, Oreos! Can't get into the headspace without a coding food lol",3.0
g8nuthq,j9zyih,You are going to get really fat really fast if you need to use food to regulate stress. Therapy helps.,-2.0
g8nzxs5,j9zyih,"Hey! That's not necessary to say! üòÑ I know what I'm doing with my dietary choices and I watch my portion control strictly (recovering and repetitive relapsing anorexia nervosa). I chose a fatty food because my bmi is so low. I also eat about 2/3 of a single row in a 3 hour sit down session of lessions and coding, so I'm not eating a lot. Next time you see someone comment about food, don't immediately assume they chose that food because they are a glutton and need therapy. I don't often like to explain my food choices to people so thank you for making me feel the need to defend myself in front of a community I care about. ‚ù§Ô∏è",1.0
g8ommjz,j9zyih,"It's really sad that you have to defend yourself here.  They know *nothing* about your health, and yet are so willing to call you out for doing things that would be unhealthy for them.

My BMI is *not* low, but I'm perfectly okay with having a snack food while coding.  Sometimes you just *need* certain things to maintain your proper focus.

Also, I said ""have to defend yourself"", but I don't think that's true.  I think you could just ignore these comments and be you, and nothing bad would happen.   I don't think you can fix people that do these things because they think they're *right*, no matter what you say, and often no matter how wrong they are.

You just keep being you, and be happy.  Let the haters fall to the side.  Your original comment was nothing but happy, and they're awful for trying to bring you down.",3.0
g8oyaxt,j9zyih,‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è,3.0
g8o043q,j9zyih,Stay healthy!,2.0
g8ohy9d,j9zyih,&gt; I only eat 500+ calories of Oreos in a single session! I'm really healthy! ü§°,-2.0
g8pddks,j9zyih,"I never stated I'm healthy, just that I'm doing what I know is within a safe amount for my body while being able to enjoy a sweet treat. How many of you can restrict yourselves to not eating the entire row while not paying attention (watching a movie, playing games, watching a kid, cleaning, etc)? I have extreme ADHD so 3 hours is a long time for me. Most of the time I don't reach that time or amount of cookies in one day due to that 3 hours being spread through a good portion of the day, on top of all the responsibilities of having 2 jobs, 60+ hour work weeks, and being in charge of household finances and maintenance.",1.0
g8nml3b,j9zyih,It‚Äôs like a new lego set I‚Äôm anxious to put together.,1.0
g8nsz48,j9zyih,"Add more projects, this is an awesome resource and I hope it blows up too.",1.0
g8nvzyj,j9zyih,Question: Can these projects be completed with vanilla JS or do you need a framework like React or Angular to do it?,1.0
g8o3y92,j9zyih,"The only included files are mockups of the various UXs for the project, as a sort of requirement file. There is no prescription of how to build any of it, nor any tutorials.",2.0
g8of4qp,j9zyih,I know. I'm still learning so I was wondering if anybody that had done these knows if they can be done in just JavaScript.,1.0
g8om073,j9zyih,"Everything can be done in just JavaScript because frameworks are _just_ JavaScript. 

Frameworks just provide an abstraction over the DOM to make development easier.",3.0
g8pbl3l,j9zyih,Thank you. I am in this strange situation where I can do all of these projects in React but I have no idea how to do them in pure Javascript :D,1.0
g8pppz6,j9zyih,"I think it's important to try and do a small app in plain JavaScript with no libraries. 

React is a tool but it's not the only tool. There's plenty of times when plain HTML/CSS/JS is the right solution. 

I'd suggest attempting a sinple-ish project with no frameworks such as a to-do app or the like. You'll have a better understanding of the tools afterwards.",1.0
g8o5x5v,j9zyih,Cool,1.0
g8oa5rl,j9zyih,Wow! Do I need to know NodeJs?,1.0
g8ohir5,j9zyih,"No, it says ""frontend"".

Edit:  Actually, I looked again.  They give the design for the frontend, but to actually make it *do anything*, you'll need to code a backend, too.  

So it depends on what your goal is.  If you want to have a functioning project, you'll need to know some kind of backend.

But if you just want to make a frontend from someone else's design, you're golden.

Edit2:  And I'm wrong again.  (Or rather I was right the first time?!)  I finally read all the fine print, and each project is designed against a public API like Reddit or such, so they all end up working with just a frontend design.",1.0
g8okqlg,j9zyih,thanks,2.0
g8on044,j9zyih,"I edited my comment again because I was wrong.  They're all on public APIs, so you don't need to know anything for the backend. Sorry for the confusion.",2.0
g8pq1cr,j9zyih,"It's okay, thanks!",2.0
g8owmvk,j9zyih,"name\_was\_taken is right, these projects are using public APIs, so you don't need to create a Node server!",1.0
g8or99j,j9zyih,Amazing work. And thanks üôè for your hard-work and and kindness!,1.0
g8m8ydz,j9x09i,Have you used monorepos for you applications? What are the pros/cons with this approach?,3.0
g8nahhg,j9x09i,"Pros: velocity, save boiler plate, not publishing private modules to share internal code when its not needed, removal of boilerplate....

cons: can grow messy or cumbersome in larger teams, tooling Must be monorepo first or it‚Äôll bite you in the pp, new tools to learn, one more layer on top of your build pipelines.",3.0
g8na1sp,j9x09i,I am literally doing this right now at our startup.,2.0
g8m3vi6,j9w7u7,"[Here's the original website](https://big-yak.surge.sh)

[Minified version](https://madly-haircut.surge.sh)

[Github](https://github.com/tylergrinn/webpack-5-example)",1.0
g8liw7n,j9sq0a,"Miss roasting your friends? You can do that now virtually with NotSyke. Create or join a lobby. Type the funniest answer you can think of! Vote for who the answer that made you laugh. The funniest person wins! 

The source code can be found here: [https://github.com/Harry918/NotSyke](https://github.com/Harry918/NotSyke)

We would really appreciate any feedback you would have for the app, and any cool questions you would like to add to our game.

Thanks",2.0
g8lre13,j9sq0a,"Some indication as to what it does would be cool - maybe a help screen or a demo ""room""
As it is, all I can do is create a room and wait around staring at it",5.0
g8m41cw,j9sq0a,"Same thing that crossed my mind, something to make it ""sell"" itself so the link doesn't always need a caption",3.0
g8m6vld,j9sq0a,"&gt;ndication as to what it does wou

Ok cool, I completely agree with that and we will be adding it to the next update. 

Thanks for the suggestions!",2.0
g8lwbdz,j9sq0a,"Thanks for the suggestion! We are actually hoping to solve this problem in the next update. We actually do have a info button on the bottom right of the card on the home page to teach players how to play, however I think it is not as prominent as we had hoped.",2.0
g8nlrio,j9sq0a,Awesome !,2.0
g8np3cq,j9sq0a,Thank you!!!,1.0
g8m4590,j9sq0a,"Quick question, did you implement with sockets?",1.0
g8m6rqm,j9sq0a,"Ya, so we used [Socket.io](https://Socket.io) in Node.js to create those socket connections.",3.0
g8msyvs,j9sq0a,I've been looking for a free alternative in node,1.0
g8mtjd2,j9sq0a,"[Socket.io](https://Socket.io) is great, the only issue is that it is not scalable as Apache Kafka. Its great for a small project like this though.",1.0
g8n8dnz,j9sq0a,That is pretty cool.  I'd recommend adding a share button to share the room code to your friends,1.0
g8nc2yo,j9sq0a,That's actually an amazing idea. Thanks for that!,1.0
g8lscpi,j9r6p1,"Cool that you made something! But I'm curious who is your target audience? The amount of config you'd have to write between for your program is barely any different than if you were to write a datapack by hand. And it requires someone to learn a new schema of which there are far less examples online than real data packs. It requires them to install and use a CLI which is a barrier to entry to begin with.

If you want to solve this problem in a simple way, I'd recommend building a drag and drop UI so people with no coding skills whatsoever can go to a website, ""craft"" an item and download a file with that crafting recipe.",2.0
g8m1pls,j9r6p1,"I'd say this program works best with handling very large datapacks having hundreds of recipes. The recipe formats are purposefully very similar to the original JSON formats to make picking up the new format as simple as possible. The keys are pretty much the same, but the fact that you're writing the recipes in YAML coupled with the syntax sugar Simple Recipe adds and the ability to write multiple recipes per file makes the recipes more readable, and writing them less tedious.

As far as examples go, I actually included a [cookbook](https://github.com/Asha20/simple-recipe/blob/master/docs/cookbook.yml) which contains every single recipe currently in Minecraft. That's 859 recipes, which makes for a pretty comprehensive guide!

The biggest barrier to entry is definitely the CLI though, I agree with you there. If you're someone who's new to making datapacks and just wants to include a recipe or two, then a simple online creator [like this one](https://crafting.thedestruc7i0n.ca/) is definitely the better choice! However, if you know how to use CLIs and are working on a large datapack, I feel like Simple Recipe is the way to go.",1.0
g8l9fa9,j9r6p1,"I wrote Simple Recipe, a CLI that makes writing Minecraft datapack recipes simpler and more pleasant. If you'd like to read more about it or even give it a try, the linked Github project page is the place you're looking for. Since I'm posting this on a programming subreddit, I figured I'd write a bit about the project from a developer's perspective.

In essence, Simple Recipe is a transformer that takes specially-formatted YAML data and converts it into JSON, which Minecraft datapacks can understand. It also provides descriptive error messages for malformed recipes.

The source code is written in TypeScript. Since the program is all about parsing and transforming user data, I thought it would be an excellent opportunity to use `io-ts`. I really liked `io-ts`'s way of writing codecs, but I ended up running into a couple of problems:

- Error messages were really hard to decipher, especially so with union types. I wanted clear and succinct error reporting to be one of the biggest strengths of Simple Recipe, so this was a huge problem.
- There didn't seem to be a way to collect and display multiple errors for a single malformed input; instead, I'd only get the first error back.
- Later down the line I decided to implement a `migrate` command, which meant having a decoder to convert from `O` back to `A` in the `Type&lt;A, O, I&gt;` codec. `io-ts` wasn't intended to be used in this way, so I'd have to write hacky code to get the behavior I wanted.

These problems made me move away from `io-ts` and, inspired by [this article](https://dev.to/gcanti/getting-started-with-fp-ts-either-vs-validation-5eja) from the author of `io-ts` and `fp-ts`, write out the parsers by hand.

This is also the first time I've ever written end-to-end tests with Jest and I'm pretty happy with how they turned out!

If you have any feedback about the project, I'd love to hear it!",1.0
g8lq93n,j9qvx0,"Dude, your medium bio killed me lol",17.0
g8lqwa2,j9qvx0,"Haha, I wrote that when I was 18. Ermmm... 18 years ago. üòÖIt's a nice filter to find the right clients. üôèüèª",9.0
g8m8x6u,j9qvx0,Hahaha this is brilliant. Also cool that you worked with iDKHOW. You basically have my dream job.,3.0
g8m9n3m,j9qvx0,"Cheers. There's PLENTY of artists to go around. These days artists need all the help they can get to differentiate themselves online and rise above the noise for a moment. If you're ever interested, I would suggest just building a simple fun concept and trying to get the attention of the artist socially. If you can get their attention, they're going to think you can help get their fans attention. üî•",3.0
g8mum2b,j9qvx0,"Ooh, that's a great idea. I would love to hear more about how you got into this and what your day-to-day is like. Do you have any blog posts about that sort of stuff?",2.0
g8my46e,j9qvx0,"Here's an ooooooollllddddddd blog I wrote about how it all started:

[http://leemart.in/origin](http://leemart.in/origin)

My day two day really depends on what's on my plate. I split my time between the client work, my own software projects, and just general hacking and thinking (which is where this reddit post comes from.) Most of the time, I'm just locked into a client project or two or three or four so I'm mostly jumping back and forth between web apps. At the moment, I really just want to spend the rest of the year hacking.

All projects begin with a client conversation (problem, opportunity, goals) which then turns into a very simple proposal. Once approved, I tend to circle the problem like a shark, eating away at the concept slowly through CodePens, pencil &amp; paper, and Figma sessions. Once I feel like I have solid version of the building blocks, I pull it all together using Vue, Nuxt, and Netlify. I tend to only approve projects which can be tackled in 2 weeks tops. I do not get involved with huge projects or major time commitments no matter the money because I enjoy the freedom of jumping from one thing to the next. I also know how long my enthusiasm lasts. üòÖ

When I'm not working on client or software projects, I 100% have to be experimenting to stay fresh. This mostly takes the form of smaller components or design ideas which I then have the ability to pull from in those client conversations I referenced. I have a dumb idea or mechanic for almost anything. Including and especially: Bananas.

When a project is completed, I try to write a case study about how I approached it. This serves two main purposes: it allows me to add it to my portfolio in a way that has more longevity than the web app itself (which is usually temporary.) It also allows me to get feedback about what I'm doing. I didn't go to school for programming so it's always nice when someone is willing to give me an education for free. üôèüèª

I should write more about this stuff. Thanks for the suggestion.",2.0
g8nepiy,j9qvx0,"This is fantastic, thank you for taking the time to respond so in  depth!

I am a senior full stack engineer working on a SaaS platform but I‚Äôm also a musician and doing something involving music and/or musicians would be a dream come true.

I‚Äôll definitely dig into your blog. Thanks again!",2.0
g8pbfju,j9qvx0,"Right on! I actually do a little bit of both. In my free time, I like building Saas apps like [mock.video](https://mock.video) and [turn.audio](https://turn.audio). I think it's good to have a balance and I like seeing the practical engineering logic working its way into the unpractical client work.",2.0
g8m7c3o,j9qvx0,"This is great! I already created a project that shows timed comments on a horizontal bar. I wanted to add a waveform to make it clear which part of the song is tagged (like SoundCloud), but I could not really figure out how to do it with the API, I think I got stuck at processing the segment data.

I would love to try this out and add this to a web app. I guess you should process the data on the server side and cache the result somewhere?",3.0
g8m7tmw,j9qvx0,"Amazing! I've started to dream a similar concept on my Twitter here:

[https://twitter.com/leemartin/status/1315702065117659140](https://twitter.com/leemartin/status/1315702065117659140)

Yes, best if the result is cached since you don't want to continually talk to the Spotify platform. My solution is pretty hack and the Spotify data is limited but I think it works *good enough* for waveforms.

Let me know how you make out!",1.0
g8m7suy,j9qvx0,Very interesting article. Thanks!,2.0
g8m7zdf,j9qvx0,üí™üèª,0.0
g8o8msh,j9qvx0,Awesome how you circumvented Spotify's limitations ! Do you think you could do a follow up where you explain how to get the loudness array for tracks you own (from a WAV or MP3 file basically) ? I think many artists/programmers would like to know how to get such a stylish effect with their own tracks,2.0
g8p2lcp,j9qvx0,"I actually discuss a little bit of that in this case study:

[https://medium.com/@leemartin/how-many-fans-does-it-take-to-unlock-an-album-stream-39b3456ed639?source=friends\_link&amp;sk=44822f3723fe365c331a1c459c2a2ea0](https://medium.com/@leemartin/how-many-fans-does-it-take-to-unlock-an-album-stream-39b3456ed639?source=friends_link&amp;sk=44822f3723fe365c331a1c459c2a2ea0)

I used Meyda to generate the waveform data in that case:

[https://meyda.js.org/](https://meyda.js.org/)",2.0
g8p3ckr,j9qvx0,"Oh yeah right I skipped over that rms function when I took a look! Already returns values between 0 and 1 which is ideal in this case as I understand
Thank you for the follow up!",2.0
g8p4b83,j9qvx0,Exactly. üí™üèª,1.0
g8m6fly,j9okdi,"Google is the *last* company anyone should be looking to for inspiration on ""how to do user feedback"".  The vast majority of Google's expertise in that field is in how to *prevent users from giving feedback* ... much to the chagrin of their users.",2.0
g8lkvs0,j9oawr,"Great job, it works really nicely!

&gt; 2KB gzipped

You're doing yourself a disservice here, [Bundlephobia](https://bundlephobia.com/result?p=number-rollup@1.0.5) has it at 1.3KB gzipped!

It would be cool if you were also able to accept an `element` option in your config object where the user could pass the reference to the element, rather than just the ID. This would be useful in something like React where you're more likely to work with refs than ids.

Saying that, this would work really nicely as a hook (probably as a separate package) too!

Last thing, some types would be great and are invaluable for an open source project. If you can write the whole thing in TypeScript, awesome, if not then just providing a types file would be just as good.

EDIT: Oh, two other things!

1. As others have mentioned, tests would be great
 2. How are you updating the version of your project when you publish? Are you just incrementing the value in the `package.json` manually? If so then try doing `npm version patch|minor|major -m ""A message""`. You can find a bit more info on the npm version command [here](https://docs.npmjs.com/cli/version). Essentially it updates the version in your `package.json` for you automatically, and it also tags your commit so that when you push to Github it will show as a release in the Releases section",28.0
g8lzau5,j9oawr,"This is really good feedback - I appreciate it.

Other users have mentioned adding types too. This is definitely something I will do. And you are right that there's no need to restrict users to specifying an ID rather than the DOM element itself.

&gt; How are you updating the version of your project when you publish? 

Yeah, I am currently doing it manually. I originally followed [this guide](https://zellwk.com/blog/publish-to-npm/) which recommended using the `np` tool but I just didn't bother setting it up. I wasn't aware of `npm version`; I will probably end up using that instead.",6.0
g8mh94i,j9oawr,"Sounds good!

Have you looked into the .npmignore file too? It probably won‚Äôt have any affect on bundle sizes after tree shaking and whatnot, but you only really need to publish your build directory (and types) to npm, the rest can just be added to the .npmignore",2.0
g8onzsu,j9oawr,"I might add that while typescript is great, JSDoc is more necessary (obv both works, too). Too many packages don't have nice documentation embedded in the code which results in a bad IDE experience",1.0
g8lq2nu,j9oawr,I think it'd be nice if you had an animated gif of it on the git page. Obviously you have the demo but 0 clicks is nicer than 1 click since I didn't understand exactly what it was right away.,17.0
g8lr837,j9oawr,Add type definitions. It would be a nice user experience to see what I can feed into it as `userOptions` without having to reach for the documentation,10.0
g8lujwj,j9oawr,Great job dude! Can you pass it the dom node directly instead of the id? That'll make it really simple to use with other js libraries and frameworks.,6.0
g8m1383,j9oawr,Yeah another user suggested this too; it's something worth adding.,5.0
g8m9prd,j9oawr,Try `domElement`,0.0
g8ls4e7,j9oawr,I mean it seems more useful than the `is-odd` package so good job on your first package lol,4.0
g8lynl3,j9oawr,How is it 2KB gzipped. That's huge for what it is.,6.0
g8m9lw7,j9oawr,"Webpack adds about 0.5k of overhead.  In reality, it's closer to 1.3kB.",2.0
g8lzysl,j9oawr,This is going to sound like a joke but it isn't: You might try using rollup to build instead of webpack.,3.0
g8m868a,j9oawr,"Good first package, but whoa, that's more complex than it needs to be.

Here's my attempt at the same API (plus the ability to add an easing function), coming in at 3255 bytes unminified with commentary, and 948 bytes minified and gzipped.  Could be smaller, too, but I wanted to stick with your API and expose the generic `animate` function.

    const attrMap = {
    	start: ""startNumber"",
    	end: ""endNumber"",
    	duration: ""duration"",
    };

    /**
     * Animate elements of class 'number-rollup'
     * @param {object} options defaults for all found animations
     * @param {number} options.startNumber number to start at
     * @param {number} options.endNumber number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.formatNumber function that accepts the scaled number and formats it
     * @return {Promise} resolves on completion of all animations
     */
    export const numberRollupAll = (options = {}) =&gt; {
    	return Promise.all(
    		Array.from(document.querySelectorAll("".number-rollup"")).map((domElement) =&gt; {
    			const props = Object.assign({}, options, { domElement });
    			Object.keys(attrMap).forEach((k) =&gt; {
    				const fk = `data-number-rollup-${k}`;
    				if (domElement.hasAttribute(fk)) {
    					props[attrMap[k]] = parseFloat(domElement.getAttribute(fk));
    				}
    			});
    			return numberRollup(props);
    		})
    	);
    };

    /**
     * Animate a number in the DOM
     * @param {object} options option list
     * @param {string} options.id ID of an element to animate (ignored if `domElement` is set)
     * @param {HTMLElement} options.domElement an element to animate
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.formatNumber function that accepts the scaled number and formats it
     * @return {Promise} resolves on completion
     */
    const numberRollup = (options) =&gt; {
    	const {
    		id,
    		domElement,
    		startNumber: start,
    		endNumber: end,
    		duration,
    		formatNumber = (n) =&gt; Number(n).toFixed(0),
    		ease,
    	} = options || {};
    	if (!options || (!domElement &amp;&amp; !id)) {
    		return numberRollupAll(options);
    	}
    	const el = domElement || document.getElementById(id);
    	return animate({
    		start,
    		end,
    		duration,
    		ease,
    		commit:
    			el.tagName === ""INPUT""
    				? (n) =&gt; {
    						el.value = formatNumber(n);
    				  }
    				: (n) =&gt; {
    						el.textContent = formatNumber(n);
    				  },
    	});
    };

    export default numberRollup;

    /**
     * Animate a value with a commit function per-frame
     * @param {object} options options list
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.commit function that commits the final number to show the user
     * @return {Promise} resolves on completion
     */
    export const animate = ({ start, end, duration = 500, ease = (n) =&gt; n, commit }) =&gt; {
    	return new Promise((resolve) =&gt; {
    		const started = Date.now();
    		let frame = () =&gt; {
    			// Convert now...end to 0..1
    			const t = Math.min(1, (Date.now() - started) / duration);
    			// convert 0..1 to start...end
    			commit(ease(t * (end - start) + start));
    			if (t &lt; 1) {
    				requestAnimationFrame(frame);
    			} else {
    				resolve();
    			}
    		};
    		frame();
    	});
    };",3.0
g8m8m2h,j9oawr,"Variant of `animate` where you can cancel the animation (.cancel() cancels it without doing anything else and rejects; .cancel(true) cancels it and commits the final value, resolving):

    /**
     * Animate a value with a commit function per-frame
     * @param {object} options options list
     * @param {number} options.start number to start at
     * @param {number} options.end number to end at
     * @param {number} options.duration length of animation in ms
     * @param {Function} options.ease function that accepts 0..1 and returns 0..1 with different scaling
     * @param {Function} options.commit function that commits the final number to show the user
     * @return {Promise} resolves on completion
     */
    export const animate = ({ start, end, duration = 500, ease = (n) =&gt; n, commit }) =&gt; {
      let running = 0;
      const started = Date.now();
      const promise = new Promise((resolve, reject) =&gt; {
        let frame = () =&gt; {
          // Convert now...end to 0..1
          const t = Math.min(1, (Date.now() - started) / duration);
          // convert 0..1 to start...end
          commit(ease(t * (end - start) + start));
          if (t &lt; 1 &amp;&amp; running === 0) {
            requestAnimationFrame(frame);
          } else if (running === 1) {
            reject();
          } else if (running === 2) {
            resolve();
          }
        };
        frame();
      });
      promise.cancel = (complete) =&gt; {
        running = complete ? 2 : 1;
        if (complete) commit(1);
      };
      return promise;
    };",1.0
g8meodt,j9oawr,Sounds like you should make a PR then to simplify it ü§î,1.0
g8mm2vz,j9oawr,Why?  I don't care if my name's on the commit.,1.0
g8ll8y4,j9oawr,"Congrats on your first package! I have two suggestions: 

1. The demo is really helpful for understanding what the package does, but is a bit cumbersome on mobile. The buttons are too close together, and the text sections that appear on ""view source"" click are indented so far to the right, I thought it was broken for a good 10 seconds until I realized I needed to scroll (far) to the right.
2. Somewhat of a nitpick so take or leave it as you wish: the description used in the ReadMe was a bit unclear to me. It's great that you have the description of how it works under the hood, but when I read ""animated rising/falling number,"" I didn't know what exactly the package was doing; when I read ""animated,"" I thought CSS animations even though you explicitly said you didn't use styles. Maybe adding terminology like ""timed number increment/decrement counter"" or similar would be helpful.

Otherwise, great job! Seems useful and pretty clear on usage.",2.0
g8m0ry6,j9oawr,"Ha, I was wondering if someone would point out the mobile demo. The syntax highlighter I was using (highlight.js) would not play ball on mobile for whatever reason and I was in a rush to get it finished. It's something I'm gonna' have to get back to.",3.0
g8lmytw,j9oawr,Good job,2.0
g8ln73x,j9oawr,"Currently the ""size"" badge links to the raw source file, and the other three badges all link to the package's npm page

Would recommend instead to link the ""size"" badge to bundlephobia, the license badge to the LICENCE.md, and the downloads badge to either https://npmcharts.com/compare/number-rollup or https://www.npmtrends.com/number-rollup (disclosure - I made npmchartsüòã)",2.0
g8m0vhp,j9oawr,Good spot. I actually copied those badges from another bigger repo so I just assumed that was the correct way to do it.,1.0
g8lvybr,j9oawr,Nicely done! Great job,2.0
g8mi9i6,j9oawr,"A changelog is a fantastic resource to provide to those consuming your package to know what has changed going forward.

It also is picked up by many automated tools like Renovate and Dependabot.

https://keepachangelog.com/en/1.0.0/",2.0
g8modrp,j9oawr,"Really cool package! 

It would be cool if there was an option to easeIn or easeOut",2.0
g8kunmy,j9oawr,"I wrote this over the weekend. `number-rollup` is a vanilla JS package which creates a rolling number animation. I know `countUp.js` is a widely used package which does this but for me this was an interesting learning experience.

[Package on NPM.](https://www.npmjs.com/package/number-rollup)

[Code on Github.](https://github.com/marknorrapscm/number-rollup)

Any feedback on the code is appreciated (or the README, demo, general setup or whatever). This is my first real open source contribution so I'm curious if there's anything I'm doing that's obviously wrong (and if someone wants to tip me over the 0 star mark that would be awesome).",2.0
g8kyd28,j9oawr,"Congratulations on your first package. One thing that many people want to see in open source packages is tests. It is seen as a guarantee, that code will keep its functionality even when you update it.

If you're unsure on how a library like that could be tested, maybe take a look at [more popular library with similar features](https://github.com/inorganik/CountUp.js).",6.0
g8l7e84,j9oawr,"Thankyou for the feedback. Tests are something that I will add, along with a few options for easing (as opposed to the entirely linear animations that are being done now). The countUp tests are interesting and aren't how I imagined a library like this would get tested ([link](https://github.com/inorganik/countUp.js/blob/master/src/countUp.spec.ts) for anyone interested). Using the `np` tool to automate the publishing process is also on the todo list.

Something that countUp.js does is publish the `dist` directory to Github. Is this standard practice for open source projects? I've always been under the impression that builds should be excluded from source control entirely.",3.0
g8lfht0,j9oawr,"One suggestion is to automate your dependency management using renovate bot and you can also automatically bump up the version and publish your package every time you merge a PR in.
Works wonders ...",2.0
g8mdxj9,j9oawr,I assume this is only safe to do after hes added in some tests to validate against.,2.0
g8mephs,j9oawr,Good point! You are absolutely correct.,1.0
g8kqxya,j9ngrp,"If you would like this roundup sent to your reddit inbox every week send me a message with the subject ['javascript'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript&amp;message=x). Or if you want a daily roundup, use the subject ['javascript daily'](https://www.reddit.com/message/compose?to=subredditsummarybot&amp;subject=javascript%20daily&amp;message=x). Or send me a chat with either javascript or javascript daily.

 [See my wiki to learn how to customize your roundups](https://www.reddit.com/r/SubredditSummaryBot/wiki/index)

####Please let me know if you have suggestions to make this roundup better for /r/javascript or if there are other subreddits that you think I should post in. I can search for posts based off keywords in the title, URL and flair. And I can also find the top comments overall or in specific threads.",1.0
g8jyusv,j9fq3n,"To be clear, Moment is not deprecated, it's in maintenance mode.",12.0
g8kuqb1,j9fq3n,Thank you. You're right. Deprecated was the wrong word here.,1.0
g8jhta8,j9fq3n,"luxon, brought to you by creators of momentjs who ignored the feedback of the community for years to even get to the point where they just let the library fade into obscurity. If you're just switching now due to their deprecation notice, you're way behind the curve. There are plenty of other good date libraries with authors who actually care about community feedback. date fns, etc.",2.0
g8jkm5t,j9fq3n,"Thank you for your words. 

It's worth noting that I work at an enterprise, and the cost of removing a library like moment is large. We felt secure with the library due to the 15 million weekly downloads.

The depreciation did push us to move away as we felt it was now a long term risk, whereas prior to the depreciation it was safer not to replace it.",1.0
g8kkn1a,j9fq3n,"As u/BehindTheMath said above, it's not deprecated, it's *done*.

&gt; However, since we understand that Moment is well established in millions of existing projects:
&gt;
&gt; * We¬†will¬†address critical security concerns as they arise.
&gt; * We¬†will¬†release data updates for Moment-Timezone following¬†IANA time zone database¬†releases

What more do you need? For new projects choose something else. But replacing it across your org is madness.",4.0
g8kuobg,j9fq3n,"The challenge we have is maintenance of the appropriate timezone information. Timezones and offsets change all the time. As an international business it's important that we stay up to date.

Moment will no longer be updated with these changes, and that poses a long term business risk.",1.0
g8kvwbz,j9fq3n,"Wasn't the second point in their list ""We¬†will¬†release data updates for Moment-Timezone following¬†IANA time zone database¬†releases""? That sounds like it has you covered.",3.0
g8kwfj5,j9fq3n,Aaaaaaaaaaand my brain apparently read past this line every time I've read that update. ü§¶‚Äç‚ôÇÔ∏è,3.0
g8lihsl,j9fq3n,It happens to the best of us.,2.0
g8m2jtf,j9fq3n,"Yeah, I read their announcement as more of a ""our work here is done"" rather than admitting defeat at the hands of newer libraries. Moment filled an important gap for years, I used it on several projects.",2.0
g8jf2wq,j9fq3n,Open source test suite: [https://github.com/terodox/mirgrating-away-from-momentjs#readme](https://github.com/terodox/mirgrating-away-from-momentjs#readme),1.0
g8ir8nx,j9bdbt,"Should probably properly bundle your package.

`tsc` is a compiler, not a bundler.",2.0
g8iui97,j9bdbt,"I don't want to as the library supports tree shaking. It's up to the consumer to bundle.

If the library was bundled, tree shaking would not be possible.",1.0
g8ivjgb,j9bdbt,"That‚Äôs not at all correct. 

Choosing to not bundle only increases users‚Äô build times as now they have to bundle your module for you.

You‚Äôre making it impossible to use ES6 or ESM and bloating bundle sizes by doing this.",4.0
g8ivymr,j9bdbt,"That's completely reasonable in this scenario. \`openpgpjs\` is 500kb worth of code and might not be used at all if the consumers use WebCrypto (which I think should be the primary use of the library).

Increasing the bundle build time by 1ms against adding 500kb to all consumers seems like an optimal trade off.",-1.0
g8iwfag,j9bdbt,"Why would you think it would add 500kb to the bundle?

Make it a peer dependency and it won‚Äôt get included.",2.0
g8ixdar,j9bdbt,"You can. But you are still including all the libraries files when in reality you only need 2 (one storage and one strategy). There is no point in including them in the production bundle of an app just because we want to shave 1ms to build time for devs.

&amp;#x200B;

However, feel free to open an issue on the repo - I will gladly reconsider if several people argue against my solution with strong arguments.

&amp;#x200B;

Cheers",-2.0
g8ixlpo,j9bdbt,"No, as a peer dependency you won‚Äôt be including its files and it can still be tree shaken properly. 

I think you need to do some reading on the subject chief.",2.0
g8iysbf,j9bdbt,"`openpgpjs` will not be included, but all the `lucertula` files will be. And you need only two of them, one storage and one strategy.

Thanks for the interest! Feel free to open an issue to continue the conversation.

Cheers",-1.0
g8iizfn,j9bdbt,"Hi r/javascript!

I have been working on a library to simplify in-browser encryption/decryption for some time and I present you \`lucertula\`:

[https://github.com/dipasqualew/lucertula](https://github.com/dipasqualew/lucertula)

The library aims to wrap established encryption algorithms, namely symmetric and asymmetric encryptions from the folks at \`openpgpjs\` and the AES GCP implemented via the WebCrypto API, and pair them with various storage solutions (localStorage, sessionStorage, etc). I believe encryption should be easy and available to anyone, but more often than not excellent encryption libraries don't offer ""plugin"" encryption/decryption methods ready to be used by developers.

As this is a library ""around"" encryption (but doesn't implement encryption) I would be grateful if more eyes were pointed at it and any feedback is of course welcome'd

The library is written in TypeScript (tests are stil lin JS but I am in the process of migrating them as well). It also supports tree-shaking so if you don't need OpenPGP your bundle won't suffer the significant size of \`openpgpjs\`.

\--

I wrote this library to avoid the boilerplate code to encrypt to and decrypt from local storage in each of my projects, so that's my personal use case. Hopefully it can be helpful to others

Cheers!",1.0
g8iubb0,j98f4z,"This is my favorite thing I've seen on reddit today! I'm amazed, great idea, great work!",15.0
g8j81kb,j98f4z,"I'm glad I shared it here, your kind words made my day!",3.0
g8jx711,j98f4z,"Someone should start tweeting ""good morning"" at night and ""good night"" at morning just to make you think you have a bug.",11.0
g8k6168,j98f4z,That would be truly evil.....,4.0
g8i2i7u,j98f4z,"This is an interesting idea!

If I could offer a piece of advice - I would think about implementing cookies to capture when a user last visited then calculate the amount of tweets since then.",13.0
g8i7s8i,j98f4z,"That could be cool! The server doesn't really store old tweets right now.

I did run it overnight and captured a time lapse here if any one is interested: https://twitter.com/Omar4ur/status/1315325135990202369?s=19

Could be fun to always store the last 24 hours of tweets",9.0
g8ipkas,j98f4z,"Dang, I never knew there was a pie chart in the middle of Antartica.  


Good stuff!",5.0
g8i8y9f,j98f4z,Wow!,3.0
g8kw2pl,j98f4z,Incredible !! Loved it.,2.0
g8ike10,j98f4z,"If I click a dot, please show that tweet. There were instances when a really long tweet came in that was immediately followed by another. I wasn't able to read the long one, and I wasn't able to find a way to go back to it.",2.0
g8illx7,j98f4z,"Clicking a dot does show the tweet. Is this not working for you? What device are you using? 

You can also see the tweets in chronological order in the list on the left",5.0
g8io0z9,j98f4z,"I'm on an Android phone, Chrome browser. It may be the click box is too small for phone accuracy.",2.0
g8ioiyu,j98f4z,"Ok, yeah that's probably it. I was struggling with that too at some point. Thanks for the feedback, shouldn't be too hard to make the hitbox a bit bigger I think.",3.0
g8jbtir,j98f4z,This is incredible!,1.0
g8kh8wm,j98f4z,Try spring based animations with the map to make the animation changes smoother. Sweet project!,1.0
g8kork3,j98f4z,"i tweeted good morning and it never showed it, what gives?",1.0
g8kz241,j98f4z,The tweet has to be geotagged - which I think it is by default if you tweet from a phone app? Not sure about desktop,1.0
g8l1x6d,j98f4z,"Ah i see, yeah i did it on desktop, thanks",1.0
g8kp139,j98f4z,"Could you make it show the past X minutes of tweets when you open the page, so users don't have to wait around to see the effect?",1.0
g8l18t7,j98f4z,"Yeah this is something I've been considering. I manually saved the last 24 hours of tweets to create this timelapse: https://twitter.com/Omar4ur/status/1315325135990202369

The server doesn't currently store the tweets but I imagine it wouldn't be very hard to keep an array of the last 10-20, and send that to any new client that connects.",1.0
g8ks2i3,j98f4z,"this is hilarious and awesome, i have no idea how you did it and its really cool.",1.0
g8l14pv,j98f4z,"I posted a link to the source code plus a little bit of how it works here: https://community.cesium.com/t/waking-up-and-sleeping-live-twitter-map/11192 

If you're interested, we've just revamped our tutorials recently, this one on how to build a flight tracker is probably a great start: https://cesium.com/docs/tutorials/build-a-flight-tracker",1.0
g8j7ppu,j98f4z,"Great idea! Now can you do it for DMs with ""u up?"" lol",1.0
g8hybam,j986my,"The source code can be found here: [https://gitlab.com/tobiaskaufmann/junkies-series](https://gitlab.com/tobiaskaufmann/junkies-series)

The main technologies I used for this simple project are Angular and Firebase for the Backend. Besides some styling with CSS this was really not a lot of work but if you still have some questions feel free to ask them below :)",1.0
g8i8vze,j986my,Nice work! So you're going for something like a trakt.tv clone? Where do you get the metadata from? :),1.0
g8j3za8,j986my,themoviedb.org API,1.0
g8l57if,j986my,Cool! I've been using pogdesign.co.uk/cat/ for like 10 years. Would love to run my own thing though.,1.0
g8l5nhb,j986my,just clone it :),1.0
g8l6fya,j986my,^__--,1.0
g8hu4ut,j9603c,This reminds me of that Dont Use ReactJs blog post which the main motivation was because there are people using 2G network,6.0
g8hshsp,j9603c,"What a terrible article.  Nothing but fear-mongering and ""what ifs"", all while hand-waving away the 100% legitimate (and long-established) benefits of CDNs.

Look, I would have *loved* to be convinced by *evidence* that CDNs are bad ... but there is zero evidence of any sort in this article! The closest thing that passes for it is a story about a hack **that didn't even involve a compromised CDN!!!**

That's right, the *only* ""evidence"" that CDNs are bad, in the entire article, is a story about a hack that literally never mentions CDNs ... but  (if you actually read the article the author links to) it *does* explicitly say:

(emphasis added)

&gt;While the Magecart attack against British Airways **wasn‚Äôt a compromise of a third-party** supplier ...",10.0
g8hukj3,j9603c,"There are good points in the article though. Isn't it true that if you're already serving your app/site from some kind of CDN, serving 3rd party libs from another CDN will be slower than serving files from the same domain? I think the privacy point described in the article is also a bit more nuanced, though I agree the airway example was misleading.

I can see benefits of using cdn libs in quick prototypes, but for production apps where a bundler are always presented I don't see a good reasons to use them.

The exceptions are not libs, but actual services like Stripe, google analytics, polyfill.io etc.",2.0
g8hvfw8,j9603c,"&gt;There are good points in the article though

But there aren't.  A ""*good* point"" *in any article* has to be backed up by something.  I can't just declare ""foo is flawed"" and have that be a good point.  For it to be a ""good point"" I have to say ""foo is flawed *because* ... X"", where the ""X"" has to be logical/verificable.  But the author doesn't support any of his positions, and literally the only piece of evidence **says it wasn't CDN-related** (if you read the link).

And to your specific point:

&gt;serving 3rd party libs from another CDN will be slower than serving files from the same domain? 

Even if we ignore the fact that CDN servers are *highly* optimized for serving static files, in ways your server likely isn't (eg. their settings are tweaked, they likely have servers all over the world, etc.), there's a whole other issue.  Your browser limits the number of requests you can make simultaneously to any one domain, so spreading out your requests can actually make things faster than serving them all from one domain.

In fact, people on very big/serious sites (Amazon, Google, etc.) actually make their own ""mini-CDNs"", by using sub-domains, for this very reason: it allows users to make more simultaneous requests for files from that site.  Just ""View Source"" Amazon.com, for instance, and you'll see URLs like ""http://g-ec2.images-amazon.com"". They not only have a *whole separate domain* just for serving images ... they further divide it up in to ""a through g"" servers (and probably more letters too; I just saw ""g-"" in my view source).

&gt;I don't see a good reasons to use them.

To make your site faster for your users ... the same reason literally tens (hundreds?) of thousands of devs have been using them, for decades now.",2.0
g8koy8s,j9603c,"&gt; it allows users to make more simultaneous requests for files from that site

Note that this is only true for HTTP/1. With HTTP/2+ there's no limit on the number of connections per domain (and indeed there's a bunch of other things that make single-domain hosting more efficient, from server push to prioritization) so I'd expect people will stop doing this in the next couple of years as HTTP/2 becomes standard.",0.0
g8hv8zl,j9603c,"Because the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading. If you bundle all of the libraries that you use in your app, they have to download all of the libraries again, making your app larger and slower to download, even if they may already have the libraries from other sources.",1.0
g8hxpu8,j9603c,"&gt; Because the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading.

This is a bullshit argument though. Press f12, go to the network tab, then go to any web site. See how many of the externally hosted resources are served from your cache because they were used on a different web site. It's a theoretical solution to a problem that doesn't work in practice, and never will as long as versions aren't static by a period of several months.

There are benefits to using CDNs (e.g. multiple connections to different hosts, optimized traffic flow, etc.), but this one is a false narrative.",3.0
g8kk24j,j9603c,"It also ignores the new Chrome cache partitioning which will mean if different sites refer to the same CDN, it won't use the cached copy anyway.",1.0
g8kpust,j9603c,"&gt; the point of using a CDN to deliver common external libraries is that visitors to your site will likely have already visited another site that has already served them that same library from the same CDN, meaning it's likely cached on their system and wouldn't need re-downloading.

See https://developers.google.com/web/updates/2020/10/http-cache-partitioning - sadly this kind of CDN behaviour is no longer supported by any modern browsers, due to privacy concerns",1.0
g8kpq2v,j9603c,"I'm not actually the author, but I don't think this is fair - it's a short article that covers a lot of ground, and each point is a valid way in which CDNs might create new problems, or not do what you'd intended.

While the attack mentioned didn't involve a compromised CDN, it is an example of an attack that worked by modifying a hosted 3rd party JS lib, and the exact same attack against a CDN would be devastating. You're putting your trust in the CDN to protect against that, and not doing so clearly reduces your risk to such attacks (you trust your own security + the CDN, or you just trust your own security).

A key point here, under speed: your whole site should be behind a CDN, not just your JS libraries. If you're using a host like Netlify or Vercel, that's happening automatically already. If not, throwing cloudflare or similar in front of your site and using appropriate cache headers is very easy and standard for most large applications. This will usually provide a much larger performance benefit than using a CDN for JS libs (also because you now can do JS bundling or HTTP/2 server push).

Given that you're doing that, the only benefit to using a JS-hosting CDN is if your user already has a cached copy of the exact same version of the same library from some other site. As mentioned here, that's somewhat unlikely.

In addition though, Safari &amp; Firefox have explicitly blocked reuse in these cases for a while now (for privacy, so sites can't use what you already have cached to tell which sites you visit) and Chrome just shipped the exact same thing last week: https://developers.google.com/web/updates/2020/10/http-cache-partitioning. **Sharing JS libs across sites using a CDN is now intentionally blocked by all major browsers**.

CDNs for external JS are not useful nowadays, they do increase your security/privacy/reliability risks a little, and they no longer provide any benefits.",1.0
g8htdnh,j9603c,"Why not go even further? Stop using JS libraries because someone might inject malicious code?! Or even further, no more JS development...too much risk!!! üôÑ

Edit: Spellcheck",3.0
g8hv6ir,j9603c,"Please stop using the internet, it's too risky! /s",6.0
g8jun1e,j9603c,"Yes, this is why I still use cgi scripts and manage my data with a text file I read/write to.",2.0
g8kq47q,j9603c,"&gt; Stop using JS libraries because someone might inject malicious code?!

This is a valid concern, and using libraries you haven't vetted _is_ a security concern.",1.0
g8krlcm,j9603c,The amount of time CDNs can save you is pretty nice though.,1.0
g8irsqn,j939jm,"Just to be clear:

* You're using **Node** builtins, which are intrinsically exclusive to Node
* Then you complain that the Webpack team isn't willing to take responsibility for that
* And to make it better, you decide to make a passive aggressive blog post to shame them, knowing full well how hard being an open source maintainer already is?

Webpack is a **bundler**. Their core mission has nothing to do with abstracting APIs across environments - that they did it in the first place was a nicety, and that you decided to rely on it is entirely on you (especially since not all bundlers had these polyfills by default). That they decided in a major they didn't have the bandwidth to support this usage in the core anymore is perfectly fine - you had literally years to do something about it, it's not like Webpack 5's development was in submarine for anyone.

Perhaps you should consider that Webpack 1 to 4 made their software worse, for you, to give you time to adjust, and that you didn't. Don't take it on them once they tell you that hey, your packages aren't portable and it's costing them resources to support you, resources that would be better spent elsewhere.

[edit] Nice, Sindre blocked me on Twitter *and GitHub* for this comment.",20.0
g8iv1v7,j939jm,**I** am not using Webpack or relying on anything. **Developers** are using my Node.js packages with Webpack for the front-end because that's what Webpack has enabled and encouraged over the years.,-13.0
g8ivyar,j939jm,"Then tell them your packages aren't suitable for browser usage, or recommend using polyfills (which perhaps you already do?), but don't frame it as ""this other project sucks, go bug them instead of me"". You should know better.",13.0
g8h4ist,j939jm,"At the end it sounds like the author wishes Node to be more like Deno, yet he's blaming Webpack for going the same direction (being: relying on Web APIs rather than Node ones).

He also complains browsers should have a utility like `promisify`, which makes no sense to me at all. The only reason that's useful at all is because Node has those horribly callback-style APIs where error objects are passed as the first argument to callbacks. Other environments don't have such APIs thus wouldn't really benefit from having it.

Ultimately it's just a rant different environments are different. If you want to unify, there's going to be friction, which will be the case with the new Webpack. But wishing everyone supports all APIs forever is not a realistic alternative, no matter how unfortunate that is sometimes.",11.0
g8his1z,j939jm,"&gt; At the end it sounds like the author wishes Node to be more like Deno, yet he's blaming Webpack for going the same direction (being: relying on Web APIs rather than Node ones).

While I do wish Node.js was closer to Deno, your conclusion is not what I intended. I'm blaming Webpack for removing an existing feature that users depended on with very little guidance on how to deal with it and with the expectation that package maintainers should take on the burden instead.

&gt; He also complains browsers should have a utility like promisify, which makes no sense to me at all. The only reason that's useful at all is because Node has those horribly callback-style APIs where error objects are passed as the first argument to callbacks. Other environments don't have such APIs thus wouldn't really benefit from having it.

Browsers have more callback APIs than promise APIs. The difference is that many of these don't have an error argument. But that could be dealt with by providing an option indicating whether there's an error argument. I have done so in [my own promisify package](https://github.com/sindresorhus/pify#errorfirst) (created long before `util.promisify`).

&gt; Ultimately it's just a rant different environments are different.

No, it's a rant on how Webpack is meant to simplify front-end tooling, but in the end, makes it even harder for users.",5.0
g8j3s9v,j939jm,"&gt;While I do wish Node.js was closer to Deno, your conclusion is not what I intended. I'm blaming Webpack for removing an existing feature that users depended on with very little guidance on how to deal with it and with the expectation that package maintainers should take on the burden instead.

And to pull another quote from your article:

&gt; Honestly, Webpack not polyfilling does make sense in theory. I just think they did it too early and with too little consideration about its effects on the ecosystem. 

To be frank, that's a terrible reason to knock them for this. You as much as anyone should know the cost of compatibility features like this. *And* they've been communicating this change since [beta.1](https://github.com/webpack/changelog-v5/blob/3df640b8e32a810d243e67dfd835913d9f578a4d/README.md#automatic-nodejs-polyfills-removed) and loooong before and the reasoning has always been that users should not be depending on these polyfills. They're not expecting package maintainers to take the burden, they're trying to kill this long standing ecosystem hack. The only thing they ask mainainters to do is clearly communicate web browser compatible builds if any.

&gt; No, it's a rant on how Webpack is meant to simplify front-end tooling, but in the end, makes it even harder for users.

A whole big theme of this release is _simplifying_ things for end users and unifying webpack's behavior with where the ecosystem has moved to. Preserving things like this is just shifting complexity onto the webpack authors and bloating bundles for what was ultimately always an ecosystem hack.


I won't entirely defend the Webpack authors here. They could have communicated the release, the gotchas, and the upgrade path better. But I do think it is entirely unfair to critize them for this.",6.0
g8j5jcq,j939jm,"&gt; And they've been communicating this change since beta.1 and loooong before

For the majority, the Webpack 5 blog post is the first time they hear about it.

&gt; and the reasoning has always been that users should not be depending on these polyfills.

Maybe in a perfect world, but in reality, the result is just that users and package maintainers will have to deal with it instead. Users will now have to figure out how to manually add these polyfills.",0.0
g8j796q,j939jm,"&gt;  Users will now have to figure out how to manually add these polyfills.

Or drop the libs requiring them. Having watched this same story play out in other ecosystems, part of the point is get users to be aware of the problem and move away. Or just stick with Webpack 4 for as long as it's feasible.",3.0
g8j8clh,j939jm,"Yes, that's also a good solution, but switching to a different package takes some effort too.",0.0
g8j8jsz,j939jm,"Agreed. Honestly, I expect 95% of users will just sit out the upgrade for a few months until projects like Next, Nuxt, and the rest catch up. That's what we're going to do. The blog post sort of says to do that, but I wish they'd said it in stronger terms.",2.0
g8j68ih,j939jm,You‚Äôre blaming them for not tracking the communication from the team?  Wut.,-1.0
g8j70qs,j939jm,"No, Sindre is right in that regard. A major blog post communicating the breaking changes months or years ago would have been welcome. Webpack is ubiquitous, expecting all its users (direct or indirect) to track the issue tracker isn't sensible.",3.0
g8j7ghp,j939jm,Agreed as well. I‚Äôm just not sure what else they should be doing. Open source revolves around a lot of unpaid hours. I think because of this time is better served contributing rather than throwing shade.,0.0
g8iyi05,j939jm,"May be its time to move to some other alternative, may be rollup.",2.0
g8iq43a,j939jm,I don‚Äôt really see the problem. Can you name a few libraries commonly used in frontend development that will be affected? Cause I can‚Äôt think of one.,2.0
g8icw2u,j939jm,"Sinder, you do own tons of packages and I had always been curious about how you feel about people demanding package fixes that actually belong upstream to webpack. 

I haven't tried this release yet though, but, I think your stance is correct a tool chain such as webpack should not change their build like this, even over large releases, they might as well have changed source language...",-1.0
g8igd6j,j939jm,"I feel like I have been quite accommodating for Webpack users. I have added lots of workarounds (for example, for dynamic require warnings), refactored exports to work better, split up exports to be more tree-shakeable, answered Webpack support questions, and generally pointed folks in the right direction. However, I will not make packages worse for Node.js users in favor of Webpack user's needs.",4.0
g8jmla1,j939jm,"What the hell, that's like developing a Node native addon module and complaining that browser vendors are not willing to support it",0.0
g8kfmrz,j91w8e,"I don't see much need for it, but it's kinda cool.",2.0
g8l5nte,j91w8e,Thanks. It was made just for personal use initially as I have this habit of checking my github feed very often so now I can just take a look at my feed right from my working terminal. That was the whole idea behind it :),2.0
g8lyzbq,j91w8e,But why,1.0
g8hy7gz,j91nhc,Order w https://example.org/script.js,1.0
g8fizmx,j8x3a3,"[Module federation](https://webpack.js.org/blog/2020-10-10-webpack-5-release/#module-federation) seems very interesting, especially for the teams out there that are working in separate repos, but have to unify their applications into one cohesive product.",51.0
g8fwo0a,j8x3a3,Yes I've been waiting for this for years. Really looking forward to giving it a spin.,9.0
g8hel6v,j8x3a3,"A couple of my teammates have said that they want this, but it mostly only seems useful only if you have projects across different repos, otherwise, of you have a bunch of projects in one repo, it seems that something like yarn workspaces can manage these dependencies much easier. Am I missing something here?",3.0
g8ip2y4,j8x3a3,"&gt;  [i]f you have a bunch of projects in one repo, it seems that something like yarn workspaces can manage these dependencies much easier.


I totally agree. I think monorepos work better 99% of the time, but I've seen code fragment into separate repos (usually for political reasons such as team members reporting to different managers). The counter-argument to monorepos that I commonly hear is that the code becomes ""too complex"" or too large to manage, but I personally believe it is far easier to manage complexity from a single codebase rather than having multiple fragmented repos.",2.0
g8ijfs7,j8x3a3,"I used it for brand differentiation, so being able to get what seems like the same component, but have a different one load from a different source based on some criteria. Allows hosts to operate agnostically. Pretty sweet.",1.0
g8fmniz,j8x3a3,"&gt;**So when is the time to upgrade?**  
&gt;  
&gt;It depends. There is a good chance that upgrading fails and you would need to give it a second or 3rd try. If you are open to that, try to upgrade now and provide feedback to webpack, plugins and loaders. We are eager to fix those problems. Someone has to start and you would be one of the first ones benefiting from it.

Is it just me, or are they implying it's just not production-ready yet?",85.0
g8fp6yb,j8x3a3,"&gt; So today (2020-10-10) webpack 5.0.0 is released, but this doesn't mean it's done, bugfree or even feature-complete. As with webpack 4 we continue development by fixing problems and adding features. In the next days there will probably a lot bugfixes. Features will come later.

I think they are doing more than implying that",74.0
g8hofh2,j8x3a3,"Ah, the ol' ""test in production"" approach.",13.0
g8jk4ro,j8x3a3,That's what release candidates are for and npm supports them just fine so this is pretty strange tbh,2.0
g8fq5tq,j8x3a3,"On one hand the first RC was 3 weeks ago and there was a long line of beta versions before that, theoretically enough time to iron out most major bugs. On the other hand it's a big, incredibly configurable project with lots of functionality living in separate packages with separate maintainers, it needs a lot of people using it to get good bug detection coverage (which will only happen with a ""stable"" release).",18.0
g8g2w6l,j8x3a3,"There‚Äôs a million different ways you can configure webpack. I think they‚Äôre saying for most use cases it will work in a stable fashion, but some edge cases may fail over the next couple of months while they fix bugs.",21.0
g8gg4nb,j8x3a3,"No, that‚Äôs not what they‚Äôre saying. ‚ÄúThere is a good chance that upgrading fails‚Äù is not the same as ‚Äúit might fail because of your unique config and certain edge cases.‚Äù",10.0
g8ipk1k,j8x3a3,"Well, I can imagine plenty of ways for upgrades to fail because of plugins people are using that are not Webpack 5 ready. That's what I assumed would be the primary issue. Their tool might be release-worthy, but the ecosystem may simply not be there yet.",1.0
g8glfwf,j8x3a3,"There is an ecosystem of plugins and use cases that most certainly isn't production ready, even if the core webpack 5 is",6.0
g8gchn2,j8x3a3,"That's not what they're saying.

They're saying that they've introduced breaking changes, plugins and loaders may need updating, or not, so if you can, try it and see.

There may also be bugs, so we'll see.",6.0
g8ge1dw,j8x3a3,"I don't think it's ""not production ready"" but I do think it's such a core dependency that we pack is part of many tools now and unless everyone else also changes to 5, it's hard to do it ourselves.",2.0
g8gdu9w,j8x3a3,"referring to upgrading existing setups. I wouldn't change mid way through a project anyway, just on principle.

Next project I'll give it a spin from scratch.",1.0
g8myqcw,j8x3a3,Hey Sean from the webpack team! We reworded this to say that some third party plugins just won't work yet because they need to play catchup. We agree this was poorly worded! :-),1.0
g8hlynt,j8x3a3,Is anything in the JS world production ready?  even the  stuff used in production?,1.0
g8g4t1k,j8x3a3,I *just* got used to 4,23.0
g8g7hy3,j8x3a3,I literally just finished updating a stack from 1 to 4...,7.0
g8grgfl,j8x3a3,4 will be pretty stable and fine to use for some time to come I'm sure.,4.0
g8gcij4,j8x3a3,There‚Äôs so much great stuff in here. Very excited to upgrade!,8.0
g8g8r0u,j8x3a3,"Genuine question, my site is still on webpack 2. Am I at all screwed moving forward? Or am I just missing out on a lot of cool stuff?",4.0
g8gabzg,j8x3a3,"Over time you'll have to seek out the exact versions of any new plugins you want to use as some of the plugin and loader APIs are fairly different.

If your website never needs new plugins, and your unlikely to want to take advantage of the new features, you'll probably be fine 

In general though, the longer you go without upgrading things (not just webpack) the harder/bigger it is up upgrade when you need too",15.0
g8ipf4r,j8x3a3,"If your site is very large, you'd likely see (build) speed improvements from upgrading to 3, 4 or 5. The migration guides are there, and there isn't any ""rush"" to update (take your time).",2.0
g8gik6r,j8x3a3,"The coolest stuff should be the app we are building, not the scripts we are using to put our JS together.",8.0
g8hrwkx,j8x3a3,I‚Äôm excited to see how the size of my production modules change with better treeshaking algos. I wonder how speed and output size will compare to other bundles now. Web pack imo is better than browserify for a number of reasons but bundle size has been smaller w browserify for me.,2.0
g8j0j5q,j8x3a3, with my webpack 4 config i could get a single common.js for both my frontend and backend targets. is this still a thing with webpack 5?,1.0
g8gny4g,j8x3a3,But I still learn how use webpack 4 =)),1.0
g8hqqjm,j8x3a3,Time to switch to Rollup!,-5.0
g8dichj,j8sfd0,"And then when you want to use these types in another file, you're screwed. Yes, you can import them using a really ugly syntax, but why bother? If you're doing this you might as well just use typescript all the way.",9.0
g8dqixm,j8sfd0,"If you want to share types it's pretty straightforward to put interfaces/types in a declaration file (eg: `pets.d.ts`) and import that in the jsdoc comments (`/** @type {import(""./pets"").Fish} */`).  Some folks might find that syntax ugly (a fair point that I tend to agree with), and others might find dealing with build scripts and source maps more painful than writing jsdoc syntax ¬Ø\\\_(„ÉÑ)\_/¬Ø

&amp;#x200B;

I won't fault anyone for going all in and writing everything in .ts files... but I also won't fault anyone for adding type-checking to existing JS files (maybe they are in a brownfield project, or maybe they are writing a little JS inside an HTML file yet still want some type-checking).  I'm just glad we have both options.

&amp;#x200B;

Thanks for the comment!",6.0
g8dscwc,j8sfd0,"Yeah, I agree for the most part. I concede that not all projects can migrate to TS, even if it's possible to do gradual migrations, and in those cases it's nice to have the alternative.",2.0
g8i0e0y,j8sfd0,You can also use type aliasing and import using the normal es import signature. I don't see this approach documented at all though. Basically you export a value that is typed to what you want (aliased) and when you use it like a type checkJs is perfectly able to attribute the right validation. Much nicer approach imo.,1.0
g8excuk,j8sfd0,"I feel like there's an elephant in the room not being mentioned.

**You can do all of this in Javascript and get the tooling benefits of Typescript!!!** (without ... mostly ... having to write types).

Step #1: Use VS Code

Step #2: Add `checkJs: true` to your `jsconfig.json` file in your project root (https://code.visualstudio.com/docs/nodejs/working-with-javascript)

Step #3: Let VS Code infer all your types for you from your code, so that you get the benefits of recommended arguments (as you type function calls), automatic imports, etc. ... all without ever writing a single line of Typescript

Step #4: On the rare occasion that VS Code *can't* infer your types (eg. Styled Components use functions inside template strings; VS Code isn't a fan of those) use the technique described in the article to define the type you need via JSDoc.",5.0
g8ctl62,j8o3i9,"Good job on the project, here's some points of criticism, if you're interested: 

i have to say I don't like how it only uses half the screen for the comments. I would not use a site with a comment section set up like this, it's a bit strange. if you don't want to show the comments on the whole screen, I would at least center them, and maybe just have a semi-transparent black backdrop to gray out the other elements on the page.

second of all, tab clicking stuff doesn't work. this is always a pet peeve of mine with SPAs, often some browser functionality just gets left in the dust, and things don't do what you expect them to. 

if you scroll down on the comments, the X scrolls away with them, so you can't close the comments anymore.

no way to collapse comment trees

I would move the tags (e.g. show HN) to just be next to the title, rather than above it. it looks a bit awkward

clicking the article title on the comment screen does nothing. it's very hard to actually open the article the post is about

e: noticed I had previously downvoted the OP once in my RES, so I took a look at OPs account, looks like they're just spamming links to various blogs from the hashnode network, I think they're just trying to promote their own blogging platform by posting random content from it

e2: the actual author of the project did make a post on reddit about it as well, here:

https://old.reddit.com/r/webdev/comments/j8j9xt/i_gave_a_modern_look_for_hacker_news/",12.0
g8csln5,j8o3i9,this redesign shows me two articles in the same space I can see 16 articles on HN.,43.0
g8d74i1,j8o3i9,Ah the classic designer vs developer argument: visual efficiency vs aesthetics,14.0
g8ec077,j8o3i9,"Uhm, if you‚Äôre focusing on aesthetics over visual efficiency, you‚Äôre not a designer, but an artist.",3.0
g8e6llk,j8o3i9,Wow you can read 16 titles at once? This must be the 10x developer I've been hearing so much about,1.0
g8c96f9,j8o3i9,I truly hate HN design. I hope they just copy-paste this design. üòÄ Good work.,1.0
g8lt6tt,j8o3i9,"It has its positives, like it conveys more information in less space than OPs and functions better than OPs as you can see in the topvoted comment.",1.0
g8ct24g,j8o3i9,"Nice but it‚Äôs sad that He couldn‚Äôt make something of the background color , plain white is a bit too hard.",1.0
g8d5rrj,j8o3i9,"Is it possible to make a chrome extension that ""beautifies"" hacker news?",1.0
g8ch38z,j8o3i9,[deleted],0.0
g8crkhk,j8o3i9,"well for one, this new design doesn‚Äôt even load with javascript disabled. if it were any other site that would be no big deal, but i don‚Äôt think hacker news readers would take kindly to that",9.0
g8dolqz,j8o3i9,Narrator: _They wouldn‚Äôt._,3.0
g8dyqls,j8nrbo,"Jesus, these comments. Guy made something and was proud of it. And we wonder why developers are stereotyped as egotistical assholes. You didn't have to say shit if you were just gonna be a douche to this guy who put work into something he wanted to share.",103.0
g8ej08g,j8nrbo,No shortage of douches in this industry.,14.0
g8elkzp,j8nrbo,Absolutely agree that there are a bunch of egocentric fucks in this field.,8.0
g8e3vub,j8nrbo,"Sad to see some jealous people on this thread. Is this what Reddit is? A bunch of anonymous ungrateful bunch  of kids trying to devalue someone who created something for the community. Ridiculous. God, I absolutely hate people like this. Create, not complain.",49.0
g8erbuw,j8nrbo,"&gt; A bunch of anonymous ungrateful bunch  of kids trying to devalue someone who created something for the community 

Hit the nail on the head buddy",11.0
g8c7g8y,j8nrbo,"[server: Node.js + Typescript + MySQL](https://github.com/tylergrinn/cronpush)


[front end: Typescript + Vue 2 + Bootstrap](https://github.com/tylergrinn/cronpush-web)


[Medium article](https://medium.com/@tygr.development/web-push-notification-scheduler-99314afdd5ef)",35.0
g8e7iui,j8nrbo,Kudos to you for putting this together and sharing your accomplishment.,23.0
g8eepwv,j8nrbo,Thanks!,7.0
g8eh04g,j8nrbo,Very nice!!,8.0
g8f0lj5,j8nrbo,Good job dude :),3.0
g8c75tp,j8nrbo,[removed],1.0
g8c78nq,j8nrbo,[removed],1.0
g8fe997,j8nrbo,Hey! This is awesome! Love the subtle design details you've paid attention to :),1.0
g8fg6sc,j8nrbo,Thank you!,2.0
g8l164o,j8nrbo,Awesome!,1.0
g8cafzv,j8nrbo,[deleted],-63.0
g8cbbl3,j8nrbo,This one's mine,107.0
g8f557s,j8nrbo,Roasted.,3.0
g8cdzj4,j8nrbo,Why is it better than the other ones?,-36.0
g8ch45a,j8nrbo,"I don't know of any others, Lloyd does",41.0
g8ciavb,j8nrbo,"You're going to have a better answer than that if you want someone to try yours.

Marketing 101: make them want your product or service.",-63.0
g8cim9f,j8nrbo,"Honestly I'd rather not have this get too popular, as there's no way for me to pay for it if it exceeds my server size. More of a portfolio thing but I hope it helps you",55.0
g8cr4g7,j8nrbo,"Well, then you can add to your portfolio/resume how you integrate google ads into your project.",-45.0
g8cwaij,j8nrbo,That's a good idea I might try that out. Or maybe bing ads. Lots of real estate for sure,19.0
g8dfczs,j8nrbo,"You could always host it on a cloud provider like Google Cloud or AWS. Control your costs, scale out and in as you wish based on traffic and your own cost limits",6.0
g8dhom8,j8nrbo,"That's another good idea and I'm actually in the process of containerizing it right now because I'd like to learn kubernetes. Right now I have a personal server through digital ocean (aws) which this app is sharing with a couple others.


So it can already scale if it needs to but I'd like to let it exist separately and get some donations first. I'm accepting sponsorship on my github profile and I plan to add a one-time donate button to my home page once it's finished.",11.0
g8cj739,j8nrbo,Marketing 102: figure out a way to turn it into a subscription service to provide a profit.,-51.0
g8d7500,j8nrbo,Why can't you just make something for fun? And for the learning experience?,36.0
g8esz7r,j8nrbo,Didn't say you couldn't. That's harder to market.,-5.0
g8d5fs0,j8nrbo,"Marketing 103: forgot number 102, make your product as addictive as possible to keep users ""engaged"", track every single thing they do, then cash out by selling your user's personal data to the highest bidder",17.0
g8ghu3v,j8nrbo,There‚Äôs a lot of cron-as-service sites out there,-3.0
g8dvtyo,j8nrbo,You and thousands of other people just like you. Cloud scheduler is literally free in Google's cloud.,-59.0
g8c6yeg,j8nnw0,"Thanks for sharing your open source project, but it looks like you haven't specified a license.

&gt; When you make a creative work (which includes code), the work is under exclusive copyright by default. Unless you include a license that specifies otherwise, nobody else can use, copy, distribute, or modify your work without being at risk of take-downs, shake-downs, or litigation. Once the work has other contributors (each a copyright holder), ‚Äúnobody‚Äù starts including you.

[choosealicense.com](https://choosealicense.com/) is a great resource to learn about open source software licensing.",5.0
g8ksftf,j8nnw0,"It's in package.json, I just forgot the file.",1.0
g8g0gd7,j8nnw0,This is some incredibly underrated work. A lot of code would be better off if it used these.,3.0
g8ksgih,j8nnw0,Thanks! I'd love to refine this code and get it to a stable 1.0.0 release and then incorporate it into some other JS libraries.,1.0
g8hsbcm,j8nnw0,"Very well done, starred it and will track the progress!",2.0
g8dsycv,j8na1p,[Looks great! (Firefox on Android)](https://i.imgur.com/j9Jds06.jpg),2.0
g8dxf4d,j8na1p,not much better on Chrome android unfortunately. I'll have a look on pc tomorrow,1.0
g8e1gin,j8na1p,it's not any better,1.0
g8furqg,j8na1p,"u/Dourdough u/NoIsE_aLiVe u/mq3

You had to click on ""set days"" or anywhere else besides the counter. I wrote a function that clicks that for you on the first session, clear cache of the site and try it now",1.0
g8g32jr,j8na1p,"Oh no I'm aware, it's just a bad user experience",1.0
g8c30oe,j8j4f7,"I just re-released a library called IAM, available at [https://github.com/coreybutler/iam](https://github.com/coreybutler/iam). It's an identity and access management library. It runs on any JS runtime with ES Module support (i.e. browsers, Node, Deno, etc). This library is my answer to the somewhat underserved discipline of authorization (not authentication, which is very well supported).

The driving principle is developers should be able to build authorization logic into their apps by always asking the same question: ""Does the user have the right to use this system resource?"" For example:

    if (user.authorized('system resource', 'view')) {
      display()
    } else {
      throw new Error('Access Denied')
    }

To achieve this, the library provides simple methods for defining system resources, rights, roles, groups, and users (see the README for details). At that point, it acts a bit like a logical query engine, where you ask IAM whether the user has permission or not. The library handles the complexity of determining whether a user belongs to the right role, whether a group has access, whether a group inherits roles and rights that get applied, overrides (forcibly deny/allow)... i.e. all the messy stuff.

The library also has what I call a ""lineage tracer"". By specifying a system resource and a right, it will tell you what group/role memberships were applied to determine whether the user is authorized or not. Here's a copy/paste of what that would look like:

    {
      ""display"": ""superadmin (group) &lt;-- admin (subgroup) &lt;-- partialadmin (subgroup) &lt;-- administrator (role) &lt;-- * (right to view)"",
      ""description"": ""The \""view\"" right on the \""admin portal\"" resource is granted by the \""admin\"" role, which is assigned to the \""subadmin\"" group, which is a member of the \""admin\"" group, which the user is a member of.\"",
      ""governedBy"": {
        ""group"": Group {#oid: Symbol(superadmin group),‚Ä¶},
        ""right"": Right {#oid: Symbol(allow:* right),‚Ä¶},
        ""role"": Role {#oid: Symbol(admin role), ‚Ä¶}
      },
      ""granted"": true,
      ""resource"": Resource {#oid: Symbol(admin portal resource),‚Ä¶},
      ""right"": ""view"",
      ""stack"": (5) [Group, Group, Group, Role, Right],
      ""type"": ""role""
    }

The library also has the ability to dump its full configuration as a JSON object, or dump a cleaner/readable data set for storage in a DB. Configurations can be loaded, which means the system configuration is pretty simple to migrate/reuse.

I've built more user management and auth systems than I care to, and I finally got fed up with the mess that seems to always incur in every project. That's what inspired me to create this. I gave a meetup talk (with examples) about this when I released the first iteration of the project (linked to in README). This new release has been cleaned up, with distribution through npm and popular CDN's, features 195 automated unit tests, and has been battle tested on client projects and my current startup.",1.0
g8emfpv,j8j4f7,"Hey, I'm Aaron! I'm pretty comfortable with JS and am trying to get better at Python for data science purposes -- something I'm only really comfortable doing in Excel (thanks, business school!).

I miss how visual spreadsheets are, and how easy it made data cleaning and manipulation. That, combined with spending an ungodly amount of time on Stack Overflow to lookup Python syntax, made me long for the simplicity of spreadsheet-based data analysis with the power of Python.

So I built [Mito!](https://trymito.io/?source=r/javascript) (written mostly in the lovely JS!)

Mito is an editable spreadsheet in your Jupyter notebook. Pass in a Pandas data frame, make the edits you want, and Mito will automatically convert your edits into production-ready Python code.

You can clean, filter, find/replace, and use standard spreadsheet functions in Mito, giving you the visibility and ease of a spreadsheet with the power and repeatability of Python.

It's been a great way for me to learn Python while not banging my head against the hallowed halls of Stack Overflow.

I'd love to hear your thoughts about how this might be useful to you. You can check it out [here](https://trymito.io/?source=r/javascript)!",1.0
g8f4u23,j8j4f7,"I wrote a dead-simple React component that sandboxes your D3 code. Making D3 and React play nicely together has never been easier!  


[https://gitlab.com/Native-Coder/d3-react-component](https://gitlab.com/Native-Coder/d3-react-component)",1.0
g8gznv0,j8j4f7,"I was frustrated by the slow compiling of code in my company. I created the tools to speed up the compile process. 

It picks the changes from your local system and compiles them over the server and exposes a URL that you can access.  While building this tool, security and speed was my major focus.

It's still in development. Please let me know. If you find it interesting. I will send you the steps to try it.

[https://stormyapp.com](https://stormyapp.com)",1.0
g8kceda,j8j4f7,"https://github.com/Lamasusb000/PublicCode 
I created a simple public use code repository that work in modules and so people can easily import them!",1.0
g8aql7n,j8grww,I‚Äôve spent lockdown learning to code. I decided first large project should be to help bars and restaurants that are struggling. Please any help or advice for improvements would be appreciated.,5.0
g8ayrmp,j8grww,I've noticed that you don't have any unit/integration nor e2e tests. If this is to be used professionally then I believe it should provide a certain minimum level of quality. Maybe you can improve that aspect.,4.0
g8ayw0k,j8grww,Yes great point. To be honest I‚Äôm just doing a course on these for this very reason! Do you recommend any resources for learning about testing Node and React?,3.0
g8cc0zr,j8grww,"One decent source for getting basics of Node/Express and React testing would be [Full Stack Open](https://fullstackopen.com/en#course-contents) by University of Helsinki. It's free, it's online, and you can browse all the material without extra hassle.",2.0
g8j2c2v,j8grww,Thank you so much for this recommendation I‚Äôve looked at so many guides and none of them made sense to me but this one just clicked.,2.0
g8kwbdv,j8grww,"You're welcome! I tend to recommend this course even to folks who already write this kinda code for living. It also seems to get something new every year, so there is smaller chance of the course content getting old.",1.0
g8az4zu,j8grww,"I don't know of any courses first-hand. However I've heard good things about Kent C. Dodds. Although quite expensive.
If you don't mind reading manuals then you could just get hands-on experience by using something like testing-library.",1.0
g8azc9p,j8grww,Awesome. Thank you for your advice it‚Äôs really appreciated. I‚Äôll get on it.,1.0
g8ap5gm,j8f7p7,Looks like a neat tool. Did you build it?,7.0
g8aw6jn,j8f7p7,Yes,11.0
g8asey5,j8f7p7,This looks good,5.0
g8aw7gy,j8f7p7,Thank you,6.0
g8b8xks,j8f7p7,Damn this is cool.,4.0
g8bhc87,j8f7p7,Amazing,3.0
g8c5mfe,j8f7p7,"I love how the first thing in the instructions is
&gt; How do I quit this thing?


Looks like a cool project!",3.0
g8c8ths,j8f7p7,"Yeah, I personally know the pain of quitting these kind of terminal apps :)",3.0
g8boy2m,j8f7p7,Well done! Cool tooling,3.0
g8c7100,j8f7p7,The code looks clean af. Nice job!,3.0
g8hbcdq,j8f7p7,"I would've add some JSDocs in the code, though.

But, nice job. Looks awesome!",2.0
g8hci6m,j8f7p7,"Please feel free to raise a PR, I would appreciate it very much",1.0
g8c46kl,j8f7p7,Out of curiosity why are you using blessed and neo-blessed? Isn't the latter just a fork with some bug fixes?,1.0
g8c8mgd,j8f7p7,"Yes, you are right, I need to clean it up a little for that, will do it in the next release, it was a good catch though...",1.0
g8gisb3,j8f7p7,"Oh glad it helped, I legitimately thought you were using both versions lol",1.0
g8c91qk,j8f7p7,very neat tool ‚ú®,1.0
g8akssm,j88wek,"`tsc` compiles TS files but really isn‚Äôt suitable as a bundler. Only 1 output, non-minified, not mangled, etc,",1.0
g8al0eg,j88wek,Would recommend Luke Edwards‚Äô [typescript-module](https://github.com/lukeed/typescript-module) in its place.,1.0
g8be87m,j88wek,"That's an interesting thought. I wasn't thinking about bundling since I mostly work in Node instead of the browser. I prefer having the JavaScript output file structure match the Typescript input structure for when I need to look at the JavaScript directly.

I haven't seen many bundled/minified npm modules -- maybe the general expectation is that the downstream user will use a bundler if needed?",1.0
g8bvv1w,j88wek,"Uh, what? Most node modules are minified and bundled.

You still should offer multiple outputs so users can choose to use cjs or esm",1.0
g89otcw,j86kb3,"Looked at the demo, very cool. I like the design, and it could be very useful for busy sites where space is lacking.

Some suggestions :

-	snap to a position, for example in line with your other icons. I can drag the menu half off screen.
-	when you scroll on mobile, it behaves weird, snapping to the top most position. Maybe make it either static on the screen or follow the scroll.",2.0
g8968zb,j86k5x,Is this the right sub for this content? Doesn‚Äôt have much to do with JS.,3.0
g898zgl,j85s66,"If you're talking about for a SPA app, Sentry is a good way to go. If using a 3rd party is out of the question, then set something up that catches the errors that happen in your app and send that data to a server you've set up. 

Clients differ on so many things--browser, browser version, machine, locale, timezone, user, user permissions, the list goes on. Keeping track of them will help with debugging. It's a lot of work, though.",3.0
g89bxyf,j85s66,Another cloud solution is azure application insights which is part of the Azure Monitor service. It's relatively cheap and you can create your dashboards within azure portal itself.,2.0
g897vj6,j85s66,"I haven‚Äôt looked extensively, but after a few searches and only finding server side loggers I decided to just use local storage while I‚Äôm developing. I can then send it to a server as json whenever it‚Äôs needed.",1.0
g8aha0u,j85s66,My thoughts exactly if i don't find any library for this job.,1.0
g89de69,j85s66,"Just remember that you'll never log all errors on the client side, just some of them. If errors occur because the clients internet connection drops, or they have a problem connecting to the log solution, you'll never see those logs.",1.0
g8aapdn,j85s66,Sentry.io,1.0
g8ah61s,j85s66,"Thank you for the link but I am not fond of external solutions, I like to keep the app and user monitoring internal.",1.0
g893lo4,j85s66,"I looked a few weeks ago but ended up using a library called winston. There‚Äôs also ulog. The best solution is to stand up a very simple express server with a single POST endpoint or maybe even a WS connection, then use the server to write to a log file directly. You‚Äôd probably want to setup some basic auth on it or disable it out of development entirely.",1.0
g8ahi23,j85s66,Thanks,1.0
g898r1u,j84ssi,nice work!  will start following along,3.0
g89ova1,j84ssi,"This series is amazing, thank you.",1.0
g8alwzy,j84ssi,"The explenations are clear , nice post and article",1.0
g88ybbh,j84pze,"I see a real benefit from authoring a well-designed music data storage format suited towards your application. Your ZzFXM format is indeed tiny and looks quite optimized from what I can tell. Perhaps a little remiscient of MIDI? I haven't quite compared them side by side. In any case, this project looks like an interesting development for music on the web.",2.0
g89mxql,j84pze,"MIDI is a binary file, and this seems to be JSON.

I made something similar... not tiny or minimal though.

You can see and hear it here:

https://openmedia.gallery/view/1755

And here's the JSON:

https://openmedia.gallery/data/1755",1.0
g89nkhq,j84pze,"I wonder if OP's format is binary-serializable?

Regarding your project, it does seem similar! What format did you use for the song that plays when you hit the play button?

Edit: Also, is the code available for this anywhere?",1.0
g89nvcr,j84pze,"It's a JSON file, you can see it in the /data/ url.

It has a list of URLs to sound files, and then sequences them to play at the right time.

Here's the code

https://github.com/mikehelland/omg-music/blob/master/www/js/omusic_player.js",2.0
g89ov0r,j84pze,Thank you for sharing your code. I'll gladly take a look.,1.0
g89nytj,j84pze,"Here's the editor:

https://openmedia.gallery/apps/music/remixer/?id=1755",2.0
g89ovfb,j84pze,I'll look at this too.,1.0
g89pvu9,j84pze,"To answer your other question about DJ sets, I use this to do electronica sets. It's built to be an instrument as much as a DAW. Kinda like Abelton Live, from what I hear. (I've never personally used it.)",2.0
g89olsn,j84pze,"One overarching question I have is at what point will/did technology that lives right in your browser achieve the same feature parity as the super propietary stuff that's probably embedded into equipment on DJ sets? It'd be cool if there was a more accessible way to create sounds, and the browser sounds like a great option for that.",1.0
g89n529,j84pze,"    {                                     // Metadata
    title: ""My Song""                       // Name of the song
    author: ""Keith Clark""                  // Name of the author/composer
    }

Is there supposed to a comma in there? And no quotes around key names?

So you can't just JSON.parse() it, right?",1.0
g898cys,j82z5l,"This looks very nice.

One question from technical side: You have react version and svelte version too. Would it be possible / useful to just create 1 package and then user could import whatever version they want to use? Could this just be framework agnostic? Because, from *what I think* \- internals could be shared. What do you think?

&amp;#x200B;

I've been thinking lately that it is pretty dissapointing there is nowadays billion x-framework-component -packages available.",1.0
g87h4pv,j7x2ef,"Sorry, I'm hesitant to connect my LinkedIn account, is there a way to create an account on your website?

Edit: it's fixed now :) Just click on _rather not_.",33.0
g87k9va,j7x2ef,"Why does it even require authentication, much less with a third-party site that has nothing to do with the application? Sketchy.",38.0
g87kqzd,j7x2ef,"It might be to save the scores?

That can easily be implemented with local storage though so I'm only hoping it's for web traffic analysis or something",6.0
g87ksit,j7x2ef,"Hi Ruslan, there's no sketchy intentions (pinky promise) but we collect username and email address for the uniqueness of players. We're open for suggestions te make it better!",-11.0
g87sr1m,j7x2ef,just generate a uuid and store it in a cookie,20.0
g87xt50,j7x2ef,&gt;Nickname and email address without validation option is added just a minute ago.,9.0
g883vq6,j7x2ef,"If you're going to reject an email address, then show a message saying so. When there's no error message *and* no submit button, then there's no obvious way to proceed and just seems broken.

Also, for that matter, if I can enter with a fake email address, then that's a sign you never needed an email to begin with. Earlier, someone asked, ""Why does it even require authentication?"" And the answer is, it doesn't. You don't. When you insist on information you don't really need, it just feels like harvesting.

&gt; just generate a uuid and store it in a cookie",13.0
g88ao06,j7x2ef,"Why not just ask for a alias to go by with an optional email address?

If user enters email address, then they reserve the alias (username) and no one else can use it. If there's a score board, show a green check next to validated usernames to differentiate between random user names and reserved/validated users so you don't have to delete a randoms score if a validated user later takes the username.",2.0
g88lo11,j7x2ef,"Hi Guys, I would like to clarify on the tracking/privacy topic a bit. This project is meant as a fun project for a small company like us. We made the game for our employees to play on our monthly tech night. We wanted to make the game publicly available because we are proud of the result and want everybody to enjoy it.

As soon as concerns where raised about the only way to play was logging in with LinkedIn we added the username/email possibility on which you can enter fake details if you want. We have google analytics running in anonymised mode and no other trackers. Everybody can check what trackers we use or request are made from the app with Google Chrome or other debugging tools. 

I hope everybody will enjoy the game and have a some fun writing cool solutions. Happy coding! :)",4.0
g88nz9m,j7x2ef,"Why on Earth wouldn't you just remove the login/email field that you never needed in the first place?? Pac-Man only asks for your initials, and even then only at the end of the game. Just do that.

This decision is what sets the first impression of the entire game.",9.0
g88opwb,j7x2ef,"Hi MoTTS\_ , don't forget there's always the option to not play the game! Enjoy your weekend, with or without a bit of JavaScript fun :)",-4.0
g8a9vj4,j7x2ef,You really don‚Äôt get it lol. Why do you need to collect ANYTHING for something you‚Äôre spreading ‚Äújust for fun‚Äù? Makes no sense. You‚Äôre likely trying to capture emails for a future email list/whatever.,3.0
g87skqj,j7x2ef,/r/privacy,5.0
g87xosj,j7x2ef,Nickname and email address without validation option is added just a minute ago.,4.0
g87k77j,j7x2ef,"Good suggestion!

Would you be okay loggin in with a Github account or rather prefer to login with email address and nickname?",-1.0
g87kmbs,j7x2ef,Definitely email and nickname with no email verification please. I just want to try out the game :),10.0
g87li5b,j7x2ef,"Check, we're adding nickname and email without verification as we speak. Should be added no later than tomorrow!

We're also working on a hall of fame for the fastest players and/or best solutions.",9.0
g87lo6x,j7x2ef,Awesome!,1.0
g87xjln,j7x2ef,It's online! Have fun playing :),1.0
g8826bn,j7x2ef,That was extremely fast! Playing it now :),1.0
g87svk3,j7x2ef,Why do you need any auth?,1.0
g87xi2o,j7x2ef,"We don't really, but we currently use it to store a unique game. New version with nickname and email address (no validation) just came online. So  start up tor login to vpn, pick a funny username and play :)",1.0
g881qlh,j7x2ef,"just click 'rather not', enter a name and a fake email, works fine",0.0
g887atj,j7x2ef,"Read the other replies, that was added after the comment was made.",1.0
g88fo9m,j7x2ef,ah my bad,1.0
g893tia,j7x2ef,I thought it was going to be hard :(,7.0
g890900,j7x2ef,"This isn't an escape room. It's a recruiting tool trying to pass itself off as a game - why else would it authenticate with LinkedIn?

In reality, it's a handful of coding challenges copy-pasted from Codewars with some ""pretty"" pre-rendered graphics and powerpoint-presentation-grade animations slapped in-between them.

You're better off just going to Codewars. Who's upvoting this?",12.0
g87eoap,j7x2ef,"Hi Everyone,

Check out this game: \[code\]capi Code Out! It's an escape-room like coding game written in JavaScript.

You must complete the JavaScript challenges to make your way out. Beware: it's harder than you might think!

You can play the game at: [http://codeout.codecapi.com](http://codeout.codecapi.com/)

Let me know what you think in the comment and if you made it to the end :)",4.0
g8b7yuz,j7x2ef,"The graphics are nice but I'm disappointed, I was actually expecting an escape-room whereas it's just very classic puzzles (and easy).

But I really liked the graphics!",2.0
g88g1ru,j7x2ef,Can you remove forced authentication? :(,5.0
g88krc2,j7x2ef,"We did, you can fill out a chosen nickname and a fake email address if you want to and still play the game.",1.0
g88mfxs,j7x2ef,Thank you..,1.0
g893ygp,j7x2ef,"This is also way too easy - I mean those questions took me way less than 30 minutes.

During a real interviewe this is something else, but just to pass and not to manage performance it's too easy.

Also it would be great to know how many challenges there are.",4.0
g8kr5pa,j7x2ef,"Good suggestion, will add it soon.",1.0
g8aeoeo,j7x2ef,"Jeez, two of these took me much longer than they should've because of typos -.-",1.0
g885bqt,j7x2ef,"It not mobile responsive :(
But good job",1.0
g88af7c,j7x2ef,"I know, we are a small company and this is meant as a fun project for one of our tech nights. The decision is also based on the fact it might be too difficult to code on a touch screen.",6.0
g88c25b,j7x2ef,"No worries man, good job :)",1.0
g88keau,j7x2ef,Thanks!,1.0
g8aww5v,j7x2ef,Just a set of few challenges. Not so tricky btw,1.0
g895d9v,j7x2ef,"Completed in 10:22.  I was expecting to have to rush a lot harder than I suppose was planned?

What do I win, other than being called ""master""?",-2.0
g8kr7cy,j7x2ef,We are working on a hall of fame but there have been quite some copy-paste solutions so we need to find a way to filter them out.,1.0
g8l3t7i,j7x2ef,"I was more joking about how simple it was.  I wouldn't try for a hall of fame unless you're able to make procedurally generated challenges, because yeah, the copy-pasta.",2.0
g877vm3,j7v1nv,"Might be that there is a reason he asked you to review and not the reddit community ...

About the framework: It seems to be  ""glue code"" that brings the basic stuff together. Haven't deeply checked the documentation, but ""interactions"" on the page (like for example a date picker) and the resulting handling of state and in the end, the redraw (to reflect the current state) seems not to be supported. 

Of course, you can nicely use this framework to build upon and add bit by bit to fit your dev needs ... but most devs don't want to (and actually can't) reinvent the wheel, so they choose what's on the market ... mostly without second thoughts, because you know, companies want React Devs ... so to learn or not to learn react is not an option.",4.0
g87a25t,j7v1nv,"&gt; Might be that there is a reason he asked you to review and not the reddit community ...

thanks for input!  Much appreciated!

yeh I still don't really understand why he would go about writing this stuff himself, when there's so many frameworks that you can actually put on your CV, and people want to put on their CV.",1.0
g87b6y6,j7v1nv,"Writing your own framework is fun and it teaches you a lot of stuff that modern frameworks just ""abstract away"". I totally see why he did it and you can clearly see that a lot of things crossed his mind and he implemented a lot of basic dev work into ""one framework"". The framework might be a 100% fit for smaller projects, but I think the missing ""virtual Dom"" (base for most of SPA framework) is currently the dealbreaker for most devs. Its probably very easy to integrate VDOM library (like [http://mithril.js.org/](http://mithril.js.org/)) to ""patch"" the framework for your needs.

Also, modern frameworks make major mistakes even if they are written by a billion dollar company (I'm looking at you Angular 1).",3.0
g87c21q,j7v1nv,"I understand, thanks again.

I looked around for DOM mentions and I see that he has a ""a frontend DOM manipulation library"" there, but it doesn't do what you ask for? 

[https://github.com/eldoy/haka](https://github.com/eldoy/haka)",1.0
g87dmtc,j7v1nv,"Well, HAKA seems to be a basic DOM manipulation (setting el.innerHTML = $HTML). Doing it this way results in constant ""flash of white"". A VDOM  library tries to avoid these by first diffing old html with new html and then just updating the html parts where needed.

Those ""Flash of white"" (its the time the browser rerenders the html) are almost not noticeable for small html elements, but just take a table with 50 entries and you surely will notice the ""flash"" (like 100ms).

Also, as a VDOM library consequence of diffing the html, state like ""checkbox is checked (or not)"" is kept intact.",2.0
g872kak,j7um06,"	
alexliu518 6 days ago [‚Äì]

Some time ago, we released Luckysheet, now we release a new open source excel import and export plugin-Luckyexcel.
Excel import online demo: https://mengshukeji.github.io/LuckyexcelDemo/

The first version already supports the import of the xlsx format, the export feature is under development, and more formats will be supported in the future.

Luckysheet optimizes the original functions like built-in formulas, conditional formatting and chart.In addition, we have added enhancements such as insert picture, data validation and cell segmentation style.

Luckysheet online demo: https://mengshukeji.github.io/LuckysheetDemo/

For more detailed plans, please visit the Luckysheet project homepage.

Luckysheet: https://github.com/mengshukeji/Luckysheet/

Luckyexcel: https://github.com/mengshukeji/Luckyexcel/

Important: Our fundraising event has been opened,come support us: https://www.kickstarter.com/projects/luckysheet/luckysheet",3.0
g874ssm,j7um06,"very cool.
what is the max number of rows / columns supported?",1.0
g876b86,j7um06,Not sure if this is a joke at UK Track or Trace or serious questions,9.0
g89dmf0,j7um06,Some things can be 2 things,2.0
g8a05ox,j7um06,"Or only 65,000 if XLS format instead of a few million for XLSX.",1.0
g8akdzx,j7um06,Cool!,1.0
g87iuld,j7tmtt,So.. Basically a parcel boilerplate like the many other?,14.0
g87khal,j7tmtt,"That's right, a simple yet powerful boilerplate to get you started with all the tools you need. I'm working on the CLI version to provide more customization and framework integration (React and Vue). Please stay tuned and feel free to contribute if you find it interesting üôå",-9.0
g88gk6g,j7tmtt,Why no mention of the underlying tech stack? This feels like a bait 'n switch for inexperienced developers to learn your preferred tech stack. That stuff needs to be front and center for a project like this.,4.0
g88i8zt,j7tmtt,"Please read the README the entire tech stack is outlined in detail there, it's quite clear!

If you believe this could be improved, feel free to contribute üòä",-2.0
g897tqe,j7tmtt,"Except it should be in the very first paragraph, so people can walk away as soon as they see the stack isn't for them instead of reading an entire readme.",4.0
g8ak4ex,j7tmtt,I added a clear warning ‚ö†Ô∏è as comment now. I hope that's clearer for you üòÖ,1.0
g87gwhn,j7tmtt,"I was hoping it was going to be something that could sit in your path, letting you just specify a folder and framework and have it auto deploy the default starter app. Instead it appears to be a JAMstack ad for Surge.",3.0
g87iuws,j7tmtt,"Fast is simply a framework-less boilerplate to get you started. That's all! For many developers, this is all we need to get a project off the ground. No complex configurations, get great browser support, code minifying, javascript parsing, and surge as a free deployment pipeline.


I'm also currently working on a CLI version which will allow you to choose Vue or React as a preconfigured framework. If you have any other suggestions fee free to contribute üòä",-7.0
g88h0kq,j7tmtt,"You can literally just tell Vercel to fetch a repo of yours and every single time you push to a branch a preview deploy is made... Full SPA, SSR, lambdas, you name it.",1.0
g88is3b,j7tmtt,"Alert(""im gona check it out!"")",-3.0
g89853e,j7tmtt,"Alert(""cringe "")",3.0
g8au8g4,j7tmtt,"if(you==so mature) {

why be an a\*\*hole to somone hwo did nothing wrong

}",-1.0
g8b9fzx,j7tmtt,I'm sure that this won't work even in JavaScript.,2.0
g8bk1km,j7tmtt,"Yeah i know that, It's just my way of making a point.",0.0
g8daf2d,j7tmtt,"I take that you are an enthusiastic youngster. People experienced in code don't usually use pseudocode to make jokes, hence the cringe. Either way, good luck and...

```
while(true){
code()
}
```
(Cringe)",2.0
g8g7qk0,j7tmtt,"okay fine you want code that works? here you go:

document.bgColor=lime

document.title=""why are you being an a\*\*hole?""

if(you=so mature) {

answer=prompt(""Why are you being an a\*\*hole to somone hwo did

nothing wrong"")

&amp;#x200B;

if(answer==""i want to get internet points while also making somone

else feel bad"") {

document.write(""what is wrong with you?"")

}

if(answer=""i don't like their joke"") {

document.write(""then why not just downvote their joke?"")

}

else{

document.write(""idk"")

}

}

else{

alert(""just go oway"") 

}",1.0
g8g98ki,j7tmtt,"Also:

your defenition of cringe is doing something that experienced pepole   don't usually do? that is not what cringe means. cringe is:

an old/bad joke that is executed realy porly.

Also using the word ""youngster"" has long been considerd cringe 

\-much love, the "" enthusiastic youngster """,2.0
g8ajj3e,j7tmtt,"To those who don't like reading documentation.

‚ö†Ô∏è THIS IS A BOILERPLATE FOR BEGINNERS AND INTERMEDIATE DEVELOPERS WHO WOULD LIKE TO GET STARTED WITH A FRONTEND PROJECT FAST. THE THECH STACK IS PARCEL, SURGE, POSTCSS, SCSS, and BABEL.

See tech stack in detail https://github.com/reblim/fast#-core-technologies",0.0
g86d6jg,j7qa8s,"I certainly agree on not enjoying testing with Selenium!

I could be mistaken, but there seems to be a fair bit of overlap with your testing. In my experience, I would recommend to use both Jest and Cypress as they serve very different purposes in the grand scheme of things.

While snapshot testing can be useful, the bread and butter of jest is going to be for unit testing. The vast majority of your testing should consist of unit tests where you are purely testing what's returned from your functions in isolation. Snapshots can be a layer if you want to check certain component functionality in isolation. You can also layer integration tests to check how your application handles certain endpoints.  

When you are planning your e2e tests, it should be with the mindset of testing your application as a whole. You may be working with internal or external services that you want to see how the app responds to it from the users perspective. At the point of e2e tests, you shouldn't need to be quite so granular as much of that core logic has been tested with your unit tests. Personally, I like to structure my tests by page and plot out functionality that is expected from that page. Then use your tests to enact it and assert along the way (yay Cypress!).

I recommend deep diving into topics such as The Testing Pyramid. I think it will help clarify some things and help you structure how you plan to test. There were a few good articles that I've found that outlined it really well so I'll try and dog those up and get them your way.

I hope this was helpful as I too am too tired to be talking code lol. I'm happy to continue chatting and collaborate with ang questions",11.0
g86yg2d,j7qa8s,"I have been using cypress for e2e tests mostly, but recently I also did some API tests to have 1 common solution for testing the application and it worked pretty well (especially for other testers who wanted to collaborate), however there were some features missing that I would appreciate and had not problem if I used e.g. supertest.([https://www.npmjs.com/package/supertest](https://www.npmjs.com/package/supertest))

So it is up to you, it is possible to do lots of things in cypress, but it is not always the most efficient solution.",2.0
g87bk5v,j7qa8s,"This is pretty much exactly what I wanted to do with Cypress.

The mocked out ""Integration"" style tests can also be thought of sociable unit tests, or unit testing a component with real collaborators.

Have had success with this strategy in the past (angular/karma), I'm interested to hear how it turns out for you!",1.0
g855ifo,j7j9ky,"Honestly, I tried both Immutable.js and seamless-immutable, but I *could not get into immutability with either*.  It was like ""the cure is worse than the illness!""  I'll take my super-rare ""I accidentally mutated an object"" bugs over having to use either of those libraries constantly throughout my codebase.

Then I discovered [Immer](https://github.com/immerjs/immer), and it was like a lightbulb went on: I didn't have to make myself miserable to get the benefits of immutability!  It actually could be *easy*.

So while I'm  always sad when any OSS project people like dies ... I'm not exactly weeping over the loss of (what I consider to be) one of the crappier options in the field.

(And quite frankly I don't even use Immer all the time either. In my non-Redux projects, I very often just avoid mutating my objects, and somehow life goes on.)",38.0
g85dzw0,j7j9ky,"Same story for me. Just write side-effects-free code and it'll be ok. Immer is irreplaceable but only in very specific context.

What's interesting for me. Authors of such libs are educated and talented devs, and they **know** all of this stuff; however they created and successfully market(ed) their libs. Nothing personal, just building their own brand on buzzwords and hype. No matter it pollutes others codebases.",8.0
g86lmnv,j7j9ky,"I switched out Immutable for Immer in one of our major products at work, and although it was quite a bit of work to switch, everyone's so much happier now not dealing with Immutable, plus our reducer code is so much cleaner and readable now.",6.0
g86z5zs,j7j9ky,Same here.,1.0
g8630fm,j7j9ky,"Immer changes things. For the work I‚Äôm doing, it‚Äôs invaluable.

The patch based approach and being able to undo it is perfect.",2.0
g85mmpy,j7j9ky,You may find this [tc39 proposal](https://github.com/tc39/proposal-record-tuple) interesting. Their proposal would bring immutable data structures to JS.,10.0
g86scn3,j7j9ky,Here's a closely related one for [deep path properties](https://github.com/tc39/proposal-deep-path-properties-for-record).,3.0
g8841dw,j7j9ky,"It's actually possible to achieve that already with ramda

    const state1 = #{
        counters: #[
            #{ name: ""Counter 1"", value: 1 },
            #{ name: ""Counter 2"", value: 0 },
            #{ name: ""Counter 3"", value: 123 },
        ],
        metadata: #{
            lastUpdate: 1584382969000,
        },
    };
    
    const state2 = #{
        ...state1,
        counters[0].value: 2,
        counters[1].value: 1,
        metadata.lastUpdate: 1584383011300,
    };

Is equivalent to

    const R = require(""ramda"");
    
    const state1 = {
      counters: [
        { name: ""Counter 1"", value: 1 },
        { name: ""Counter 2"", value: 0 },
        { name: ""Counter 3"", value: 123 },
      ],
      metadata: {
        lastUpdate: 1584382969000,
      },
    };
    
    const state2 = R.pipe(
      R.assocPath([""counters"", 0, ""value""], 2),
      R.assocPath([""counters"", 1, ""value""], 1),
      R.assocPath([""metadata"", ""lastUpdate""], 1584383011300),
    )(state1);",1.0
g87n11t,j7j9ky,"I wonder if it wasn't simpler to add a `deep: true` parameter to the `Object.freeze` method, but I i like this proposal",1.0
g882e0y,j7j9ky,"Records and tuples also have deep equality whereas objects and arrays use reference equality

    const a = { foo: ""bar"" }
    a !== { foo: ""bar"" }
    
    const b = #{ foo: ""bar"" }
    b === #{ foo: ""bar"" }",1.0
g89d0xd,j7j9ky,"Hm, true, i skimmed over that part apparently. That does sound nice.",1.0
g85ddiq,j7j9ky,"We can react with partying and fireworks, because Immutable.js was an absolute dumpster fire of a library and it dying out of nowhere is the best possible outcome for the project and society as a whole.",17.0
g85dkey,j7j9ky,"For Redux, [we specifically recommend](https://redux.js.org/style-guide/style-guide):

- [**DO** use Immer](https://redux.js.org/style-guide/style-guide#use-immer-for-writing-immutable-updates) (and do so as part of [our official Redux Toolkit package](https://redux.js.org/style-guide/style-guide#use-redux-toolkit-for-writing-redux-logic))
- [**DON'T** use Immutable.js](https://redux.js.org/style-guide/style-guide#use-plain-javascript-objects-for-state)",13.0
g85eb2p,j7j9ky,What's [https://redux.js.org/recipes/using-immutablejs-with-redux](https://redux.js.org/recipes/using-immutablejs-with-redux) ? Is it something obsolete?,3.0
g85eohr,j7j9ky,"Good question!

That page was contributed by a user who was very passionate about using Immutable.js with Redux.  The information in there is still conceptually valid.  However, it's not something that we specifically recommend any more.

I will likely remove that page in the near future as part of our ongoing docs rewrite.  However, I also want to add a couple pages talking more about immutability overall.  I will likely link the last version of the Markdown file from that page when I do so.  So, it will no longer be a published docs page, but the file will still be in the repo's history if someone wants to read it there.",8.0
g85hoez,j7j9ky,"Oh, that makes sense! When I found it I was quite surprised ‚Äî it looked odd and extraneous. And funny ‚Äî this page is the reason I wrote ‚Äúbuiltins and **most of** *\[not all\]* libs work with native structures‚Äù üòÑ",2.0
g87nwai,j7j9ky,"When I first joined Netflix there was an engineer using Immutable.js and I remember it was draining them every day. The project took longer to complete and I'm still not sure there was any clear benefits from a UI application standpoint. Maybe there are clear benefits for a 3rd party shared library or a robust tool, but for what most engineers would try and use it for, I would cast doubt on if it provides any wins what-so-ever.",6.0
g88giab,j7j9ky,"I doubt there may be benefits for 3rd party lib. Good lib is one without deps, especially such opinionated üôÇ",2.0
g8e50m8,j7j9ky,"&gt; there was an engineer using Immutable.js and I remember it was draining them every day.

I never used it myself, but that was what I saw as well at a similar post.

&gt; The project took longer to complete and I'm still not sure there was any clear benefits from a UI application standpoint

Too true.

Personally, I actively avoided Immutable.js because anything that ""[boxes](https://en.wikipedia.org/wiki/Object_type_(object-oriented_programming)#Boxing)"" primitives smells of type confusion, indirection and general programming hell to me.",1.0
g8hsvzs,j7j9ky,"It‚Äôs much better in a statically typed language, but it‚Äôs still a pain to box/unbox types.",1.0
